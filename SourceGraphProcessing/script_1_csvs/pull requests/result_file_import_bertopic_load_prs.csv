repo_url,filepath,Creation Date,PR Comment,PR/Issue Number
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-03-15T08:30:46Z,Why are you using 9 words here when you used 12 above?,1863
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-03-15T16:06:44Z,"At first I tried scaling the font size while keeping the figure height constant, which started making the text unreadable after a certain number of words, so I chose 12 as the tipping point for changing the font size. 9 is the actual tipping point where the words start disappearing from the barchart. In case you would like me to support the previous behaviour I could add a parameter `autoscaling=True`?",1863
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-03-18T10:48:49Z,`autoscaling` seems like a good parameter. I want to prevent breaking changes as much as possible. ,1863
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-03-24T07:40:25Z,"Awesome, thanks for your work on this! LGTM. ",1863
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-02-10T19:43:08Z,"Thanks for the PR! I believe there is an issue with HF Hub at the moment. As soon as it's resolved, I'll make sure to merge this PR.",1801
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-02-28T19:41:30Z,Thanks for the PR! Now that the testing pipeline is working again I'll go ahead and merge this. ,1801
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-02-14T09:31:48Z,"Thanks, LGTM! ",1774
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-02-13T21:36:02Z,"I spoke too soon! `merged_model.__dict__` replaces `self.outliers` with 0, so the outliers are never repositioned a couple of lines down.",1804
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-02-13T21:51:22Z,"Maybe it's just best to set `outliers = self._outliers` just before merging on line 3627, then using this on line 3668 instead?

Will also have to set `self._outliers = 1` inside the if statement",1804
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-02-13T22:03:16Z,"I tested this out and it looks good to me

<img width=""643"" alt=""outliers"" src=""https://github.com/MaartenGr/BERTopic/assets/58509816/86fcf5f0-e27f-4564-9886-9aafe4880ba3"">
",1804
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-02-14T07:50:13Z,"Awesome, thanks for checking this out! I just pushed a commit which should finally resolve this issue. If you could do a final check, I can merge this PR. ",1804
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-02-14T09:17:23Z,@timdhu Thanks for the help fixing this issue. Your dedication to finding the underlying cause as well as testing/suggesting the needed changes are greatly appreciated! ,1804
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-02-08T14:25:22Z,Apologies for the late reply and thank you for the PR! A welcome change indeed. ,1740
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-01-16T13:33:26Z,"What do you think about adding a `topics` parameter that allows you to select a subset of topics to visualize? That way, users are not limited by needing to generate between 5 and 60 topics but can freely select whichever topics they want visualized. All other topics would then be shown as -1/outliers/unlabelled I guess. ",1750
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-01-16T13:34:14Z,This throws an error if Figure was not imported from matpotlib if it was not installed. Which is why the testing pipeline failed. ,1750
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-01-16T13:35:31Z,Thanks for adhering to my (somewhat) unconventional method of accessing the plotting capabilities! ,1750
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-01-16T13:37:04Z,"Out of curiosity, why did you set this at a default of 100? Is the default `dpi` not sufficient for these plots?",1750
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-01-16T15:56:49Z,"That's a reasonable option, and I agree that it makes sense. Let me see if I can make that work.",1750
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-01-16T15:58:01Z,"That makes sense; my tests ran locally, but of course matplotlib was installed. I think I can wrap the import in a try accept and have a dummy class for other case.",1750
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-01-16T15:59:44Z,"100 is the default DPI for matplotlib. To keep with ""width x height"" in pixels as input params (following the other plotting methods) it helps if the DPI stays fixed, so I set it to the default.",1750
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-01-16T17:11:59Z,I think I have this working. See [4adc6cb](https://github.com/MaartenGr/BERTopic/pull/1750/commits/4adc6cb8bcf74aa231e77f055d2a7930d7e7801e).,1750
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-01-16T17:12:33Z,This should work now. See [f8104c2](https://github.com/MaartenGr/BERTopic/pull/1750/commits/f8104c202ef57cddfac6f1da287521f316ee9a59).,1750
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-01-20T10:36:58Z,"Amazing, thanks for the hard work, both on the DataMapPlot package as well as this PR. It is merged! In the upcoming weeks, I plan to add it to the official documentation (https://maartengr.github.io/BERTopic/index.html) but I'll have to check the best location for it so it does not get buried in the docs.",1750
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-01-03T10:00:21Z,Thanks for the work! LGTM. ,1719
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2024-01-03T08:41:32Z,"Thanks, LGTM!",1701
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-11-13T18:08:14Z,"Hi Maarten,

I am following up on the use of `seed_words` in `bertopic.vectorizer.ClassTfidfTransformer`. I have a particular interest in refining the handling of seed words and their variants, such as ""budget"" and ""budgeting"".

My query revolves around the potential for regex pattern matching to group similar seed words, avoiding stemming or lemmatization of the original text, which might lead to loss of meaning or contextual ambiguity. Specifically, I am considering the following approaches:

1. **Regex Pattern Matching:** Could regex pattern matching be implemented within `ClassTfidfTransformer` to efficiently group seed words such as ""budget"" and ""budgeting"" without reducing them to their root forms through preprocessing?

2. **Alternative Stemming Method:** As an alternative, what are your thoughts on stemming an extensive list of English words to identify groups that share the same root? This could automate the grouping of similar seed words but may raise concerns regarding practicality and computational efficiency.

3. **Leveraging Synonyms and Antonyms:** Additionally, would integrating external resources like WordNet from NLTK to find synonyms and antonyms be advisable for a broader semantic understanding in BERTopic?

Your expertise and insights on these proposed methods would be greatly appreciated, especially considering the balance between semantic integrity and computational efficiency.

Thank you for your guidance and contributions to this field.

Cheers,
Xule",1572
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-11-14T12:12:18Z,"@linxule Thanks for sharing your use cases and suggestions! 

> I am following up on the use of seed_words in bertopic.vectorizer.ClassTfidfTransformer. I have a particular interest in refining the handling of seed words and their variants, such as ""budget"" and ""budgeting"".
> 
> My query revolves around the potential for regex pattern matching to group similar seed words, avoiding stemming or lemmatization of the original text, which might lead to loss of meaning or contextual ambiguity. 

The way `seed_words` is currently handled is by taking the IDF values and multiplying them by a user-defined value. That way, the user can control the degree to which the `seed_words` impact the resulting topic representations. However,  the `ClassTfidfTransformer` is actually not the one handling the words themselves, merely the bag-of-word representations. As a result, the vocabulary is created through the `CountVectorizer` before passing the bag-of-words, not the vocabulary, to the `ClassTfidfTransformer`. 

In other words, the `ClassTfidfTransformer` does not actually have access as of yet to the vocabulary. Of course, it is possible to give it that but I am not sure whether we should since parsing the vocabulary is the task of the tokenizer not necessarily the weighting mechanism.

Another approach would be to run one of the examples you mentioned yourself on the input data with the `CountVectorizer` and parse the vocabulary before passing it back to a new `CountVectorizer`. It actually has a `vocabulary` parameter, so you could parse it yourself with whatever method suits your use case.

Note that this method allows you to group the vocabulary before passing it to BERTopic. If we were to implement it within `ClassTfidfTransformer`, it would have to be re-calculated each time you run BERTopic.

Having said that, let me briefly go through the examples you mentioned.

> Regex Pattern Matching: Could regex pattern matching be implemented within ClassTfidfTransformer to efficiently group seed words such as ""budget"" and ""budgeting"" without reducing them to their root forms through preprocessing?

As mentioned above, I am not sure it should be implemented within `ClassTfidfTransformer` but for the sake of simplicity let's assume it could be. Using regex on potentially millions of tokens is quite the task and something that can take quite a while. Therefore, doing this before running BERTopic would be preferred. 

> Alternative Stemming Method: As an alternative, what are your thoughts on stemming an extensive list of English words to identify groups that share the same root? This could automate the grouping of similar seed words but may raise concerns regarding practicality and computational efficiency.

Note that whatever method you choose, you are likely still parsing a large vocabulary which could be feasible if you select a subset of that vocabulary, for instance by choosing words that only appear at least *n* times. Stemming is a great option but since the stemmed words are semantically similar, using something like [MaximalMarginalRelevance](https://maartengr.github.io/BERTopic/getting_started/representation/representation.html#maximalmarginalrelevance) seems more appropriate to reduce words with similar meaning.

> Leveraging Synonyms and Antonyms: Additionally, would integrating external resources like WordNet from NLTK to find synonyms and antonyms be advisable for a broader semantic understanding in BERTopic?

This does not have a yes or no answer and depends highly on your use case but external resources could indeed help finding synonyms and antonyms. However, as mentioned above, removing similar words seems like a job for [MaximalMarginalRelevance](https://maartengr.github.io/BERTopic/getting_started/representation/representation.html#maximalmarginalrelevance). 

All in all, I would advise doing this grouping first and then supplying the grouped words to the `vocabulary` parameter in the `CountVectorizer`. That seems the most efficient route.",1572
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-11-20T07:12:25Z,"Thanks, LGTM!",1637
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-10-30T14:07:06Z,"Thanks, LGTM!",1590
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-10-30T14:09:38Z,I just wanted to merge it but it gave an error that a new commit was pushed. Are there any other upcoming changes or can I go ahead and merge this?,1590
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-10-30T14:12:14Z,"> I just wanted to merge it but it gave an error that a new commit was pushed. Are there any other upcoming changes or can I go ahead and merge this?

Oops, sorry! There are no new changes. I just merged the new `master` into this branch.",1590
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-11-01T07:26:37Z,"No problem, thanks for the PR! ",1590
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-09-05T07:26:31Z,Thanks! LGTM 😄 ,1501
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-08-30T08:15:47Z,It took a while to check but I believe this should not negatively affect topic assignment throughout the attributes I test. Thanks for the PR! ,1466
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-06-30T10:29:11Z,"@MaartenGr could you please rerun the code checks? I guess I don't have the permissions and it seems the failure is unrelated to this code change.

Thanks,
Daniel",1380
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-08-07T12:20:30Z,"Sorry that it took a while, LGTM!",1380
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-06-09T04:59:57Z,"Thanks for this PR! Could you make sure to cast `y` as a numpy only if `y` is not None? I believe that since this differs quite a bit from the fix in the issue you mention, it will also affect many other techniques, like (semi-)supervised, guided, and non-y topic modeling. So something like:

```python
y = np.array(y) if y is not None else None
self.umap_model.fit(embeddings, y=y)
```

Or, we could just use the example as used in the issue you refer. That way, processing of `y` is contained to a single function only where it is relevant. ",1326
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-06-09T13:06:58Z,"So I fixed it in my fork before I saw that discussion, and my thoughts were, _reduce_dimensionality accepts 
`y: Union[List[int], np.ndarray] = None` 
so if it's acceptable to pass a list here, then forcing y to an array should occur here. But I just started using this package so I don't know how everything is connected. If you think it's better to move it, let me know.

It passed all tests before I submitted, so I'll see if I can add a test for None here. I didn't actually look to see what tests already exist.",1326
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-07-11T08:01:00Z,"Apologies for the late reply. LGTM, thanks! ",1326
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-06-27T06:41:14Z,LGTM! Thanks the for PR. ,1364
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-06-01T09:28:45Z,Thanks! ,1307
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-05-07T16:54:30Z,"```suggestion
            repr_doc_indices: Ordered indices of representative documents
```",1232
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-05-07T16:54:53Z,"```suggestion
        batch_size: The size of image batches to pass
```",1232
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-05-07T17:27:43Z,"Thanks for the feedback! This is still all a work-in-progress and is likely to change significantly, especially when new features come in, but I'll make sure to change it accordingly if it is still there after a few commits! ",1232
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-05-07T17:27:54Z,See above 😄 ,1232
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-11-24T14:45:15Z,"Hi! I am using Multimodal model and want to sent my own ebeddings to speed up the model; while the error persists: 

**Token indices sequence length is longer than the specified maximum sequence length for this model (78 > 77). Running this sequence through the model will result in indexing errors**

I searched and found that It may be due to the restriction of the model. Do you know how to solve it? Thanks~~

My code: 

`model = MultiModalBackend('clip-ViT-B-32', batch_size=32)
`
`embeddings = model.embed(docs, images)`

",1232
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-11-26T05:13:00Z,"@Steven-1124 That is a result of the context length of the embedding model. If it is trained on a number of tokens, then it will not accept longer documents and truncation of the documents might be needed. ",1232
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-04-27T19:37:08Z,"For this, it might be worth exploring https://huggingface.co/docs/huggingface_hub/guides/model-cards at some point. There are a few possible enhancements we could make there:

- Trying to autogenerate some parts of the model card (for example, the Transformers Trainer API adds hyperparameters to a model card https://huggingface.co/biglam/detr-resnet-50_fine_tuned_nls_chapbooks#training-hyperparameters. I could imagine that things like the number of topics, number of training docs etc., could all be of interest. 

- Creating a template model card, i.e. something like (https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/templates/modelcard_template.md). This can be helpful as a starting point for a model card structure even if most sections are not completed. 

I think this can all come later, and happy to help with this part if you think it might interest you. ",1205
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-04-27T20:13:13Z,"Would it be worth doing this check inside the save function? For the user who is running in Colab or another notebook environment, they might hit the assertion error about safetensors when they try and save a model, but since the import check is done earlier, they would need to reload the module even after they pip install safetensors.  ",1205
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-04-28T09:33:37Z,"Oh nice, that's perfect! That would make the process rather straightforward. Just to be sure I got this correctly. I would only need to:
* Create a template
* Create a model card from that template
* Extract the text from the model card
* and finally write that to `.md` the same way I did before. 

I want to make sure that when I run `upload_folder`, the model card is not a separate commit. 

All in all, I do not think it would be too much work, so I think I will simply add it to this PR. That way, there is little left for saving/loading a BERTopic model. ",1205
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-04-28T09:34:26Z,"Thanks, will definitely do this. It is indeed something users will run into since `safetensors` is not (yet) part of the transformers base requirements. ",1205
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-04-28T12:42:54Z,"Ah, it seems that to use `.from_template` an installation of `Jinja2` is a requirement whilst it is not a requirement of BERTopic.  Instead, I will likely use f-strings, albeit a bit hackier, to generate the template. ",1205
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-05-02T09:17:14Z,"> Ah, it seems that to use .from_template an installation of Jinja2 is a requirement whilst it is not a requirement of BERTopic. Instead, I will likely use f-strings, albeit a bit hackier, to generate the template.

Sorry for the slow reply, yes I think in this case to avoid a dependency f-strings probably make the most sense. Let me know if you need any help/input with this. ",1205
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-05-02T17:38:32Z,"Great, I finished up the last changes. I am currently working on support for both multi-modal (cluster images and/or text) and multi-aspect topic modeling (multiple representations simultaneously, keywords, summaries, sentiment, etc.). I intend to also save those aspects but since they are mostly just values/text that can be put in the `topics.json`, that process should be straightforward. 

So I believe the best thing to do may be to merge this PR and then continue with the multi-modal/multi-aspect topic modeling before slightly updating the saving procedure. ",1205
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-05-03T12:23:51Z,"That sounds awesome! Super cool to be adding multi-modal support for this (it gives me a few more use cases to use this!!). 

Let me know if you want me to review any of these changes or input anywhere else. ",1205
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-05-04T07:13:34Z,"I'll go ahead and merge this now so that I can continue with the multi-modal support

> Let me know if you want me to review any of these changes or input anywhere else.

Great, thanks! Most likely, I will ping you when I start saving the multi-modal model as I am not quite sure what the best way to save those images is, but I will let you know by then when I have something you can look at. ",1205
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-05-04T08:31:54Z,"Thanks, @MaartenGr, and really excited about all of this work! ",1205
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-05-10T17:33:43Z,This is an awesome addition. I was able to create and save a model on a linux distro and then load successfully on windows. Great work!!!!,1205
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-05-13T07:52:21Z,@vantubbe Thanks! Glad to hear that it is a worthwhile feature to add. There are going to be a few more changes with respect to multi-modal and multi-aspect topic modeling before this is fully integrated in the HF Hub but hopefully it will only take a couple of weeks. ,1205
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-04-12T05:31:16Z,"```suggestion
                            ""shape (n*(n-1)/2,)."")
```

Could you remove additional whitespaces? ",1173
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-04-12T05:33:07Z,I think these two if statements can be captured in a single statement since the last ValueError essentially also states that the distance matrix should be square.,1173
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-04-12T05:33:52Z,"```suggestion
        raise ValueError(""The distance matrix must be either a 1-D condensed ""
                         ""distance matrix of shape (n*(n-1)/2,) or a ""
                         ""2-D square distance matrix of shape (n, n).""
                         ""where n is the number of documents.""
                         ""Got a distance matrix of shape %s"" % str(s))
```

Could you remove whitespace?",1173
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-04-12T05:34:42Z,"```suggestion
from bertopic._utils import validate_distance_matrix
```
Please import it as above. ",1173
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-04-12T05:35:12Z,"```suggestion
        if s[0] != s[1]:
            raise ValueError(""The distance matrix must be square."")
        # check it has correct size
        if s[0] != n_samples:
            raise ValueError(""The distance matrix must be of shape ""
                             ""(n, n) where n is the number of documents."")
```
Whitespaces",1173
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-04-12T05:36:24Z,I am not sure whether this is necessary as this issue is handled and raised within `Scipy` already. Perhaps remove? ,1173
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-04-13T18:54:35Z,"the `squareform` from SciPy doesn't raise error if the entries are non-negative. 

```
X = np.array([1, -2, 3,])
squareform(X)
```
Output: 
```
array([[ 0,  1, -2],
       [ 1,  0,  3],
       [-2,  3,  0]])
```",1173
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-04-15T10:39:54Z,That's true but the linkage function will give the error but it's alright to keep it here. ,1173
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-04-13T19:06:39Z,I just pushed the changes you requested. I don't know why the test is failing. Let me know if I can help! ,1173
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-04-15T10:41:22Z,"The workflow is failing due to an issue with the testing pipeline. It automatically pulls pandas 2.0 which has a slight change that breaks some specific tests, unfortunately. Having said that, if it runs successfully locally for you, then I think it would be alright to merge it. ",1173
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-04-15T10:48:56Z,"Great, it runs successfully on my computer. ",1173
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-04-15T11:11:47Z,"Awesome, thanks for the work on this PR! It is highly appreciated. ",1173
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-04-15T11:38:23Z,You are welcome! and thank you for this nice library! ,1173
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-03-22T11:46:11Z,"I'm not entirely sure why the pipeline is currently failing. I would have to look into that a bit more. In part, I believe it is a result of not having created sufficient clusters. ",1106
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-03-23T22:51:03Z,"Thanks Maarten, 

I'm not heaps familiar with how to read those build logs, but it looks like it is failing in a whole range of places that aren't related to the things that have changed here? Is the same pipeline run against the master branch?

I did notice when I was putting together my case in response to your initial questions that `visualize_hierarchical_documents` failed when `nr_topics=5`, but it seemed to fail both with and without my modifications so I didn't think it was something on my end... (I'm not sure why anyone would need to look into hierarchial documents with so few topics :) ) 

But anyway, if there is anything I need to go back and look at, please let me know. ",1106
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-03-24T09:53:44Z,"> But anyway, if there is anything I need to go back and look at, please let me know.

Thanks! I just fixed the pipeline (there were some API changes in plotly and some issues with the topic generation from few documents) but it should be working now. Based on the changes, I'll go ahead and merge this now. Thanks for the PR!",1106
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2023-03-07T07:13:24Z,"Nice catch, thanks for the PR!",1073
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-12-20T13:00:42Z,"Thanks, LGTM!",888
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-12-19T05:56:54Z,"Nice catch, that should definitely be changed! Could you remove the additional whitespace after the diversity parameter and docstrings? Other than that it looks good to me. ",887
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-12-19T06:45:03Z,done!,887
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-12-19T07:05:38Z,"Thanks for the quick update! LGTM, I'll go ahead and merge this now 😄 ",887
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-12-19T07:37:50Z,"Sorry, I missed out on another parameter - I think top_n_words should also be added, right? I'm creating another pull request.",887
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-10-24T07:22:42Z,"Thanks for this PR! As soon as the issues with HDBSCAN get resolved, I'll make sure to merge this. ",798
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-08-31T02:34:43Z,You can remove the `Optional` here and all other places you used it. It is currently not used throughout BERTopic and using it now would cause some confusion. ,694
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-08-31T02:35:48Z,Could you add docstrings in both `_bertopic.py` as well as `_barchart.py`?,694
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-08-31T02:37:34Z,"I believe this is not necessary. I would advise reverting this code to what it was before and creating the `subplot_titles` a bit differently as I will show below. That way, the structure of selecting topics is similar to other visualization options and it minimizes the code needed to use the `custom_labels`. ",694
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-08-31T02:45:01Z,"I think you would only need to do the following in order to use the custom labels:

```python
# Create subplot_titles 
if topic_model.custom_labels is not None and custom_labels:
    subplot_titles = [topic_model.custom_labels[topic + topic_model._outliers] for topic in topics]
else:
    subplot_titles = [f""Topic {topic}"" for topic in topics]
```

So the creation of `topic_label_map` is not necessary. ",694
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-08-31T02:48:38Z,Thank you for the PR! There are a few changes I suggested that can make the code a bit more efficient and closer to other visualization implementations. ,694
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-08-31T03:14:37Z,"@MaartenGr I just addressed your comments!

Thanks for the speedy review btw!",694
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-08-31T08:45:53Z,"Great, thanks for the PR and the quick commits 😄 ",694
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-08-05T06:16:15Z,"Good catch, thanks for the PR! ",660
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-06-16T05:47:51Z,"Thanks, LGTM! ",549
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-01-04T06:55:33Z,"Could you remove the `bool, optional.` here? Thus far, BERTopic only mentions the typing when declaring the parameters and not in the documentation itself. ",390
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-01-04T06:56:30Z,"Same here. Other than that it looks good. It might take some time for this to be merged as there are currently some issues with the pipeline. I will, however, start running the checks. ",390
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-01-03T19:45:24Z,"Thanks for the feed-back, I did not realise it was there too. I think it is done now.",390
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-06-16T05:23:35Z,"Apologies for the late reply! Finally had some time to go over the pull requests that were open and this looks good to me, so it can be merged. ",390
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-01-06T17:18:39Z,"After dropping Python 3.7 support, do you suggest we stay on 3.6? Or > 3.7 moving forward? I've had to do a lot of work to maintain my dev environments and retraining of models using updated versions of BERTopic to get the newest enhancements.",335
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-01-06T17:36:05Z,"I would suggest going with a more recent version of python, such as 3.9. The thing is, security updates for numpy have stopped for python 3.6 so it was necessary to drop that version as it was not supported anymore.",335
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-07-20T13:28:03Z,"@Akhamis01 Nice catch! Indeed, there are still some bugs regarding this to figure out. There is a fix coming though that should remedy this issue. ",176
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-07-20T17:09:46Z,"Sounds good! Also, just a side note, have you considered creating a function that would return the optimal number of topics to be used within a topic model? I feel that would be extremely useful and a lot of users may benefit from it :)",176
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-07-21T05:40:45Z,"@Akhamis01 You can already get the optimal number of topics by setting `nr_topics = ""auto""` when instantiating BERTopic. ",176
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-07-22T09:53:54Z,"> @Akhamis01 You can already get the optimal number of topics by setting `nr_topics = ""auto""` when instantiating BERTopic.

Thank you! Just wondering, how is the optimal number of topics calculated for a topic model? Is it through Coherence scores?",176
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-07-22T10:51:49Z,"@Akhamis01 The reduction is based on the similarity between topics. If two topics are very similar to each other, they will be merged. Coherence scores have a bunch of issues that make it difficult to properly evaluate a topic model using only one method. ",176
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-07-22T10:55:32Z,"> @Akhamis01 The reduction is based on the similarity between topics. If two topics are very similar to each other, they will be merged. Coherence scores have a bunch of issues that make it difficult to properly evaluate a topic model using only one method. 

Alright, and how is the similarity between the topics calculated in general? What metrics are the similarities based on?",176
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-07-22T11:02:03Z,"@Akhamis01 HDBSCAN is used to cluster the topics even further based on their topic vectors. You can find more about that here:

https://github.com/MaartenGr/BERTopic/blob/687d84612a62c5eeddcc089a4e29cbb4710ba23e/bertopic/_bertopic.py#L1568

If you have any further questions, could you create a separate issue for that? It helps keeping discussions relevant to this specific pull request. ",176
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-07-22T11:04:52Z,"Makes sense. Thank you for your help, appreciate it! I'll create a new issue for any other questions :)",176
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-07-23T04:26:03Z,@MaartenGr GuidedBERTopic idea and implementations looks great!  I will give it a try and let you know my feedback. Thank you ,176
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-08-18T09:25:00Z,"> ## Highlights
> * Get the most representative documents per topic: `topic_model.get_representative_docs(topic=1)`
>   
>   * This allows users to see which documents are good representations of a topic and better understand the topics that were created
> * Added `normalize_frequency` parameter to `visualize_topics_per_class` and `visualize_topics_over_time` in order to better compare the relative topic frequencies between topics
> * Return flat probabilities as default, only calculate the probabilities of all topics per document if `calculate_probabilities` is True
> * Implemented a guided BERTopic by defining seed topics:
> 
> ```python
> # NOTE: The Reuters dataset was ued
> seed_topic_list = [[""company"", ""billion"", ""quarter"", ""shrs"", ""earnings""],
>                    [""acquisition"", ""procurement"", ""merge""],
>                    [""exchange"", ""currency"", ""trading"", ""rate"", ""euro""],
>                    [""grain"", ""wheat"", ""corn""],
>                    [""coffee"", ""cocoa""],
>                    [""natural"", ""gas"", ""oil"", ""fuel"", ""products"", ""petrol""]]
> 
> topic_model = BERTopic(seed_topic_list=seed_topic_list)
> topics, _ = topic_model.fit_transform(docs)
> ```
> 
> Guided BERTopic works in two ways.
> 
> First, we create embeddings for each seeded topics by joining them and passing them through the document embedder. These embeddings will be compared with the existing document embeddings through cosine similarity and assigned a label. If the document is most similar to a seeded topic, then it will get that topic's label. If it is most similar to the average document embedding, it will get the -1 label. These labels are then passed through UMAP to create a semi-supervised approach that should nudge the topic creation to the seeded topics.
> 
> Second, we take all words in `seed_topic_list` and assign them a multiplier larger than 1. Those multipliers will be used to increase the IDF values of the words across all topics thereby increasing the likelihood that a seeded topic word will appear in a topic. This does, however, also increase the chance of an inrelevant topic having unrelated words. In practice, this should not be an issue since the IDF value is likely to remain low regardless of the multiplier. The multiplier is now a fixed value but may change to something more elegant, like taking the distribution of IDF values and its position into account when defining the multiplier.
> 
> ## Fixes
> * Fix loading pre-trained BERTopic model
> * Fix mapping of probabilities

Hi, thanks for the update.
Can we decide how many documents we would like to get from this method? For instance, instead of 3 documents, could we get X number of documents. As an example, a kind of method like this: topic_model.get_representative_docs(topic=1, nr_of_documents_returned=20).",176
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-08-18T10:20:09Z,"@FedePacio97 That is currently not possible since only three documents per topic are saved in order to prevent the topic model from saving too many documents. Moreover, this value would then depend on the `min_topic_size` as well as the underlying algorithm that is being used, since this method is only used for HDBSCAN. 

Instead, you can use the `topics` output to see which documents belong to which topic. Also, you could use [`.visualize_documents`](https://maartengr.github.io/BERTopic/getting_started/visualization/visualization.html#visualize-documents) to get an understanding of the documents that occupy each topic and which might be best representative. ",176
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2022-08-18T14:09:01Z,"Thank you very much for the fast reply.
This is definitely what I was looking for.",176
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-06-05T05:51:03Z,"First, thank you for training the new models! Second, You beat me to it! I have been experimenting with the two new sets of models and the results have been very promising with respect to both the topic clustering as well as the topic representations. They seem much more coherent now regardless of whether I use `paraphrase-MiniLM-L6-v2` or `paraphrase-mpnet-base-v2`. The multi-lingual models also demonstrated much better performance on Dutch texts than the previous ones. 

Quick question though, I am actually leaning towards the `MiniLM` models to use as a default due to its balance between speed and performance. Moreover, especially within topic modeling, speed seems to be a significant barrier for many users. Seeing as you actually trained the models, would you suggest one over the other in general use? ",136
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-06-05T12:34:19Z,"Hi @MaartenGr 
Happy to hear that :)

Yes, the paraphrase-MiniLM-L6-v2 also produces really good results in my experiments on clustering Reddit data. I often use that model due to the better speed and the subjective feeling about the quality is comparable to the mpnet models.
 
So when speed is a barrier for the users, using `paraphrase-MiniLM-L6-v2`  and `paraphrase-multilingual-MiniLM-L12-v2` as the default can make sense and then pointing them to the mpnet-models if they want higher quality.

",136
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-06-05T12:41:59Z,Updated the PR so that the MiniLM models are used. Added a note in the FAQ that paraphrase-mpnet-base-v2  and paraphrase-multilingual-mpnet-base-v2 can be used if a higher quality is desired.,136
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-06-06T08:36:27Z,"Great, thanks for the changes. I am currently running the workflows in Github but it seems that it encounters TimeOutErrors quite frequently when trying to access sbert.net and the corresponding models. Perhaps a version update of sentence-transformers might be a solution or extending the timeout limit in the Github workflow. 

Either way, I intend to merge this today or tomorrow when I tested some things out regardless of whether it passes the workflow since it works fine in various other environments. ",136
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-09-15T07:19:27Z,"Regarding the best model, according to the benchmark result in https://www.sbert.net/docs/pretrained_models.html, the model ```all-MiniLM-L6-v2``` has better performance but comparable speed than ```paraphrase-MiniLM-L6-v2```, which one would you recommend?",136
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-09-15T07:20:50Z,"The all-* models: Better and same speed as the paraphrase-MiniLM-L6-v2 model

The all-* models were recently released.",136
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-09-15T07:22:41Z,"> The all-* models: Better and same speed as the paraphrase-MiniLM-L6-v2 model
> 
> The all-* models were recently released.

I see, then i will use the recent all-* models. Thank you for the quick reply.",136
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-04-07T11:02:01Z,"Some more changes are coming with respect to topic modeling per class. Visualization will be difficult as, like with topics_over_time, there will be many topics across many classes. 

Perhaps all visualization options will be combined in a single function since creating topics_per_class will also result in a visualization function.",87
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-04-07T11:39:19Z,Is there an example of semi-supervised topic modeling with the target_classes format?,87
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-04-08T06:34:51Z,"> Is there an example of semi-supervised topic modeling with the target_classes format?

@nadiafelix This version is currently in development and examples are yet to be worked on. However, to use it simply fork this pull request and use `model.fit(docs, y=target_classes)` with whatever classes you have defined with respect to your `docs`. ",87
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-02-26T06:34:14Z,"> As I experienced, `from_topic` may be -1 too.

Hmmm, that actually should not happen since reducing topics starts from the least frequent topic up to and not including -1... I will have to test that out, thanks! ",60
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-02-04T19:49:59Z,"Hi, noticed you facing same numpy and pip related issues for hdbscan and umap. 

I was able to resolve this ([posted here](https://github.com/scikit-learn-contrib/hdbscan/issues/457#issuecomment-773557468)) but I've been using BERTopic inside of a Dockerfile. Posting it here so it helps you, and you can update `setup.py` file accordingly, or perhaps add this or similar Dockerfile itself in the repo along with this PR.

Do note that each of python version, order of install and the extra parameters used in pip for hdbscan seem to be important. Without them it fails.

Also, most likely with future patches for hdbscan/umap these issues with pip and version cross-compatibility would probably get fixed.

```
FROM python:3.8.7

# change shell to bash
SHELL [""/bin/bash"", ""-c""]

# Install some important libraries
RUN pip install --upgrade pip
RUN pip install --upgrade numpy umap-learn
RUN pip install --upgrade hdbscan --no-cache-dir --no-binary :all:
RUN pip install bertopic[visualization]

# Do whatever you wish to
WORKDIR ""/src/""
CMD [""python"", ""test.py""]
```

Build it via:
`docker build -f Dockerfile -t bertopic:v1 .`

Run it via :
`docker run -it -v $PWD:/src/ --name bertopic bertopic:v1`",46
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-02-05T06:57:28Z,"@bhavul Thanks! I had been following the issues with pypi for the last few days and was waiting for a fix to this issue. It's a shame there aren't perfect workarounds. However, it seems to be working for now with the updated requirements. Thanks again for the help. ",46
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2021-02-08T19:22:00Z,"Running the installs mentioned above with python 3.7.7 worked for me:
```
pip install --upgrade pip
pip install --upgrade numpy umap-learn
pip install --upgrade hdbscan --no-cache-dir --no-binary :all:
pip install bertopic[visualization]
```",46
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2020-12-13T10:33:00Z,Changed `min_topic_size` from 30 to 15 as a high value results in instable clusters. ,22
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2020-12-13T10:37:49Z,Numpy for Python 3.6 will be dropped and was therefore removed from the workflow. ,22
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2020-12-20T09:09:13Z,"Hi @MaartenGr 
Very nice additions, thanks for your great work.
I just wanted to mention that [this kind of preprocessing ](https://github.com/MaartenGr/BERTopic/blob/feature-flair/bertopic/_bertopic.py#L1104) impacts other languages such as Arabic :) ",22
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2020-12-20T09:13:00Z,"@alronz Thanks for the feedback! Would you say that the following code would negatively impact other languages?

```python
cleaned_documents = [doc.lower() for doc in documents]
cleaned_documents = [doc.replace(""\n"", "" "") for doc in cleaned_documents]
cleaned_documents = [doc.replace(""\t"", "" "") for doc in cleaned_documents]
cleaned_documents = [re.sub(r'[^A-Za-z0-9 ]+', '', doc) for doc in cleaned_documents]
cleaned_documents = [doc if doc != """" else ""emptydoc"" for doc in cleaned_documents]
```

I hoped by only lowering and keeping alphanumeric characters, it would not negatively impact the interpretation of other languages. ",22
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2020-12-20T09:14:00Z,"Yes I tried it out and I guess this part ` [re.sub(r'[^A-Za-z0-9 ]+', '', doc) for doc in cleaned_documents]` removed all Arabic characters ",22
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2020-12-20T09:17:01Z,"I was afraid of that. I might make it easy for me and only apply that specific step if ""english"" is selected. ",22
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2020-12-20T09:18:28Z,"btw I liked the visualization of topics very much 👍 
however I couldn't use the `visualize_distribution` since doing soft clustering using HDBSCAN `all_points_membership_vectors` took forever (many hours and still not finished for 200k tweets)",22
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2020-12-20T09:25:34Z,"Thanks! That was something I really wanted to have in the newest version. 
I am a bit confused, did you manage to train a BERTopic instance or did it get stuck at `all_points_membership_vectors`? ",22
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2020-12-20T09:35:57Z,I had to customize the code to skip `all_points_membership_vectors` and get only topic labels without all the probability distribution stuff.  Clustering is quite fast with the same data size (few minutes). Not sure why doing soft clustering is super slow (I even think it gets stuck since I have to restart the juypter kernal to kill it),22
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2020-12-20T09:40:00Z,"Although it should be quite fast, it might be that it gets stuck due to the sheer size of the probabilities that were generated. If the dataset is relatively large, then it is likely that many clusters will be generated and `probabilities` might explode in size. I haven't seen this happening myself though. I could fix this by giving you the option to turn off the extraction of `probabilities`. ",22
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2020-12-20T09:45:41Z,"I think having that option would be really great, thanks @MaartenGr ",22
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2020-12-20T09:50:30Z,"Another minor issues are related to the nature of the Arabic language. For example, Arabic text will be unreadable on the visualizations. It needs to be processed differently. I could even contribute this back if you like.  ",22
github.com/MaartenGr/BERTopic,bertopic/_bertopic.py,2020-12-20T10:32:05Z,"Added a `calculate_probabilities` parameter! 

I intend to publish v0.4 of BERTopic tomorrow. So I do not know if I have the time to properly look at fixing the Arabic language representation on Plotly/Matplotlib as the issue might also extend to other languages. I do want to add it, but it might be after the holidays for a v0.4.1 version. ",22
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-05-22T16:10:45Z,"This is heavily duplicating code in `save`, but I didn't want to take the liberty of refactoring this out! ",1287
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-05-22T16:11:11Z,I will aim to find a way of implementing this properly ,1287
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-05-23T15:23:50Z,Feel free to refactor stuff but this is fine by me for now! ,1287
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-05-23T15:45:53Z,"@davanstrien Great, should we save this for later? If so, then I will go ahead and merge this PR. ",1287
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-05-23T15:55:27Z,I think that makes sense for now since this will probably require a bit more work. ,1287
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-05-07T16:54:30Z,"```suggestion
            repr_doc_indices: Ordered indices of representative documents
```",1232
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-05-07T16:54:53Z,"```suggestion
        batch_size: The size of image batches to pass
```",1232
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-05-07T17:27:43Z,"Thanks for the feedback! This is still all a work-in-progress and is likely to change significantly, especially when new features come in, but I'll make sure to change it accordingly if it is still there after a few commits! ",1232
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-05-07T17:27:54Z,See above 😄 ,1232
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-11-24T14:45:15Z,"Hi! I am using Multimodal model and want to sent my own ebeddings to speed up the model; while the error persists: 

**Token indices sequence length is longer than the specified maximum sequence length for this model (78 > 77). Running this sequence through the model will result in indexing errors**

I searched and found that It may be due to the restriction of the model. Do you know how to solve it? Thanks~~

My code: 

`model = MultiModalBackend('clip-ViT-B-32', batch_size=32)
`
`embeddings = model.embed(docs, images)`

",1232
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-11-26T05:13:00Z,"@Steven-1124 That is a result of the context length of the embedding model. If it is trained on a number of tokens, then it will not accept longer documents and truncation of the documents might be needed. ",1232
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-04-27T19:37:08Z,"For this, it might be worth exploring https://huggingface.co/docs/huggingface_hub/guides/model-cards at some point. There are a few possible enhancements we could make there:

- Trying to autogenerate some parts of the model card (for example, the Transformers Trainer API adds hyperparameters to a model card https://huggingface.co/biglam/detr-resnet-50_fine_tuned_nls_chapbooks#training-hyperparameters. I could imagine that things like the number of topics, number of training docs etc., could all be of interest. 

- Creating a template model card, i.e. something like (https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/templates/modelcard_template.md). This can be helpful as a starting point for a model card structure even if most sections are not completed. 

I think this can all come later, and happy to help with this part if you think it might interest you. ",1205
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-04-27T20:13:13Z,"Would it be worth doing this check inside the save function? For the user who is running in Colab or another notebook environment, they might hit the assertion error about safetensors when they try and save a model, but since the import check is done earlier, they would need to reload the module even after they pip install safetensors.  ",1205
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-04-28T09:33:37Z,"Oh nice, that's perfect! That would make the process rather straightforward. Just to be sure I got this correctly. I would only need to:
* Create a template
* Create a model card from that template
* Extract the text from the model card
* and finally write that to `.md` the same way I did before. 

I want to make sure that when I run `upload_folder`, the model card is not a separate commit. 

All in all, I do not think it would be too much work, so I think I will simply add it to this PR. That way, there is little left for saving/loading a BERTopic model. ",1205
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-04-28T09:34:26Z,"Thanks, will definitely do this. It is indeed something users will run into since `safetensors` is not (yet) part of the transformers base requirements. ",1205
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-04-28T12:42:54Z,"Ah, it seems that to use `.from_template` an installation of `Jinja2` is a requirement whilst it is not a requirement of BERTopic.  Instead, I will likely use f-strings, albeit a bit hackier, to generate the template. ",1205
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-05-02T09:17:14Z,"> Ah, it seems that to use .from_template an installation of Jinja2 is a requirement whilst it is not a requirement of BERTopic. Instead, I will likely use f-strings, albeit a bit hackier, to generate the template.

Sorry for the slow reply, yes I think in this case to avoid a dependency f-strings probably make the most sense. Let me know if you need any help/input with this. ",1205
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-05-02T17:38:32Z,"Great, I finished up the last changes. I am currently working on support for both multi-modal (cluster images and/or text) and multi-aspect topic modeling (multiple representations simultaneously, keywords, summaries, sentiment, etc.). I intend to also save those aspects but since they are mostly just values/text that can be put in the `topics.json`, that process should be straightforward. 

So I believe the best thing to do may be to merge this PR and then continue with the multi-modal/multi-aspect topic modeling before slightly updating the saving procedure. ",1205
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-05-03T12:23:51Z,"That sounds awesome! Super cool to be adding multi-modal support for this (it gives me a few more use cases to use this!!). 

Let me know if you want me to review any of these changes or input anywhere else. ",1205
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-05-04T07:13:34Z,"I'll go ahead and merge this now so that I can continue with the multi-modal support

> Let me know if you want me to review any of these changes or input anywhere else.

Great, thanks! Most likely, I will ping you when I start saving the multi-modal model as I am not quite sure what the best way to save those images is, but I will let you know by then when I have something you can look at. ",1205
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-05-04T08:31:54Z,"Thanks, @MaartenGr, and really excited about all of this work! ",1205
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-05-10T17:33:43Z,This is an awesome addition. I was able to create and save a model on a linux distro and then load successfully on windows. Great work!!!!,1205
github.com/MaartenGr/BERTopic,bertopic/_save_utils.py,2023-05-13T07:52:21Z,@vantubbe Thanks! Glad to hear that it is a worthwhile feature to add. There are going to be a few more changes with respect to multi-modal and multi-aspect topic modeling before this is fully integrated in the HF Hub but hopefully it will only take a couple of weeks. ,1205
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-02T20:24:03Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

To create a `list`, try to use `list` comprehension instead of a loop. List comprehension is the preferred way to make a list using Python, and it&#39;s simpler and easier to understand than using a loop.

[Learn more](https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions)",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-02T20:24:03Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

To create a `list`, try to use `list` comprehension instead of a loop. List comprehension is the preferred way to make a list using Python, and it&#39;s simpler and easier to understand than using a loop.

[Learn more](https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions)",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-02T20:24:03Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

Using `Exception` and `BaseException` can make your code prone to errors and difficult to maintain. Instead, we recommend using one of the [Built-in Exceptions](https://docs.python.org/3/library/exceptions.html) or creating a custom exception class that is derived from `Exception` or one of its subclasses.

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-02T20:24:04Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

Using `Exception` and `BaseException` can make your code prone to errors and difficult to maintain. Instead, we recommend using one of the [Built-in Exceptions](https://docs.python.org/3/library/exceptions.html) or creating a custom exception class that is derived from `Exception` or one of its subclasses.

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-02T20:52:59Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

**Problem:**
 This line of code lacks validation when processing input data through the following parameter: &#39;serialized_input_data&#39; (index: 0 | type: Unknown). The parameter is exposed to external callers, because its enclosing class and method are publicly accessible. This means that upstream validation, if it exists, can be bypassed. Other validated parameters: &#39;content_type&#39;. The same parameter type is validated here for example: amazon-sagemaker-examples/advanced_functionality/pytorch_extend_container_train_deploy/container/bert-topic-byoreq/bert-topic-inference.py:40. Malicious, malformed, or unbounded inputs can cause unexpected runtime behavior or crashes, and can slow performance.

**Fix:**
 Add checks to ensure the validity of the parameter&#39;s value, such as testing it for nullness, emptiness, or equality. Or to prevent direct calls to it, [reduce the method&#39;s visibility](https://www.python.org/dev/peps/pep-0008/#descriptive-naming-styles) using single or double underscore.

 Learn more about potential threats and guidance from the [Common Weakness Enumeration website](https://cwe.mitre.org/data/definitions/693.html) and the [OWASP Cheat Sheet series](https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html).",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-03T12:33:13Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

Using `Exception` and `BaseException` can make your code prone to errors and difficult to maintain. Instead, we recommend using one of the [Built-in Exceptions](https://docs.python.org/3/library/exceptions.html) or creating a custom exception class that is derived from `Exception` or one of its subclasses.

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-03T12:33:14Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

To create a `list`, try to use `list` comprehension instead of a loop. List comprehension is the preferred way to make a list using Python, and it&#39;s simpler and easier to understand than using a loop.

[Learn more](https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions)",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-03T12:33:14Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

To create a `list`, try to use `list` comprehension instead of a loop. List comprehension is the preferred way to make a list using Python, and it&#39;s simpler and easier to understand than using a loop.

[Learn more](https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions)",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-03T12:33:14Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

**Problem:**
 This line of code lacks validation when processing input data through the following parameter: &#39;serialized_input_data&#39; (index: 0 | type: Unknown). The parameter is exposed to external callers, because its enclosing class and method are publicly accessible. This means that upstream validation, if it exists, can be bypassed. Other validated parameters: &#39;content_type&#39;. The same parameter type is validated here for example: amazon-sagemaker-examples/advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py:40. Malicious, malformed, or unbounded inputs can cause unexpected runtime behavior or crashes, and can slow performance.

**Fix:**
 Add checks to ensure the validity of the parameter&#39;s value, such as testing it for nullness, emptiness, or equality. Or to prevent direct calls to it, [reduce the method&#39;s visibility](https://www.python.org/dev/peps/pep-0008/#descriptive-naming-styles) using single or double underscore.

 Learn more about potential threats and guidance from the [Common Weakness Enumeration website](https://cwe.mitre.org/data/definitions/693.html) and the [OWASP Cheat Sheet series](https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html).",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-03T12:33:15Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

Using `Exception` and `BaseException` can make your code prone to errors and difficult to maintain. Instead, we recommend using one of the [Built-in Exceptions](https://docs.python.org/3/library/exceptions.html) or creating a custom exception class that is derived from `Exception` or one of its subclasses.

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-03T12:35:29Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

**Problem:**
 This line of code lacks validation when processing input data through the following parameter: &#39;serialized_input_data&#39; (index: 0 | type: Unknown). The parameter is exposed to external callers, because its enclosing class and method are publicly accessible. This means that upstream validation, if it exists, can be bypassed. Other validated parameters: &#39;content_type&#39;. The same parameter type is validated here for example: amazon-sagemaker-examples/advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py:40. Malicious, malformed, or unbounded inputs can cause unexpected runtime behavior or crashes, and can slow performance.

**Fix:**
 Add checks to ensure the validity of the parameter&#39;s value, such as testing it for nullness, emptiness, or equality. Or to prevent direct calls to it, [reduce the method&#39;s visibility](https://www.python.org/dev/peps/pep-0008/#descriptive-naming-styles) using single or double underscore.

 Learn more about potential threats and guidance from the [Common Weakness Enumeration website](https://cwe.mitre.org/data/definitions/693.html) and the [OWASP Cheat Sheet series](https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html).",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-03T19:40:17Z,"<p>Only put the title of the notebook as H1 - other titles (i.e. Extending our PyTorch containers) should be H2 or less. It affects how the notebook is rendered in ReadTheDocs. Do this for the entire notebook</p>
<br/>

 _Reply via <a href='https://app.reviewnb.com/aws/amazon-sagemaker-examples/pull/3819/discussion/#comment-1124933959'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='OPEN' data-cellIndex='0'/>",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-03T19:40:18Z,"<p>Download the data from our speciailized S3 bucket to avoid broken links in the future. You have either s3://sagemaker-sample-files/datasets/text/20_newsgroups/20_newsgroups.tar.gz or s3://sagemaker-sample-files/datasets/text/20_newsgroups/20_newsgroups_bulk.tar.gz</p>
<br/>

 _Reply via <a href='https://app.reviewnb.com/aws/amazon-sagemaker-examples/pull/3819/discussion/#comment-1124933963'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='OPEN' data-cellIndex='14'/>",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-06T15:18:02Z,"done, thanks",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-06T15:19:07Z,"I added the first link as a commented alternative. I think that downloading a raw tar.gz would require extending sensibly the data cleaning, and is not the scope of the notebook. I hope you think is ok :) ",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-02T20:16:05Z,"Check out this pull request on&nbsp; <a href=""https://app.reviewnb.com/aws/amazon-sagemaker-examples/pull/3819""><img align=""absmiddle""  alt=""ReviewNB"" height=""28"" class=""BotMessageButtonImage"" src=""https://raw.githubusercontent.com/ReviewNB/support/master/images/button_reviewnb.png""/></a> 

 See visual diffs & provide feedback on Jupyter Notebooks. 

---

 <i>Powered by <a href='https://www.reviewnb.com/?utm_source=gh'>ReviewNB</a></i>",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-02T20:19:37Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 0b5695d280ce5d46d86b1e6e966ed96f57b48420
* Result: SUCCEEDED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=108a9b0e-dd97-4b5a-981e-9a170ed850f0%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-02T20:19:43Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 0b5695d280ce5d46d86b1e6e966ed96f57b48420
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=da024ce9-ad7b-4361-9a02-33541425c736%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-02T20:20:14Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 0b5695d280ce5d46d86b1e6e966ed96f57b48420
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=13cfd56b-0e64-4037-8f3a-351832d285cf%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-02T20:23:07Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 95b1e01cf2f1251a665a967750578c03e500f221
* Result: FAILED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=79a1c853-8217-4958-9917-78c8412b1e48%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-02T20:23:22Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 95b1e01cf2f1251a665a967750578c03e500f221
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=2b33741d-2e54-4aae-9fb7-c4062a39df1c%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-02T20:23:46Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 95b1e01cf2f1251a665a967750578c03e500f221
* Result: FAILED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=2d3541f3-d06e-4499-8cce-0906e583eea0%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-02T20:47:30Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 1cf55114eb480fcb4658f97f3f230a3d11c39593
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=d2aa3f3a-9b11-478d-876d-45cd4f09311a%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-02T20:47:31Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 1cf55114eb480fcb4658f97f3f230a3d11c39593
* Result: SUCCEEDED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=fde3f6e0-a5db-475e-9909-a1b46f362e7b%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-02T20:48:06Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 1cf55114eb480fcb4658f97f3f230a3d11c39593
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=0920ddfd-6bf0-4441-966b-6daaa47b6fa0%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-02T21:00:04Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: e632fd93770a61b16e65c7acac170f3e30dc1bbb
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=d11fea40-ed38-48be-bee4-7d34a7081a9b%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-02T21:00:10Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: e632fd93770a61b16e65c7acac170f3e30dc1bbb
* Result: SUCCEEDED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=e763cdb3-1d61-4126-ba39-35b70c6a7065%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-02T21:00:23Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: e632fd93770a61b16e65c7acac170f3e30dc1bbb
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=110e5066-9c38-4e84-a6b4-5b5d04c154f0%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-02T22:08:37Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-amazon-sagemaker-examples-pr
* Commit ID: e632fd93770a61b16e65c7acac170f3e30dc1bbb
* Result: FAILED
* [Build Logs](https://1n9nxjmzo3.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=144f95a9-cae1-4de0-8a82-bb04ecd5383d%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-03T12:23:54Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 79f2bf8fdd76eb99d1e93e7c553a6254997e821d
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=2898bf9a-f6de-4104-995c-599ce1362081%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-03T12:23:58Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 79f2bf8fdd76eb99d1e93e7c553a6254997e821d
* Result: FAILED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=7f21c563-4321-4a84-8fca-4b40e7c11255%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-03T12:24:13Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 79f2bf8fdd76eb99d1e93e7c553a6254997e821d
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=23f0d99f-c2fd-47c0-ab0d-ed9d1a5db6d0%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-03T12:27:28Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 7eb130646ff41749386b3b2d002c6608322bb06c
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=16f6151a-34fc-4b21-8b61-5c5eaf985c9a%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-03T12:27:46Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 7eb130646ff41749386b3b2d002c6608322bb06c
* Result: FAILED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=0acc3fbd-9f68-4c0d-a547-5ecfa30c2c83%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-03T12:27:53Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 7eb130646ff41749386b3b2d002c6608322bb06c
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=cc8c7cb0-8e67-4f09-8209-4f9790bb3455%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-03T12:29:58Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 441d8e02921ffe4b17ae36b8c482ec5626fd409d
* Result: SUCCEEDED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=6a39e5f2-0e8a-4861-a7f0-c48b245c8a62%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-03T12:30:05Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 441d8e02921ffe4b17ae36b8c482ec5626fd409d
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=acd37aa6-81e0-4c70-853f-92966a82d108%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-03T12:30:38Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 441d8e02921ffe4b17ae36b8c482ec5626fd409d
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=b50a4026-6d26-43ac-8a03-13edcec688b2%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-03T13:38:34Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-amazon-sagemaker-examples-pr
* Commit ID: 441d8e02921ffe4b17ae36b8c482ec5626fd409d
* Result: FAILED
* [Build Logs](https://1n9nxjmzo3.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=9638ff3c-14ab-4991-98d7-0872a420258b%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-06T15:20:05Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 72380583f8135947309725903a5f2b7e0d130a14
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=80de2fcf-291c-48d5-8c9d-c5fe2479d454%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-06T15:20:09Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 72380583f8135947309725903a5f2b7e0d130a14
* Result: FAILED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=b09c3790-0ff0-4c79-b4eb-ae73599f209f%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-06T15:20:39Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 72380583f8135947309725903a5f2b7e0d130a14
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=d8bfa464-e4e5-4cc1-8417-534572d1997e%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-06T15:25:29Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 35c1ff25ed0c533e95a798f0957408c74893dab5
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=73be1da1-1bfc-42c6-bc9e-2e638dd4d03e%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-06T15:25:56Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 35c1ff25ed0c533e95a798f0957408c74893dab5
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=7be73bcb-4648-4a55-aa20-9ce779ac0765%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-06T15:26:20Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 35c1ff25ed0c533e95a798f0957408c74893dab5
* Result: FAILED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=867e184b-e325-4a63-8c41-b23f53d10f5b%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-06T15:33:18Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: d4001d0d8a5c8fe88cdcc489bd95405aacdba4d8
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=33322966-e3ec-4e11-9f22-d55789ad7d41%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-06T15:33:27Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: d4001d0d8a5c8fe88cdcc489bd95405aacdba4d8
* Result: FAILED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=905c2983-22cf-4249-8092-468da409e9bf%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-06T15:35:57Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: d4001d0d8a5c8fe88cdcc489bd95405aacdba4d8
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=0f95ca5a-a0c1-4f61-8875-cd4030539bfc%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-06T16:41:38Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-amazon-sagemaker-examples-pr
* Commit ID: d4001d0d8a5c8fe88cdcc489bd95405aacdba4d8
* Result: FAILED
* [Build Logs](https://1n9nxjmzo3.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=1ae8d881-4b69-4897-ae51-9fbf06b400d2%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-07T07:21:23Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 95142a344c498ba17769de17fe39f5d22925bebe
* Result: FAILED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=8ff7c74d-1f7f-454a-900d-abbddb38ee6f%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-07T07:21:29Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 95142a344c498ba17769de17fe39f5d22925bebe
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=8b5caa16-beb6-4b1c-b1a5-57e23cb6cdfb%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-07T07:22:23Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 95142a344c498ba17769de17fe39f5d22925bebe
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=5d20d0d1-cc5c-483f-95f9-297e192ee043%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-07T08:30:06Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-amazon-sagemaker-examples-pr
* Commit ID: 95142a344c498ba17769de17fe39f5d22925bebe
* Result: FAILED
* [Build Logs](https://1n9nxjmzo3.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=7b1e6cf9-1e1a-4b06-8618-03ee4f9d74da%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-09T01:28:34Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-amazon-sagemaker-examples-pr
* Commit ID: 68b44f4fae8b5a394d565d4a79b00dfe81c07a47
* Result: SUCCEEDED
* [Build Logs](https://1n9nxjmzo3.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=b9d26f15-4d08-4764-b602-3f00de6da308%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-09T01:28:46Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 68b44f4fae8b5a394d565d4a79b00dfe81c07a47
* Result: FAILED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=4c533261-784d-4b14-b059-aaff6d5aed83%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-09T01:28:52Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 68b44f4fae8b5a394d565d4a79b00dfe81c07a47
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=77a872c1-8221-4f4d-9fce-49d66f5ccfe7%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-09T01:29:09Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 68b44f4fae8b5a394d565d4a79b00dfe81c07a47
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=2f4a3faf-7ea8-4ea5-9fb4-c1bb5b1c181a%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-12T21:39:43Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-amazon-sagemaker-examples-pr
* Commit ID: df45cd1b33b8ef34f2f9e47129c25ccf00064716
* Result: SUCCEEDED
* [Build Logs](https://1n9nxjmzo3.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=fcc0bc91-5c2d-42cf-9601-e987ac1a6a6e%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-12T21:39:51Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: df45cd1b33b8ef34f2f9e47129c25ccf00064716
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=3d5a82ef-ff70-428e-a8b7-926e3fca67bd%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-12T21:39:51Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: df45cd1b33b8ef34f2f9e47129c25ccf00064716
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=cb6059e4-f23e-475f-9f77-d3bc0bdb5705%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-12T21:39:54Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: df45cd1b33b8ef34f2f9e47129c25ccf00064716
* Result: SUCCEEDED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=895dea5c-6982-4ebb-9c6c-0de16297c99d%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-25T09:56:57Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-amazon-sagemaker-examples-pr
* Commit ID: 4831fc697e5d180c7bc2db3965186786b6545fc7
* Result: SUCCEEDED
* [Build Logs](https://1n9nxjmzo3.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=ff19ff5f-93ca-45b7-9cdc-a5843fb322b3%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-25T09:57:09Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 4831fc697e5d180c7bc2db3965186786b6545fc7
* Result: SUCCEEDED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=0443fd07-df2f-4cc0-bd8a-36a5d405d6e9%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-25T09:57:14Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 4831fc697e5d180c7bc2db3965186786b6545fc7
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=358a5c9b-a0f3-4d14-9cbb-1b56e1151872%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py,2023-03-25T09:57:28Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 4831fc697e5d180c7bc2db3965186786b6545fc7
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=1b6c58ee-8f65-477c-af8e-dddc78a67c4f%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-02T20:24:03Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

To create a `list`, try to use `list` comprehension instead of a loop. List comprehension is the preferred way to make a list using Python, and it&#39;s simpler and easier to understand than using a loop.

[Learn more](https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions)",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-02T20:24:03Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

To create a `list`, try to use `list` comprehension instead of a loop. List comprehension is the preferred way to make a list using Python, and it&#39;s simpler and easier to understand than using a loop.

[Learn more](https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions)",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-02T20:24:03Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

Using `Exception` and `BaseException` can make your code prone to errors and difficult to maintain. Instead, we recommend using one of the [Built-in Exceptions](https://docs.python.org/3/library/exceptions.html) or creating a custom exception class that is derived from `Exception` or one of its subclasses.

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-02T20:24:04Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

Using `Exception` and `BaseException` can make your code prone to errors and difficult to maintain. Instead, we recommend using one of the [Built-in Exceptions](https://docs.python.org/3/library/exceptions.html) or creating a custom exception class that is derived from `Exception` or one of its subclasses.

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-02T20:52:59Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

**Problem:**
 This line of code lacks validation when processing input data through the following parameter: &#39;serialized_input_data&#39; (index: 0 | type: Unknown). The parameter is exposed to external callers, because its enclosing class and method are publicly accessible. This means that upstream validation, if it exists, can be bypassed. Other validated parameters: &#39;content_type&#39;. The same parameter type is validated here for example: amazon-sagemaker-examples/advanced_functionality/pytorch_extend_container_train_deploy/container/bert-topic-byoreq/bert-topic-inference.py:40. Malicious, malformed, or unbounded inputs can cause unexpected runtime behavior or crashes, and can slow performance.

**Fix:**
 Add checks to ensure the validity of the parameter&#39;s value, such as testing it for nullness, emptiness, or equality. Or to prevent direct calls to it, [reduce the method&#39;s visibility](https://www.python.org/dev/peps/pep-0008/#descriptive-naming-styles) using single or double underscore.

 Learn more about potential threats and guidance from the [Common Weakness Enumeration website](https://cwe.mitre.org/data/definitions/693.html) and the [OWASP Cheat Sheet series](https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html).",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-03T12:33:13Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

Using `Exception` and `BaseException` can make your code prone to errors and difficult to maintain. Instead, we recommend using one of the [Built-in Exceptions](https://docs.python.org/3/library/exceptions.html) or creating a custom exception class that is derived from `Exception` or one of its subclasses.

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-03T12:33:14Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

To create a `list`, try to use `list` comprehension instead of a loop. List comprehension is the preferred way to make a list using Python, and it&#39;s simpler and easier to understand than using a loop.

[Learn more](https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions)",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-03T12:33:14Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

To create a `list`, try to use `list` comprehension instead of a loop. List comprehension is the preferred way to make a list using Python, and it&#39;s simpler and easier to understand than using a loop.

[Learn more](https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions)",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-03T12:33:14Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

**Problem:**
 This line of code lacks validation when processing input data through the following parameter: &#39;serialized_input_data&#39; (index: 0 | type: Unknown). The parameter is exposed to external callers, because its enclosing class and method are publicly accessible. This means that upstream validation, if it exists, can be bypassed. Other validated parameters: &#39;content_type&#39;. The same parameter type is validated here for example: amazon-sagemaker-examples/advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic/bert-topic-inference.py:40. Malicious, malformed, or unbounded inputs can cause unexpected runtime behavior or crashes, and can slow performance.

**Fix:**
 Add checks to ensure the validity of the parameter&#39;s value, such as testing it for nullness, emptiness, or equality. Or to prevent direct calls to it, [reduce the method&#39;s visibility](https://www.python.org/dev/peps/pep-0008/#descriptive-naming-styles) using single or double underscore.

 Learn more about potential threats and guidance from the [Common Weakness Enumeration website](https://cwe.mitre.org/data/definitions/693.html) and the [OWASP Cheat Sheet series](https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html).",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-03T12:33:15Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

Using `Exception` and `BaseException` can make your code prone to errors and difficult to maintain. Instead, we recommend using one of the [Built-in Exceptions](https://docs.python.org/3/library/exceptions.html) or creating a custom exception class that is derived from `Exception` or one of its subclasses.

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-03T12:35:29Z,"Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.

**Problem:**
 This line of code lacks validation when processing input data through the following parameter: &#39;serialized_input_data&#39; (index: 0 | type: Unknown). The parameter is exposed to external callers, because its enclosing class and method are publicly accessible. This means that upstream validation, if it exists, can be bypassed. Other validated parameters: &#39;content_type&#39;. The same parameter type is validated here for example: amazon-sagemaker-examples/advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py:40. Malicious, malformed, or unbounded inputs can cause unexpected runtime behavior or crashes, and can slow performance.

**Fix:**
 Add checks to ensure the validity of the parameter&#39;s value, such as testing it for nullness, emptiness, or equality. Or to prevent direct calls to it, [reduce the method&#39;s visibility](https://www.python.org/dev/peps/pep-0008/#descriptive-naming-styles) using single or double underscore.

 Learn more about potential threats and guidance from the [Common Weakness Enumeration website](https://cwe.mitre.org/data/definitions/693.html) and the [OWASP Cheat Sheet series](https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html).",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-03T19:40:17Z,"<p>Only put the title of the notebook as H1 - other titles (i.e. Extending our PyTorch containers) should be H2 or less. It affects how the notebook is rendered in ReadTheDocs. Do this for the entire notebook</p>
<br/>

 _Reply via <a href='https://app.reviewnb.com/aws/amazon-sagemaker-examples/pull/3819/discussion/#comment-1124933959'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='OPEN' data-cellIndex='0'/>",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-03T19:40:18Z,"<p>Download the data from our speciailized S3 bucket to avoid broken links in the future. You have either s3://sagemaker-sample-files/datasets/text/20_newsgroups/20_newsgroups.tar.gz or s3://sagemaker-sample-files/datasets/text/20_newsgroups/20_newsgroups_bulk.tar.gz</p>
<br/>

 _Reply via <a href='https://app.reviewnb.com/aws/amazon-sagemaker-examples/pull/3819/discussion/#comment-1124933963'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='OPEN' data-cellIndex='14'/>",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-06T15:18:02Z,"done, thanks",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-06T15:19:07Z,"I added the first link as a commented alternative. I think that downloading a raw tar.gz would require extending sensibly the data cleaning, and is not the scope of the notebook. I hope you think is ok :) ",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-02T20:16:05Z,"Check out this pull request on&nbsp; <a href=""https://app.reviewnb.com/aws/amazon-sagemaker-examples/pull/3819""><img align=""absmiddle""  alt=""ReviewNB"" height=""28"" class=""BotMessageButtonImage"" src=""https://raw.githubusercontent.com/ReviewNB/support/master/images/button_reviewnb.png""/></a> 

 See visual diffs & provide feedback on Jupyter Notebooks. 

---

 <i>Powered by <a href='https://www.reviewnb.com/?utm_source=gh'>ReviewNB</a></i>",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-02T20:19:37Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 0b5695d280ce5d46d86b1e6e966ed96f57b48420
* Result: SUCCEEDED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=108a9b0e-dd97-4b5a-981e-9a170ed850f0%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-02T20:19:43Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 0b5695d280ce5d46d86b1e6e966ed96f57b48420
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=da024ce9-ad7b-4361-9a02-33541425c736%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-02T20:20:14Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 0b5695d280ce5d46d86b1e6e966ed96f57b48420
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=13cfd56b-0e64-4037-8f3a-351832d285cf%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-02T20:23:07Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 95b1e01cf2f1251a665a967750578c03e500f221
* Result: FAILED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=79a1c853-8217-4958-9917-78c8412b1e48%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-02T20:23:22Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 95b1e01cf2f1251a665a967750578c03e500f221
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=2b33741d-2e54-4aae-9fb7-c4062a39df1c%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-02T20:23:46Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 95b1e01cf2f1251a665a967750578c03e500f221
* Result: FAILED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=2d3541f3-d06e-4499-8cce-0906e583eea0%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-02T20:47:30Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 1cf55114eb480fcb4658f97f3f230a3d11c39593
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=d2aa3f3a-9b11-478d-876d-45cd4f09311a%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-02T20:47:31Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 1cf55114eb480fcb4658f97f3f230a3d11c39593
* Result: SUCCEEDED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=fde3f6e0-a5db-475e-9909-a1b46f362e7b%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-02T20:48:06Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 1cf55114eb480fcb4658f97f3f230a3d11c39593
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=0920ddfd-6bf0-4441-966b-6daaa47b6fa0%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-02T21:00:04Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: e632fd93770a61b16e65c7acac170f3e30dc1bbb
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=d11fea40-ed38-48be-bee4-7d34a7081a9b%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-02T21:00:10Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: e632fd93770a61b16e65c7acac170f3e30dc1bbb
* Result: SUCCEEDED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=e763cdb3-1d61-4126-ba39-35b70c6a7065%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-02T21:00:23Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: e632fd93770a61b16e65c7acac170f3e30dc1bbb
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=110e5066-9c38-4e84-a6b4-5b5d04c154f0%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-02T22:08:37Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-amazon-sagemaker-examples-pr
* Commit ID: e632fd93770a61b16e65c7acac170f3e30dc1bbb
* Result: FAILED
* [Build Logs](https://1n9nxjmzo3.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=144f95a9-cae1-4de0-8a82-bb04ecd5383d%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-03T12:23:54Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 79f2bf8fdd76eb99d1e93e7c553a6254997e821d
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=2898bf9a-f6de-4104-995c-599ce1362081%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-03T12:23:58Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 79f2bf8fdd76eb99d1e93e7c553a6254997e821d
* Result: FAILED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=7f21c563-4321-4a84-8fca-4b40e7c11255%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-03T12:24:13Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 79f2bf8fdd76eb99d1e93e7c553a6254997e821d
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=23f0d99f-c2fd-47c0-ab0d-ed9d1a5db6d0%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-03T12:27:28Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 7eb130646ff41749386b3b2d002c6608322bb06c
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=16f6151a-34fc-4b21-8b61-5c5eaf985c9a%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-03T12:27:46Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 7eb130646ff41749386b3b2d002c6608322bb06c
* Result: FAILED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=0acc3fbd-9f68-4c0d-a547-5ecfa30c2c83%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-03T12:27:53Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 7eb130646ff41749386b3b2d002c6608322bb06c
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=cc8c7cb0-8e67-4f09-8209-4f9790bb3455%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-03T12:29:58Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 441d8e02921ffe4b17ae36b8c482ec5626fd409d
* Result: SUCCEEDED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=6a39e5f2-0e8a-4861-a7f0-c48b245c8a62%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-03T12:30:05Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 441d8e02921ffe4b17ae36b8c482ec5626fd409d
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=acd37aa6-81e0-4c70-853f-92966a82d108%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-03T12:30:38Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 441d8e02921ffe4b17ae36b8c482ec5626fd409d
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=b50a4026-6d26-43ac-8a03-13edcec688b2%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-03T13:38:34Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-amazon-sagemaker-examples-pr
* Commit ID: 441d8e02921ffe4b17ae36b8c482ec5626fd409d
* Result: FAILED
* [Build Logs](https://1n9nxjmzo3.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=9638ff3c-14ab-4991-98d7-0872a420258b%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-06T15:20:05Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 72380583f8135947309725903a5f2b7e0d130a14
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=80de2fcf-291c-48d5-8c9d-c5fe2479d454%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-06T15:20:09Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 72380583f8135947309725903a5f2b7e0d130a14
* Result: FAILED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=b09c3790-0ff0-4c79-b4eb-ae73599f209f%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-06T15:20:39Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 72380583f8135947309725903a5f2b7e0d130a14
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=d8bfa464-e4e5-4cc1-8417-534572d1997e%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-06T15:25:29Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 35c1ff25ed0c533e95a798f0957408c74893dab5
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=73be1da1-1bfc-42c6-bc9e-2e638dd4d03e%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-06T15:25:56Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 35c1ff25ed0c533e95a798f0957408c74893dab5
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=7be73bcb-4648-4a55-aa20-9ce779ac0765%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-06T15:26:20Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 35c1ff25ed0c533e95a798f0957408c74893dab5
* Result: FAILED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=867e184b-e325-4a63-8c41-b23f53d10f5b%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-06T15:33:18Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: d4001d0d8a5c8fe88cdcc489bd95405aacdba4d8
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=33322966-e3ec-4e11-9f22-d55789ad7d41%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-06T15:33:27Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: d4001d0d8a5c8fe88cdcc489bd95405aacdba4d8
* Result: FAILED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=905c2983-22cf-4249-8092-468da409e9bf%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-06T15:35:57Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: d4001d0d8a5c8fe88cdcc489bd95405aacdba4d8
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=0f95ca5a-a0c1-4f61-8875-cd4030539bfc%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-06T16:41:38Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-amazon-sagemaker-examples-pr
* Commit ID: d4001d0d8a5c8fe88cdcc489bd95405aacdba4d8
* Result: FAILED
* [Build Logs](https://1n9nxjmzo3.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=1ae8d881-4b69-4897-ae51-9fbf06b400d2%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-07T07:21:23Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 95142a344c498ba17769de17fe39f5d22925bebe
* Result: FAILED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=8ff7c74d-1f7f-454a-900d-abbddb38ee6f%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-07T07:21:29Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 95142a344c498ba17769de17fe39f5d22925bebe
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=8b5caa16-beb6-4b1c-b1a5-57e23cb6cdfb%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-07T07:22:23Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 95142a344c498ba17769de17fe39f5d22925bebe
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=5d20d0d1-cc5c-483f-95f9-297e192ee043%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-07T08:30:06Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-amazon-sagemaker-examples-pr
* Commit ID: 95142a344c498ba17769de17fe39f5d22925bebe
* Result: FAILED
* [Build Logs](https://1n9nxjmzo3.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=7b1e6cf9-1e1a-4b06-8618-03ee4f9d74da%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-09T01:28:34Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-amazon-sagemaker-examples-pr
* Commit ID: 68b44f4fae8b5a394d565d4a79b00dfe81c07a47
* Result: SUCCEEDED
* [Build Logs](https://1n9nxjmzo3.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=b9d26f15-4d08-4764-b602-3f00de6da308%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-09T01:28:46Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 68b44f4fae8b5a394d565d4a79b00dfe81c07a47
* Result: FAILED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=4c533261-784d-4b14-b059-aaff6d5aed83%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-09T01:28:52Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 68b44f4fae8b5a394d565d4a79b00dfe81c07a47
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=77a872c1-8221-4f4d-9fce-49d66f5ccfe7%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-09T01:29:09Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 68b44f4fae8b5a394d565d4a79b00dfe81c07a47
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=2f4a3faf-7ea8-4ea5-9fb4-c1bb5b1c181a%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-12T21:39:43Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-amazon-sagemaker-examples-pr
* Commit ID: df45cd1b33b8ef34f2f9e47129c25ccf00064716
* Result: SUCCEEDED
* [Build Logs](https://1n9nxjmzo3.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=fcc0bc91-5c2d-42cf-9601-e987ac1a6a6e%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-12T21:39:51Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: df45cd1b33b8ef34f2f9e47129c25ccf00064716
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=3d5a82ef-ff70-428e-a8b7-926e3fca67bd%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-12T21:39:51Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: df45cd1b33b8ef34f2f9e47129c25ccf00064716
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=cb6059e4-f23e-475f-9f77-d3bc0bdb5705%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-12T21:39:54Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: df45cd1b33b8ef34f2f9e47129c25ccf00064716
* Result: SUCCEEDED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=895dea5c-6982-4ebb-9c6c-0de16297c99d%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-25T09:56:57Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-amazon-sagemaker-examples-pr
* Commit ID: 4831fc697e5d180c7bc2db3965186786b6545fc7
* Result: SUCCEEDED
* [Build Logs](https://1n9nxjmzo3.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=ff19ff5f-93ca-45b7-9cdc-a5843fb322b3%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-25T09:57:09Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-code-formatting
* Commit ID: 4831fc697e5d180c7bc2db3965186786b6545fc7
* Result: SUCCEEDED
* [Build Logs](https://qmgdeshn7c.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=0443fd07-df2f-4cc0-bd8a-36a5d405d6e9%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-25T09:57:14Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-link-check
* Commit ID: 4831fc697e5d180c7bc2db3965186786b6545fc7
* Result: SUCCEEDED
* [Build Logs](https://c67v5lxn1m.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=358a5c9b-a0f3-4d14-9cbb-1b56e1151872%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/aws/amazon-sagemaker-examples,advanced_functionality/pytorch_extend_container_train_deploy_bertopic/container/bert-topic-byoreq/bert-topic-inference.py,2023-03-25T09:57:28Z,"
### AWS CodeBuild CI Report

* CodeBuild project: SageMakerNotebooksProd-USWEST2-sagemaker-examples-grammar
* Commit ID: 4831fc697e5d180c7bc2db3965186786b6545fc7
* Result: FAILED
* [Build Logs](https://glz3lpiifd.execute-api.us-west-2.amazonaws.com/Prod/buildlogs?key=1b6c58ee-8f65-477c-af8e-dddc78a67c4f%2Fbuild.log) (available for 30 days)

*Powered by [github-codebuild-logs](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:277187709615:applications~github-codebuild-logs), available on the [AWS Serverless Application Repository](https://aws.amazon.com/serverless/serverlessrepo/)*


<!--
CREATED BY GITHUB-CODEBUILD-LOGS
-->

",3819
github.com/MaartenGr/BERTopic,tests/test_other.py,2023-04-27T19:37:08Z,"For this, it might be worth exploring https://huggingface.co/docs/huggingface_hub/guides/model-cards at some point. There are a few possible enhancements we could make there:

- Trying to autogenerate some parts of the model card (for example, the Transformers Trainer API adds hyperparameters to a model card https://huggingface.co/biglam/detr-resnet-50_fine_tuned_nls_chapbooks#training-hyperparameters. I could imagine that things like the number of topics, number of training docs etc., could all be of interest. 

- Creating a template model card, i.e. something like (https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/templates/modelcard_template.md). This can be helpful as a starting point for a model card structure even if most sections are not completed. 

I think this can all come later, and happy to help with this part if you think it might interest you. ",1205
github.com/MaartenGr/BERTopic,tests/test_other.py,2023-04-27T20:13:13Z,"Would it be worth doing this check inside the save function? For the user who is running in Colab or another notebook environment, they might hit the assertion error about safetensors when they try and save a model, but since the import check is done earlier, they would need to reload the module even after they pip install safetensors.  ",1205
github.com/MaartenGr/BERTopic,tests/test_other.py,2023-04-28T09:33:37Z,"Oh nice, that's perfect! That would make the process rather straightforward. Just to be sure I got this correctly. I would only need to:
* Create a template
* Create a model card from that template
* Extract the text from the model card
* and finally write that to `.md` the same way I did before. 

I want to make sure that when I run `upload_folder`, the model card is not a separate commit. 

All in all, I do not think it would be too much work, so I think I will simply add it to this PR. That way, there is little left for saving/loading a BERTopic model. ",1205
github.com/MaartenGr/BERTopic,tests/test_other.py,2023-04-28T09:34:26Z,"Thanks, will definitely do this. It is indeed something users will run into since `safetensors` is not (yet) part of the transformers base requirements. ",1205
github.com/MaartenGr/BERTopic,tests/test_other.py,2023-04-28T12:42:54Z,"Ah, it seems that to use `.from_template` an installation of `Jinja2` is a requirement whilst it is not a requirement of BERTopic.  Instead, I will likely use f-strings, albeit a bit hackier, to generate the template. ",1205
github.com/MaartenGr/BERTopic,tests/test_other.py,2023-05-02T09:17:14Z,"> Ah, it seems that to use .from_template an installation of Jinja2 is a requirement whilst it is not a requirement of BERTopic. Instead, I will likely use f-strings, albeit a bit hackier, to generate the template.

Sorry for the slow reply, yes I think in this case to avoid a dependency f-strings probably make the most sense. Let me know if you need any help/input with this. ",1205
github.com/MaartenGr/BERTopic,tests/test_other.py,2023-05-02T17:38:32Z,"Great, I finished up the last changes. I am currently working on support for both multi-modal (cluster images and/or text) and multi-aspect topic modeling (multiple representations simultaneously, keywords, summaries, sentiment, etc.). I intend to also save those aspects but since they are mostly just values/text that can be put in the `topics.json`, that process should be straightforward. 

So I believe the best thing to do may be to merge this PR and then continue with the multi-modal/multi-aspect topic modeling before slightly updating the saving procedure. ",1205
github.com/MaartenGr/BERTopic,tests/test_other.py,2023-05-03T12:23:51Z,"That sounds awesome! Super cool to be adding multi-modal support for this (it gives me a few more use cases to use this!!). 

Let me know if you want me to review any of these changes or input anywhere else. ",1205
github.com/MaartenGr/BERTopic,tests/test_other.py,2023-05-04T07:13:34Z,"I'll go ahead and merge this now so that I can continue with the multi-modal support

> Let me know if you want me to review any of these changes or input anywhere else.

Great, thanks! Most likely, I will ping you when I start saving the multi-modal model as I am not quite sure what the best way to save those images is, but I will let you know by then when I have something you can look at. ",1205
github.com/MaartenGr/BERTopic,tests/test_other.py,2023-05-04T08:31:54Z,"Thanks, @MaartenGr, and really excited about all of this work! ",1205
github.com/MaartenGr/BERTopic,tests/test_other.py,2023-05-10T17:33:43Z,This is an awesome addition. I was able to create and save a model on a linux distro and then load successfully on windows. Great work!!!!,1205
github.com/MaartenGr/BERTopic,tests/test_other.py,2023-05-13T07:52:21Z,@vantubbe Thanks! Glad to hear that it is a worthwhile feature to add. There are going to be a few more changes with respect to multi-modal and multi-aspect topic modeling before this is fully integrated in the HF Hub but hopefully it will only take a couple of weeks. ,1205
github.com/MaartenGr/BERTopic,tests/test_other.py,2021-02-04T19:49:59Z,"Hi, noticed you facing same numpy and pip related issues for hdbscan and umap. 

I was able to resolve this ([posted here](https://github.com/scikit-learn-contrib/hdbscan/issues/457#issuecomment-773557468)) but I've been using BERTopic inside of a Dockerfile. Posting it here so it helps you, and you can update `setup.py` file accordingly, or perhaps add this or similar Dockerfile itself in the repo along with this PR.

Do note that each of python version, order of install and the extra parameters used in pip for hdbscan seem to be important. Without them it fails.

Also, most likely with future patches for hdbscan/umap these issues with pip and version cross-compatibility would probably get fixed.

```
FROM python:3.8.7

# change shell to bash
SHELL [""/bin/bash"", ""-c""]

# Install some important libraries
RUN pip install --upgrade pip
RUN pip install --upgrade numpy umap-learn
RUN pip install --upgrade hdbscan --no-cache-dir --no-binary :all:
RUN pip install bertopic[visualization]

# Do whatever you wish to
WORKDIR ""/src/""
CMD [""python"", ""test.py""]
```

Build it via:
`docker build -f Dockerfile -t bertopic:v1 .`

Run it via :
`docker run -it -v $PWD:/src/ --name bertopic bertopic:v1`",46
github.com/MaartenGr/BERTopic,tests/test_other.py,2021-02-05T06:57:28Z,"@bhavul Thanks! I had been following the issues with pypi for the last few days and was waiting for a fix to this issue. It's a shame there aren't perfect workarounds. However, it seems to be working for now with the updated requirements. Thanks again for the help. ",46
github.com/MaartenGr/BERTopic,tests/test_other.py,2021-02-08T19:22:00Z,"Running the installs mentioned above with python 3.7.7 worked for me:
```
pip install --upgrade pip
pip install --upgrade numpy umap-learn
pip install --upgrade hdbscan --no-cache-dir --no-binary :all:
pip install bertopic[visualization]
```",46
github.com/MaartenGr/BERTopic,tests/test_bertopic.py,2023-11-13T18:08:14Z,"Hi Maarten,

I am following up on the use of `seed_words` in `bertopic.vectorizer.ClassTfidfTransformer`. I have a particular interest in refining the handling of seed words and their variants, such as ""budget"" and ""budgeting"".

My query revolves around the potential for regex pattern matching to group similar seed words, avoiding stemming or lemmatization of the original text, which might lead to loss of meaning or contextual ambiguity. Specifically, I am considering the following approaches:

1. **Regex Pattern Matching:** Could regex pattern matching be implemented within `ClassTfidfTransformer` to efficiently group seed words such as ""budget"" and ""budgeting"" without reducing them to their root forms through preprocessing?

2. **Alternative Stemming Method:** As an alternative, what are your thoughts on stemming an extensive list of English words to identify groups that share the same root? This could automate the grouping of similar seed words but may raise concerns regarding practicality and computational efficiency.

3. **Leveraging Synonyms and Antonyms:** Additionally, would integrating external resources like WordNet from NLTK to find synonyms and antonyms be advisable for a broader semantic understanding in BERTopic?

Your expertise and insights on these proposed methods would be greatly appreciated, especially considering the balance between semantic integrity and computational efficiency.

Thank you for your guidance and contributions to this field.

Cheers,
Xule",1572
github.com/MaartenGr/BERTopic,tests/test_bertopic.py,2023-11-14T12:12:18Z,"@linxule Thanks for sharing your use cases and suggestions! 

> I am following up on the use of seed_words in bertopic.vectorizer.ClassTfidfTransformer. I have a particular interest in refining the handling of seed words and their variants, such as ""budget"" and ""budgeting"".
> 
> My query revolves around the potential for regex pattern matching to group similar seed words, avoiding stemming or lemmatization of the original text, which might lead to loss of meaning or contextual ambiguity. 

The way `seed_words` is currently handled is by taking the IDF values and multiplying them by a user-defined value. That way, the user can control the degree to which the `seed_words` impact the resulting topic representations. However,  the `ClassTfidfTransformer` is actually not the one handling the words themselves, merely the bag-of-word representations. As a result, the vocabulary is created through the `CountVectorizer` before passing the bag-of-words, not the vocabulary, to the `ClassTfidfTransformer`. 

In other words, the `ClassTfidfTransformer` does not actually have access as of yet to the vocabulary. Of course, it is possible to give it that but I am not sure whether we should since parsing the vocabulary is the task of the tokenizer not necessarily the weighting mechanism.

Another approach would be to run one of the examples you mentioned yourself on the input data with the `CountVectorizer` and parse the vocabulary before passing it back to a new `CountVectorizer`. It actually has a `vocabulary` parameter, so you could parse it yourself with whatever method suits your use case.

Note that this method allows you to group the vocabulary before passing it to BERTopic. If we were to implement it within `ClassTfidfTransformer`, it would have to be re-calculated each time you run BERTopic.

Having said that, let me briefly go through the examples you mentioned.

> Regex Pattern Matching: Could regex pattern matching be implemented within ClassTfidfTransformer to efficiently group seed words such as ""budget"" and ""budgeting"" without reducing them to their root forms through preprocessing?

As mentioned above, I am not sure it should be implemented within `ClassTfidfTransformer` but for the sake of simplicity let's assume it could be. Using regex on potentially millions of tokens is quite the task and something that can take quite a while. Therefore, doing this before running BERTopic would be preferred. 

> Alternative Stemming Method: As an alternative, what are your thoughts on stemming an extensive list of English words to identify groups that share the same root? This could automate the grouping of similar seed words but may raise concerns regarding practicality and computational efficiency.

Note that whatever method you choose, you are likely still parsing a large vocabulary which could be feasible if you select a subset of that vocabulary, for instance by choosing words that only appear at least *n* times. Stemming is a great option but since the stemmed words are semantically similar, using something like [MaximalMarginalRelevance](https://maartengr.github.io/BERTopic/getting_started/representation/representation.html#maximalmarginalrelevance) seems more appropriate to reduce words with similar meaning.

> Leveraging Synonyms and Antonyms: Additionally, would integrating external resources like WordNet from NLTK to find synonyms and antonyms be advisable for a broader semantic understanding in BERTopic?

This does not have a yes or no answer and depends highly on your use case but external resources could indeed help finding synonyms and antonyms. However, as mentioned above, removing similar words seems like a job for [MaximalMarginalRelevance](https://maartengr.github.io/BERTopic/getting_started/representation/representation.html#maximalmarginalrelevance). 

All in all, I would advise doing this grouping first and then supplying the grouped words to the `vocabulary` parameter in the `CountVectorizer`. That seems the most efficient route.",1572
github.com/MaartenGr/BERTopic,tests/test_bertopic.py,2023-04-27T19:37:08Z,"For this, it might be worth exploring https://huggingface.co/docs/huggingface_hub/guides/model-cards at some point. There are a few possible enhancements we could make there:

- Trying to autogenerate some parts of the model card (for example, the Transformers Trainer API adds hyperparameters to a model card https://huggingface.co/biglam/detr-resnet-50_fine_tuned_nls_chapbooks#training-hyperparameters. I could imagine that things like the number of topics, number of training docs etc., could all be of interest. 

- Creating a template model card, i.e. something like (https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/templates/modelcard_template.md). This can be helpful as a starting point for a model card structure even if most sections are not completed. 

I think this can all come later, and happy to help with this part if you think it might interest you. ",1205
github.com/MaartenGr/BERTopic,tests/test_bertopic.py,2023-04-27T20:13:13Z,"Would it be worth doing this check inside the save function? For the user who is running in Colab or another notebook environment, they might hit the assertion error about safetensors when they try and save a model, but since the import check is done earlier, they would need to reload the module even after they pip install safetensors.  ",1205
github.com/MaartenGr/BERTopic,tests/test_bertopic.py,2023-04-28T09:33:37Z,"Oh nice, that's perfect! That would make the process rather straightforward. Just to be sure I got this correctly. I would only need to:
* Create a template
* Create a model card from that template
* Extract the text from the model card
* and finally write that to `.md` the same way I did before. 

I want to make sure that when I run `upload_folder`, the model card is not a separate commit. 

All in all, I do not think it would be too much work, so I think I will simply add it to this PR. That way, there is little left for saving/loading a BERTopic model. ",1205
github.com/MaartenGr/BERTopic,tests/test_bertopic.py,2023-04-28T09:34:26Z,"Thanks, will definitely do this. It is indeed something users will run into since `safetensors` is not (yet) part of the transformers base requirements. ",1205
github.com/MaartenGr/BERTopic,tests/test_bertopic.py,2023-04-28T12:42:54Z,"Ah, it seems that to use `.from_template` an installation of `Jinja2` is a requirement whilst it is not a requirement of BERTopic.  Instead, I will likely use f-strings, albeit a bit hackier, to generate the template. ",1205
github.com/MaartenGr/BERTopic,tests/test_bertopic.py,2023-05-02T09:17:14Z,"> Ah, it seems that to use .from_template an installation of Jinja2 is a requirement whilst it is not a requirement of BERTopic. Instead, I will likely use f-strings, albeit a bit hackier, to generate the template.

Sorry for the slow reply, yes I think in this case to avoid a dependency f-strings probably make the most sense. Let me know if you need any help/input with this. ",1205
github.com/MaartenGr/BERTopic,tests/test_bertopic.py,2023-05-02T17:38:32Z,"Great, I finished up the last changes. I am currently working on support for both multi-modal (cluster images and/or text) and multi-aspect topic modeling (multiple representations simultaneously, keywords, summaries, sentiment, etc.). I intend to also save those aspects but since they are mostly just values/text that can be put in the `topics.json`, that process should be straightforward. 

So I believe the best thing to do may be to merge this PR and then continue with the multi-modal/multi-aspect topic modeling before slightly updating the saving procedure. ",1205
github.com/MaartenGr/BERTopic,tests/test_bertopic.py,2023-05-03T12:23:51Z,"That sounds awesome! Super cool to be adding multi-modal support for this (it gives me a few more use cases to use this!!). 

Let me know if you want me to review any of these changes or input anywhere else. ",1205
github.com/MaartenGr/BERTopic,tests/test_bertopic.py,2023-05-04T07:13:34Z,"I'll go ahead and merge this now so that I can continue with the multi-modal support

> Let me know if you want me to review any of these changes or input anywhere else.

Great, thanks! Most likely, I will ping you when I start saving the multi-modal model as I am not quite sure what the best way to save those images is, but I will let you know by then when I have something you can look at. ",1205
github.com/MaartenGr/BERTopic,tests/test_bertopic.py,2023-05-04T08:31:54Z,"Thanks, @MaartenGr, and really excited about all of this work! ",1205
github.com/MaartenGr/BERTopic,tests/test_bertopic.py,2023-05-10T17:33:43Z,This is an awesome addition. I was able to create and save a model on a linux distro and then load successfully on windows. Great work!!!!,1205
github.com/MaartenGr/BERTopic,tests/test_bertopic.py,2023-05-13T07:52:21Z,@vantubbe Thanks! Glad to hear that it is a worthwhile feature to add. There are going to be a few more changes with respect to multi-modal and multi-aspect topic modeling before this is fully integrated in the HF Hub but hopefully it will only take a couple of weeks. ,1205
github.com/MaartenGr/BERTopic,tests/test_bertopic.py,2021-04-07T11:02:01Z,"Some more changes are coming with respect to topic modeling per class. Visualization will be difficult as, like with topics_over_time, there will be many topics across many classes. 

Perhaps all visualization options will be combined in a single function since creating topics_per_class will also result in a visualization function.",87
github.com/MaartenGr/BERTopic,tests/test_bertopic.py,2021-04-07T11:39:19Z,Is there an example of semi-supervised topic modeling with the target_classes format?,87
github.com/MaartenGr/BERTopic,tests/test_bertopic.py,2021-04-08T06:34:51Z,"> Is there an example of semi-supervised topic modeling with the target_classes format?

@nadiafelix This version is currently in development and examples are yet to be worked on. However, to use it simply fork this pull request and use `model.fit(docs, y=target_classes)` with whatever classes you have defined with respect to your `docs`. ",87
github.com/MaartenGr/BERTopic,tests/test_bertopic.py,2021-02-26T06:34:14Z,"> As I experienced, `from_topic` may be -1 too.

Hmmm, that actually should not happen since reducing topics starts from the least frequent topic up to and not including -1... I will have to test that out, thanks! ",60
github.com/MaartenGr/BERTopic,tests/test_bertopic.py,2021-02-04T19:49:59Z,"Hi, noticed you facing same numpy and pip related issues for hdbscan and umap. 

I was able to resolve this ([posted here](https://github.com/scikit-learn-contrib/hdbscan/issues/457#issuecomment-773557468)) but I've been using BERTopic inside of a Dockerfile. Posting it here so it helps you, and you can update `setup.py` file accordingly, or perhaps add this or similar Dockerfile itself in the repo along with this PR.

Do note that each of python version, order of install and the extra parameters used in pip for hdbscan seem to be important. Without them it fails.

Also, most likely with future patches for hdbscan/umap these issues with pip and version cross-compatibility would probably get fixed.

```
FROM python:3.8.7

# change shell to bash
SHELL [""/bin/bash"", ""-c""]

# Install some important libraries
RUN pip install --upgrade pip
RUN pip install --upgrade numpy umap-learn
RUN pip install --upgrade hdbscan --no-cache-dir --no-binary :all:
RUN pip install bertopic[visualization]

# Do whatever you wish to
WORKDIR ""/src/""
CMD [""python"", ""test.py""]
```

Build it via:
`docker build -f Dockerfile -t bertopic:v1 .`

Run it via :
`docker run -it -v $PWD:/src/ --name bertopic bertopic:v1`",46
github.com/MaartenGr/BERTopic,tests/test_bertopic.py,2021-02-05T06:57:28Z,"@bhavul Thanks! I had been following the issues with pypi for the last few days and was waiting for a fix to this issue. It's a shame there aren't perfect workarounds. However, it seems to be working for now with the updated requirements. Thanks again for the help. ",46
github.com/MaartenGr/BERTopic,tests/test_bertopic.py,2021-02-08T19:22:00Z,"Running the installs mentioned above with python 3.7.7 worked for me:
```
pip install --upgrade pip
pip install --upgrade numpy umap-learn
pip install --upgrade hdbscan --no-cache-dir --no-binary :all:
pip install bertopic[visualization]
```",46
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-09-01T09:30:59Z,"show the output in the module_run function. In this function, just prepare the output.",269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-09-01T09:34:48Z,use self.output instead of print,269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-09-05T14:14:47Z,"imports are heavy and decrease the speed of the framework. So, try to import them in the class.
also, add them all to the requirements file.",269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-07-15T19:20:45Z,I'll review the pr when there is no change.,269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-07-16T05:46:08Z,"Another error I got was this
<img width=""525"" alt=""image"" src=""https://user-images.githubusercontent.com/59250093/179341626-7b39aba8-6213-48d0-869f-79b27d2f72ca.png"">
This is because we have a script named `plotly.py` in the iris directory and python seems to think this is the plotly module. Please go ahead and rename it.",269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-07-25T06:56:41Z,"I have followed your suggestion, by renaming the plotly.py

In addition, I also added the --output and --api functionality. 
Tested by using =
topicmodeling -i mixed.json -t json -m all-distilroberta-v1  --output
report json testreport iris/topicmodeling
topicmodeling -i mixed.json -t json -m all-distilroberta-v1  --api",269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-09-01T09:30:59Z,"show the output in the module_run function. In this function, just prepare the output.",269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-09-01T09:34:48Z,use self.output instead of print,269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-09-05T14:14:47Z,"imports are heavy and decrease the speed of the framework. So, try to import them in the class.
also, add them all to the requirements file.",269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-07-15T19:20:45Z,I'll review the pr when there is no change.,269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-07-16T05:46:08Z,"Another error I got was this
<img width=""525"" alt=""image"" src=""https://user-images.githubusercontent.com/59250093/179341626-7b39aba8-6213-48d0-869f-79b27d2f72ca.png"">
This is because we have a script named `plotly.py` in the iris directory and python seems to think this is the plotly module. Please go ahead and rename it.",269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-07-25T06:56:41Z,"I have followed your suggestion, by renaming the plotly.py

In addition, I also added the --output and --api functionality. 
Tested by using =
topicmodeling -i mixed.json -t json -m all-distilroberta-v1  --output
report json testreport iris/topicmodeling
topicmodeling -i mixed.json -t json -m all-distilroberta-v1  --api",269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-09-01T09:30:59Z,"show the output in the module_run function. In this function, just prepare the output.",269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-09-01T09:34:48Z,use self.output instead of print,269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-09-05T14:14:47Z,"imports are heavy and decrease the speed of the framework. So, try to import them in the class.
also, add them all to the requirements file.",269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-07-15T19:20:45Z,I'll review the pr when there is no change.,269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-07-16T05:46:08Z,"Another error I got was this
<img width=""525"" alt=""image"" src=""https://user-images.githubusercontent.com/59250093/179341626-7b39aba8-6213-48d0-869f-79b27d2f72ca.png"">
This is because we have a script named `plotly.py` in the iris directory and python seems to think this is the plotly module. Please go ahead and rename it.",269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-07-25T06:56:41Z,"I have followed your suggestion, by renaming the plotly.py

In addition, I also added the --output and --api functionality. 
Tested by using =
topicmodeling -i mixed.json -t json -m all-distilroberta-v1  --output
report json testreport iris/topicmodeling
topicmodeling -i mixed.json -t json -m all-distilroberta-v1  --api",269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-09-01T09:30:59Z,"show the output in the module_run function. In this function, just prepare the output.",269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-09-01T09:34:48Z,use self.output instead of print,269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-09-05T14:14:47Z,"imports are heavy and decrease the speed of the framework. So, try to import them in the class.
also, add them all to the requirements file.",269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-07-15T19:20:45Z,I'll review the pr when there is no change.,269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-07-16T05:46:08Z,"Another error I got was this
<img width=""525"" alt=""image"" src=""https://user-images.githubusercontent.com/59250093/179341626-7b39aba8-6213-48d0-869f-79b27d2f72ca.png"">
This is because we have a script named `plotly.py` in the iris directory and python seems to think this is the plotly module. Please go ahead and rename it.",269
github.com/saeeddhqan/Maryam,maryam/core/util/iris/topic.py,2022-07-25T06:56:41Z,"I have followed your suggestion, by renaming the plotly.py

In addition, I also added the --output and --api functionality. 
Tested by using =
topicmodeling -i mixed.json -t json -m all-distilroberta-v1  --output
report json testreport iris/topicmodeling
topicmodeling -i mixed.json -t json -m all-distilroberta-v1  --api",269
github.com/atoti/notebooks,notebooks/01-use-cases/other-industries/influencers-analysis/bertopic_local/bertopic_custom/_bertopic.py,2023-02-21T08:25:02Z,"Check out this pull request on&nbsp; <a href=""https://app.reviewnb.com/atoti/notebooks/pull/402""><img align=""absmiddle""  alt=""ReviewNB"" height=""28"" class=""BotMessageButtonImage"" src=""https://raw.githubusercontent.com/ReviewNB/support/master/images/button_reviewnb.png""/></a> 

 See visual diffs & provide feedback on Jupyter Notebooks. 

---

 <i>Powered by <a href='https://www.reviewnb.com/?utm_source=gh'>ReviewNB</a></i>",402
github.com/atoti/notebooks,notebooks/01-use-cases/other-industries/influencers-analysis/bertopic_local/bertopic_custom/_bertopic.py,2022-09-28T11:50:14Z,"Check out this pull request on&nbsp; <a href=""https://app.reviewnb.com/atoti/notebooks/pull/367""><img align=""absmiddle""  alt=""ReviewNB"" height=""28"" class=""BotMessageButtonImage"" src=""https://raw.githubusercontent.com/ReviewNB/support/master/images/button_reviewnb.png""/></a> 

 See visual diffs & provide feedback on Jupyter Notebooks. 

---

 <i>Powered by <a href='https://www.reviewnb.com/?utm_source=gh'>ReviewNB</a></i>",367
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-23T07:50:46Z,"```suggestion
      - ""docker_images/berttopic/**""
```",276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-23T08:04:00Z,You need to remove unused imports I think,276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-23T08:36:01Z,good catch :) ,276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-23T20:50:03Z,Please also add another workflow to enable continuous deployment https://github.com/huggingface/api-inference-community/blob/main/.github/workflows/python-api-diffusers-cd.yaml,276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-23T20:56:57Z,"I think maybe more correct
```suggestion
    def __call__(self, inputs: str) -> List[List[Dict[str, float]]]:
```",276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-23T20:57:28Z,"Maybe like this (and to update in common/ example
```suggestion
            A :obj:`list`:. The object returned should be a list of one list like [[{""label"": ""positive"", ""score"": 0.5}]] containing:
```",276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-23T20:58:06Z,"Todo to update before merge. If we want to merge here first, let's pin to a specific commit in BERTopic",276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-23T20:58:35Z,"Should we just use one model? If you want to use multiple models, we need to change the test to use `parameterized_class` as in https://github.com/huggingface/api-inference-community/blob/main/docker_images/fasttext/tests/test_api_text_classification.py

(I would only test multiple models if there are fundamental differences between both)",276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-24T08:35:43Z,"I've updated it to parameterize inputs. I've added both cases because one model uses safetensors, and the other use Pytorch for model serialization, so I think it might be good to catch regressions in either of those scenarios. ",276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-24T08:47:53Z,Will open a new issue to update in common/example,276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-24T09:47:58Z,Added this now ,276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-24T10:08:37Z,"If a user has manually created some custom labels, it might be worthwhile to show those instead of the default labels. Also, we can access the default topic labels with `.topic_labels_`. 

```suggestion
            if self.model.custom_labels_ is not None:
                topic_label = self.model.custom_labels_[topic + self.model_outliers]
           else:
                topic_label = self.model.topic_labels_[topic]
```",276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-24T10:09:07Z,"Other than that, looks great! ",276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-24T10:59:24Z,"```suggestion
                topic_label = self.model.custom_labels_[topic + self.model._outliers]
```

My bad, should be a `.` there. ",276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-24T22:58:49Z,Do we have a test with a model with custom labels and a model with normal labels?,276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-22T13:48:39Z,"I will update `requirements.txt` once the Hugging Face integration in BERTopic has been included in a PyPI release cc @MaartenGr. I'd suggest waiting to merge this until that release is done but I think this is ready for review pending that one final change. 

",276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-22T13:54:12Z,cc @Narsil @osanseviero not sure who best to ping reviews :) ,276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-23T21:01:45Z,"Btw https://github.com/huggingface/api-inference-community has some instructions to test this locally (as integration test or full end-to-end with docker), I would suggest to run the integration test locally. Cool work :fire: ",276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-24T08:53:25Z,"> Btw [huggingface/api-inference-community](https://github.com/huggingface/api-inference-community) has some instructions to test this locally (as integration test or full end-to-end with docker), I would suggest to run the integration test locally. Cool work 🔥

I have run tests locally now, and all are passing. I get some warnings from https://github.com/lmcinnes/umap/issues/1004 but those can be safely ignored. ",276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-24T09:53:16Z,"@osanseviero hopefully addressed all comments and suggestions now. For the CI workflow, I copied an existing one and updated args with BERTopic; hopefully, that's sufficient (I'm also only testing on CPU). All other tests are passed locally. 

@MaartenGr, would you just be able to check you are happy with how I'm calling BERTopic in a way that makes sense to you [here](https://github.com/davanstrien/api-inference-community/blob/075fc61a93fa66cdfd5e4efe9bd8fbd7c574a4e8/docker_images/bertopic/app/pipelines/text_classification.py#L14) 

",276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-25T13:28:02Z,"LGTM. Should autodeploy too. 

Shall we release ?",276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-26T10:43:47Z,"> LGTM. Should autodeploy too.

thanks :) 
> Shall we release ?

I think it would be good to wait to update the pinned dependencies in `requirements.txt` -- probably can merge on Tuesday if that's okay with you. ",276
github.com/huggingface/api-inference-community,docker_images/bertopic/app/pipelines/text_classification.py,2023-05-30T17:52:57Z,"> > LGTM. Should autodeploy too.
> 
> thanks :)
> 
> > Shall we release ?
> 
> I think it would be good to wait to update the pinned dependencies in `requirements.txt` -- probably can merge on Tuesday if that's okay with you.

I updated pinned requirements now, so I think we should be good to merge :) ",276
github.com/nestauk/innovation_sweet_spots,innovation_sweet_spots/utils/pd/pd_analysis_utils.py,2022-11-10T18:12:17Z,Shouldn't the phrases be deduplicated first?,195
github.com/nestauk/innovation_sweet_spots,innovation_sweet_spots/utils/pd/pd_analysis_utils.py,2022-11-10T18:23:10Z,"Thank you very much @Jack-0-0 for this, it's really great! I've tested the code by running the Colab notebook (which worked very well for me).

### `plot_mentions` function
An issue I noticed with the `plot_mentions(use_documents=False)` function, when plotting number of sentences, was that it only uses the first column. Perhaps a quick fix can be to use a stacked bar chart and show all columns?

![Screenshot 2022-11-10 at 17 48 04](https://user-images.githubusercontent.com/29844253/201169349-13dc6046-d4a7-4431-9437-e3ae2bb02c66.png)

### Adding an extra pattern
This is not a bug, but I wondered if we could add another pattern to the list of automatically generated patterns - I would like to see a variation of noun phrase where the search terms is in the front.

So, for example, at the moment, if I search for 'obesity' I'll have things like ""adult obesity"" and ""childhood obesity"".

However, I would also like to find things like ""obesity crisis"" or ""obesity pandemic""

I think this could be relatively easily done by swapping a few lines for the very first pattern? eg, perhaps something like...
```
[ {'TEXT': 'obesity'},
  {'POS': 'NOUN'},
  {'POS': 'NOUN', 'OP': '?'},
]
```

You can also imagine examples with ""food"" like ""food preparation"", ""food insecurity"", ""food poverty"" etc.

### BERTopic visualisation: hover data
I realise this comes ""out of the box"" and perhaps we can't change anything, but maybe it's possible to:
- Add year to the hover-over data
- Break long sentences into multiple lines
However, it might be the case that it's not possible without changing BERTopic library itself (which we don't want to do here).

### BERTopic visualisation: topics
I'm a bit confused about why there are different number of topics in the first and second graph... does it just limit the bar chart graph to 8? It's also a bit annoying that the colours don't match between both, but that's a very minor issue.

![Screenshot 2022-11-10 at 18 02 53](https://user-images.githubusercontent.com/29844253/201172231-e874c4d8-8afc-4a88-a3e4-28c12716bea4.png)

![Screenshot 2022-11-10 at 18 03 08](https://user-images.githubusercontent.com/29844253/201172278-4f8c2aad-14ba-4083-99bd-c90b9a991eb7.png)
",195
github.com/nestauk/innovation_sweet_spots,innovation_sweet_spots/utils/pd/pd_analysis_utils.py,2022-11-12T12:41:21Z,"> ### `plot_mentions` function
> An issue I noticed with the `plot_mentions(use_documents=False)` function, when plotting number of sentences, was that it only uses the first column. Perhaps a quick fix can be to use a stacked bar chart and show all columns?
> 
I have updated `plot_mentions` to use a stacked bar chart now. If you run `plot_mentions(use_documents=False)`, it will produce a stacked bar chart.

![Screenshot 2022-11-12 at 21 40 16](https://user-images.githubusercontent.com/47244945/201474367-16df1d92-bdda-4cc0-9880-cd0959e7ad53.png)


If you run `plot_mentions(use_documents=True)`, it will produce a regular bar chart as `document_mentions` only shows total mentions, it does not separate the mentions by different search terms.

",195
github.com/nestauk/innovation_sweet_spots,innovation_sweet_spots/utils/pd/pd_analysis_utils.py,2022-11-12T14:34:35Z,"> ### BERTopic visualisation: topics
> I'm a bit confused about why there are different number of topics in the first and second graph... does it just limit the bar chart graph to 8? It's also a bit annoying that the colours don't match between both, but that's a very minor issue.
> 

`visualize_barchart` has a parameter `top_n_topics` which defaults to 8.

I have set the notebook cell to now use `visualize_barchart(top_n_topics=len(set(topic_model.topics_)))` so that it shows all the topics.

I couldn't see any options in BERTopic to change the colour palette.


",195
github.com/nestauk/innovation_sweet_spots,innovation_sweet_spots/utils/pd/pd_analysis_utils.py,2022-11-12T14:38:56Z,"> ### BERTopic visualisation: hover data
> I realise this comes ""out of the box"" and perhaps we can't change anything, but maybe it's possible to:
> 
> * Add year to the hover-over data
> * Break long sentences into multiple lines
>   However, it might be the case that it's not possible without changing BERTopic library itself (which we don't want to do here).
> 

I couldn't see these options in BERTopic.

However, you can adjust the size of the plot with the parameters `width` and `height`. When the plot is larger it allows for longer sentences to be displayed. I have increased the size of the plot in the demo notebook and added a note relating to these parameters for users.",195
github.com/nestauk/innovation_sweet_spots,innovation_sweet_spots/utils/pd/pd_analysis_utils.py,2022-11-12T15:08:28Z,"> ### Adding an extra pattern
> This is not a bug, but I wondered if we could add another pattern to the list of automatically generated patterns - I would like to see a variation of noun phrase where the search terms is in the front.
> 
> So, for example, at the moment, if I search for 'obesity' I'll have things like ""adult obesity"" and ""childhood obesity"".
> 
> However, I would also like to find things like ""obesity crisis"" or ""obesity pandemic""
> 
> I think this could be relatively easily done by swapping a few lines for the very first pattern? eg, perhaps something like...
> 
> ```
> [ {'TEXT': 'obesity'},
>   {'POS': 'NOUN'},
>   {'POS': 'NOUN', 'OP': '?'},
> ]
> ```
> 
> You can also imagine examples with ""food"" like ""food preparation"", ""food insecurity"", ""food poverty"" etc.
> 

I have added the pattern as suggested.
It is named `f""{search_term}_term_noun""` in the phrase patterns dictionary.

",195
github.com/nestauk/innovation_sweet_spots,innovation_sweet_spots/utils/pd/pd_analysis_utils.py,2022-11-12T15:09:44Z,"Thanks for the review @beingkk. I have made changes relating to your comments.
Let me know when you're happy for me to merge 🙂",195
github.com/Shkaolin/BERTopic-as-service,service/api/utils.py,2022-01-30T09:07:56Z,"```suggestion
router = APIRouter(tags=[""base""])
```",20
github.com/Shkaolin/BERTopic-as-service,service/api/utils.py,2022-01-30T09:13:56Z,"```suggestion
router = APIRouter(tags=[""model_training""])
router = APIRouter(
    prefix=""/modeling"",
    tags=[""modeling""],
    responses={404: {""description"": ""Not found""}},
)
```",20
github.com/Shkaolin/BERTopic-as-service,service/api/utils.py,2021-12-26T19:36:34Z,"```suggestion
    width: int = 650
    height: int = 650
```",17
github.com/Shkaolin/BERTopic-as-service,service/api/utils.py,2021-12-26T19:36:54Z,Chart is too small,17
github.com/Shkaolin/BERTopic-as-service,service/api/utils.py,2021-12-26T19:39:11Z,"```suggestion
    topic_model = await load_model(s3, model_id, version)
```",17
github.com/Shkaolin/BERTopic-as-service,service/api/utils.py,2021-12-26T19:39:19Z,"```suggestion
    topic_model = await load_model(s3, model_id, version)
```",17
github.com/Shkaolin/BERTopic-as-service,service/api/utils.py,2021-12-26T19:39:37Z,"```suggestion
from service.api.utils import get_sample_dataset, save_model, save_topics, load_model
```",17
github.com/Shkaolin/BERTopic-as-service,service/api/utils.py,2021-12-26T19:25:45Z,"Endpoint `visualization/topics` raises error `zero-size array to reduction operation maximum which has no identity` when `""topics"": [
    -1, 0, 1, 2
  ]`",17
github.com/Shkaolin/BERTopic-as-service,service/api/utils.py,2021-12-26T19:32:03Z,"`Error: Internal Server Error` if index in `topics` list is out of range. Maybe it is better to return a more understandable error. We can raise this error using information from database, without loosing time for reading model from S3",17
github.com/Shkaolin/BERTopic-as-service,tests/conftest.py,2021-11-12T17:24:49Z,The problem was related to this part?,11
