repo_url,filepath,commit_date,message
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2020-08-11T19:15:55Z,"Merge pull request #422 from stanfordnlp/master

Back-merge documentation changes from master to dev"
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2020-06-22T23:32:20Z,Rename stanza.resource to stanza.resources; rename resources.py to common.py
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2020-06-22T22:49:38Z,Move all resources related scripts to stanza/resource
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2020-06-11T06:04:53Z,Fix demo script
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2020-03-06T07:45:58Z,renaming stanfordnlp to stanza!!
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-02-19T08:18:42Z,Use sys.exit in place of exit
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-31T02:24:01Z,Revert temporary fix for download logic
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-31T02:18:05Z,Fix download logic; Fix help message in demo script
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-31T01:53:22Z,Quick fix for demo script
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-26T05:33:04Z,Separate the classes for Tokens and syntactic Words
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-25T09:25:55Z,Undo changes to use_gpu argument
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-25T09:16:37Z,Modify the way devices are specified in pipeline
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-25T00:25:14Z,Swap French demo input with one that has MWT in the first sentence
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-24T22:22:28Z,Accommodate Vietnamese in the pipeline tokenizer processor; Add a Vietnamese example to demo script
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-23T08:51:06Z,Demo script goes multi-lingual; don't confirm overwrite by default (by do it in the demo script)
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-23T08:51:06Z,Change demo to match logic of new download function: existence of models is checked in download() now; Add easy toggle for other demo languages
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-22T23:48:13Z,Modernizing and reusing build_default_config; Path fix in demo pipeline construction
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-22T23:31:32Z,Modernizing the demo script; make the download interface more user-friendly
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-20T08:10:41Z,update and simplify basic demo
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-11T23:37:09Z,add demo
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-11-04T20:42:52Z,"Oops, need to pass the transformer args - otherwise --use_bert without the model name is not correctly testing the dev/test sets"
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-09-10T04:06:24Z,"Properly connect run_ete.py to the charlms (actually, it had even been throwing previous to this change, so the 1.5.1 version is broken)"
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-08-26T07:45:10Z,Add a filter for just the models that have transformers
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-08-22T03:35:43Z,Move the transformer choice to the resources directory and refactor a method that can be used by each of the processors which use the transformers
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-08-20T19:01:06Z,Set the depparse filename based on its model type - need to refactor some more pieces
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-08-18T00:09:25Z,"Track whether or not the POS model is using charlm or transformer in the filename by default
(or pretrain)

Respect an existing --save_name and --save_dir when naming the pos models with run_pos"
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-08-17T06:29:41Z,"If given a command line flag, filter out the models which don't have charlm when running the lemmatizer"
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-08-17T06:29:41Z,Log which treebanks are being used when expanding ud_all
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-08-17T06:29:41Z,Functionality for run_lemma.py to know what the correct model filename is before rejecting a model rebuild
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-08-17T06:29:41Z,Add the charlm to the run_lemma script
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-08-14T21:44:46Z,Nest things a little more cleanly inside an if statement
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-07-04T12:41:15Z,"When running the charlm using run_charlm, add the arguments from the charlm's parser to the help message"
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-06-30T23:56:48Z,Downloads of missing models for the tests etc should go to the chosen model_dir
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-06-30T15:04:34Z,Refactor choosing the pos_charlm to a separate method which already has the imported default_charlms & pos_charlms
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-06-28T18:57:37Z,Add defaults to the argparser when asked for --help (although some None values get cluttered)
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-06-22T15:27:56Z,Add notes on a Chinese Electra model which does better than the Roberta model we had used
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-05-18T04:55:54Z,Add some notes on FR POS tagging bert results
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-05-07T23:09:27Z,Save some notes on which HE transformer gets the best scores on POS & depparse
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-05-04T01:07:32Z,Log some EN results for conparser w/ finetuning
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-05-02T16:14:27Z,More extensive experiments on the differences between various EN transformers
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-04-30T03:07:29Z,Add a block on a POS experiment using Electra
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-04-28T01:03:02Z,Add some comments on HE experiments we should run
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-03-15T20:25:13Z,Add a chart to the ID transformers for constituency
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-03-13T23:11:06Z,Added code for hy_armtdp - Armenian NER dataset
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-03-13T01:43:44Z,Notes on Indonesian transformers based on some initial experiments on POS.  Need to do constituency and/or NER as well
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2023-02-28T21:55:26Z,Add notes on which Italian Bert models are working better or worse
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-12-08T07:56:08Z,Add some notes on roberta-base vs roberta-large
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-12-05T00:51:45Z,Update scores for a bunch of Danish transformer models
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-11-22T04:24:56Z,"As a backup, download charlm if lang_charlm was asked for"
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-11-22T01:50:16Z,"Give a more informative error when a charlm cannot be found, but a possibly wrong name was used.  Even better would be to try again with the correct name"
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-10-23T18:25:20Z,Notes on default bert model.  More hidden layers for VI bert by default
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-09-26T15:44:46Z,Add a tiny chart of our own to show what the various columns mean when outputting an evaluation.  Answers #1134
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-09-26T07:27:12Z,Note that combined_bert POS uses the same pretrain as default.  This requires a few minor changes elsewhere to the pretrain chooser
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-09-04T03:51:24Z,"NER Polish (#1110)

* Add NER dataset for Polish

Co-authored-by: ryszardtuora <ryszardtuora@gmail.com>
Co-authored-by: Karol Saputa <ksaputa@gputrain.dariah.ipipan.waw.pl>

This PR adds Polish NER dataset

#1070"
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-09-01T07:37:08Z,no enhanced dependencies
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-08-25T05:10:31Z,Refactor another call to ud_scores
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-08-25T05:07:44Z,Restore the functionality of the ETE (was broken after adding charlm to pos and other changes)
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-08-25T01:07:44Z,Add a simple test of ner_tagger.evaluate()
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-08-03T06:35:42Z,Make the error for an unfinished language (hopefully) more useful
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-07-20T21:14:33Z,"Load the pretrained charlm, adds it as inputs to the POS model

This improves accuracy on almost all POS models

Doing the same thing for depparse would also make sense, but is
currently not done.  However, the downstream scores of depparse don't
seem to be negatively affected by using the different (better) POS
tags produced by models using the pretrained charlm

Add a pos-specific charlm map for the medical EN datasets and the one dataset which appears to be hurt by the charlm (tr_boun)

craft, genia -> None

Produces resources.json with pos charlms

Make the Pipeline pass in charlm paths if present in resources.json
TODO: use the foundation_cache to load them"
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-05-30T07:32:52Z,"Notes on which embeddings are used for which NER, in the form of a map of default pretrains

Use the default pretrains when using run_ner.py

Update prepare_resources to use the new ner embedding info"
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-05-30T04:01:43Z,Use save_name to check if a model already exists
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-04-28T06:59:11Z,Add notes on a German model
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-04-27T05:38:20Z,Better FA option
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-04-24T02:56:27Z,Notes on a Persian bert model choice
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-04-23T04:36:46Z,Move the SHORTNAME_RE from the dataset/training tools to treebank_to_short_name.  Seems to work fine
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-04-23T04:36:46Z,Rename and clarify a comment
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-04-23T04:36:46Z,Automatically download missing pretrain or charlm when training.  Will hopefully make things more convenient
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-04-23T04:36:46Z,Alphabetize bert options
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-04-23T04:36:46Z,Some notes on a FI bert choice
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-04-23T04:36:46Z,A note about which IT roberta to use
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-04-23T04:36:46Z,Refactor the BERT usage from run_constituency to run_ner
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-04-23T04:36:46Z,Convert the run_charlm.sh script to run_charlm.py
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-04-23T04:36:46Z,Get the default pretrain for a conparser or ner model from the resources
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-04-23T04:36:46Z,Reuse the NER code for choosing a charlm to choose the default charlm when running the conparser
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-04-23T04:36:46Z,Refactor (most of) the charlm args so we can add the charlm to run_constituency.py
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-04-23T04:36:46Z,Fix typo
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2022-04-23T04:36:46Z,"Add a wrapper script for the constituency parser.

Supports each of --train --score_dev and --score_test"
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2021-07-10T01:33:40Z,Add some comments on the common.py main method
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2021-05-20T22:54:34Z,Process the --save_dir argument in the training scripts to avoid clobbering existing models when saving somewhere other than the default path
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2021-05-19T15:47:25Z,"Call the eval script as a module instead of as a script.  This is necessary as, when installing using conda and pip to install directly from github, the executable flag was lost on the eval script."
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2021-05-18T19:22:21Z,Don't include the program name when parsing args
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2020-12-21T05:21:51Z,Make it possible to run ETE using one model on a different model's data
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2020-12-21T05:20:27Z,Convert the end-to-end script to python
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2020-12-11T03:50:39Z,"Oops, introduced a bug into running on all_ud"
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2020-12-08T23:13:15Z,"Add a - in the RE for zh-hans, zh-hant, etc"
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2020-12-08T16:16:34Z,Repeat back the command line arguments we were run with
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2020-12-03T02:19:10Z,Add the ability to specify shortname directly in the training scripts
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2020-12-02T04:08:47Z,"Oops, bugfix"
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2020-12-02T04:06:09Z,"Add a flag to force retraining of existing models.  Otherwise, skip models even when a single model name is given"
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2020-12-02T01:44:43Z,Cut off a trailing /
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2020-12-01T22:40:19Z,Make a temp output file name in common.py for the run scripts to use as needed
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2020-12-01T21:02:56Z,Turn the ad-hoc command line parsing into an argparser.  Includes a temp file option which is currently just a suggestion
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2020-11-28T18:02:38Z,Move the eval script usage to a common file
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2020-11-28T08:15:28Z,Lower the noise a little
github.com/stanfordnlp/stanza,stanza/utils/training/common.py,2020-11-28T04:48:46Z,Refactor some stuff out of run_tokenizer
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2024-03-01T03:41:09Z,Add some debug logging when building a retag_pipeline - goal is to make sure it's calling the correct POS model
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2024-02-24T07:41:20Z,Add an option to turn off saving the optimizer when saving each constituency model
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2024-02-24T07:41:20Z,Add flags to control how often the save_each models get saved.  Intent is to make it so that we can skip 10 models at a time and use a series of these to measure the variance in a silver dataset's scores
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2024-02-24T07:41:20Z,Remove unnecessary repetition of existing save_each argument
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2024-02-22T01:31:45Z,Set the trainer logging level to DEBUG when starting a constituency training run.  Switch out a bunch of training log calls to use the training logger specifically to make it easier to log things like the optimizer creation
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2024-02-22T01:31:45Z,"Integrate peft with the constituency parser.

Add a test that the two stage peft is correctly turning off finetuning for the second half of training"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2024-02-03T03:35:51Z,"Add several resolutions of ambiguous transitions to the top down dynamic oracle.
Also, add a flag which turns on selective oracle transitions, and
automatically ignore transitions after UNKNOWN unless --oracle_level is set

Add an immediate close version of the close/open error.

Add an immediate close version of the close/shift error.

Add an alternate version of the close/shift and close/open resolutions - close at the end of the outer constituent

Proposed fix of Open/Open: turn the new Open into a Unary

Add a fix where open/open is closed at the end of the outer constituent

Add a shift/open ambiguous fix - turn them into Unary

Put the Close for a shift/open at the end, rather than earlier

Includes stats for dev & test scores for various ambiguous transitions"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2024-01-22T23:47:58Z,Add oracle_level as a parameter to the save name
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-12-13T07:27:13Z,Add a flag to not check the transitions or constituents in the dev set
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-09-17T00:03:44Z,Add a bit to the name expansion for when to begin finetuning a transformer
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-09-02T17:52:46Z,Use the fancy new savename constructions in the run_constituency script
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-08-30T18:40:03Z,Comments on an experiment which didn't work out for mixing bert layers
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-08-25T05:45:01Z,Add a log of the tensor sizes
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-08-14T22:07:08Z,Refactor build_model_filename for run_constituency
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-08-14T22:00:12Z,"Add the constituency parser arguments to the run_constituency script, similar to what is done for the lemmatizer & charlm"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-07-24T21:52:49Z,Make a bit of a generalized save name - will add more options as they come up
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-06-04T19:13:59Z,Model names were being created with blank spaces in them :/
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-05-24T07:30:26Z,"Update con learning rates using a reduce-on-plateau scheme instead of the warmup

The warmup never did anything, so we leave it non-functional for now"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-05-03T21:42:11Z,Add a parameter which attempts to download a saved model for futher processing
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-04-04T16:44:09Z,Add a --tokenized_dir argument to the conparser and ensemble scripts which tokenizes all of the text files in a directory in one invocation.  The VLSP group wanted a text repo parsed
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-03-27T08:16:55Z,Add notes on an experiment that did nothing in the conparser
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-03-24T16:01:17Z,Add a long description of some experiments with low LR for bert and adamw as the second stage optimizer
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-03-22T22:04:48Z,"backprop into the transformer...

Add parameters to decide whether or not finetune the transformer
By default, train Bert with a low LR and very low WD to avoid it overreacting to the training data

Check bert_finetune when loading models.  Set it to false if not in the model so that we can preserve old models
Also, check bert_finetune for whether or not to use the foundation_cache when building a new model

Also backprop phobert, xlnet, and bart

Skip the first N steps for finetuning the transformer based on a parameter
Add an endpoint for the bert finetuning as well (another option would be separate initial phase and second phase values)
Add a separate argument for stage1_bert_finetuning
Includes functionality to finetune a limited number of layers

Instead of using the FoundationCache, we need to Load a new copy of
the bert_model if the bert_model was saved in the constituency file
(otherwise, the cached model would be clobered for any other users of
the model)

Add a single epoch test of the bert finetuning

Add a multiepoch test which checks that the weights are or aren't close to the final model in a manner expected by the bert training

Add a per-layer test of the bert backprop - check that if bert_finetune_layers is set, it only backprops the number of layers requested

Include xlnet versions of a couple of the bert tests.  These tests use a copied
tiny-random-xlnet so that the numbers aren't expected to change between iterations

Add a tiny test of the Bart training in conparser
phobert uses a different tokenizer, so we can't directly test it the same way we test the others

A few notes are left behind on things TODO:

TODO: Experiment with a low level of finetuning when using adamw
It would not work well with madgrad yet, since there is an issue where LR==0 still results in learning
https://github.com/facebookresearch/madgrad/issues/16

TODO: when saving a trainer which had its own transformer copy in it,
we need to resave the transformer - currently it gets put into
unsaved_modules if the model wasn't training the transformer
We even leave behind a test which covers that situation, commented out

TODO: when creating an LSTMModel in the Trainer for training a new model,
we need to use a non-cached version of it.  In particular, reusing the
POS tagger later on in training would be a problem
(except we currently don't do that)"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-03-15T20:25:13Z,Fix a comment on the experimental differences
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-02-11T01:53:25Z,"Add a flag for reversing the treebanks.  The model will reverse the sentences when making initial word queues, so that the bert & charlm models work as expected

Add a parameter to build_treebank to reverse the trees when building sequences.  Will facilitate parsing in reverse

Reverse sentences at the end of parsing in reverse mode so that we get the correct order back

Reverse sentences when verifying the transitions

Test reversing a sentence when building the transition sequence"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-02-01T07:51:06Z,Clarify some comments on a conparser argument
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-12-07T07:06:06Z,"Start passing around device instead of use_cuda

All models now work via the pipeline.  Need to double check that they work everywhere"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-12-05T20:41:18Z,Determine if cuda() is available and use that to set the random seed rather than making that an argument
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-12-01T19:20:16Z,Add a reference to more info on nonlinearity
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-12-01T19:20:13Z,"Add a maxout linear such as in

https://arxiv.org/pdf/1302.4389v4.pdf

.get() the arg to keep old models alive

Includes some comments on accuracy with maxout"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-30T23:43:27Z,"Add large_margin as an option for the loss.

Add a note on a large margin experiment (no improvement)"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-25T07:25:04Z,"Add a focal loss option using an external library

Unfortunately, it doesn't seem to improve results"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-22T22:07:41Z,Add a bunch of comments on the file layout for the model.  Add a missing citation
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-22T19:26:01Z,"Default to multistage w/ madgrad if available, adamw if not

Don't set training defaults if we're not training"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-17T15:40:32Z,Add an --oracle_level flag which optionally restricts which level to use for the oracle
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-15T00:12:17Z,Refactor adjusting the prediction string format
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-14T16:50:55Z,"Add an option to not delete duplicate trees.  Relevant in the case of Vietnamese trees including multiple copies of quad, for example"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-14T05:57:59Z,"Add nonlinearity experiments numbers

Update numbers for the tests on nonlinearity. The numbers for the optimizers will follow later."
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-14T02:40:06Z,Add a format specifier which includes the index for the Vietnamese bakeoff
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-07T20:56:04Z,"Add a variant of multihead attention where there's one key or one key per label
Seems competitive with MAX but not a big improvement of any kind

Adds an optional position encoding to the KEY / UNTIED_KEY constituency compositions
(using reduce_position as a parameter for the size, 0 -> no position)

reduce_position needs to be an unsaved module so that it doesn't barf if it gets reloaded later with a different size

Incudes comments on a couple variants that didn't work - linear after the attention or a double position vector"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-01T16:03:20Z,Add an argument for partitioning / not partitioning lattn
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-01T01:14:11Z,"Use some words from the silver dataset (currently |gold| words are added, even if that means some overlaps)"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-10-30T08:16:34Z,"Add a separate argument for --silver_epoch_size, just in case people want that"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-10-30T06:20:37Z,"Rough draft of using silver trees.

Mostly untested.  Includes an unfinished test of the silver data"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-10-29T02:20:00Z,"refactor predict dir,file,format args so they can be used elsewhere if needed"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-10-29T00:33:40Z,Add functionality to turn a tokenized text file into a file of parse trees
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-10-28T01:49:18Z,Refactor the retagging args & pipeline creation into a separate modeule
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-10-25T15:45:13Z,Add a --predict_format option which will allow the user to specify how to write trees when outputting the model predictions
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-10-23T19:02:18Z,"By default, turn off pattn & lattn (at least until we figure out how to extract value from them)"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-10-07T16:38:34Z,Add a flag to control the learning rate in the adadelta portion of --multistage
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-10-07T16:20:35Z,Add learning_ in front of momentum and weight_decay to make it clear those parameters are for the optimizer
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-09-26T17:11:39Z,"Add a learned weighting between bert layers

Make the number of hidden layers an option and start from zeros
Generalize the num_layers for Phobert and XLNet.  Keep old models alive

Includes an option to use the layers from the older versions of conparse"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-09-25T05:30:49Z,"Add a TREE_LSTM node combination method.

Instead of using a complicated bi-lstm or the much simpler max method,
combine children into a new item using a max-tree-lstm

Attempts to integrate this method with the other combination methods

Notes on variants

Attempts to preserve old models & old model behavior - arguments are
set to be like the original defaults

Attempt to come up with an initial tree_cx for the TREE_LSTM method
Support both TREE_LSTM and the version with the CX, TREE_LSTM_CX"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-09-25T02:56:28Z,Add an option to choose an exact model path for retagging in the conparser
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-09-25T02:56:28Z,pos_package was not the correct flag for the retag_pipeline to choose a different package
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-09-22T02:33:21Z,"Transformer stack using MHA instead of LSTM as an option for the transitions and constituents

Begin integrating the TransformerTreeStack into the parser
Add arguments for converting transformer_stack and constituent_stack into ATTN
Uses a position encoding vector in the TransformerTreeStack

Keep old models alive by setting StackHistory when loading a model

Add a length_limit option to the TransformerTreeStack (currently not used)

Use the positions list to remember the length of a stack, since the stack might be shorter than expected when using length_limit

May want to save memory in some way for the stacked key and value fields.

Unfortunately, in general this doesn't seem like an
improvement... maybe there's a bug in it, or maybe there's a set of
hyperparameters which will work better, or maybe the LSTM is just
better in general."
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-09-12T20:21:40Z,Don't double save_dir if the user gives save_dir as part of the model filename
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-09-12T06:26:56Z,Fix remove_optimizer mode
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-09-10T02:06:46Z,"Always save checkpoints.  Always load from a checkpoint if one exists.

Build the constituency optimizer using knowledge of how far you are in the training process - multistage part 1 gets Adadelta, for example
Test that a multistage training process builds the correct optimizers, including when reloading

When continuing training from a checkpoint, use the existing epochs_trained
Restart epochs count when doing a finetune"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-08-26T20:15:37Z,"Grad clipping in the constituency parser.  Not a clear benefit yet, so just leaving this as an option."
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-08-23T03:57:52Z,Notes on a couple updates to defaults
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-08-22T23:15:24Z,Reorganize --optim flag to under the optimizer parameters
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-08-22T21:31:27Z,Make momentum an argument for the optimizer
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-08-17T21:08:37Z,Add a brief comment on beta2
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-08-17T20:47:27Z,Add a couple more nonlinearity options.  Simplify the creation of the nonlinearity layers
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-08-17T17:48:23Z,Fix some doc and some defaults
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-08-17T07:26:33Z,Add a projection to a smaller dimension to the lattn inputs
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-08-10T07:10:03Z,A couple notes on other options in the conparser training
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-07-31T22:27:29Z,Making combining the input the default for the lattn layer
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-06-24T06:19:05Z,"Add an option to build the lattn out of the entire input, not just pattn

Fudging a flag when reading in the models makes existing models work with the new argument"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-06-24T06:17:44Z,"AdaDelta warmup for the conparser.  Motivation: AdaDelta results in
higher scores overall, but learns 0s for the weights of the pattn and
lattn layers.  AdamW learns weights for pattn, and the models are more
accurate than models trained without pattn using AdamW, but the models
are lower scores overall than the AdaDelta models.

This improves that by first running AdaDelta, then switching.

Now, if --multistage is set, run AdaDelta for half the epochs with no
pattn or lattn.  Then start the specified optimizer for the rest of
the time with the full model.  If pattn and lattn are both present,
the model is 1/2 no attn, 1/4 pattn, 1/4 pattn and lattn

Included is a test of both the two and three step versions

Also add a false version of the option - we may very well want to make
--multistage the default"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-06-24T06:17:44Z,move some defaults from constituency_parser to utils (will be useful for using them elsewhere)
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-06-20T21:34:23Z,currently lattn positional dim is assumed to be 1/2 of pattn
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-06-20T18:57:07Z,Save all conparser models if a particular command line option is set
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-06-16T22:14:52Z,"Adding an LR warmup to the optimizer

save & load scheduler as part of the trainer files"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-06-16T07:14:14Z,"Finetune a model that was learned with no pattn to now use pattn

Finally, a method that successfully trains pattn layers (seriously, the scores go up compared to adadelta or adamw by themselves)"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-06-14T08:17:21Z,Fix broken conparse finetune :/
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-06-08T08:03:33Z,Automagically fix xpos being None for the POS tagger used for a conparser retagging
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-06-05T00:18:21Z,"Very simple wandb integration for NER, tokenizer, mwt, lemma, depparse, pos, charlm, classifier, conparse"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-05-26T20:03:05Z,Add arguments for epsilon and beta2 to initializing an AdamW optimizer
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-05-08T21:28:59Z,Another note on a failed experiment
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-05-08T02:46:23Z,Add some notes on an MLP experiment which didn't work
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-05-06T20:58:48Z,ATTN method to build larger constituents out of smaller constituents
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-05-02T13:51:13Z,This comment is wrong - it was fixed a long time ago!
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,A couple minor changes that came up when removing optimizers from conparser models
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,Add a note on a failed experiment
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,"Remove the specialized unary transform

Add a note on the use of TOP_DOWN_UNARY"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,One last comment on a possible bilstm modification
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,Remove an unused option which hurts scores.  (Not having this option makes other subsequent changes easier.)  Leave a bunch of comments explaining how it hurt the scores
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,"Init the embeddngs at a scale closer to the scale the Adadelta learns

In most cases the model mostly throws away the initial values and learns new ones, especially for the delta_embedding
However, there is a slight but noticeable improvement in scores
For example, ja_alt at 200 iterations goes from 0.8980 to 0.8985"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,This WD seems to work better?  needs more testing
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,Some notes on an adamw hill climb
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,Add a regex to output the norms and grads of a subset of weights if requested
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,Update notes on failed experiments with a couple results
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,Log norms of matrices in the model when given a flag
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,"Always use the output dimension of the pattn layer for the input of the lattn layer, since nothing else currently works anyway"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,Add a comment and a citation on what label_attention does
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,"add an initial label attention to the lstm_model.py

incorporates the labeled representation into the input

uses command line options for label attention

everything is in a single label_attention_module that can be reused, as long as the embeddings and the appropriate maskings are available"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,"When combining children nodes, take the max value instead of applying a fancy LSTM

This seems to perform better in some test cases

Keeps an old version of the constituent building around as an options
Adds a test of different constituency composition functions"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,"changes to the partitioned transformer so that it's more compact

partitioned attention is separated as a module so that it can be easily reused

also, add an option for bias (defaults to false)"
github.com/stanfordnlp/stanza,stanza/utils/datasets/prepare_depparse_treebank.py,2024-02-10T02:54:41Z,... from e
github.com/stanfordnlp/stanza,stanza/utils/datasets/prepare_depparse_treebank.py,2024-02-10T02:48:07Z,Flesh out an error a bit more so it hopefully helps people figure out how to fix it when preparing depparse data
github.com/stanfordnlp/stanza,stanza/utils/datasets/prepare_depparse_treebank.py,2023-12-01T20:28:57Z,"Oops, needed to drop the usage of pos_batch_size from prepare_depparse_treebank as well"
github.com/stanfordnlp/stanza,stanza/utils/datasets/prepare_depparse_treebank.py,2023-08-17T22:33:38Z,"Try to pick the best POS candidate when gathering the depparse dataset - in order of transformer, charlm, no charlm"
github.com/stanfordnlp/stanza,stanza/utils/datasets/prepare_depparse_treebank.py,2023-08-17T18:35:48Z,Add a flag to not download the tagger for prepare_depparse_treebank.  Addresses part of #1272
github.com/stanfordnlp/stanza,stanza/utils/datasets/prepare_depparse_treebank.py,2023-06-05T04:50:56Z,"Refactor many of the default package, charlm, and pretrain knowledge into a separate file.  Will avoid circular imports if something imported by stanza (the root package) needs to import the constants.  One example would be a model trying to find its own default charlm"
github.com/stanfordnlp/stanza,stanza/utils/datasets/prepare_depparse_treebank.py,2023-05-06T03:11:48Z,"Treat --eval_file the same as the gold file in the tagger, but add an option to not score the final results in the event the eval file doesn't have tags and we just want to see the outputs

(Also, remove the --gold_file flag when preparing the depparse treebank)"
github.com/stanfordnlp/stanza,stanza/utils/datasets/prepare_depparse_treebank.py,2023-04-12T04:02:27Z,Pass around model types using an enum specifically for the dataset preparation
github.com/stanfordnlp/stanza,stanza/utils/datasets/prepare_depparse_treebank.py,2023-01-01T19:20:11Z,"fix an issue with prepare_depparse_treebank

prepare_depparse_treebank does not use the pretrained file passed via
wordvec_pretrain_file option.
wordvec_args expects the list of options as the last argument, but args
is namespace object.
Now if wordvec_pretrain_file is set we add it to the base_args,
otherwise invoke wordvec_args function"
github.com/stanfordnlp/stanza,stanza/utils/datasets/prepare_depparse_treebank.py,2022-09-07T22:15:57Z,Eliminate a redundant function call
github.com/stanfordnlp/stanza,stanza/utils/datasets/prepare_depparse_treebank.py,2022-08-05T18:48:13Z,handle relative paths to tagger in prepare_depparse_treebank
github.com/stanfordnlp/stanza,stanza/utils/datasets/prepare_depparse_treebank.py,2022-08-02T07:14:55Z,Automatically download POS (with charlm & wordvec) when redoing depparse
github.com/stanfordnlp/stanza,stanza/utils/datasets/prepare_depparse_treebank.py,2022-04-23T04:36:46Z,"fix args tagmethod error message, formats, types (#833)

* fix args tagmethod error message, formats, types"
github.com/stanfordnlp/stanza,stanza/utils/datasets/prepare_depparse_treebank.py,2021-05-22T07:04:38Z,Add a flag for specifying which word vectors to use when using a tagger for building the depparse data
github.com/stanfordnlp/stanza,stanza/utils/datasets/prepare_depparse_treebank.py,2020-12-21T05:21:51Z,Make prepare_depparse runnable with it_combined
github.com/stanfordnlp/stanza,stanza/utils/datasets/prepare_depparse_treebank.py,2020-12-21T05:20:27Z,Batch size needs to be lower when tagging the train set for building the depparse data
github.com/stanfordnlp/stanza,stanza/utils/datasets/prepare_depparse_treebank.py,2020-12-21T05:20:27Z,prepare_depparse_treebank in python instead of shell.  Can do both gold and predicted tags
github.com/microsoft/presidio,presidio-analyzer/install_nlp_models.py,2023-10-04T11:42:41Z,added image processing class to preprocess the image before running OCR (#1166)
github.com/microsoft/presidio,presidio-analyzer/install_nlp_models.py,2023-01-25T07:06:02Z,Install transformers model into the docker image (#912)
github.com/microsoft/presidio,presidio-analyzer/install_nlp_models.py,2021-02-16T15:10:19Z,docs on adding recognizers (#508)
github.com/microsoft/presidio,presidio-analyzer/install_nlp_models.py,2021-02-08T08:18:03Z,Install NLP models in Docker (#468)
github.com/QData/TextAttack,textattack/shared/utils/install.py,2021-10-01T09:33:56Z,update format
github.com/QData/TextAttack,textattack/shared/utils/install.py,2021-07-09T15:34:15Z,"Revert ""Bug fix""

This reverts commit b30d4f06cbe742d9a7aae8b8ea30c68e0bd1a178."
github.com/QData/TextAttack,textattack/shared/utils/install.py,2021-07-07T14:33:21Z,Bug fix
github.com/QData/TextAttack,textattack/shared/utils/install.py,2021-06-30T10:53:40Z,"Merge branch 'master' of https://github.com/QData/TextAttack into multilingual

 Conflicts:
	textattack/constraints/semantics/sentence_encoders/bert/bert.py
	textattack/datasets/dataset.py
	textattack/models/helpers/utils.py
	textattack/shared/word_embeddings.py"
github.com/QData/TextAttack,textattack/shared/utils/install.py,2021-06-04T05:32:33Z,"WIP: finish attack args, attacker, cli commands"
github.com/QData/TextAttack,textattack/shared/utils/install.py,2021-06-04T05:31:09Z,"WIP: completed attack, dataset, model, logging args"
github.com/QData/TextAttack,textattack/shared/utils/install.py,2021-03-11T14:11:21Z,Merge branch 'master' of https://github.com/QData/TextAttack into multilingual
github.com/QData/TextAttack,textattack/shared/utils/install.py,2021-02-15T09:55:00Z,Fixed flake8 error (undefined variable and formatting)
github.com/QData/TextAttack,textattack/shared/utils/install.py,2021-02-15T09:55:00Z,introduce new download method from any url
github.com/QData/TextAttack,textattack/shared/utils/install.py,2021-02-12T16:27:54Z,update test to fix inconsistency introduced by new stanza resource
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-10-31T04:49:53Z,add install of stanza resource when package is present
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-10-30T21:31:00Z,make some dependencies optional
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-10-30T20:58:39Z,revert changes and fix circular imports
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-10-30T16:17:53Z,formatting
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-10-30T16:17:52Z,add lazy loading
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-10-16T21:15:03Z,"Add CoLA based constraint

Added a constraint that uses a model pre-trained on the CoLA dataset to check that the attacked text has a certain number of linguistically acceptable sentences as compared to the reference text"
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-10-02T00:20:23Z,Add stanza support for part-of-speech constraint
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-09-29T02:37:21Z,change all mentions of nlp to datasets
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-08-18T14:17:28Z,add French attack example
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-07-13T03:12:39Z,update f-string placeholders
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-07-12T23:07:41Z,remove dead imports
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-07-11T05:01:22Z,Flake8 Fix with 'make format'
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-07-11T01:49:20Z,Reformatting-try2
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-07-10T23:21:02Z,Reformatting-try1
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-06-30T00:31:14Z,update tests for ' and -
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-06-26T02:26:12Z,remove spacy; add 3 MR models
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-06-24T15:02:24Z,automatically make cache dir (instead of throwing an error)
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-06-24T03:13:02Z,remove pyyaml as a dependency
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-06-24T03:11:15Z,throw error for nonexistent cache dir
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-06-24T02:35:00Z,"smart cache dir, synchronous post-install hook, better constraint caching"
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-06-17T18:18:53Z,support multiple workers on travis
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-06-16T00:40:44Z,"add isort and fix import loops, preparing to shorten tests"
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-06-15T22:36:04Z,code formatting; tokenizers->models/tokenizers
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-06-15T21:07:12Z,makefile and setup; need to fix imports
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-06-09T21:30:18Z,"figured out huggingface tokenizers for benchmarking, now integrating into attack"
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-06-05T23:06:22Z,pretrained & file models/datasets; tests; get_logger() -> logger
github.com/QData/TextAttack,textattack/shared/utils/install.py,2020-06-05T21:35:52Z,support custom models; waiting on datasets integration
github.com/stanfordnlp/stanza,stanza/tests/setup.py,2024-02-03T03:34:40Z,"Potentially lowercase the data in a lemmatizer if all of the training data (or a user flag) requested it

Testing additions:

Add a basic unit test of the all_lowercase function
Add a test of the caseless lemmatizer in the Pipeline
Test that the Latin ITTB lemmatizer is marked as caseless.  Check that the results for capitalized text is as expected

Addresses https://github.com/stanfordnlp/stanza/issues/1330"
github.com/stanfordnlp/stanza,stanza/tests/setup.py,2023-10-05T16:51:07Z,Add Arabic to the models downloaded as part of the test suite
github.com/stanfordnlp/stanza,stanza/tests/setup.py,2023-02-02T00:19:39Z,"Script to track labeling tasks from aws sagemaker private workforce

Includes basic test file using a supplementary folder (stored in a zip) for AWS labeling tracker"
github.com/stanfordnlp/stanza,stanza/tests/setup.py,2022-04-23T04:36:46Z,"At long last, add a mechanism for using multiple NER models at once

Download ncbi_disease as part of the testing infrastructure.  Use it to run two NER models at once"
github.com/stanfordnlp/stanza,stanza/tests/setup.py,2022-04-23T04:36:46Z,Download corenlp and the relevant models as part of the test setup script
github.com/stanfordnlp/stanza,stanza/tests/setup.py,2022-04-23T04:36:46Z,Attempt to replace the .sh test setup script with a .py script
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2023-11-10T00:15:59Z,Add mwt to expected results for several more EN downloads
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2023-10-03T04:17:33Z,Update NER packages to reflect the new ontonotes_charlm default NER
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2023-02-04T07:43:37Z,Pick a language name we know won't exist for the test of an unknown language
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2023-02-04T07:30:22Z,"Allow for loading a pipeline for a language that doesn't exist, as long as everything is specified"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2022-07-05T18:34:58Z,Add a test that download_method=None doesn't clobber the wrong model
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2022-07-05T18:34:55Z,Allow strings for the DownloadMethod.  Will hopefully make the interface simpler for people
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2022-05-30T07:32:52Z,"Notes on which embeddings are used for which NER, in the form of a map of default pretrains

Use the default pretrains when using run_ner.py

Update prepare_resources to use the new ner embedding info"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2022-05-13T21:59:08Z,write temp directories to test working dir not present dir
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2022-04-23T04:36:46Z,Allow for selectively using processors.  Answers #945
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2022-04-23T04:36:46Z,"Download missing models when creating a pipeline

Less noisy logging when creating a pipeline from already downloaded items
Filters variants before trying to download them
Doesn't try to download models for annotators which don't exist
Attempt to download a missing resources.json
Downloads missing resources if REUSE_RESOURCES is set

Adds tests of the reuse_resources and download_resources options
including checks using mod times to verify that downloads occurred,
and checks that various download methods will overwrite an incorrect model"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2022-04-23T04:36:46Z,Move a bunch of tests to more appropriate homes
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2023-10-03T04:17:33Z,Update NER packages to reflect the new ontonotes_charlm default NER
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2023-03-22T03:12:50Z,"Add a utility method for extracting the resources for a specific language, possibly following 'alias' links"
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2022-08-02T06:30:14Z,Add a piece of doc
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2022-06-16T22:14:52Z,Change a bunch of tempdirs to be under TEST_WORKING_DIR
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2022-05-30T07:32:52Z,"Notes on which embeddings are used for which NER, in the form of a map of default pretrains

Use the default pretrains when using run_ner.py

Update prepare_resources to use the new ner embedding info"
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2022-04-23T04:36:46Z,"Add the ability to use an alternate_md5 to accept a file.  Will allow resource files to denote an older md5 which we allow when downloading a file.  In particular, that lets us get around the non-atomic nature of putting up a new resources.json file while the models are still uploading to huggingface"
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2022-04-23T04:36:46Z,Use ValueError and FileNotFoundError instead of assert for unexpected md5
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2022-04-23T04:36:46Z,Allow specifying multiple packages of NER to download at the same time
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2022-04-23T04:36:46Z,Add a test for the download of a single model and its dependencies
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2022-04-23T04:36:46Z,"Allow the package parameter to be a dict when specifying a list of processors.  Will make it easier to limit exactly which processors to choose, as package=None is no longer necessary"
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2021-09-08T21:22:41Z,Separate tests of different components into different files
github.com/stanfordnlp/stanza,stanza/tests/resources/test_installation.py,2022-06-16T22:14:52Z,Change a bunch of tempdirs to be under TEST_WORKING_DIR
github.com/stanfordnlp/stanza,stanza/tests/resources/test_installation.py,2021-10-04T05:11:13Z,Merge branch 'main' into dev
github.com/stanfordnlp/stanza,stanza/tests/resources/test_installation.py,2021-09-08T21:22:41Z,Separate tests of different components into different files
github.com/stanfordnlp/stanza,stanza/tests/resources/test_installation.py,2021-09-08T21:22:41Z,Move the installation test to its own directory
github.com/stanford-oval/WikiChat,wikiextractor/split_passages.py,2023-12-06T03:19:45Z,Add code and instructions
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2023-05-10T10:53:55Z,Use the dict merge operation supported by 3.8
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2023-05-10T10:53:55Z,Fix potential bugs of `add_tokens`
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2023-05-10T10:53:55Z,Support vocab extension
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2023-05-10T10:53:55Z,Strip tokenized tokens in extended vocab
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2023-05-10T10:53:55Z,Consider added tokens as well
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-10-20T13:19:18Z,Add `tokens` property
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-10-05T12:56:26Z,Syntax sugars for dist training
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-09-27T12:22:06Z,Handle tok with `ByteLevel` pre_tokenizer properly
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-07-30T13:47:07Z,Try loading local transformers files first
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-07-30T13:47:07Z,Handle unk case for `TransformerTokenizer`
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-07-30T13:47:07Z,Skip special tokens and keep spaces while decoding
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-07-30T13:47:07Z,Fix potential bugs
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-07-30T13:47:07Z,Fix vocab bug within BPE decoding
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-07-30T13:47:07Z,Support subword-nmt backend
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-07-30T13:47:07Z,Provide `min_freq` for BPE Tokenizer
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-07-30T13:46:55Z,More usable BPE tokenizers
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-07-01T07:09:51Z,Specify word suffix for BPE Trainer
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-06-25T06:29:43Z,Wrapper for BPE Tokenizer
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-06-24T09:52:29Z,Syntactic sugar for Transformer tokenizers
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-04-01T05:39:07Z,Minor revisions
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-04-01T05:39:07Z,Integrated tokenizer (#47)
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2023-09-25T04:56:14Z,for backslash-escape
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2023-09-24T13:36:07Z,revert
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2023-09-24T12:06:15Z,https://github.com/KoichiYasuoka/UniDic2UD/issues/2
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2023-04-17T15:55:15Z,近現代口語小説UniDic
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2023-04-17T14:54:13Z,cwj-3.1.1 and csj-3.1.1
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2022-04-24T13:52:06Z,use UniDic-202203
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2022-04-24T10:33:27Z,ChamameWebAPI changed
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2022-04-15T14:55:30Z,URL update
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2021-11-07T04:59:15Z,URL changed
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2021-04-04T00:59:04Z,force download UniDic
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2021-04-03T06:37:59Z,gendai and spoken URLs changed
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2021-03-06T14:27:15Z,bug fix
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2021-02-21T08:58:06Z,Chamame moved to chamame.ninjal.ac.jp
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2021-02-20T14:05:29Z,Stanza==1.2 support
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2021-02-04T03:48:40Z,unidic-lite support
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2021-02-01T15:12:07Z,progressbar outputs sys.stderr
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2021-01-25T05:03:26Z,flush=True
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2021-01-23T13:54:49Z,AUX improved
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-12-28T03:38:53Z,ipadic support
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-11-23T10:20:15Z,bug fix
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-09-21T06:35:26Z,bug fix
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-09-19T05:06:35Z,use deplacy.PACKAGE_DIR
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-08-12T12:49:54Z,形容詞-非自立可能 improved
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-08-12T08:46:24Z,動詞-非自立可能 improved
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-07-29T05:32:35Z,stanza_ja support
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-07-25T15:59:49Z,名詞-助動詞語幹 support
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-07-08T05:39:49Z,unidic2ud.deprelja -> deplacy.deprelja
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-07-07T12:58:46Z,mecab-python3 1.0 support
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-07-02T01:46:35Z,to_tree(CatenaAnalysis) support
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-06-25T03:09:00Z,to_tree() uses deplacy
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-04-12T06:47:16Z,progress bar improved
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-03-31T04:30:21Z,to_tree() changed into BOX DRAWINGS DOUBLE
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-03-26T01:18:01Z,version 2.0.0
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-03-26T01:09:31Z,version 1.9.9
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-03-21T01:14:07Z,version 1.9.8
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-03-20T16:18:43Z,version 1.9.7
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-02-10T06:13:01Z,version 1.9.3
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-02-09T07:13:24Z,version 1.9.2
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-02-08T13:12:18Z,version 1.9.0
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-02-08T05:50:13Z,version 1.8.9
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-01-17T05:20:21Z,version 1.8.5
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-01-14T16:43:47Z,ipadic deleted from distribution
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-01-14T15:15:03Z,japanese-modern supported
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-01-13T06:39:34Z,unidic-csj-3.0.1 supported
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-01-03T00:42:30Z,version 1.7.6
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-12-29T01:48:04Z,version 1.7.3
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-12-27T08:44:07Z,version 1.6.8
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-12-27T06:35:22Z,fugashi.GenericTagger supported
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-12-26T14:15:50Z,version 1.6.6
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-12-20T10:32:53Z,version 1.6.2
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-12-18T07:40:06Z,version 1.5.9
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-12-14T23:51:39Z,version 1.5.8
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-12-10T06:46:38Z,version 1.5.3
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-11-22T05:42:52Z,to_tree(Japanese) supported
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-11-21T14:31:08Z,version 1.4.7
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-11-14T02:32:09Z,to_tree() released
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-11-13T03:00:10Z,濁点/半濁点 process
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-11-10T14:47:36Z,PUNCT for ipadic
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-10-20T03:42:30Z,dictlist supported
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-09-15T07:00:41Z,version 1.1.4
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-09-15T06:38:16Z,to_svg(item) enhanced
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-09-14T23:20:56Z,to_svg() supported
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-31T23:12:40Z,bug fix for フィラー of ipadic
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-31T23:00:16Z,bug fix for Translit
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-31T22:38:28Z,bug fix for U+3000
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-29T04:18:55Z,unidic2ud.spacy supported
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-28T08:39:07Z,version 0.9.8 raw option supported
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-27T09:39:00Z,index for UDPipeEntry supported
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-27T05:49:26Z,"bug fix for Translit of ""spoken"""
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-27T05:06:43Z,"bug fix for Translit of ""gendai"""
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-27T04:50:26Z,"bug fix for ""gendai"""
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-27T02:20:01Z,UDPipe models renamed
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-27T01:56:01Z,bug fix
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-26T22:22:32Z,UniDic=None as default
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-26T16:10:59Z,bug fix
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-26T15:45:01Z,initial release
github.com/consuldemocracy/consuldemocracy,public/machine_learning/scripts/budgets_related_content_and_tags_nmf.py,2022-11-11T00:40:04Z,"Use a different machine learning folder per tenant

We're using the ""tenants"" subfolder for consistency with the folder
structure we use in ActiveStorage and because some CONSUL installations
might have folders inside the `data` folder which might conflict with
the folders created by tenants.

Note that the Python scripts have a lot of duplication, meaning we need
to change all of them. I'm not refactoring them because I'm not familiar
enough with these scripts (or with Python, for that matter).

Also note that the scripts folder is still shared by all tenants,
meaning it isn't possible to have different scripts for different
tenants. I'm not sure how this situation should be handled; again, I'm
not familiar enough with this feature."
github.com/consuldemocracy/consuldemocracy,public/machine_learning/scripts/budgets_related_content_and_tags_nmf.py,2021-09-07T16:18:47Z,Update machine learning scripts with NNMF and TextRank-GloVe techniques
github.com/consuldemocracy/consuldemocracy,public/machine_learning/scripts/budgets_related_content_and_tags_nmf.py,2021-08-16T14:31:04Z,Add experimental machine learning
github.com/consuldemocracy/consuldemocracy,public/machine_learning/scripts/proposals_related_content_and_tags_nmf.py,2022-11-11T00:40:04Z,"Use a different machine learning folder per tenant

We're using the ""tenants"" subfolder for consistency with the folder
structure we use in ActiveStorage and because some CONSUL installations
might have folders inside the `data` folder which might conflict with
the folders created by tenants.

Note that the Python scripts have a lot of duplication, meaning we need
to change all of them. I'm not refactoring them because I'm not familiar
enough with these scripts (or with Python, for that matter).

Also note that the scripts folder is still shared by all tenants,
meaning it isn't possible to have different scripts for different
tenants. I'm not sure how this situation should be handled; again, I'm
not familiar enough with this feature."
github.com/consuldemocracy/consuldemocracy,public/machine_learning/scripts/proposals_related_content_and_tags_nmf.py,2021-09-07T16:18:47Z,Update machine learning scripts with NNMF and TextRank-GloVe techniques
github.com/consuldemocracy/consuldemocracy,public/machine_learning/scripts/proposals_related_content_and_tags_nmf.py,2021-08-16T14:31:04Z,Add experimental machine learning
github.com/futurulus/coop-nets,third-party/stanza/stanza/util/resource.py,2016-04-04T06:17:46Z,Merge commit '37db677eec1f83fae502d253f790c6f54e34abf5'
github.com/futurulus/coop-nets,third-party/stanza/stanza/util/resource.py,2016-02-02T01:36:53Z,"Squashed 'third-party/stanza/' changes from 09f78e3..2e33ff2

2e33ff2 add slack integration
c1d7f48 added TensorBoardLogger
ae0e116 Tools for working with CodaLab
7db1754 Document and test TensorBoard logging
7eedffb Cast histogram values to ordinary floats

git-subtree-dir: third-party/stanza
git-subtree-split: 2e33ff2822d5f627fdd282645efa398721f0eb21"
github.com/futurulus/coop-nets,third-party/stanza/stanza/util/resource.py,2016-01-28T23:56:59Z,Merge commit 'ec1b3ee0a9f85151068bb72462dd7275bb8c0f17' as 'third-party/stanza'
github.com/honghanhh/ner-combining-contextual-and-global-features,enconll03_baselines/conll_stanza.py,2020-05-06T15:31:08Z,"double check stanza, flair and evaluate results"
github.com/honghanhh/ner-combining-contextual-and-global-features,enconll03_baselines/conll_stanza.py,2020-04-25T17:43:47Z,Evaluate Flair/Stanza on eng.test.2.examples.txt
github.com/honghanhh/ner-combining-contextual-and-global-features,enconll03_baselines/conll_stanza.py,2020-04-24T16:04:19Z,Update working status and stanza
github.com/honghanhh/ner-combining-contextual-and-global-features,enconll03_baselines/conll_stanza.py,2020-04-24T16:02:29Z,"Test with stanza, reconfig downloaded model to fix error"
github.com/honghanhh/ner-combining-contextual-and-global-features,enconll03_baselines/conll_stanza.py,2020-04-24T14:38:06Z,"Test with flair embeddings, error pipeline in stanza"
github.com/honghanhh/ner-combining-contextual-and-global-features,enconll03_baselines/conll_stanza.py,2020-04-20T08:08:20Z,Update task 3 and baseline code using stanza and flair
github.com/huggingface/api-inference-community,docker_images/stanza/app/pipelines/token_classification.py,2023-04-19T12:57:59Z,"[Diffusers] Add text-guided image to image (#223)

* [Diffusers] Add image to image

* fix some stuff

* make style

* make style

* Update docker_images/diffusers/app/pipelines/image_to_image.py

Co-authored-by: Nicolas Patry <patry.nicolas@protonmail.com>

* Fixing diffusers.

* Apply suggestions from code review

Co-authored-by: Omar Sanseviero <osanseviero@gmail.com>

* Apply suggestions from code review

* up

* make style

* Apply suggestions from code review

* finalize

---------

Co-authored-by: Nicolas Patry <patry.nicolas@protonmail.com>
Co-authored-by: Omar Sanseviero <osanseviero@gmail.com>"
github.com/huggingface/api-inference-community,docker_images/stanza/app/pipelines/token_classification.py,2022-03-16T10:53:41Z,MNT move api-inference-community to root of the repo
github.com/alexandrainst/danlp,examples/benchmarks/dependency_benchmarks.py,2021-09-29T11:39:16Z,"Fixing errors for the documentation page (Tasks, Datasets, Frameworks) (#139)

* Fix Windows compatibility error

* Fix Windows compatibility error 2

* added test script to gitignore

* Accidentally pushed local test artifacts.

* Fix Windows compatibility error 3

* Removed a parentheses

* Fix windows Compatibility error 4

* Updated comments and changed input string

* Updated another comment

* Removed unexpected key word arguments

* example sentences for Frameworks flair 'Your dataset'

* Fixed typo and updated documentation to fit with flair 0.8

* Now includes line to download the required stanza model

* Avoiding division by zero

* added comment that describes how to run the dacy benchmark functions

* removed relative import, which doesn't work for Windows and Mac

* Updated version of pyicu

* Updated print on how to download and where to place model

* added line that downloads needed resources

* compatibility with flair 0.8

* Windows compatibility

* reverting gitignore

* fix pycache ignore

* compatibility with flair 0.8

* coherence between model_path and output

* coherence between model_path and output

* removed relative import

* Revert changed version of PyICU

* Fixed comments

Co-authored-by: Oliver Kinch <oliver@alex5925.local>"
github.com/alexandrainst/danlp,examples/benchmarks/dependency_benchmarks.py,2021-04-20T09:31:13Z,"Add Stanza benchmark (#128)

* Add stanza benchmarking

* Update benchmark requirements

* Add documentation"
github.com/ServiceNow/duorat,duorat/utils/tokenization.py,2020-10-23T01:48:17Z,first commit
github.com/explosion/projects,benchmarks/speed/scripts/download_models.py,2020-10-15T11:09:29Z,Format
github.com/explosion/projects,benchmarks/speed/scripts/download_models.py,2020-09-28T19:24:51Z,add flair models
github.com/explosion/projects,benchmarks/speed/scripts/download_models.py,2020-09-28T15:36:03Z,run each lib in separate python call to avoid mem accumulation
github.com/explosion/projects,benchmarks/speed/scripts/download_models.py,2020-09-28T13:03:46Z,run stanza
github.com/cltk/cltk,src/cltk/dependency/stanza_wrapper.py,2024-02-06T01:48:11Z,"Add typing (#1242)

* misc typing fixes

* more cleanup

* more cleanup

* rm mkdocs

* formatting changes

* add typing to corpora latin

* add types to stanza wrapper

* rm check of spacy vers from build

* add more types

* change all old Dict[] List[] Tuple[] types

* change deepcopy to copy for 3.11 error

* more type improvements

* change all type annotations to hints

* change all type annotations to hints

* fix four errors after code analysis"
github.com/cltk/cltk,src/cltk/dependency/stanza_wrapper.py,2023-12-27T07:55:02Z,"Updates to Clemsciences's spacy process (#1239)

* Added spaCy process

* Improved spaCy to CLTK wrapper

* Use correct Token attributes

* Use spaCy download function instead of shell command

* Update poetry.lock

* Removed unrelated changes

* Fixed SpacyWrapper, StanzaWrapper and download_all_models.py

* Improved SpacyWrapper

* update dependencies

* demo notebook not working

* Added spaCy process

* Improved spaCy to CLTK wrapper

* Use correct Token attributes

* Use spaCy download function instead of shell command

* Removed unrelated changes

* Fixed SpacyWrapper, StanzaWrapper and download_all_models.py

* Improved SpacyWrapper

* Improved SpacyWrapper

* Renamed spacy_dep.py to spacy_wrapper.py and lint fixes

* add morphology from spacy to cltk Doc

* downgrade spacy to 3.6.1

* Download spaCy model if the model is absent

* update dev dependencies, improve spacy wrapper

* spacy wrapper working

* fix .get_dependencies()

* make e2e work with LatinCy

* re-add Latin Stops Process

* add spacy dl to build script

* trigger CI rerun

* load spacy directly

* dl spacy model with subprocess

* load model after dl

* load w/ spacy (wrapper seems to err

* don't check only dl

* bump spacy

* why old spacy on ci?

* deepcopy to copy

* basic lat tests pass

* rewrite bad UD types from Mood to VerbForm

* finish more cleanup or LatinCy release

* add citation printing

* rename latincy proc

---------

Co-authored-by: Clément Besnier <clemsciences@aol.com>
Co-authored-by: Clément Besnier <clem@clementbesnier.fr>"
github.com/cltk/cltk,src/cltk/dependency/stanza_wrapper.py,2023-11-04T10:15:39Z,Fixed type in stanza_wrapper.py that prevented using stanza
github.com/cltk/cltk,src/cltk/dependency/stanza_wrapper.py,2023-11-04T10:15:39Z,Version 1.1.6a1
github.com/cltk/cltk,src/cltk/dependency/stanza_wrapper.py,2023-11-04T10:15:39Z,Make path cross-platform
github.com/cltk/cltk,src/cltk/dependency/stanza_wrapper.py,2023-11-04T10:15:39Z,Improved annotations and let less tasks to dataclasses
github.com/rali-udem/jsRealB,demos/UDregenerator/text2ud.py,2022-10-29T20:17:57Z,text2ud: show progress during Stanza parsing
github.com/rali-udem/jsRealB,demos/UDregenerator/text2ud.py,2022-09-12T18:11:25Z,"Version 4.5 - Code reorganization

No new features but the implementation now use ""real"" JavaScript classes and modules.
- building relies on webpack which integrates JSON lexicons in the source. This simplifies greatly the integration process that previously used a series of scripts with a Makefile
- demos have been ported to this organization
- documentation has been updated
- source files now have jsdoc comments
- src/jsdoc is now available"
github.com/rali-udem/jsRealB,demos/UDregenerator/text2ud.py,2021-05-19T01:02:10Z,Add variationsFromText to UDgenerator
github.com/rali-udem/jsRealB,demos/UDregenerator/text2ud-new.py,2023-05-17T20:58:21Z,add showTree for variationsFromText
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/word_generator.py,2020-05-17T04:13:56Z,"UD in word service, bug fixes"
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/word_generator.py,2020-05-12T09:00:07Z,Add word already exists warning
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/word_generator.py,2020-05-09T07:52:13Z,even better hail maries
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/word_generator.py,2020-05-09T07:36:44Z,Bug fixzzz
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/word_generator.py,2020-05-09T07:25:23Z,"Word generation: add a hail mary when failing, only do one pass"
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/word_generator.py,2020-05-08T23:29:03Z,"Webpack, website that queries backend"
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/word_generator.py,2020-05-07T20:48:32Z,"Wire up basic word service, move word generator interface to own file"
github.com/nipunsadvilkar/pySBD,benchmarks/genia_benchmark.py,2020-07-19T17:25:34Z,⚡️  Benchmarks scripts - genia & bigtext file
github.com/nipunsadvilkar/pySBD,benchmarks/genia_benchmark.py,2020-07-12T17:58:12Z,"use format, delete other scripts"
github.com/nipunsadvilkar/pySBD,benchmarks/genia_benchmark.py,2020-07-11T21:59:57Z,my benchmarks
github.com/nipunsadvilkar/pySBD,benchmarks/benchmark_sbd_tools.py,2020-07-19T17:25:34Z,⚡️  Benchmarks scripts - genia & bigtext file
github.com/nipunsadvilkar/pySBD,benchmarks/bigtext_speed_benchmark.py,2020-07-19T17:25:34Z,⚡️  Benchmarks scripts - genia & bigtext file
github.com/explosion/spacy-stanza,tests/test_language.py,2022-05-27T14:12:39Z,Extend to stanza v1.4
github.com/explosion/spacy-stanza,tests/test_language.py,2021-11-09T09:18:13Z,"Fallback to upos instead of to feats (#77)

* fallback to upos instead of to feats

* Use test data from UD train set

* more future-proof test for Spanish

* delete comment

* make black"
github.com/explosion/spacy-stanza,tests/test_language.py,2021-11-09T08:50:11Z,"Updates for stanza v1.3.0, set version to v1.0.1 (#79)

* Extend to stanza v1.3.x

* Set version to v1.0.1

* Update tests for more recent models"
github.com/explosion/spacy-stanza,tests/test_language.py,2021-03-02T13:10:15Z,Fix trailing whitespace token handling (#64)
github.com/explosion/spacy-stanza,tests/test_language.py,2021-03-02T09:01:16Z,"Refactor for spaCy v3.0 (#58)

* Refactor for spaCy v3.0

* Implement the stanza processing as a custom registered tokenizer
`spacy_stanza.PipelineAsTokenizer.v1`
  * Include all `stanza.Pipeline` settings in the tokenizer config block
  * Move the custom user hooks into the tokenizer processing

* Add the helper method `spacy_stanza.blank()` for pipeline
initialization, which sets up the custom tokenizer in the config and
passes the config on to `spacy.blank()`

* Update README

* Update README [ci skip]

* Simplify config setup

* Clean up and reformat

* Use plain pip install in README

* Fix dir Pipeline arg

* Add test that loads directly from a minimal config

* Support kwargs directly in pipeline init method

Support passing kwargs directly from pipeline init method rather than
requiring them to be set in `[nlp.tokenizer.kwargs]`.

* Follow Pipeline API instead of spacy.blank API

Rename `spacy_stanza.blank` to `spacy_stanza.load_pipeline`.

* Set version to 1.0.0 and update contact in setup"
github.com/explosion/spacy-stanza,tests/test_language.py,2021-02-03T15:50:16Z,"Update for spacy v3 (#55)

* Update for spacy v3.0.0

* Update requirements in requirements.txt

* Sync requirements.txt and setup.py

* Update for spacy v3.0 and stanza v1.2"
github.com/explosion/spacy-stanza,tests/test_language.py,2020-09-02T11:10:11Z,"Fix alignment for spacy tokenizer (#44)

Fix the alignment when spacy is used as the tokenizer and may return
whitespace tokens."
github.com/explosion/spacy-stanza,tests/test_language.py,2020-06-26T08:38:04Z,"Rewrite alignment to preserve whitespace tokens (#41)

Rewrite the alignment algorithm to create the words and spaces using a
copy of `spacy.util.get_words_and_spaces` and align the stanza
annotation to the `Doc`, adjusting the positions and offsets around the
additional whitespace tokens."
github.com/explosion/spacy-stanza,tests/test_language.py,2020-03-19T09:27:43Z,Show warning if entities don't map to tokens
github.com/explosion/spacy-stanza,tests/test_language.py,2020-03-17T18:15:17Z,"StanfordNLP -> Stanza (#26)

* stanfordnlp -> stanza

* Create azure-pipelines.yml

* Update README.md

* Try to fix PyTorch installation for windows

* Don't test on Windows for now

* Update README.md

* Fix typo [ci skip]"
github.com/explosion/spacy-stanza,tests/test_language.py,2019-05-31T09:56:50Z,"Relax version requirement for stanfordnlp to include v0.2.0. (#15)

* For compatibility with native Spacy language classes allow passing of empty text strings. This will produce 0-length docs, rather than raising an exception.

* Increment minor version.

* Relax version requirement for stanfordnlp to include new 0.2.0.

* Make tests pass with stanfordnlp 0.2.0. Some POS tag predictions have flipped in ambiguous cases (e.g. DET/PRON, VERB/AUX)."
github.com/explosion/spacy-stanza,tests/test_language.py,2019-01-31T14:24:22Z,Update test_language.py
github.com/explosion/spacy-stanza,tests/test_language.py,2019-01-31T14:19:04Z,Move tests
github.com/marian-nmt/marian-examples,forced-translation/scripts/lemmatize.py,2022-02-23T19:00:33Z,"Forced translation

* add forced-translation examples
* Update .gitignore
* Update README.md
* remove glossary tokenization
* add eval scripts
* Update EXPERIMENTS.md

    Added information regarding the two new testsets used for en-ro and
    en-nb, that contained a specific domained, annotated with a glossary
    with terms only specific to that domain to mimic better the Tilde's
    ATS testset and glossary, used for en-lv and en-de. Also added the
    human evaluation results for this two LPs.

* Add time estimations to run end-2-end pipeline

Co-authored-by: Pedro Coelho <pedro.coelho@unbabel.com>
Co-authored-by: Toms Bergmanis <tomsbergmanis@gmail.com>"
github.com/marian-nmt/marian-examples,forced-translation/scripts/eval_lemmatized_glossary.py,2022-02-23T19:00:33Z,"Forced translation

* add forced-translation examples
* Update .gitignore
* Update README.md
* remove glossary tokenization
* add eval scripts
* Update EXPERIMENTS.md

    Added information regarding the two new testsets used for en-ro and
    en-nb, that contained a specific domained, annotated with a glossary
    with terms only specific to that domain to mimic better the Tilde's
    ATS testset and glossary, used for en-lv and en-de. Also added the
    human evaluation results for this two LPs.

* Add time estimations to run end-2-end pipeline

Co-authored-by: Pedro Coelho <pedro.coelho@unbabel.com>
Co-authored-by: Toms Bergmanis <tomsbergmanis@gmail.com>"
github.com/marian-nmt/marian-examples,forced-translation/scripts/add_target_lemma_annotations.py,2022-02-23T19:00:33Z,"Forced translation

* add forced-translation examples
* Update .gitignore
* Update README.md
* remove glossary tokenization
* add eval scripts
* Update EXPERIMENTS.md

    Added information regarding the two new testsets used for en-ro and
    en-nb, that contained a specific domained, annotated with a glossary
    with terms only specific to that domain to mimic better the Tilde's
    ATS testset and glossary, used for en-lv and en-de. Also added the
    human evaluation results for this two LPs.

* Add time estimations to run end-2-end pipeline

Co-authored-by: Pedro Coelho <pedro.coelho@unbabel.com>
Co-authored-by: Toms Bergmanis <tomsbergmanis@gmail.com>"
github.com/renke999/PerturbScore,TextAttack/textattack/shared/utils/install.py,2023-10-10T15:39:04Z,Add TextAttack as part of the repository
github.com/BLKSerene/Wordless,utils/wl_downloader_ci.py,2024-01-05T09:11:05Z,Dependencies: Remove Dostoevsky; Utils: Remove Dostoevsky's Russian sentiment analyzer
github.com/BLKSerene/Wordless,utils/wl_downloader_ci.py,2024-01-05T07:57:03Z,Misc: Update copyright year
github.com/BLKSerene/Wordless,utils/wl_downloader_ci.py,2024-01-02T12:47:42Z,Dependencies: Add VADER; Utils: Add VADER's sentiment analyzers
github.com/BLKSerene/Wordless,utils/wl_downloader_ci.py,2023-09-03T18:08:00Z,"Dependencies: Add Stanza; Utils: Add Stanza's sentence tokenizers, word tokenizers, part-of-speech taggers, lemmatizers, and dependency parsers"
github.com/BLKSerene/Wordless,utils/wl_downloader_ci.py,2023-08-11T16:36:09Z,Dependencies: Add Dostoevsky; Settings: Add Settings - Sentiment Analysis; Utils: Add Dostoevsky's Russian sentiment analyzer
github.com/BLKSerene/Wordless,utils/wl_downloader_ci.py,2023-08-08T13:51:22Z,"Utils: Update spaCy's sentence recognizers, word tokenizers, part-of-speech taggers, lemmatizers, and dependency parsers"
github.com/BLKSerene/Wordless,utils/wl_downloader_ci.py,2023-07-23T06:44:18Z,"Utils: Add spaCy's Slovenian sentence recognizer, part-of-speech tagger, lemmatizer, and dependency parser"
github.com/BLKSerene/Wordless,utils/wl_downloader_ci.py,2023-07-22T17:31:56Z,"Utils: Add spaCy's Korean sentence recognizer, word tokenizer, part-of-speech tagger, lemmatizer, and dependency parser"
github.com/BLKSerene/Wordless,utils/wl_downloader_ci.py,2023-01-19T16:15:38Z,Misc: Update copyright year
github.com/BLKSerene/Wordless,utils/wl_downloader_ci.py,2022-09-20T19:50:34Z,Utils: Add spaCy's Ukrainian part-of-speech tagger and lemmatizer
github.com/BLKSerene/Wordless,utils/wl_downloader_ci.py,2022-09-04T13:36:51Z,Utils: Add spaCy's Finnish part-of-speech tagger and lemmatizer
github.com/BLKSerene/Wordless,utils/wl_downloader_ci.py,2022-09-03T18:31:20Z,Utils: Add spaCy's Croatian and Swedish part-of-speech taggers
github.com/BLKSerene/Wordless,utils/wl_downloader_ci.py,2022-08-25T16:55:28Z,Utils: Add NLTK's legality syllable tokenizer and sonority sequencing syllable tokenizer
github.com/BLKSerene/Wordless,utils/wl_downloader_ci.py,2022-08-10T19:50:25Z,Tests: Relocate test files
github.com/BLKSerene/Wordless,utils/wl_downloader_ci.py,2022-03-07T13:25:25Z,Misc: Add Chinese (Simplified) translation
github.com/BLKSerene/Wordless,utils/wl_downloader_ci.py,2022-03-02T09:10:56Z,Tests: Add CI - LGTM
github.com/BLKSerene/Wordless,utils/wl_downloader_ci.py,2022-01-10T12:39:40Z,Misc: Update copyright information
github.com/BLKSerene/Wordless,utils/wl_downloader_ci.py,2022-01-07T16:43:52Z,"Utils: Add spaCy's Japanese word tokenizer, POS tagger, and lemmatizer"
github.com/BLKSerene/Wordless,utils/wl_downloader_ci.py,2022-01-04T01:02:01Z,Tests: Update CI - script for downloading data
github.com/BLKSerene/Wordless,utils/wl_downloader_ci.py,2022-01-01T08:59:01Z,Misc: Update copyright year
github.com/BLKSerene/Wordless,utils/wl_downloader_ci.py,2021-10-13T09:07:05Z,Tests: Update CI
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2024-01-13T02:59:55Z,"Settings: Settings - Part-of-speeach Tagging - Tagsets - Mapping Settings - Allow editing of tagset mapping of Stanza's Armenian (Eastern), Armenian (Western), Basque, Buryat (Russia), Danish, French, Greek (Modern), Hebrew (Modern), Hungarian, Ligurian, Manx, Marathi, Nigerian Pidgin, Pomak, Portuguese, Russian, Sanskrit, Sindhi, Sorbian (Upper), and Telugu part-of-speech taggers"
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2024-01-05T07:57:03Z,Misc: Update copyright year
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2024-01-02T12:47:42Z,Dependencies: Add VADER; Utils: Add VADER's sentiment analyzers
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-12-30T10:49:39Z,Dependencies: Upgrade Stanza to 1.7.0; Utils: Add Stanza's Sindhi part-of-speech tagger
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-10-02T14:14:35Z,Dependencies: Upgrade spaCy to 3.7.2; Utils: Fix downloading of Stanza models
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-09-27T10:45:09Z,Dependencies: Upgrade PyInstaller to 6.0
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-09-23T11:43:01Z,Utils: Update spaCy's sentencizer
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-09-10T09:30:26Z,Utils: Add Stanza's French (Old) lemmatizer
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-09-10T08:49:05Z,"Utils: Remove Stanza's Swedish Sign Language sentence tokenizer, word tokenizer, part-of-speech tagger, and dependency parser"
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-09-10T08:43:01Z,"Dependencies: Upgrade Stanza to 1.5.1; Utils: Add Stanza's Hebrew (Ancient), Kyrgyz, Manx, and Pomak sentence tokenizers / word tokenizers / part-of-speech taggers / lemmatizers / dependency parsers"
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-09-04T13:45:52Z,Utils: Add Stanza's sentiment analyzers
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-09-03T18:08:00Z,"Dependencies: Add Stanza; Utils: Add Stanza's sentence tokenizers, word tokenizers, part-of-speech taggers, lemmatizers, and dependency parsers"
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-08-17T17:46:36Z,Misc: Update translations
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-08-11T16:36:09Z,Dependencies: Add Dostoevsky; Settings: Add Settings - Sentiment Analysis; Utils: Add Dostoevsky's Russian sentiment analyzer
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-08-08T13:51:22Z,"Utils: Update spaCy's sentence recognizers, word tokenizers, part-of-speech taggers, lemmatizers, and dependency parsers"
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-07-23T06:44:18Z,"Utils: Add spaCy's Slovenian sentence recognizer, part-of-speech tagger, lemmatizer, and dependency parser"
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-07-22T17:31:56Z,"Utils: Add spaCy's Korean sentence recognizer, word tokenizer, part-of-speech tagger, lemmatizer, and dependency parser"
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-03-13T19:09:27Z,Dependencies: Add python-mecab-ko; Utils: Add python-mecab-ko's MeCab
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-02-10T13:24:56Z,Releases: Update packaging script
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-02-08T15:13:01Z,Dependencies: 1. Add pymorphy3 2. Remove pymorphy2
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-02-02T06:42:01Z,Settings: Update global settings - measures
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-01-30T16:05:14Z,Utils: Speed up n-gram/skip-gram generation
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-01-19T16:15:38Z,Misc: Update copyright year
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-10-30T15:50:33Z,Work Area: Add Dependency Parser
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-10-09T20:25:53Z,"Utils: Update spaCy's sentence tokenizers, word tokenizers, part-of-speech taggers, and lemmatizers"
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-10-06T19:35:05Z,Utils: Update spaCy's sentence recognizers
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-09-23T19:51:17Z,Releases: Update packaging script
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-09-20T19:50:34Z,Utils: Add spaCy's Ukrainian part-of-speech tagger and lemmatizer
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-09-04T13:36:51Z,Utils: Add spaCy's Finnish part-of-speech tagger and lemmatizer
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-09-03T18:31:20Z,Utils: Add spaCy's Croatian and Swedish part-of-speech taggers
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-09-03T14:08:35Z,Utils: 1. Add spaCy's Sorbian (Lower) word tokenizer and stop word list 2. Add spaCy's Sorbian (Upper) word tokenizer and stop word list
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-09-02T18:45:32Z,Utils: Add Pyphen's Catalan syllable tokenizer
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-08-25T16:55:28Z,Utils: Add NLTK's legality syllable tokenizer and sonority sequencing syllable tokenizer
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-08-25T09:29:24Z,Tests: Add CI - SonarCloud
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-08-23T08:58:22Z,Utils: Add NLTK's regular-expression tokenizer
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-08-22T10:35:55Z,Dependencies: 1. Add spacy-pkuseg 2. Remove pkuseg
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-08-21T14:09:14Z,Work Area: Add Profiler - Count of Sentence Segments / Paragraph Length in Sentence Segments / Sentence Segment Length in Tokens / Count of n-length Sentence Segments
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-08-11T20:10:54Z,Doc: Add README - Pylint badge
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-08-10T19:50:25Z,Tests: Relocate test files
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2023-01-17T10:00:30Z,"fix pretokenized input format

Now, a list of tokens is not valid input anymore"
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2022-04-04T12:14:58Z,make style
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2022-04-04T12:11:49Z,add create_spacy_disable_sentence_segmentation as entrypoint
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2022-04-04T12:03:37Z,move merge_dicts_strict to utils
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2022-03-05T19:57:36Z,Allow disable_sbd for stanza
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2022-03-05T16:26:10Z,"Allow users to disable spacy components and fix disable_sbd issue

Fixes #17"
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2021-09-05T08:52:39Z,ignore import quality checks
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2021-06-29T13:48:38Z,avoid duplicate arguments: pop
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2021-06-29T13:11:02Z,make style
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2021-06-29T11:23:52Z,Update utils.py
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2021-06-29T10:04:58Z,remove default spacy parser
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2021-06-25T13:58:50Z,move parsing code to dataclass
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2021-06-23T16:04:23Z,auto-download udpipe models
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2021-06-23T15:41:12Z,update to spacy v3 pipeline
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2021-06-23T09:29:25Z,make style
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-05-11T16:47:25Z,make style && make quality
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-05-11T16:44:28Z,add ability to use is_tokenized for udpipe
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-05-05T16:48:44Z,docstring & typing
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-05-05T16:36:09Z,"replace tokens_from_list by custom tokenizer

Since tokens_from_list is deprecated, switch to a custom tokenizer when `is_tokenized` is requested. Input can be a string to be split on whitespace or a list of tokens. Works only for spaCy. Inspired by adrianeboyd https://github.com/explosion/spaCy/issues/5399#issuecomment-623593208"
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-05-03T15:39:12Z,style and quality
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-05-03T15:15:14Z,rename pipeline_opts to parser_opts
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-05-01T16:51:59Z,allow pipeline_opts and kwargs in init_parser
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-05-01T13:22:57Z,require keywords for less important kwargs
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-04-30T12:26:27Z,add kwargs
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-04-30T11:12:16Z,re-order arguments in init_nlp
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-04-29T13:13:32Z,"restructure and improve entrypoint

- move ConllFormatter to separate file
- add utils and expose init_parser (might be useful for users)
- improve entrypoint usage"
github.com/reynoldsnlp/udar,src/udar/misc.py,2023-11-20T14:22:05Z,importlib_resources for Python<3.9
github.com/reynoldsnlp/udar,src/udar/misc.py,2023-11-20T04:20:39Z,clean up tests; fix phonetic()
github.com/reynoldsnlp/udar,src/udar/misc.py,2021-04-22T22:32:47Z,debug action
github.com/reynoldsnlp/udar,src/udar/misc.py,2021-04-22T03:49:50Z,use gzip to avoid git-lfs
github.com/reynoldsnlp/udar,src/udar/misc.py,2021-04-13T16:37:25Z,for reals
github.com/reynoldsnlp/udar,src/udar/misc.py,2021-04-13T09:07:43Z,modern structure/tools (src/ and setup.cfg/pyproject.toml)
github.com/reynoldsnlp/udar,src/udar/sentence.py,2023-11-20T04:20:39Z,clean up tests; fix phonetic()
github.com/reynoldsnlp/udar,src/udar/sentence.py,2023-08-04T04:34:48Z,to_html()
github.com/reynoldsnlp/udar,src/udar/sentence.py,2022-09-18T01:16:06Z,"don’t attempt to re-download punkt tokenizer (#50)

* don’t attempt to re-download punkt tokenizer

Previously an attempt was made to redownload `punkt` with each request for the in-use tokenizer, causing nltk to emit warnings about `punkt` already being downloaded.  This change attempts to find `punkt` and if not present to _then_ download it.

* Update sentence.py

Co-authored-by: Rob Reynolds <reynoldsnlp@users.noreply.github.com>"
github.com/reynoldsnlp/udar,src/udar/sentence.py,2021-08-20T22:33:51Z,code formatting
github.com/reynoldsnlp/udar,src/udar/sentence.py,2021-06-08T16:38:28Z,force utf8 for cg3
github.com/reynoldsnlp/udar,src/udar/sentence.py,2021-05-26T15:36:16Z,to_json()
github.com/reynoldsnlp/udar,src/udar/sentence.py,2021-04-22T20:51:04Z,fix pmhfst path
github.com/reynoldsnlp/udar,src/udar/sentence.py,2021-04-13T09:07:43Z,modern structure/tools (src/ and setup.cfg/pyproject.toml)
github.com/jackfromeast/CyberCoref,dataLoader.py,2022-06-20T03:11:55Z,for gold types
github.com/jackfromeast/CyberCoref,dataLoader.py,2022-06-20T01:35:33Z,update 0620
github.com/openredact/nerwhal,nerwhal/nlp_utils.py,2020-08-18T15:39:02Z,Add and improve PyDocs
github.com/openredact/nerwhal,nerwhal/nlp_utils.py,2020-08-17T14:22:47Z,Fix caught error
github.com/openredact/nerwhal,nerwhal/nlp_utils.py,2020-07-31T06:37:48Z,Catch Exception instead of FileNotFoundError
github.com/openredact/nerwhal,nerwhal/nlp_utils.py,2020-07-31T05:30:00Z,Clean tokenizer and nlp interfaces
github.com/openredact/nerwhal,nerwhal/nlp_utils.py,2020-07-30T17:05:26Z,Use context words to boost score
github.com/openredact/nerwhal,nerwhal/nlp_utils.py,2020-07-29T13:58:20Z,Use spaCy tokenizer because stanza's mwts alter the original text
github.com/openredact/nerwhal,nerwhal/nlp_utils.py,2020-07-28T15:37:51Z,Refactor and fix bugs WIP
github.com/zzsfornlp/zmsp,mspx/tools/annotate/ann_stanza.py,2023-06-20T01:13:08Z,Add some more.
github.com/zzsfornlp/zmsp,msp2/tools/annotate/ann_stanza.py,2022-10-12T18:51:22Z,Updates
github.com/zzsfornlp/zmsp,msp2/tools/annotate/ann_stanza.py,2021-06-06T20:35:18Z,Update for srl_span with msp2.
github.com/zzsfornlp/zmsp,msp2/scripts/event/prep/s2_tokenize.py,2022-10-12T18:51:22Z,Updates
github.com/utcsnlp/lfqa_discourse,role_classifier/generate_t5_input_csv_file.py,2022-03-21T02:21:04Z,add code and data
github.com/utcsnlp/lfqa_discourse,role_classifier/generate_t5_input_json_file.py,2023-10-13T14:29:31Z,update role prediction script
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/models.py,2023-10-30T14:35:26Z,Use lazy formatting in some logging
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/models.py,2023-02-20T13:00:32Z,Move ISO 639 functions to util package
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/models.py,2023-02-20T12:59:59Z,refactor: use LangaugeRegistry
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/models.py,2021-06-01T15:52:07Z,Move util package to api
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/models.py,2021-05-17T15:12:30Z,Move everything needed by Sparv modules to sparv.api package
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/models.py,2021-04-29T13:46:31Z,add Stanza support for English
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/models.py,2020-12-10T13:24:48Z,download Stanza models and embeddings separately; download specific SVN version (fixes #89)
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/models.py,2020-11-25T15:44:54Z,"add lemmatiser to stanza, re-organise module"
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-08-14T00:04:23Z,dmodify ripple_config and sos_poisoner
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-08-10T12:27:29Z,doc
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-08-10T12:17:34Z,update doc
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-08-08T16:47:02Z,update poisoner
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-08-06T15:15:40Z,fix bugs
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-08-05T09:44:12Z,fix bugs
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-04-21T11:53:18Z,"fix trojanlm, por, neuba"
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-04-07T06:06:28Z,fix trojanlm
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-04-02T14:52:09Z,fix bugs
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-03-20T13:28:42Z,add neuba and trojanlm
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-01-09T11:52:26Z,update ep sos
github.com/facebookresearch/minihack,minihack/wiki.py,2021-09-27T23:37:57Z,Initial commit
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-10-06T12:41:49Z,"Rework data loading and processing design

This change separates data loading from processing so that any dataset
in the appropriate format can be used for generating questions and to
allow for simple extension to other modalities.

 - There are now separate processors depending on the modality.

 - Also, the tests have been updated accordingly."
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-07-29T17:56:41Z,include id for passage qg
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-07-06T15:07:45Z,Updated inference notebook for PassageQG
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-07-05T07:09:29Z,PassageQG can  take answers as input
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-07-01T11:40:25Z,Merge branch 'passageqg' into tableqg
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-07-01T08:52:39Z,Stanza added to setup.py
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-06-30T18:47:05Z,minor changes from code review suggestions-2
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-06-30T14:10:22Z,"Answer sampler uses NERs  from Stanza: en, ru, ar, fi"
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-06-29T10:44:31Z,Inference notebooks for TableQG and TyDi
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-06-26T21:41:12Z,PassageQG inference works. en_core_web_sm downloades with setup
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-06-26T20:51:20Z,inference for passage QG
github.com/stanfordnlp/stanza-old,stanza/util/resource.py,2016-04-02T07:14:58Z,Fix documentation for other modules.
github.com/stanfordnlp/stanza-old,stanza/util/resource.py,2016-01-14T22:08:17Z,adding glove vectors
github.com/stanfordnlp/stanza-old,stanza/util/resource.py,2015-11-04T08:02:16Z,use logging instead of print
github.com/stanfordnlp/stanza-old,stanza/util/resource.py,2015-10-28T06:06:30Z,minor fix: do not use reversed keyword 'dir' as variable name
github.com/stanfordnlp/stanza-old,stanza/util/resource.py,2015-10-28T05:49:37Z,"add util for downloading files to local storage, senna embeddings for #2, refactored tests into fast unit tests and slow tests"
github.com/gregorycrane/Homerica,stanza-greek.py,2021-09-28T15:16:18Z,base workflow
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-20T22:29:11Z,fixes and readme updated
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-15T18:05:11Z,working on web app
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-13T16:15:06Z,mtree fixes
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-13T14:52:21Z,fix
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-13T14:43:32Z,fix stanza bug
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-13T12:48:50Z,stanza edits
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-13T12:48:21Z,fix
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-11T03:48:52Z,major text obj improvements
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-10T21:08:22Z,updates
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-09T17:13:55Z,updates
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-08T22:42:37Z,updates
github.com/zhjohnchan/PTUnifier,ptunifier/metrics/jb_scorers/RadEntityMatchExact/RadEntityMatchExact.py,2023-08-10T06:54:38Z,init
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2022-04-30T07:16:44Z,WIP
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2022-01-22T21:11:59Z,"Various improvements, clients and clients docs."
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-11-19T17:33:01Z,"Updated pythondocs, clean up code"
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-09-12T18:30:33Z,Fix #130
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-06-26T08:44:58Z,Better stanza token conversion
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-06-26T08:37:19Z,Working AnnStanza.pipe
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-06-26T07:31:08Z,"Require newer Stanza, test for Stanza pipe"
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-03-19T07:52:03Z,Fix some code style issues
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-03-17T08:04:55Z,Address #69
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-02-19T17:58:08Z,Add support for space tokens.
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-02-19T17:28:43Z,Proper MWTs.
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-02-19T16:55:34Z,Better squeezing of multiword tokens
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-02-16T16:28:25Z,Better error handling in the executor
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-11-22T08:33:27Z,black reformatting
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-11-18T19:19:53Z,WIP
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-11-13T21:06:43Z,"Require min version for bs4.
Otherwise the suppression of the parser warning does not work."
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-10-17T11:21:32Z,Use pdoc3 for documentation.
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-10-14T20:16:50Z,WIP
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-10-14T19:01:58Z,WIP
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-08-20T12:07:12Z,"Fix stanza lib problem.
Oddly something seems to have changed in how stanza represents ids.
Apparently this was string before and is int now. Just to be safe,
we always convert to string for now."
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-08-19T13:26:37Z,A few more for the changed annset.add method.
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-08-19T09:35:27Z,More API changes.
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-08-18T17:50:26Z,"Re-implementation of Features, updated documentation."
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-04-29T17:16:07Z,Add support for Stanford Stanza
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2022-02-06T11:04:17Z,Fixes #158
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2021-06-26T08:37:19Z,Working AnnStanza.pipe
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2021-06-26T07:31:08Z,"Require newer Stanza, test for Stanza pipe"
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2021-04-14T11:33:20Z,Stanza unit test: do not use GPU
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2021-04-14T11:26:38Z,"Improve unit tests.
Add basic test for GateWorker"
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2021-04-10T07:21:43Z,Cleanup code.
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2021-03-19T07:52:03Z,Fix some code style issues
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2021-02-06T17:27:45Z,"Add unit tests, fix bugs, regenerate PythonDoc."
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2021-01-30T13:14:19Z,And yet another!
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2021-01-30T13:11:41Z,And yet another
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2020-11-22T08:33:27Z,black reformatting
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2020-10-27T22:22:25Z,Avoid downloading the model if it is already there.
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2020-10-27T15:58:10Z,Try to make the test work on travis
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2020-10-27T14:01:19Z,"Fix bug in setup, remove stanfordnlp.
Add instead a test for stanza"
github.com/aajanki/finnish-pos-accuracy,download_models.py,2022-05-02T18:48:02Z,Update to spacy 3.3.0
github.com/aajanki/finnish-pos-accuracy,download_models.py,2022-04-18T18:02:49Z,Trankit large
github.com/aajanki/finnish-pos-accuracy,download_models.py,2022-04-03T08:51:32Z,move Stanza and Trankit to the models directory
github.com/aajanki/finnish-pos-accuracy,download_models.py,2022-04-02T16:28:21Z,"UralicNLP, only lemmatization"
github.com/aajanki/finnish-pos-accuracy,download_models.py,2022-04-02T13:33:07Z,trankit
github.com/aajanki/finnish-pos-accuracy,download_models.py,2022-04-02T06:39:14Z,"Remove spacy_stanfordnlp, add Stanza"
github.com/aajanki/finnish-pos-accuracy,download_models.py,2019-10-28T18:03:40Z,Move stanfordnlp resources under data
github.com/aajanki/finnish-pos-accuracy,download_models.py,2019-10-27T16:49:41Z,spacy-stanfordnlp
github.com/aajanki/finnish-pos-accuracy,download_models.py,2019-10-27T16:28:10Z,udpipe Finnish FTB model
github.com/aajanki/finnish-pos-accuracy,download_models.py,2019-10-27T13:19:19Z,udpipe evaluation
github.com/EclipseCN/PhenoBERT,setup.py,2021-06-09T13:22:42Z,fix installation
github.com/EclipseCN/PhenoBERT,setup.py,2020-12-01T06:59:56Z,ver1.0.5
github.com/EclipseCN/PhenoBERT,setup.py,2020-12-01T06:56:34Z,del
github.com/EclipseCN/PhenoBERT,setup.py,2020-11-30T10:25:49Z,ver1.0.0
github.com/EclipseCN/PhenoBERT,setup.py,2020-11-30T06:11:36Z,add pypi
github.com/EclipseCN/PhenoBERT,setup.py,2020-11-30T05:28:19Z,ver1.0.0
github.com/EclipseCN/PhenoBERT,setup.py,2020-11-30T05:24:13Z,ver1.0.0
github.com/EclipseCN/PhenoBERT,setup.py,2020-11-30T03:06:47Z,ver1.0.0
github.com/text-processing/prose-rhythm-detector,app/statistic_utils/PoS_ngram.py,2022-05-13T13:43:59Z,Update PoS_ngram.py
github.com/text-processing/prose-rhythm-detector,app/statistic_utils/PoS_ngram.py,2022-05-12T10:35:00Z,Add PoS count utils
github.com/text-processing/prose-rhythm-detector,app/statistic_utils/PoS_count.py,2022-05-13T13:43:45Z,Update PoS_count.py
github.com/text-processing/prose-rhythm-detector,app/statistic_utils/PoS_count.py,2022-05-12T10:35:00Z,Add PoS count utils
github.com/text-processing/prose-rhythm-detector,app/statistic_utils/statistic_util.py,2020-11-18T14:33:42Z,Add the new version of ProseRhythmDetector
github.com/text-processing/prose-rhythm-detector,app/statistic_utils/statistic_util.py,2020-06-05T13:52:49Z,Add classification
github.com/text-processing/prose-rhythm-detector,app/statistic_utils/statistic_util.py,2020-02-24T16:05:52Z,Add the license to all files
github.com/luohongyin/RGX,rgx_doc.py,2022-06-29T15:30:47Z,huggingface hub and demo
github.com/luohongyin/RGX,rgx_doc.py,2022-06-28T22:12:23Z,stanza download
github.com/luohongyin/RGX,rgx_doc.py,2022-06-27T23:16:10Z,first commit
github.com/pmchozas/termitup,modules_api/postprocess.py,2021-07-04T16:09:25Z,fixed non-term pattern deletion + updated req
github.com/pmchozas/termitup,modules_api/postprocess.py,2021-03-04T16:31:00Z,added postproc
github.com/pmchozas/termitup,modules_api/postprocess.py,2021-03-04T16:30:17Z,Delete postprocess.py
github.com/pmchozas/termitup,modules_api/postprocess.py,2021-02-17T11:49:09Z,tag verb
github.com/pmchozas/termitup,modules_api/postprocess.py,2021-02-15T11:42:24Z,tags
github.com/pmchozas/termitup,modules_api/postprocess.py,2021-02-12T16:21:54Z,corenlp server updated
github.com/pmchozas/termitup,modules_api/postprocess.py,2021-02-09T11:42:19Z,corenlp server updated
github.com/pmchozas/termitup,modules_api/postprocess.py,2020-10-16T13:18:49Z,bug fixed
github.com/pmchozas/termitup,modules_api/postprocess.py,2020-10-15T17:59:25Z,changes in swagger methods
github.com/pmchozas/termitup,modules_api/postprocess.py,2020-10-14T17:56:23Z,many changes with small success
github.com/pmchozas/termitup,modules_api/postprocess.py,2020-09-14T14:26:13Z,API advances
github.com/pmchozas/termitup,modules_api/delete_patterns_flair.py,2021-07-04T16:09:25Z,fixed non-term pattern deletion + updated req
github.com/lang-uk/ner-uk,scripts/eval_ner_models.py,2021-08-02T19:52:43Z,"fix: Cleanup of eval script

- whitespaces
- more docs
- cleanup of debug output"
github.com/lang-uk/ner-uk,scripts/eval_ner_models.py,2021-07-28T07:36:24Z,Minor cleanup and doc udpate
github.com/lang-uk/ner-uk,scripts/eval_ner_models.py,2021-07-28T07:29:40Z,"feat: Evaluation logic for mitie and stanza models

- converting model output to iob format
- classification report with sklearn"
github.com/hltcoe/patapsco,patapsco/text.py,2022-12-19T21:04:18Z,fixes issues caused by pymorphy and unnamed unicode characters
github.com/hltcoe/patapsco,patapsco/text.py,2022-05-25T18:12:12Z,fixed pep8 issues
github.com/hltcoe/patapsco,patapsco/text.py,2021-11-03T22:52:24Z,changed stanza chinese processing to use neural model
github.com/hltcoe/patapsco,patapsco/text.py,2021-11-03T22:38:06Z,finished jieba integration
github.com/hltcoe/patapsco,patapsco/text.py,2021-11-03T12:33:51Z,standalone jieba tokenizer
github.com/hltcoe/patapsco,patapsco/text.py,2021-10-19T20:55:32Z,temporarily adds jieba back through stanza - stanza model loading and downloading needs work
github.com/hltcoe/patapsco,patapsco/text.py,2021-10-18T18:14:14Z,Fixes #2 removes hard coded locations for models
github.com/hltcoe/patapsco,patapsco/text.py,2021-10-18T18:04:54Z,update text processing to remove dependencies on install locations
github.com/hltcoe/patapsco,patapsco/text.py,2021-07-20T13:18:26Z,using named arguments
github.com/hltcoe/patapsco,patapsco/text.py,2021-07-11T12:59:14Z,adds updated parsivar dependency for Farsi stemming
github.com/hltcoe/patapsco,patapsco/text.py,2021-07-09T00:00:02Z,adds farsi stemmer
github.com/hltcoe/patapsco,patapsco/text.py,2021-06-29T17:50:09Z,catches recursion error in porter stemmer and passes the token through unchanged
github.com/hltcoe/patapsco,patapsco/text.py,2021-06-23T18:17:25Z,cleaned up lowercase normalization
github.com/hltcoe/patapsco,patapsco/text.py,2021-06-09T21:59:24Z,limit stanza to a single thread for now
github.com/hltcoe/patapsco,patapsco/text.py,2021-06-09T21:09:27Z,stanza also needs to the package turned off when using jieba to prevent it from loading the kitchen sink
github.com/hltcoe/patapsco,patapsco/text.py,2021-06-08T19:24:48Z,only download resources when not already there for stanza
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-28T14:26:40Z,"Merge branch 'load_psq_table' into 'master'

Handles loading PSQ translation tables

See merge request research/scale2021!124"
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-28T12:44:30Z,can use ~ in model path
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-28T11:54:24Z,fixed error message that had old config path
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-27T23:30:26Z,put most of the infrastructure in place to generate PSQs
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-27T19:48:38Z,adds pre and post functions for normalization
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-25T20:20:04Z,delay loading nlp models until the pipeline begins
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-25T20:16:05Z,cleaned up inheritance for text processing
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-24T22:16:42Z,only load some nlp libraries when needed
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-22T19:31:53Z,Fixes #101 stop words works with stemming now
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-22T18:07:08Z,removed multiplex support from patapsco
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-22T15:49:29Z,switch to ISO 639-3
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-22T14:40:10Z,better construction of tokenizers and stemmers
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-22T13:08:46Z,porter stemming shouldn't also lowercase the stems
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-21T20:21:12Z,first part of porter stemmer implementation
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-21T19:33:09Z,improve configuration of text processing including model path
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-21T18:56:50Z,removed a debugging statement
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-20T12:29:47Z,adds stemming for spaCy
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-20T11:26:31Z,adds tests for stanza lemmatization and fixes issue with Arabic
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-19T22:52:47Z,restructure how tokenizers are built
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-19T20:25:38Z,"Merge branch 'master' into 'normalize_text'

# Conflicts:
#   infrastructure/pipeline/environment.yml
#   infrastructure/pipeline/patapsco/text.py
#   infrastructure/pipeline/setup.py"
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-19T14:58:49Z,adds character ngrams
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-19T13:13:25Z,adds moses tokenizer
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-18T13:10:57Z,correctly using model name or path to model directory in loader
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-18T12:36:57Z,fixed style issue and set spacy version
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-18T12:35:02Z,update model locations
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-18T12:16:03Z,updated spacy code and tests
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-18T11:35:06Z,adds spacy tokenization
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-15T23:23:46Z,switch to our own normalization code
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-11T00:21:16Z,fixed typo on stanza location on grid
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-10T22:59:41Z,the model path for stanza can be set now
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-04T13:00:11Z,"Merge branch 'master' into 'add_stanza'

# Conflicts:
#   infrastructure/pipeline/patapsco/text.py"
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-04T12:53:19Z,adds chinese tokenization using jieba
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-04T12:00:10Z,better logging for stanza
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-04T11:34:16Z,fixes spelling mistake
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-04T11:29:53Z,added StanzaTokenizer for english
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-04T11:08:15Z,Refs #9 integrates scriptnorm
github.com/hltcoe/patapsco,patapsco/text.py,2021-04-24T16:05:51Z,better name for mock stemmer
github.com/hltcoe/patapsco,patapsco/text.py,2021-04-24T15:45:54Z,moved config schema into a single file
github.com/hltcoe/patapsco,patapsco/text.py,2021-04-23T18:03:56Z,better validation of config with unit tests for building the pipelines
github.com/hltcoe/patapsco,patapsco/text.py,2021-04-23T13:55:30Z,standardizes text processing config
github.com/hltcoe/patapsco,patapsco/text.py,2021-04-20T12:50:19Z,fixed bug with a single split
github.com/hltcoe/patapsco,patapsco/text.py,2021-04-19T20:35:27Z,adds splitter for text processing
github.com/hltcoe/patapsco,patapsco/text.py,2021-04-19T19:26:27Z,adds stop words
github.com/hltcoe/patapsco,patapsco/text.py,2021-04-16T22:52:22Z,renamed the pipeline package to patapsco
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2023-03-09T09:39:14Z,Refactored StanzaSyntax(Ensemble)Tagger: moved prepare_input_doc & feats_to_ordereddict to common_utils
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2023-03-08T16:16:18Z,Refactored & fixed StanzaSyntax(Ensemble)Tagger's input preparation: should now also work on detached layers
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2023-01-27T13:58:15Z,Updated StanzaSyntax(Ensemble)Tagger: added guarding exceptions against processing too long sentences with GPU / CUDA
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2023-01-19T12:05:04Z,Updated StanzaSyntax(Ensemble)Tagger: relocated initialization of Random obj into the constructor. Also made ensemble_tagger's random choice of max score dependency parses configurable by seed
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2023-01-18T09:54:46Z,Updated StanzaSyntax(Ensemble)Tagger: made random pick seed of ambiguous analyses configurable
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2022-04-22T10:41:17Z,"Fixed StanzaSyntax(Ensemble)Tagger's conf_param (removed missing parameters, set default values to None)"
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2022-04-22T09:15:51Z,Made StanzaSyntax(Ensemble)Tagger to automatically download missing resources + removed usage of environment variables
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2022-03-30T15:01:35Z,Fixed estnltk_neural setup: added missing stanza_resources json file
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2022-03-30T14:37:16Z,Made StanzaSyntax(Ensemble)Tagger to use STANZA_SYNTAX_MODELS_PATH & added smoke test for ensemble_tagger
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2021-11-17T13:57:32Z,Updated StanzaSyntaxTagger's docstring and added check for mismatching input_type and input_morph_layer
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2021-11-17T09:57:04Z,"Relocated morph_analysis, text_segmentation, syntax, ner, timexes into estnltk.taggers.standard"
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2021-10-22T15:24:58Z,estnltk neural additions and moving around other files
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2023-04-24T08:16:32Z,Updated StanzaSyntaxEnsembleTagger: added majority_voting aggregation algorithm
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2023-03-09T09:39:14Z,Refactored StanzaSyntax(Ensemble)Tagger: moved prepare_input_doc & feats_to_ordereddict to common_utils
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2023-03-08T16:16:18Z,Refactored & fixed StanzaSyntax(Ensemble)Tagger's input preparation: should now also work on detached layers
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2023-01-27T13:58:15Z,Updated StanzaSyntax(Ensemble)Tagger: added guarding exceptions against processing too long sentences with GPU / CUDA
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2023-01-19T12:05:04Z,Updated StanzaSyntax(Ensemble)Tagger: relocated initialization of Random obj into the constructor. Also made ensemble_tagger's random choice of max score dependency parses configurable by seed
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2023-01-18T09:54:46Z,Updated StanzaSyntax(Ensemble)Tagger: made random pick seed of ambiguous analyses configurable
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2022-04-22T10:41:17Z,"Fixed StanzaSyntax(Ensemble)Tagger's conf_param (removed missing parameters, set default values to None)"
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2022-04-22T09:15:51Z,Made StanzaSyntax(Ensemble)Tagger to automatically download missing resources + removed usage of environment variables
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2022-03-30T14:37:16Z,Made StanzaSyntax(Ensemble)Tagger to use STANZA_SYNTAX_MODELS_PATH & added smoke test for ensemble_tagger
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2022-03-05T09:03:17Z,Import fixes in estnltk_neural + added missing package_data
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2021-11-17T09:57:04Z,"Relocated morph_analysis, text_segmentation, syntax, ner, timexes into estnltk.taggers.standard"
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2021-10-22T15:24:58Z,estnltk neural additions and moving around other files
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/phrase_extraction_decorator/stanza_syntax_tagger.py,2023-06-05T10:40:53Z,move StanzaSytaxTaggerWithIgnore and ConsistencyDecorator to estnltk_neural
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/tests/taggers/syntax/test_stanza_tagger.py,2023-03-08T16:16:18Z,Refactored & fixed StanzaSyntax(Ensemble)Tagger's input preparation: should now also work on detached layers
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/tests/taggers/syntax/test_stanza_tagger.py,2023-01-23T09:17:26Z,Updated conllu importer tutorial about removing empty nodes
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/tests/taggers/syntax/test_stanza_tagger.py,2023-01-19T12:05:04Z,Updated StanzaSyntax(Ensemble)Tagger: relocated initialization of Random obj into the constructor. Also made ensemble_tagger's random choice of max score dependency parses configurable by seed
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/tests/taggers/syntax/test_stanza_tagger.py,2022-04-22T09:15:51Z,Made StanzaSyntax(Ensemble)Tagger to automatically download missing resources + removed usage of environment variables
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/tests/taggers/syntax/test_stanza_tagger.py,2022-03-30T11:35:58Z,Added abs_path to estnltk_neural and fixed tests using abs_path
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/tests/taggers/syntax/test_stanza_tagger.py,2022-01-27T11:24:50Z,Fix: added missing 'secondary_attributes'
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/tests/taggers/syntax/test_stanza_tagger.py,2021-10-22T15:24:58Z,estnltk neural additions and moving around other files
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/tests/taggers/syntax/test_stanza_ensemble_tagger.py,2023-04-24T08:16:32Z,Updated StanzaSyntaxEnsembleTagger: added majority_voting aggregation algorithm
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/tests/taggers/syntax/test_stanza_ensemble_tagger.py,2023-03-08T16:16:18Z,Refactored & fixed StanzaSyntax(Ensemble)Tagger's input preparation: should now also work on detached layers
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/tests/taggers/syntax/test_stanza_ensemble_tagger.py,2023-01-19T12:05:04Z,Updated StanzaSyntax(Ensemble)Tagger: relocated initialization of Random obj into the constructor. Also made ensemble_tagger's random choice of max score dependency parses configurable by seed
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/tests/taggers/syntax/test_stanza_ensemble_tagger.py,2022-04-22T09:15:51Z,Made StanzaSyntax(Ensemble)Tagger to automatically download missing resources + removed usage of environment variables
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/tests/taggers/syntax/test_stanza_ensemble_tagger.py,2022-03-30T14:37:16Z,Made StanzaSyntax(Ensemble)Tagger to use STANZA_SYNTAX_MODELS_PATH & added smoke test for ensemble_tagger
github.com/VPeterV/Structured-MFVI,supar/utils/tokenizer.py,2024-01-05T10:39:05Z,Structured MFVI
github.com/dh-miami/narratives_covid19,scripts/topic_modelling/topic_modelling.py,2020-08-31T22:08:37Z,add NER and parallelization
github.com/dh-miami/narratives_covid19,scripts/topic_modelling/topic_modelling.py,2020-08-04T02:21:44Z,topic modelling update
github.com/s-nlp/multilingual-fake-news,tools/features_extraction.py,2021-02-01T21:47:44Z,ACL 2021 update
github.com/zhijing-jin/ARTS_TestSet,code/utils.py,2020-06-14T20:06:18Z,first commit
github.com/princeton-nlp/MultilingualAnalysis,preprocessing/xnli/convert_dataset_to_dependency.py,2021-04-08T06:05:05Z,XNLI syntax modifications
github.com/princeton-nlp/MultilingualAnalysis,preprocessing/ner_pos/convert_dataset_to_dependency.py,2021-10-06T04:28:02Z,Modified unicode handling
github.com/princeton-nlp/MultilingualAnalysis,preprocessing/ner_pos/convert_dataset_to_dependency.py,2021-04-09T04:56:12Z,NER and POS syntax modif
github.com/princeton-nlp/MultilingualAnalysis,preprocessing/sentence_retrieval/convert_dataset_to_dependency.py,2021-04-11T02:20:45Z,Preprocessing for tatoeba
github.com/princeton-nlp/MultilingualAnalysis,preprocessing/dependency_parsing/convert_sentences_to_dependency.py,2021-04-04T17:35:01Z,Slurm files
github.com/princeton-nlp/MultilingualAnalysis,preprocessing/dependency_parsing/convert_sentences_to_dependency.py,2021-03-22T04:33:09Z,Convert MNLI to syntax synthetic
github.com/princeton-nlp/MultilingualAnalysis,preprocessing/dependency_parsing/convert_sentences_to_dependency.py,2021-03-21T05:02:06Z,Fixed error in dependency parsing
github.com/princeton-nlp/MultilingualAnalysis,preprocessing/dependency_parsing/convert_sentences_to_dependency.py,2021-03-20T06:03:04Z,File clean up
github.com/mehdi-mirzapour/French-CRS,french_crs/fast_text2corefchains.py,2020-06-16T02:00:49Z,Closest-First Strategy Added
github.com/IreneZihuiLi/EHRKit-2022,wrapper_functions/utils.py,2022-04-05T16:00:34Z,First Commit
github.com/IreneZihuiLi/EHRKit-2022,wrapper_functions/stanza_functions.py,2022-04-05T16:00:34Z,First Commit
github.com/IreneZihuiLi/EHRKit-2022,collated_tasks/tasks/utils/get_clusters.py,2022-04-05T16:00:34Z,First Commit
github.com/IreneZihuiLi/EHRKit-2022,collated_tasks/tasks/utils/get_sentences.py,2022-04-05T16:00:34Z,First Commit
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-11-13T12:39:27Z,Changed default mongoDB & remove unused method in analysis
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-11-11T16:06:38Z,Similarity now returns -1 instead of raising an error. The error should be handled in the frontend.
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-11-11T14:38:11Z,Removed an unnecessary parameter & fixed token counting
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-10-30T10:41:07Z,Merge branch 'multi-processing' into master
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-10-22T16:25:36Z,Removed deprecated keywords
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-10-21T17:39:52Z,"Api calls now respect default values correctly (done by **kwargs mapping).
Some api keywords have been changed to match the function keywords of analysis.py.
Fixed some minor bugs in analysis & api.
Tested all api functions."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-10-13T12:20:25Z,"Added two different execution queues for celery (small & big corpora).
Added configuration file:
Server mode (=> use celery task queue or not)
MongoDB constants
Analysis threads
Celery configuration"
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-10-11T12:47:13Z,"Added a self-compiled version of blackstone.
The project is now compatible with spaCy 2.1.9.
Updated requirments.txt
Exchanged a linux-only cpu core determiner function with a cross-platform one (however this function does not account for artifical cpu restrictions of the process!)."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-10-09T16:09:01Z,Added filtering for part of speech tags.
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-10-07T15:26:11Z,"Added multi-threaded pipeline execution.
Celex numbers are now part of the corpus (get via get_celex_numbers).
Adjusted api keywords and fixed none type errors in api_functions for _per_doc functions."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-30T17:23:31Z,"Deleted duplicate functions from analysis (e.g. word & token count use the same logic with other params).
Updated api functions accordingly.
Added initalisation of analysers to flask start up."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-29T11:37:55Z,"Added n_grams_per_doc.
Added imports for model packages (so python throws an error, when they are not correctly installed)
Updated pre-processing
Added stanza downloading every setup (no other way currently known to download them via pip)"
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-28T15:02:46Z,Adjusted api functions to work with modified analysis.
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-25T13:29:49Z,"Generalized CorpusAnalysis class to also work for single documents.
Removed obsolete Analysis class.
Added detailed Python docstrings to public functions."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-25T10:07:25Z,"Added sentiment calculation for a whole corpus.
Added readbility score for each document in a corpus.
Code clean up."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-22T17:52:01Z,Added compound cases to NER detection
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-22T15:36:46Z,"Added sentiment analysis to single documents.
Improved pre-processing with another RegEx for parentheses.
Added compound cases to NER detection for english texts.
Added legal text sentencer to german pipeline.
Should have fixed problems with sentence segementer being already present."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-21T14:55:12Z,"Generalized get_tokens to also account for various part of speech tags & frequency.
Fixed a bug, where empty tokens haven't been removed.
Fixed n_grams for CorpusAnalysis.
Added key word extraction for single documents."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-19T18:01:13Z,"Added a new regex to remove old headers.
Fixed some typos"
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-16T16:49:48Z,"Removed deprecated files.
Added sentence counting."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-16T16:23:50Z,"Added _per_doc functions for corpus analysis:
- tokens
- sentences
- part of speech tags
- lemmata
- named entities
Fixed list comprehention errors."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-15T19:54:23Z,"Added n-grams for single documents.
Added a class for corpus representation and analysis (n_doc > 1)"
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-14T22:06:38Z,"Rewrote readbility scores.
Added working lda implementation for a corpus."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-14T14:10:44Z,"Rewrote the implementation which is now based on another library (old were too slow).
Added document similarity based on word-embeddings (aka word2vec).
Additionally added more sophisticated preprocessing (mostly regex):
- older texts are now getting tokenized better
- headlines of all older formats (until 2003) are getting removed
- all paragraphs numbers are getting removed correctly (except for lines with in-text headlines)"
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-02T13:44:32Z,Added german lemmatisation and pos tagging
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-02T12:29:20Z,Added text complexity & basic LDA
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-01T16:23:08Z,Added most frequent words & avg token length
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-01T15:46:08Z,"Added tokenisation, lemmatisation & POS tagging"
github.com/BramVanroy/astred,astred/utils.py,2021-10-07T09:58:10Z,make style
github.com/BramVanroy/astred,astred/utils.py,2021-06-15T12:37:34Z,make logging level adjustable for stanza
github.com/BramVanroy/astred,astred/utils.py,2021-04-02T12:53:18Z,"allow loading spacy shortcuts

even though that is not possible anymore in v3. We look for available models and load the first one that starts with ""{model_name}_"""
github.com/BramVanroy/astred,astred/utils.py,2021-04-01T14:01:46Z,fix spacy warning
github.com/BramVanroy/astred,astred/utils.py,2021-04-01T10:44:01Z,"check spaCy version

registering Language.component is a v3 feature"
github.com/BramVanroy/astred,astred/utils.py,2021-04-01T10:08:27Z,make style & quality
github.com/BramVanroy/astred,astred/utils.py,2021-04-01T10:01:11Z,typing improvements
github.com/BramVanroy/astred,astred/utils.py,2021-04-01T08:36:42Z,"allow disabling auto_download

This may help in scenarios where there is no more access to the internet"
github.com/BramVanroy/astred,astred/utils.py,2021-03-31T17:27:51Z,do not exclude tok2vec which seems important
github.com/BramVanroy/astred,astred/utils.py,2021-03-31T16:46:01Z,Download stanza model if not available
github.com/BramVanroy/astred,astred/utils.py,2021-03-31T16:32:50Z,cached_property for Python <3.8
github.com/BramVanroy/astred,astred/utils.py,2021-03-31T15:31:35Z,allow instantiation of spaCy (but require 3+)
github.com/BramVanroy/astred,astred/utils.py,2021-03-31T12:50:16Z,"make stanza, aligner, spacy optional"
github.com/BramVanroy/astred,astred/utils.py,2021-03-31T09:54:05Z,make style & quality
github.com/BramVanroy/astred,astred/utils.py,2021-02-24T14:05:04Z,Do not show verbose INFO logs for stanza
github.com/BramVanroy/astred,astred/utils.py,2021-02-17T17:48:03Z,MWT should be automatically added in new stanza
github.com/BramVanroy/astred,astred/utils.py,2021-02-08T16:55:25Z,new stanza does not silently ignore missing processors anymore
github.com/BramVanroy/astred,astred/utils.py,2021-01-13T08:47:12Z,style and typing
github.com/BramVanroy/astred,astred/utils.py,2021-01-07T15:41:17Z,full refactor
github.com/BramVanroy/astred,astred/utils.py,2020-06-04T14:47:08Z,refactoring n1
github.com/BramVanroy/astred,astred/utils.py,2020-06-02T09:55:55Z,fix typing
github.com/BramVanroy/astred,astred/utils.py,2020-06-02T09:37:28Z,Rename AlignmentPair to AlignedIdxs and add Alignment class
github.com/BramVanroy/astred,astred/utils.py,2020-03-25T13:13:28Z,Make style
github.com/BramVanroy/astred,astred/utils.py,2020-03-25T11:13:50Z,include MWT processor for languages that support it
github.com/BramVanroy/astred,astred/utils.py,2020-03-25T10:17:13Z,move get_distance to utils
github.com/BramVanroy/astred,astred/utils.py,2020-03-19T13:49:58Z,remove unused import
github.com/BramVanroy/astred,astred/utils.py,2020-03-19T13:47:22Z,style
github.com/BramVanroy/astred,astred/utils.py,2020-03-18T15:57:39Z,"Don't download

Models need to be downloaded manually by users"
github.com/BramVanroy/astred,astred/utils.py,2020-03-18T15:00:59Z,use astred as package name
github.com/mit-ccc/TweebankNLP,twitter-stanza/demo/pipeline_demo.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/tests/resources/test_common.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/tests/resources/test_installation.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/xjtu-intsoft/chase,Benchmark_Approaches/DuoratChar/duorat/utils/tokenization.py,2021-08-02T03:02:02Z,Add benchmark approaches
github.com/QtacierP/PRIOR,codes/prior/data/pretrain/text_process.py,2023-08-03T06:36:32Z,pre-train codes
github.com/philip-mueller/lovt,src/data/text_utils/sentence_splitting.py,2021-11-05T09:06:35Z,Added code
github.com/NLP-Suite/NLP-Suite,src/SENNA_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/SENNA_util.py,2023-05-30T16:00:54Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI;
4. added the chart visualization to BERT NER;
5. uniformed the output layout of spaCy NER to all other NER packages;
6. fixed a bug in reminders;
7 fixed bugs in the opening of output files in the CoNLL_table_analyzer_main GUI;"
github.com/NLP-Suite/NLP-Suite,src/SENNA_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2024-02-06T02:24:23Z,"1. added a vocab csv output file when computing 1-grams;
2. fixed potential bug with Stanza not installed in NLP_menu_main when selecting Setup default NLP parsers & annotators...
3. fixed a bug in data_visualization_main_1 with the Treemap option."
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-11-21T19:51:41Z,"1. fixed a bug with wordcloud visualization when using a csv file in input;
2. extended the POS NPOUN to include proper nouns in Wordclouds;
3. added a checkbox to compute corpus statistics by POS (Part of Speech) tag value in the statistics_txt_main GUI;
4. uniformed the handling of ,'GUIs available for more options' in all GUIs that rely on the checkbox and menu."
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-10-05T00:06:18Z,"1. fixed a bug with Gephi;
2. fixed bugs in the function statistics_csv_util.compute_csv_column_frequencies with no groups;
3. fixed the wrong display of Infinitive verbs frequency."
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-09-30T15:43:33Z,"1. fixed bugs in the creation of charts for document statistics and other charts;
2. improved the output layout for sentiment analysis algorithms."
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-09-29T16:49:39Z,"1. fixed an inconsequential bug in the export of sentiment analysis scores for Stanza;
2. fixed a bug in the export of charts for sentiment analysis scores."
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-09-22T13:41:01Z,"1. Fixed a minor issue in the parsers_annotators_main with the CoNLL_table_analyzer checkbox state (normal/disabled);
2. uniformed the MAC & Windows width for OK + Reset Show buttons in all GUIs."
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-09-21T12:05:01Z,"1. uniformed the width of Open file/dictionary buttons in all GUIs;
2. improved the layout of the html_gender_annotator GUI;
3. fixed a bug with language selection in Stanza."
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-06-17T08:29:03Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-06-14T07:27:54Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-06-12T12:59:48Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-06-04T17:32:29Z,"1. rewrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI;
4. added the chart visualization to BERT NER;
5. uniformed the output layout of spaCy NER to all other NER packages;
6. fixed a bug in reminders;
7 fixed bugs in the opening of output files in the CoNLL_table_analyzer_main GUI;
8. fixed bugs in the statistics_csv_main GUIs;"
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-05-30T16:00:54Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI;
4. added the chart visualization to BERT NER;
5. uniformed the output layout of spaCy NER to all other NER packages;
6. fixed a bug in reminders;
7 fixed bugs in the opening of output files in the CoNLL_table_analyzer_main GUI;"
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/wordclouds_util.py,2023-11-25T11:01:41Z,1. fixed a bug in the creation of a wordcloud with an empty input file.
github.com/NLP-Suite/NLP-Suite,src/wordclouds_util.py,2023-11-22T09:13:51Z,"1. in the SVO swordclouds visualization, set the collocations parameter to False to avoid potential repetition of the same words;
2. added new options to the dropdown menus in NL_menu_main for statistical tools of textual analysis;
 3. fixed chart display bugs in the computation of clause, noun, verb, function words in the CoNLL table analyzer;
4. added computation of overall noun and verb lists and frequencies in the CoNLL table analyzer;"
github.com/NLP-Suite/NLP-Suite,src/wordclouds_util.py,2023-11-21T19:51:41Z,"1. fixed a bug with wordcloud visualization when using a csv file in input;
2. extended the POS NPOUN to include proper nouns in Wordclouds;
3. added a checkbox to compute corpus statistics by POS (Part of Speech) tag value in the statistics_txt_main GUI;
4. uniformed the handling of ,'GUIs available for more options' in all GUIs that rely on the checkbox and menu."
github.com/NLP-Suite/NLP-Suite,src/wordclouds_util.py,2023-10-12T13:34:06Z,"1. added M.K.A. Halliday's high-value, median-value, and low-value classification of modal verbs in CoNLL_verb_analysis_util;
2. added a wordcloud display to the output of a CoNLL_table_search_util.py."
github.com/NLP-Suite/NLP-Suite,src/wordclouds_util.py,2023-10-11T15:48:06Z,"1. In the Style analysis GUI, modified the Vocabulary analysis option for Short words (<4 characters) to compute, instead, the word length for all words in a corpus;
2. fixed bug in wordclouds_util word_str referenced before assignment."
github.com/NLP-Suite/NLP-Suite,src/wordclouds_util.py,2023-10-08T17:24:19Z,1. fixed a config filename bug in coreference_main.py.
github.com/NLP-Suite/NLP-Suite,src/wordclouds_util.py,2023-09-08T02:05:20Z,"1. fixed a bug in wordclouds_main GUI with wrong filename;
2. fixed a bug with Mac external software installation."
github.com/NLP-Suite/NLP-Suite,src/wordclouds_util.py,2023-06-04T17:32:29Z,"1. rewrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI;
4. added the chart visualization to BERT NER;
5. uniformed the output layout of spaCy NER to all other NER packages;
6. fixed a bug in reminders;
7 fixed bugs in the opening of output files in the CoNLL_table_analyzer_main GUI;
8. fixed bugs in the statistics_csv_main GUIs;"
github.com/NLP-Suite/NLP-Suite,src/wordclouds_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/Stanza_functions.py,2024-02-07T03:09:41Z,1. fixed bug in file_search_byWord_main when running the case sensitive/insensitive option.
github.com/NLP-Suite/NLP-Suite,src/Stanza_functions.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/IO_libraries_util.py,2024-02-07T03:09:41Z,1. fixed bug in file_search_byWord_main when running the case sensitive/insensitive option.
github.com/NLP-Suite/NLP-Suite,src/IO_libraries_util.py,2024-01-25T17:09:34Z,"1. fixed a bug in the NLP_menu_main when selecting the Co-Occurrences VIEWER and N-Grams VIEWER;
3. removed the unnamed column in n-grams csv output thuus removing a bug in the Search word(s) option in the N-grams Co-Occurrences GUI."
github.com/NLP-Suite/NLP-Suite,src/IO_libraries_util.py,2023-11-17T13:59:01Z,1. added CLOSE button to coref results and passed the right file back to SVO when doing manual coreferencing.
github.com/NLP-Suite/NLP-Suite,src/IO_libraries_util.py,2023-10-28T00:20:05Z,1. nominalization creates a line chart with values by date if the files embed a date.
github.com/NLP-Suite/NLP-Suite,src/IO_libraries_util.py,2023-10-27T02:08:00Z,1. completed the work on generalizing the special charts to process any number and types of csv file fields.
github.com/NLP-Suite/NLP-Suite,src/IO_libraries_util.py,2023-10-05T00:06:18Z,"1. fixed a bug with Gephi;
2. fixed bugs in the function statistics_csv_util.compute_csv_column_frequencies with no groups;
3. fixed the wrong display of Infinitive verbs frequency."
github.com/NLP-Suite/NLP-Suite,src/IO_libraries_util.py,2023-09-08T02:05:20Z,"1. fixed a bug in wordclouds_main GUI with wrong filename;
2. fixed a bug with Mac external software installation."
github.com/NLP-Suite/NLP-Suite,src/IO_libraries_util.py,2023-09-01T18:08:08Z,"1. Improved the display of information when clicking on a Google Earth Pro pin in GIS_main;
2. improved the user interface in the functions behind the NLP_setup_external_software_main.py GUI;
3. fixed a filename bug in opening the config file NLP_default_package_language_config.csv;
4. fixed a bug in GUI-specific I/O configuration not updating."
github.com/NLP-Suite/NLP-Suite,src/IO_libraries_util.py,2023-09-01T11:50:28Z,"1. Improved the display of information when clicking on a Google Earth Pro pin in GIS_main;
2. improved the user interface in the functions behind the NLP_setup_external_software_main.py GUI."
github.com/NLP-Suite/NLP-Suite,src/IO_libraries_util.py,2023-06-10T18:01:13Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/IO_libraries_util.py,2023-05-30T16:00:54Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI;
4. added the chart visualization to BERT NER;
5. uniformed the output layout of spaCy NER to all other NER packages;
6. fixed a bug in reminders;
7 fixed bugs in the opening of output files in the CoNLL_table_analyzer_main GUI;"
github.com/NLP-Suite/NLP-Suite,src/IO_libraries_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2024-02-11T15:52:51Z,"1. fixed a bug in the display of headers in file_search_byWord;
2. added the lemmatize option in the file_search_byWord search."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2024-02-06T02:24:23Z,"1. added a vocab csv output file when computing 1-grams;
2. fixed potential bug with Stanza not installed in NLP_menu_main when selecting Setup default NLP parsers & annotators...
3. fixed a bug in data_visualization_main_1 with the Treemap option."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2024-01-29T11:32:14Z,1. fixed a bug in a function call in the file_checker_converter_cleaner_main due to wrong number of parameters passed.
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2024-01-26T03:30:54Z,"1. fixed potential bug in importing stanza;
2. fixed bug in computing document(s) statistics."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2024-01-11T11:31:01Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI;
3. fixed wrong warning in SVO GUI for gender and quote annotators;
4. added Sankey charts to SVO output."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-11-27T12:12:33Z,"1. fixed a bug in the creation of a wordcloud with an empty input file;
2. added an Organizations column in the SVO output;
3. improved Stanford CoreNLP SVO using entitymentions values for Subjects and Objects;
4. introduced a new GUI for a pipeline of data quality algorithms (file_checker_pre_processing_pipeline_main.py)."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-11-25T11:01:41Z,1. fixed a bug in the creation of a wordcloud with an empty input file.
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-11-21T19:51:41Z,"1. fixed a bug with wordcloud visualization when using a csv file in input;
2. extended the POS NPOUN to include proper nouns in Wordclouds;
3. added a checkbox to compute corpus statistics by POS (Part of Speech) tag value in the statistics_txt_main GUI;
4. uniformed the handling of ,'GUIs available for more options' in all GUIs that rely on the checkbox and menu."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-30T16:21:03Z,1. moved the corpus statistics under the text statistics GUI and out of style analysis.
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-29T12:07:38Z,"1. improved the n-grams scripts;
2. added a line chart to the n-gram search for 1-grams;
3. corrected the sort in the function  get_data_to_be_plotted_with_counts leaving sorting in the order of the x-axis values;
4. organized N-grams output ny n-gram number."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-28T15:36:33Z,1. improved the n-grams scripts.
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-28T12:41:58Z,1. improved the n-grams scripts.
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-27T02:08:00Z,1. completed the work on generalizing the special charts to process any number and types of csv file fields.
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-24T12:36:09Z,"1. prepared the data_visualization_1_main.py GUI to process multiple selections of fields/search values. TO BE CONTINUED;
2. added Sankey charts to the n-grams search in NGrams_CoOccurrences_main GUI;
3. fixed an Excel chart display with MALLET topic modelling;
4. fixed a bug in style_analysis_main for the hapax_words variable not assigned."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-22T14:30:14Z,"1. added the N-grams search option in the NGrams_CoOccurrences_main GUI;
2. added the code to deal with multi-word NER values."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-21T12:55:43Z,"1. reorganized the style_analysis and NGrams_CoOccurrences GUI;
2. in the CoNLL_table_analyzer and file_search_byWord GUIs added the options of searching for a word and extracting neighboring words (TO BE COMPLETED);
3. improved the efficiency of the ngrams algorithms."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-20T00:21:16Z,1. hapax
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-19T23:28:20Z,1. hapax
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-18T10:53:21Z,"1. completed the n-grams/co-occurence algorithms;
2. added error trapping in the knowledge_graphs_WordNet_main;
3. added a chart of countries found by the geocoder used for GIS."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-17T23:32:23Z,1. completed the n-grams algorithms.
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-17T23:26:53Z,1. completed the n-grams algorithms.
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-17T17:41:19Z,"1. fixed a bug in the N-grams VIEWER when splitting multiple-word search words (e.g., Hong Kong)."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-17T00:28:57Z,"1. completed the development of GIS pipeline;
2. rewrote the n-grams algorithms leading to greater efficiency (15 minutes instead of 5 hours for the GWR corpus)."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-16T21:39:03Z,"1. completed the development of GIS pipeline;
2. rewrote the n-grams algorithms leading to greater efficiency (15 minutes instead of 5 hours for the GWR corpus)."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-11T15:48:06Z,"1. In the Style analysis GUI, modified the Vocabulary analysis option for Short words (<4 characters) to compute, instead, the word length for all words in a corpus;
2. fixed bug in wordclouds_util word_str referenced before assignment."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-09-30T15:43:33Z,"1. fixed bugs in the creation of charts for document statistics and other charts;
2. improved the output layout for sentiment analysis algorithms."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-09-29T21:33:51Z,"1. fixed a display problem with charts by group columns (e.g., By Document)."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-09-29T16:49:39Z,"1. fixed an inconsequential bug in the export of sentiment analysis scores for Stanza;
2. fixed a bug in the export of charts for sentiment analysis scores."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-09-16T18:20:12Z,"1. Added the POTUS_webscraper based on beautifulsoup to extract POTUS speeches;
2.fixed an inconsequential display but in NLP_setup_package_language_main
3. fixed bugs in the creation of Excel charts;
4. fixed bugs in TIPS filenames;"
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-08-13T08:49:24Z,"Release 3.8.8 reflects a large number of bug fixes and improvements, the result of summer 2023 work on the NLP Suite."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-08-09T16:58:34Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-08-07T13:49:20Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-08-06T14:00:48Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-06-14T16:57:31Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-06-14T16:08:15Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-06-12T12:59:48Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-06-10T18:01:13Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-05-30T16:00:54Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI;
4. added the chart visualization to BERT NER;
5. uniformed the output layout of spaCy NER to all other NER packages;
6. fixed a bug in reminders;
7 fixed bugs in the opening of output files in the CoNLL_table_analyzer_main GUI;"
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/Stanza_functions_util.py,2024-02-07T03:09:41Z,1. fixed bug in file_search_byWord_main when running the case sensitive/insensitive option.
github.com/NLP-Suite/NLP-Suite,src/Stanza_functions_util.py,2024-01-26T03:30:54Z,"1. fixed potential bug in importing stanza;
2. fixed bug in computing document(s) statistics."
github.com/NLP-Suite/NLP-Suite,src/Stanza_functions_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-11-08T11:34:46Z,"1. fixed various bugs in the search functions;
2. added the option of filtering data when drawing a sunburst or treemap charts."
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-09-30T15:43:33Z,"1. fixed bugs in the creation of charts for document statistics and other charts;
2. improved the output layout for sentiment analysis algorithms."
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-09-01T18:08:08Z,"1. Improved the display of information when clicking on a Google Earth Pro pin in GIS_main;
2. improved the user interface in the functions behind the NLP_setup_external_software_main.py GUI;
3. fixed a filename bug in opening the config file NLP_default_package_language_config.csv;
4. fixed a bug in GUI-specific I/O configuration not updating."
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-08-13T08:49:24Z,"Release 3.8.8 reflects a large number of bug fixes and improvements, the result of summer 2023 work on the NLP Suite."
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-08-07T13:49:20Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-06-14T16:08:15Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-06-12T12:59:48Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-06-10T18:01:13Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-05-30T16:00:54Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI;
4. added the chart visualization to BERT NER;
5. uniformed the output layout of spaCy NER to all other NER packages;
6. fixed a bug in reminders;
7 fixed bugs in the opening of output files in the CoNLL_table_analyzer_main GUI;"
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/knowledge_graphs_YAGO_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/NLP_setup_package_language_main.py,2023-09-26T14:14:20Z,1. revised the data_visualization_1 and data_visualization_2 scripts
github.com/NLP-Suite/NLP-Suite,src/NLP_setup_package_language_main.py,2023-09-22T13:41:01Z,"1. Fixed a minor issue in the parsers_annotators_main with the CoNLL_table_analyzer checkbox state (normal/disabled);
2. uniformed the MAC & Windows width for OK + Reset Show buttons in all GUIs."
github.com/NLP-Suite/NLP-Suite,src/NLP_setup_package_language_main.py,2023-09-21T12:05:01Z,"1. uniformed the width of Open file/dictionary buttons in all GUIs;
2. improved the layout of the html_gender_annotator GUI;
3. fixed a bug with language selection in Stanza."
github.com/NLP-Suite/NLP-Suite,src/NLP_setup_package_language_main.py,2023-09-18T11:12:26Z,"1. added a series of checks to the NLP_setup_package_language_main.py to avoid setup errors;
2. Added the POTUS_webscraper based on beautifulsoup to extract POTUS speeches;
3. fixed bugs in the creation of Excel charts;
4. fixed bugs in TIPS filenames."
github.com/NLP-Suite/NLP-Suite,src/NLP_setup_package_language_main.py,2023-09-01T14:00:46Z,"1. Improved the display of information when clicking on a Google Earth Pro pin in GIS_main;
2. improved the user interface in the functions behind the NLP_setup_external_software_main.py GUI;
3. fixed a filename bug in opening the config file NLP_default_package_language_config.csv."
github.com/NLP-Suite/NLP-Suite,src/NLP_setup_package_language_main.py,2023-05-30T16:00:54Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI;
4. added the chart visualization to BERT NER;
5. uniformed the output layout of spaCy NER to all other NER packages;
6. fixed a bug in reminders;
7 fixed bugs in the opening of output files in the CoNLL_table_analyzer_main GUI;"
github.com/NLP-Suite/NLP-Suite,src/NLP_setup_package_language_main.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/knowledge_graphs_DBpedia_util_SPARQL.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/jim-schwoebel/allie,features/text_features/helpers/blabla/blabla/document_processor.py,2020-12-03T03:04:48Z,"added allosaurus, surfboard, and blabla featurizers"
github.com/mudabek/encoding-cxr-report-gen,infer.py,2022-11-24T13:17:45Z,full
github.com/mudabek/encoding-cxr-report-gen,train.py,2022-11-24T13:17:45Z,full
github.com/mudabek/encoding-cxr-report-gen,ner_reports.py,2022-11-24T13:17:45Z,full
github.com/arianhosseini/negation-learning,transformers/examples/get_conll.py,2020-09-27T16:25:48Z,stable version emnlp
github.com/arianhosseini/negation-learning,transformers/examples/new_get_conll.py,2020-09-27T16:25:48Z,stable version emnlp
github.com/rstodden/TS_annotation_tool,data/models.py,2023-08-11T11:51:46Z,pre-aligned pair upload: upload one pair per annotator
github.com/rstodden/TS_annotation_tool,data/models.py,2023-08-11T11:07:43Z,fix bug uploading pre-aligned & pre-split n:m pairs
github.com/rstodden/TS_annotation_tool,data/models.py,2023-08-11T10:57:08Z,fix bug error annotation
github.com/rstodden/TS_annotation_tool,data/models.py,2022-11-17T14:39:11Z,align documents with different simplified versions (references) and export them
github.com/rstodden/TS_annotation_tool,data/models.py,2022-10-06T12:30:04Z,"bug fix: counting sentence ids of pre-split data

addressing #1"
github.com/rstodden/TS_annotation_tool,data/models.py,2022-05-16T10:01:42Z,bugfixes
github.com/rstodden/TS_annotation_tool,data/models.py,2022-04-14T12:02:50Z,update webcrawling
github.com/rstodden/TS_annotation_tool,data/models.py,2022-04-05T14:13:21Z,bug fixing
github.com/rstodden/TS_annotation_tool,data/models.py,2022-03-07T16:57:02Z,downgrade to spacy 2.3.7 (from 3.2.0) II
github.com/rstodden/TS_annotation_tool,data/models.py,2022-03-07T16:40:43Z,downgrade to spacy 2.3.7 (from 3.2.0)
github.com/rstodden/TS_annotation_tool,data/models.py,2022-03-05T13:16:11Z,"""show most similar sentence""-button for alignment support"
github.com/rstodden/TS_annotation_tool,data/models.py,2022-03-03T17:55:29Z,remove add_par_nr
github.com/rstodden/TS_annotation_tool,data/models.py,2022-03-03T17:53:33Z,uncomment add_par_nr
github.com/rstodden/TS_annotation_tool,data/models.py,2022-01-18T14:05:40Z,export document level (aligned and not-aligned)
github.com/rstodden/TS_annotation_tool,data/models.py,2022-01-14T15:58:19Z,add right-to-left reading support
github.com/rstodden/TS_annotation_tool,data/models.py,2021-12-30T17:38:13Z,improvement of export functions
github.com/rstodden/TS_annotation_tool,data/models.py,2021-12-30T12:45:28Z,"huge update including user fields, local and web import, IAA alignment, config files annotation, web scraping"
github.com/rstodden/TS_annotation_tool,data/models.py,2021-04-16T13:04:41Z,manual simplification module
github.com/rstodden/TS_annotation_tool,data/models.py,2021-04-07T17:59:33Z,add data with copyright threshold
github.com/rstodden/TS_annotation_tool,data/models.py,2021-04-07T12:35:50Z,add overview of all corpora and overview per corpus
github.com/rstodden/TS_annotation_tool,data/models.py,2021-04-06T18:12:10Z,remove django-language
github.com/rstodden/TS_annotation_tool,data/models.py,2021-04-06T10:39:54Z,add pre aligned data
github.com/rstodden/TS_annotation_tool,data/models.py,2021-03-01T14:34:40Z,import title in file header
github.com/rstodden/TS_annotation_tool,data/models.py,2021-03-01T11:02:55Z,fix reading file ending
github.com/rstodden/TS_annotation_tool,data/models.py,2021-02-25T17:34:33Z,visibiliy changes
github.com/rstodden/TS_annotation_tool,data/models.py,2021-02-04T14:07:53Z,add possible to align button
github.com/rstodden/TS_annotation_tool,data/models.py,2021-02-04T13:33:02Z,report malformed sentence
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-22T14:18:42Z,disable stanza download
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-22T13:36:26Z,"new url structure, prev and next button, better HTML structure, change_log"
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-15T13:49:38Z,add downloading stanza model
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-15T13:39:41Z,change spacy to stanza
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-15T12:15:51Z,automatic transformations in evaluation added
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-13T14:20:25Z,code clean up (new model structure) Part II
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-12T19:53:51Z,code clean up (new model structure) Part I
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-12T11:25:01Z,document table overview
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-08T15:57:05Z,upload parallel documents without sentence alignment
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-07T15:19:02Z,save and edit alignments
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-05T20:19:30Z,separate transformations and rating
github.com/rstodden/TS_annotation_tool,data/models.py,2020-10-09T08:37:39Z,overview of alignment and rating
github.com/rstodden/TS_annotation_tool,data/models.py,2020-10-07T15:42:36Z,alignment changing and rating
github.com/rstodden/TS_annotation_tool,data/models.py,2020-10-02T17:30:49Z,option to upload records
github.com/rstodden/TS_annotation_tool,data/models.py,2020-09-30T15:49:20Z,added app per task
github.com/centre-for-humanities-computing/newsFluxus,downloader.py,2021-01-14T14:58:32Z,add Stanza
github.com/centre-for-humanities-computing/newsFluxus,downloader.py,2020-06-16T09:00:48Z,clean
github.com/centre-for-humanities-computing/newsFluxus,downloader.py,2020-06-04T09:58:42Z,add downloader
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-04-05T17:58:13Z,Fix frequency weighting
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-04-03T14:40:35Z,Clean up
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-03-31T12:47:58Z,Minor
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-03-29T22:48:44Z,Using JSONL in JSD script
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-03-29T12:14:18Z,Use JSONL format for the entire pipeline
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-03-28T21:58:03Z,"Added UDPipe to the lemmatizer
Fixes #2"
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-03-20T17:37:34Z,Gensim vectors and ELMo backward-forward comb
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-02-28T13:02:39Z,Use numpy log function
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-02-28T12:53:26Z,Optional frequency correction
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-02-28T12:34:05Z,Prior word probability distributions
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-02-23T14:44:46Z,Fix log error
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-02-23T13:48:55Z,Fix log/exp issues
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-02-23T13:29:30Z,Fix log/exp issues
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-02-08T17:14:34Z,Inject lexical similarity with static embedding model
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-01-12T18:08:39Z,Use argparse for script arguments
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-01-12T14:44:39Z,Divide by temperature in postprocessing
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-01-07T19:08:40Z,Correct Swedish language code
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-01-07T16:43:59Z,Obtain all forms of target words given a corpus
github.com/akutuzov/semeval2020,code/postprocessing.py,2020-12-28T12:53:54Z,Minor
github.com/akutuzov/semeval2020,code/postprocessing.py,2020-12-28T10:22:15Z,Use stanza lemmatizer
github.com/akutuzov/semeval2020,code/postprocessing.py,2020-12-28T09:20:01Z,Use stanza lemmatizer
github.com/akutuzov/semeval2020,code/postprocessing.py,2020-12-27T11:27:29Z,Fix options for frequency correction
github.com/akutuzov/semeval2020,code/postprocessing.py,2020-12-27T09:29:14Z,Clean up
github.com/akutuzov/semeval2020,code/postprocessing.py,2020-12-27T09:28:39Z,Clean up
github.com/akutuzov/semeval2020,code/postprocessing.py,2020-12-27T09:24:46Z,Refactor
github.com/akutuzov/semeval2020,code/processing/find_word_forms.py,2021-01-07T19:08:40Z,Correct Swedish language code
github.com/akutuzov/semeval2020,code/processing/find_word_forms.py,2021-01-07T18:41:57Z,Minor
github.com/akutuzov/semeval2020,code/processing/find_word_forms.py,2021-01-07T18:07:35Z,Use pos tags for english to filter out irrelevant forms
github.com/akutuzov/semeval2020,code/processing/find_word_forms.py,2021-01-07T17:49:32Z,Obtain all forms of target words given a corpus
github.com/akutuzov/semeval2020,code/processing/find_word_forms.py,2021-01-07T17:44:31Z,Obtain all forms of target words given a corpus
github.com/akutuzov/semeval2020,code/processing/find_word_forms.py,2021-01-07T16:43:59Z,Obtain all forms of target words given a corpus
github.com/vseloved/prj-nlp-2020,students/BohdanYatsyna/homework2/task-02-3-2.py,2020-03-26T15:51:25Z,"виправлення зауважень Маряни
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398049316
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398050175
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398053698
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398054208
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398058079
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398058962
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398060221
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398064295
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398065397"
github.com/vseloved/prj-nlp-2020,students/BohdanYatsyna/homework2/task-02-3-2.py,2020-03-26T15:46:43Z,"виправлення зауважень Маряни
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398049316
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398050175
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398053698
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398054208
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398058079
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398058962
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398060221
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398064295
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398065397"
github.com/vseloved/prj-nlp-2020,students/BohdanYatsyna/homework2/task-02-3-2.py,2020-03-23T17:57:51Z,замержив 2гу домашку в мастер
github.com/vseloved/prj-nlp-2020,students/BohdanYatsyna/homework2/task-02-3-2.py,2020-03-23T17:53:00Z,замержив 2гу домашку в мастер
github.com/vseloved/prj-nlp-2020,students/BohdanYatsyna/homework2/task-02-3-2.py,2020-03-23T17:45:46Z,3я частина домашки
github.com/vseloved/prj-nlp-2020,students/DmytroMindra/05-bag-of-words/src/04-frequency_analysis.py,2020-04-15T12:18:59Z,Filtered input added notes to readme.md
github.com/vseloved/prj-nlp-2020,students/DmytroMindra/05-bag-of-words/src/04-frequency_analysis.py,2020-04-14T20:06:57Z,Added more data to the experiment
github.com/vseloved/prj-nlp-2020,students/DmytroMindra/05-bag-of-words/src/04-frequency_analysis.py,2020-04-11T20:44:05Z,Adding homework-05
github.com/vseloved/prj-nlp-2020,students/DmytroMindra/06-language-as-sequence/src/02-prepare-datasets.py,2020-04-20T07:31:11Z,Added the evaluation on run-on-test.json
github.com/vseloved/prj-nlp-2020,students/DmytroMindra/06-language-as-sequence/src/02-prepare-datasets.py,2020-04-16T21:35:47Z,Added more features. Improved score.
github.com/vseloved/prj-nlp-2020,students/DmytroMindra/06-language-as-sequence/src/02-prepare-datasets.py,2020-04-16T09:23:18Z,Baseline
github.com/Ermlab/PoLitBert,text_utils.py,2020-11-07T11:03:53Z,"add doc string to krnnt analyzer, add gsutil command to synchronize data"
github.com/Ermlab/PoLitBert,text_utils.py,2020-05-19T14:12:35Z,add warning swallow for polylot detect lang function
github.com/Ermlab/PoLitBert,text_utils.py,2020-05-19T13:54:32Z,fox jsondecoderError in krnnt tagger
github.com/Ermlab/PoLitBert,text_utils.py,2020-05-18T13:55:31Z,fix quotes
github.com/Ermlab/PoLitBert,text_utils.py,2020-05-18T13:54:10Z,add passing url parma to krnnt analyzer
github.com/Ermlab/PoLitBert,text_utils.py,2020-05-16T10:55:07Z,"comment morfeusz2 import, it should be removed"
github.com/Ermlab/PoLitBert,text_utils.py,2020-05-15T14:22:29Z,add stats to process lines
github.com/Ermlab/PoLitBert,text_utils.py,2020-05-15T07:39:41Z,"add oscar processing, move data procesing to another notebook"
github.com/Ermlab/PoLitBert,text_utils.py,2020-05-11T05:59:04Z,add new test sentences to check
github.com/Ermlab/PoLitBert,text_utils.py,2020-05-08T14:56:43Z,"add krnnttagger,add aux and propn"
github.com/Ermlab/PoLitBert,text_utils.py,2020-05-07T18:11:57Z,"add stanza sentence validator, add linguistics heuristic for sentences"
github.com/Ermlab/PoLitBert,text_utils.py,2020-04-08T15:39:09Z,add testing pos taggers
github.com/Ermlab/PoLitBert,text_utils.py,2020-04-05T11:48:10Z,add checking if sentence is in polish
github.com/Ermlab/PoLitBert,text_utils.py,2020-03-30T14:48:16Z,"move wiki and text data processing to another jupyter, test sentence validator"
github.com/Ermlab/PoLitBert,text_utils.py,2020-03-26T21:46:22Z,wip: refactoring and checking sentence
github.com/Ermlab/PoLitBert,playground_taggers.py,2020-05-15T07:39:41Z,"add oscar processing, move data procesing to another notebook"
github.com/Ermlab/PoLitBert,playground_taggers.py,2020-05-11T05:59:04Z,add new test sentences to check
github.com/Ermlab/PoLitBert,playground_taggers.py,2020-05-08T14:56:43Z,"add krnnttagger,add aux and propn"
github.com/Ermlab/PoLitBert,playground_taggers.py,2020-05-07T18:11:57Z,"add stanza sentence validator, add linguistics heuristic for sentences"
github.com/argosopentech/argos-train,argostrain/train.py,2023-09-02T17:45:03Z,"Remove dataset size limiting

Going forward I'm planning to exclude
large datasets from the data index alltogether."
github.com/argosopentech/argos-train,argostrain/train.py,2023-09-02T17:35:29Z,Test references fix
github.com/argosopentech/argos-train,argostrain/train.py,2023-08-20T14:01:53Z,Delete data if exists
github.com/argosopentech/argos-train,argostrain/train.py,2023-08-20T13:57:30Z,Add check before deleting data
github.com/argosopentech/argos-train,argostrain/train.py,2023-05-03T00:58:22Z,Add Python formatting
github.com/argosopentech/argos-train,argostrain/train.py,2023-05-03T00:57:03Z,"Remove unused epochs_count variable

This is configured in config.yml"
github.com/argosopentech/argos-train,argostrain/train.py,2022-11-14T00:39:04Z,Improve reverse data code
github.com/argosopentech/argos-train,argostrain/train.py,2022-11-09T13:10:34Z,Improve dataset filtering
github.com/argosopentech/argos-train,argostrain/train.py,2022-11-09T13:07:29Z,Typo fix
github.com/argosopentech/argos-train,argostrain/train.py,2022-11-09T12:58:05Z,"Limit max dataset size before downloading

- When using reversed data the datasets are downloaded before they are
  filtered for being too long which defeats the purpose of filtering out
  large datasets."
github.com/argosopentech/argos-train,argostrain/train.py,2022-11-06T21:20:02Z,Bug fix
github.com/argosopentech/argos-train,argostrain/train.py,2022-11-06T21:00:09Z,Training script improvements
github.com/argosopentech/argos-train,argostrain/train.py,2022-10-23T13:58:42Z,"Assert that there is data available

https://forum.opennmt.net/t/traceback-assertionerror-while-training-in-vast-ai/5037"
github.com/argosopentech/argos-train,argostrain/train.py,2022-10-22T16:41:43Z,Format
github.com/argosopentech/argos-train,argostrain/train.py,2022-10-22T16:41:11Z,Automate epochs count config
github.com/argosopentech/argos-train,argostrain/train.py,2022-10-22T16:09:49Z,Change averaging to 50k epochs
github.com/argosopentech/argos-train,argostrain/train.py,2022-09-15T13:20:44Z,Formatting
github.com/argosopentech/argos-train,argostrain/train.py,2022-07-24T13:08:40Z,Fix data_exists
github.com/argosopentech/argos-train,argostrain/train.py,2022-07-24T13:05:21Z,Bug fix
github.com/argosopentech/argos-train,argostrain/train.py,2022-07-24T13:01:38Z,Add data_exists option
github.com/argosopentech/argos-train,argostrain/train.py,2022-07-23T13:33:52Z,Bug fix
github.com/argosopentech/argos-train,argostrain/train.py,2022-07-23T13:32:48Z,Bug fix
github.com/argosopentech/argos-train,argostrain/train.py,2022-07-23T13:31:35Z,Add train function
github.com/deeppavlov/dream,annotators/bot_emotion_classifier/server.py,2023-11-16T08:59:51Z,"Dream emotion dist (#568)

* add dream_emotion dist with annotators

* add component cards

* fix codestyle flake8

* fix codestyle

* another codestyle fix

* PR fixes

* fixed batches

* move preprocessing to annotator

* fix codestyle black

* minor fixes

* removed unnecessary api_configs

* changed type of annotator to bot utts annotator

* fixed component file

* fixed service.yml files

* fixed formatters

* fixed emotional response server and dist files

* moved prompt into separate file

* fixed annotators

* fixed annotators again

* fixed emotion response selector

* fixed emotion dist and components

* fixed codestyle

* fixed codestyle again

* fixed codestyle black

* fixed naming of emotion response selector

* fixed emotional_bot_response component

* fixed emotion response selector server

* added prev_services in annotator in pipeline_conf

* fixed result formatting of bot_emo_cls

* fixed codestyle

* fixed codestyle again

* changed description of emo_bot_response

* added necessary component cards

* fix: timeout

* fix: timeout

---------

Co-authored-by: Dilyara Zharikova (Baymurzina) <dilyara.rimovna@gmail.com>"
github.com/deeppavlov/dream,annotators/bot_emotion_classifier/dscript_scheme_classifier.py,2023-11-16T08:59:51Z,"Dream emotion dist (#568)

* add dream_emotion dist with annotators

* add component cards

* fix codestyle flake8

* fix codestyle

* another codestyle fix

* PR fixes

* fixed batches

* move preprocessing to annotator

* fix codestyle black

* minor fixes

* removed unnecessary api_configs

* changed type of annotator to bot utts annotator

* fixed component file

* fixed service.yml files

* fixed formatters

* fixed emotional response server and dist files

* moved prompt into separate file

* fixed annotators

* fixed annotators again

* fixed emotion response selector

* fixed emotion dist and components

* fixed codestyle

* fixed codestyle again

* fixed codestyle black

* fixed naming of emotion response selector

* fixed emotional_bot_response component

* fixed emotion response selector server

* added prev_services in annotator in pipeline_conf

* fixed result formatting of bot_emo_cls

* fixed codestyle

* fixed codestyle again

* changed description of emo_bot_response

* added necessary component cards

* fix: timeout

* fix: timeout

---------

Co-authored-by: Dilyara Zharikova (Baymurzina) <dilyara.rimovna@gmail.com>"
github.com/pengr/IKD-mmt,scripts/extract_image_labels.py,2023-10-12T07:03:37Z,new commit
github.com/pengr/IKD-mmt,scripts/extract_image_labels.py,2023-10-12T06:56:07Z,Delete scripts directory
github.com/pengr/IKD-mmt,scripts/extract_image_labels.py,2022-10-08T14:10:12Z,first commit
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_parser.py,2023-04-17T19:22:47Z,"Updated for mtap 1.2.1 (#167)

* Updated for mtap 1.2.1

* Added a scaleout test

* Tweaked the default scaleout settings a little

* Made write-config options consistent"
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_parser.py,2023-03-16T18:44:26Z,"Issues/138 (#144)

* Fix for deepen error

* Fix for sentences failing when CUDA available"
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_parser.py,2020-09-25T17:55:48Z,Updates for mtap 0.7.0
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_parser.py,2020-09-10T12:42:38Z,"Fixes to the stanza dependencies

Switched the method for creating the referential dependency graph from a queue over stanza dependencies to graph construction followed by breadth-first search."
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_parser.py,2020-05-11T15:29:40Z,"Features/dependencies (#55)

* Fixed mipacq / ptb / concepts performance tests

* Minor import cleanup

* Last little bits of non-PHI performance test fixes

* Stanza dependency parser, updates for MTAP

* Removed test-results.yml files"
github.com/nlpie/biomedicus,python/biomedicus/deployment/_data_downloading.py,2023-01-17T19:48:58Z,Update data to UMLS 2022AB (#121)
github.com/nlpie/biomedicus,python/biomedicus/deployment/_data_downloading.py,2023-01-13T02:05:50Z,"biomedicus-client and updates for mtap compatibility (#120)

* biomedicus-client and updates for mtap compatibility

* Update build action to install biomedicus_client"
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2023-04-17T19:22:47Z,"Updated for mtap 1.2.1 (#167)

* Updated for mtap 1.2.1

* Added a scaleout test

* Tweaked the default scaleout settings a little

* Made write-config options consistent"
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2023-03-16T18:44:26Z,"Issues/138 (#144)

* Fix for deepen error

* Fix for sentences failing when CUDA available"
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2023-02-07T16:20:12Z,"Release/v3.0.0 rc.7 (#126)

* Various

- Made default and rtf-to-text deployment scripts consistent
- Fixed issues with the rtf-to-text deployment script.
- Cleaned up some issues with resource loading.
- Made all processors use standard non-multiprocessing server by default.
- Parameterized bi_lstm and selective dependencies to allow use of multiprocessing.

* Clean up flake errors
* Attempt to re-enable integration tests"
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2023-01-13T02:05:50Z,"biomedicus-client and updates for mtap compatibility (#120)

* biomedicus-client and updates for mtap compatibility

* Update build action to install biomedicus_client"
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2022-12-08T22:34:26Z,"Various changes to support mtap>=1.0rc3 (#119)

- Pyproject.toml support
- Works with Python 3.10 / newest pytorch"
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2022-08-17T19:17:22Z,Fixed various RTF issues (#111)
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2021-09-07T15:49:30Z,Update for mtap 1.0
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2021-09-07T15:49:30Z,Various rtf and performance related changes
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2021-03-08T15:18:22Z,Batched sentences for dependency parsing
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2020-09-25T17:55:48Z,Updates for mtap 0.7.0
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2020-09-10T12:42:38Z,"Fixes to the stanza dependencies

Switched the method for creating the referential dependency graph from a queue over stanza dependencies to graph construction followed by breadth-first search."
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2020-07-20T17:38:18Z,deepen (#63)
github.com/AlonEirew/CoreSearch,scripts/extract_min_span.py,2023-03-23T09:48:18Z,Adding scripts to clean the mentions spans and release a new version CoreSearchV2 dataset
github.com/princeton-nlp/align-mlm,preprocessing/xnli/convert_dataset_to_dependency.py,2022-01-25T01:34:48Z,initial commit
github.com/princeton-nlp/align-mlm,preprocessing/ner_pos/convert_dataset_to_dependency.py,2022-01-25T01:34:48Z,initial commit
github.com/princeton-nlp/align-mlm,preprocessing/sentence_retrieval/convert_dataset_to_dependency.py,2022-01-25T01:34:48Z,initial commit
github.com/princeton-nlp/align-mlm,preprocessing/dependency_parsing/convert_sentences_to_dependency.py,2022-01-25T01:34:48Z,initial commit
github.com/mo-xiaoxi/HDiff,SR_Finder.py,2022-05-04T09:51:23Z,refactor: first commit
github.com/mo-xiaoxi/HDiff,SR_Finder.py,2022-05-04T09:50:43Z,refactor: first commit
github.com/microsoft/ContextualSP,unified_parser_text_to_sql/step1_schema_linking.py,2022-04-14T04:34:57Z,init unisar
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/nqg_dataset.py,2020-06-24T10:55:13Z,Build data pipeline for RepeatQ. Implement embedding layer.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/nqg_dataset.py,2020-06-10T06:47:47Z,Multiple fixes  in eval mode of ASs2s.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/nqg_dataset.py,2020-05-28T10:58:18Z,Manage to make predictions for SQuAD using HotpotQA pretrained model. Answer zones seem to not be working.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/nqg_dataset.py,2020-05-27T02:27:46Z,Integrate SG-Deep-Question-Generation project and reverse engineer initial graph construction steps
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/nqg_dataset.py,2020-05-18T18:11:23Z,Integrate GDP2 as a model. Add evaluation and testing scripts for different datasets.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/nqg_dataset.py,2020-05-04T08:51:39Z,Add handmade medical dataset and add testing scripts for both this latter and MedQuad.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/nqg_dataset.py,2020-05-01T07:44:12Z,Add MedQuad as a usable dataset to train and evaluate models
github.com/stanfordnlp/color-describer,third-party/stanza/stanza/util/resource.py,2016-04-04T06:17:46Z,Merge commit '37db677eec1f83fae502d253f790c6f54e34abf5'
github.com/stanfordnlp/color-describer,third-party/stanza/stanza/util/resource.py,2016-02-02T01:36:53Z,"Squashed 'third-party/stanza/' changes from 09f78e3..2e33ff2

2e33ff2 add slack integration
c1d7f48 added TensorBoardLogger
ae0e116 Tools for working with CodaLab
7db1754 Document and test TensorBoard logging
7eedffb Cast histogram values to ordinary floats

git-subtree-dir: third-party/stanza
git-subtree-split: 2e33ff2822d5f627fdd282645efa398721f0eb21"
github.com/stanfordnlp/color-describer,third-party/stanza/stanza/util/resource.py,2016-01-28T23:56:59Z,Merge commit 'ec1b3ee0a9f85151068bb72462dd7275bb8c0f17' as 'third-party/stanza'
github.com/ucd-dnp/ConTexto,contexto/utils/stanza_funcs.py,2021-07-08T14:03:48Z,Corrección bugs lematizador Stanza
github.com/ucd-dnp/ConTexto,contexto/utils/stanza_funcs.py,2021-06-22T22:45:33Z,Cambios en la documentación
github.com/ucd-dnp/ConTexto,contexto/utils/stanza_funcs.py,2021-03-30T02:42:00Z,corección errores autopep8 para funciones auxiliares
github.com/ucd-dnp/ConTexto,contexto/utils/stanza_funcs.py,2021-03-09T23:40:51Z,stanza_func.py en formato pep8
github.com/ucd-dnp/ConTexto,contexto/utils/stanza_funcs.py,2020-12-07T13:30:03Z,"modificar scripts para que queden con formato pep8, utilizando autopep8"
github.com/ucd-dnp/ConTexto,contexto/utils/stanza_funcs.py,2020-09-15T15:38:10Z,terminar documentación de scripts auxiliares
github.com/ucd-dnp/ConTexto,contexto/utils/stanza_funcs.py,2020-08-12T19:03:56Z,se renombró la librería como contexto
github.com/THUNLP-MT/Template-NMT,lexical_scripts/terminology_evaluation/evaluate_term_plain.py,2022-11-06T11:54:16Z,init commit
github.com/zsLin177/SRL-as-GP,supar/utils/tokenizer.py,2021-04-14T07:28:25Z,Integrated tokenizer (#47)
github.com/asyml/forte-wrappers,src/stanza/fortex/stanza/stanza_processor.py,2022-06-24T02:56:50Z,"Fix stanfordnlp_processor_test.py (#112)

* Fix outdated stanza

* Fix stanza test

Co-authored-by: Suqi Sun <suqi.sun@petuum.com>"
github.com/asyml/forte-wrappers,src/stanza/fortex/stanza/stanza_processor.py,2022-06-18T19:07:58Z,"Support Bio NER using stanza processor (#111)

* Support NER and Bio NER using Stanza processor

* update stanfordnlp_processor_test.py

* update standfordnlp_processor_test.py

* support Bio NER using stanza processor

* add test for bio ner in stanza processor

* Minor changes in stanza_processor

* Update stanfordnlp_processor_test.py

* Fix minor build error

* fix an autoformatting issue provided by Black"
github.com/asyml/forte-wrappers,src/stanza/fortex/stanza/stanza_processor.py,2021-09-08T14:31:02Z,"Change wrapper package from Forte to Fortex (#73)

* Move to fortex

* Fix import in test.

* Rename package.

* Fix examples.

* Update init imports.

* Update test strings.

* Fix imports in elastics.

* Fix imports in allennlp.

* Typo

* Fix class name in docs.

* Clean up documentation.

* Add docuemntation back.

* Fixing documentation and gpu setups.

* Black all setups.

* Remove obsolete configs"
github.com/heqi2015/CA_GCN,data/MNLI/dependency_output_mnli.py,2022-02-28T11:41:51Z,Add files via upload
github.com/kenantang/petci,data/dataset.py,2022-02-19T02:41:50Z,update data and code
github.com/kenantang/petci,models/lstm/dataloader.py,2022-02-19T02:41:50Z,update data and code
github.com/quadrismegistus/lltk,lltk/text/utils.py,2022-07-11T08:06:11Z,major
github.com/quadrismegistus/lltk,lltk/text/utils.py,2022-03-08T20:47:19Z,lots of changes
github.com/quadrismegistus/lltk,lltk/text/utils.py,2021-04-20T07:37:43Z,fixes
github.com/quadrismegistus/lltk,lltk/text/utils.py,2021-04-18T07:30:10Z,switching over to pkl from ft
github.com/quadrismegistus/lltk,lltk/text/utils.py,2021-03-10T16:43:51Z,fixes
github.com/quadrismegistus/lltk,lltk/text/utils.py,2021-03-10T14:38:58Z,readme ipynb
github.com/quadrismegistus/lltk,lltk/text/utils.py,2021-03-10T10:12:31Z,spacy
github.com/quadrismegistus/lltk,lltk/text/utils.py,2021-03-10T01:50:17Z,fixes
github.com/quadrismegistus/lltk,lltk/text/utils.py,2021-03-09T18:53:44Z,many fixes
github.com/quadrismegistus/lltk,lltk/text/utils.py,2021-03-09T15:51:13Z,"bunch of new changes, temp. in new branch"
github.com/elisaF/subjective_discourse,code/analyses/question_classifier.py,2020-07-17T10:18:11Z,add analyses folder
github.com/eric-ai-lab/CPL,CPL/utils/_utils/vqa_clip_inference.py,2022-11-12T18:51:37Z,utils
github.com/lxucs/multilingual-mrc-isdg,isdg/preprocess.py,2021-12-02T15:06:44Z,Save
github.com/lisjin/hct,data_preprocess_en/proc_unmatch.py,2021-08-11T20:45:04Z,Adjust for Task dataset
github.com/lisjin/hct,data_preprocess_en/proc_unmatch.py,2021-08-07T22:13:29Z,"Fix BERT span seqs, label eval by train rules"
github.com/lisjin/hct,data_preprocess_en/proc_unmatch.py,2021-07-11T03:07:02Z,"Parse all examples, tree coverage over tags and spans"
github.com/lisjin/hct,data_preprocess_en/proc_unmatch.py,2021-06-28T12:24:25Z,Process multiple data splits
github.com/lisjin/hct,data_preprocess_en/proc_unmatch.py,2021-06-25T22:13:00Z,Merge contiguous and ignore invalid spans
github.com/lisjin/hct,data_preprocess_en/proc_unmatch.py,2021-06-24T19:17:22Z,Apply spacy tokenization to full pipeline
github.com/lisjin/hct,data_preprocess_en/proc_unmatch.py,2021-06-18T15:38:30Z,"Centralize functions, explore context tree coverage"
github.com/lisjin/hct,data_preprocess_en/proc_unmatch.py,2021-06-16T03:44:22Z,Fix tokenization inconsistency by parser
github.com/lisjin/hct,data_preprocess_en/proc_unmatch.py,2021-06-14T21:02:39Z,"Add dependency parsing, find subspan indices"
github.com/lisjin/hct,data_preprocess_en/proc_unmatch.py,2021-06-13T19:40:03Z,"Improve phrase preprocessing, update fuzzy match scripts"
github.com/lisjin/hct,data_preprocess_en/proc_unmatch.py,2021-06-08T20:04:25Z,Constituency tree sub-phrases; ~0.36 -> ~0.62 chrF
github.com/lisjin/hct,data_preprocess_en/proc_unmatch.py,2021-06-06T19:23:09Z,Lemmatize and parse English
github.com/tsproisl/textcomplexity,utils/run_stanza.py,2024-01-22T20:00:26Z,Replace deprecated convert_dict() with write_doc2conll() (#6)
github.com/tsproisl/textcomplexity,utils/run_stanza.py,2021-07-16T06:14:46Z,"Download stanza resources file, if it does not exist (issue #1)"
github.com/tsproisl/textcomplexity,utils/run_stanza.py,2020-09-29T09:51:02Z,Utility script for parsing texts with stanza
github.com/humlab/penelope,penelope/vendor/archive/stanza/utility.py,2022-02-10T12:26:49Z,Safer extras
github.com/humlab/penelope,tests/vendor/stanza_test.py,2020-12-18T11:58:51Z,Tests overhaul - sorted and added GUI tests
github.com/novoic/blabla,blabla/document_processor.py,2020-07-21T11:41:00Z,:zap: Remove client.start() behaviour
github.com/novoic/blabla,blabla/document_processor.py,2020-07-15T15:56:25Z,:zap: Added flag to split sentences on newline or with stanza
github.com/novoic/blabla,blabla/document_processor.py,2020-05-21T13:53:45Z,:tada: Initial public commit
github.com/futurulus/colors-in-context,third-party/stanza/stanza/util/resource.py,2016-04-04T06:17:46Z,Merge commit '37db677eec1f83fae502d253f790c6f54e34abf5'
github.com/futurulus/colors-in-context,third-party/stanza/stanza/util/resource.py,2016-02-02T01:36:53Z,"Squashed 'third-party/stanza/' changes from 09f78e3..2e33ff2

2e33ff2 add slack integration
c1d7f48 added TensorBoardLogger
ae0e116 Tools for working with CodaLab
7db1754 Document and test TensorBoard logging
7eedffb Cast histogram values to ordinary floats

git-subtree-dir: third-party/stanza
git-subtree-split: 2e33ff2822d5f627fdd282645efa398721f0eb21"
github.com/futurulus/colors-in-context,third-party/stanza/stanza/util/resource.py,2016-01-28T23:56:59Z,Merge commit 'ec1b3ee0a9f85151068bb72462dd7275bb8c0f17' as 'third-party/stanza'
github.com/lingmod-tue/stanza-api,main.py,2020-06-22T14:14:56Z,Add support for specifying language packages
github.com/lingmod-tue/stanza-api,main.py,2020-06-20T20:31:00Z,simplification
github.com/lingmod-tue/stanza-api,main.py,2020-06-19T16:06:59Z,better ordering
github.com/lingmod-tue/stanza-api,main.py,2020-06-19T15:57:36Z,"Basic working version, including Dockerfile."
github.com/KaijuML/dtt-multi-branch,onmt/metrics/hss.py,2020-09-10T20:42:48Z,bugfix HS for empty sentences
github.com/KaijuML/dtt-multi-branch,onmt/metrics/hss.py,2020-09-10T20:40:07Z,bugfix HS for empty sentences
github.com/KaijuML/dtt-multi-branch,onmt/metrics/hss.py,2020-09-10T18:53:39Z,bugfix HS for empty sentences
github.com/KaijuML/dtt-multi-branch,onmt/metrics/hss.py,2020-09-10T09:18:45Z,HSA RL metric
github.com/KaijuML/dtt-multi-branch,onmt/metrics/hss.py,2020-09-10T06:05:40Z,HSS is working
github.com/KaijuML/dtt-multi-branch,onmt/metrics/hss.py,2020-09-10T06:04:10Z,HSS is working
github.com/KaijuML/dtt-multi-branch,onmt/metrics/hss.py,2020-09-09T16:31:35Z,fix RL
github.com/KaijuML/dtt-multi-branch,onmt/metrics/hss.py,2020-09-09T16:30:47Z,fix RL
github.com/KaijuML/dtt-multi-branch,onmt/metrics/hss.py,2020-09-09T16:17:06Z,HSS reinforcement learning metric
github.com/KaijuML/dtt-multi-branch,onmt/metrics/hss.py,2020-09-08T08:43:38Z,added possibility of training with RL
github.com/KaijuML/dtt-multi-branch,data/dep_parsing_gpu.py,2021-07-01T09:39:16Z,Solving issue #3
github.com/KaijuML/dtt-multi-branch,data/dep_parsing_gpu.py,2021-07-01T09:27:15Z,Solving issue #3
github.com/HCDM/XRec,SAER/data/extact_exp_data.py,2022-02-28T00:43:37Z,init SAER
github.com/HCDM/XRec,CompExp/data/extract_exp_data.py,2024-01-18T07:47:24Z,add missing config & extract trainer
github.com/Lvchangze/SpikeBERT,textattack/shared/utils/install.py,2023-10-07T10:13:04Z,first commit
github.com/Lvchangze/snn,textattack/shared/utils/install.py,2022-08-30T04:42:16Z,add snn attack but still cannot do the ann attack
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-09-08T14:10:51Z,"Dockerise the application (#77)

* feat: add Dockerfile for app deployement

* Update .gitignore

* fix: correct model path for Dockerfile

* fix: allow deployement of docker with nginx"
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-08-31T10:58:52Z,improved streamlit app
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-08-29T12:14:31Z,improved returned json
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-08-26T09:51:23Z,Merge remote-tracking branch 'origin/master'
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-08-26T09:50:33Z,improve streamlit app
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-08-25T14:10:10Z,"Create DockerFile for deploying app  (#76)

* feat: add Dockerfile for app deployement

* Update .gitignore"
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-08-24T14:13:52Z,added streamlit app
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-08-24T12:14:01Z,fixed bugs
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-08-09T08:45:38Z,load models in variables
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-08-02T07:03:48Z,fixed bugs
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-07-28T22:39:24Z,fixed bugs
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-07-26T10:05:03Z,fixed bug
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-07-26T10:02:56Z,fixed bug
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-07-26T10:01:55Z,fixed bug
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-07-26T08:05:23Z,added start and end date to tables
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-07-19T08:59:15Z,"added rules, show result table"
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-07-11T22:21:35Z,fixed pipeline
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-07-09T14:13:16Z,added location extractions from dataset of lacations
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-07-09T11:44:13Z,"added scripts, first pipeline"
github.com/BRGM/hubeau,inria/Code/download_stanza_model.py,2021-08-25T14:10:10Z,"Create DockerFile for deploying app  (#76)

* feat: add Dockerfile for app deployement

* Update .gitignore"
github.com/snu-mllab/Bayesian-Red-Teaming,textattack/shared/utils/install.py,2023-07-09T14:20:25Z,submission file
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2021-02-01T09:10:02Z,Use stanza instead of #22
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2021-01-21T15:40:09Z,"Fix up datapaths and log paths, cache vectors"
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2021-01-21T09:12:13Z,Hook up rough version of a stanza Processor
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2021-01-14T13:40:09Z,Changed how logging is done
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2021-01-14T13:16:48Z,Added logging info and raise error #24
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2021-01-08T13:08:57Z,Move default data dir and create if not exists
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-12-16T16:08:57Z,"Made predictor class and moved around data config"""
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-10-27T15:07:56Z,conform to pep8
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-10-07T13:52:17Z,split config in 2 files
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-09-18T13:52:56Z,Move nltk import into function that uses it
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-09-18T12:52:29Z,Added option to specify cfg file in scripts
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-07-15T11:33:45Z,Added possibility to predict on untokenized txt file
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-07-08T12:47:56Z,Use BERT embedder on the fly if not cached #1
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-07-06T15:22:14Z,Make training script work
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-07-06T14:07:36Z,Autopeped the code
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-07-06T12:49:38Z,Improved interface of predict script
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-07-03T17:21:41Z,copied code from e2e and made some small adjustments
github.com/Eyr3/TextCRS,textattacknew/shared/utils/install.py,2023-08-01T12:42:37Z,init
