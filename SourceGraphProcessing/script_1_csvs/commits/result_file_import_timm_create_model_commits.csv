repo_url,filepath,commit_date,message
github.com/huggingface/pytorch-image-models,onnx_export.py,2023-09-21T21:46:25Z,add input_size & batch_size to onnx_export
github.com/huggingface/pytorch-image-models,onnx_export.py,2023-08-25T18:04:34Z,"Update README, add --reparm to onnx_export"
github.com/huggingface/pytorch-image-models,onnx_export.py,2023-04-12T00:03:57Z,"Add onnx utils and export code, tweak padding and conv2d_same for better dynamic export with recent PyTorch"
github.com/deepinsight/insightface,reconstruction/gaze/models.py,2023-08-06T16:05:13Z,init gaze
github.com/Stability-AI/stablediffusion,ldm/modules/midas/midas/vit.py,2022-11-24T00:22:28Z,release more models
github.com/Mikubill/sd-webui-controlnet,annotator/midas/midas/vit.py,2023-02-13T06:00:54Z,Add files via upload
github.com/lllyasviel/ControlNet,annotator/midas/midas/vit.py,2023-02-10T19:28:11Z,i
github.com/lllyasviel/ControlNet,ldm/modules/midas/midas/vit.py,2023-02-10T19:28:11Z,i
github.com/deepinsight/insightface,reconstruction/jmlr/backbones/network.py,2022-10-11T04:28:36Z,add eyes in jmlr
github.com/deepinsight/insightface,reconstruction/jmlr/backbones/network.py,2022-08-12T13:25:17Z,add jmlr
github.com/huggingface/transformers,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-11-20T16:00:30Z,"timm to pytorch conversion for vit model fix (#26908)

* timm to pytorch conversion for vit model fix

* remove unecessary print statments

* Detect non-supported ViTs in transformers & better handle id2label mapping

* detect non supported hybrid resnet-vit models in conversion script

* remove check for overlap between cls token and pos embed"
github.com/huggingface/transformers,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-06-29T09:17:36Z,"Update old existing feature extractor references (#24552)

* Update old existing feature extractor references

* Typo

* Apply suggestions from code review

* Apply suggestions from code review

* Apply suggestions from code review

* Address comments from review - update 'feature extractor'
Co-authored by: Yih-Dar <2521628+ydshieh@users.noreply.github.com>"
github.com/huggingface/transformers,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/huggingface/transformers,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/huggingface/transformers,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/huggingface/transformers,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-08-04T16:29:23Z,"Add BEiT (#12994)

* First pass

* Make conversion script work

* Improve conversion script

* Fix bug, conversion script working

* Improve conversion script, implement BEiTFeatureExtractor

* Make conversion script work based on URL

* Improve conversion script

* Add tests, add documentation

* Fix bug in conversion script

* Fix another bug

* Add support for converting masked image modeling model

* Add support for converting masked image modeling

* Fix bug

* Add print statement for debugging

* Fix another bug

* Make conversion script finally work for masked image modeling models

* Move id2label for datasets to JSON files on the hub

* Make sure id's are read in as integers

* Add integration tests

* Make style & quality

* Fix test, add BEiT to README

* Apply suggestions from @sgugger's review

* Apply suggestions from code review

* Make quality

* Replace nielsr by microsoft in tests, add docs

* Rename BEiT to Beit

* Minor fix

* Fix docs of BeitForMaskedImageModeling

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/huggingface/transformers,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-04-12T22:07:10Z,"Add DeiT (PyTorch) (#11056)

* First draft of deit

* More improvements

* Remove DeiTTokenizerFast from init

* Conversion script works

* Add DeiT to ViT conversion script

* Add tests, add head model, add support for deit in vit conversion script

* Update model checkpoint names

* Update image_mean and image_std, set resample to bicubic

* Improve docs

* Docs improvements

* Add DeiTForImageClassificationWithTeacher to init

* Address comments by @sgugger

* Improve feature extractors

* Make fix-copies

* Minor fixes

* Address comments by @patil-suraj

* All models uploaded

* Fix tests

* Remove labels argument from DeiTForImageClassificationWithTeacher

* Fix-copies, style and quality

* Fix tests

* Fix typo

* Multiple docs improvements

* More docs fixes"
github.com/huggingface/transformers,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-04-01T15:16:05Z,"Add Vision Transformer and ViTFeatureExtractor (#10950)

* Squash all commits into one

* Update ViTFeatureExtractor to use image_utils instead of torchvision

* Remove torchvision and add Pillow

* Small docs improvement

* Address most comments by @sgugger

* Fix tests

* Clean up conversion script

* Pooler first draft

* Fix quality

* Improve conversion script

* Make style and quality

* Make fix-copies

* Minor docs improvements

* Should use fix-copies instead of manual handling

* Revert ""Should use fix-copies instead of manual handling""

This reverts commit fd4e591bce4496d41406425c82606a8fdaf8a50b.

* Place ViT in alphabetical order

Co-authored-by: Lysandre <lysandre.debut@reseau.eseo.fr>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/huggingface/transformers,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-11-16T16:43:19Z,"[`Styling`] stylify using ruff (#27144)

* try to stylify using ruff

* might need to remove these changes?

* use ruf format andruff check

* use isinstance instead of type comparision

* use # fmt: skip

* use # fmt: skip

* nits

* soem styling changes

* update ci job

* nits isinstance

* more files update

* nits

* more nits

* small nits

* check and format

* revert wrong changes

* actually use formatter instead of checker

* nits

* well docbuilder is overwriting this commit

* revert notebook changes

* try to nuke docbuilder

* style

* fix feature exrtaction test

* remve `indent-width = 4`

* fixup

* more nits

* update the ruff version that we use

* style

* nuke docbuilder styling

* leve the print for detected changes

* nits

* Remove file I/O

Co-authored-by: charliermarsh
 <charlie.r.marsh@gmail.com>

* style

* nits

* revert notebook changes

* Add # fmt skip when possible

* Add # fmt skip when possible

* Fix

* More `  # fmt: skip` usage

* More `  # fmt: skip` usage

* More `  # fmt: skip` usage

* NIts

* more fixes

* fix tapas

* Another way to skip

* Recommended way

* Fix two more fiels

* Remove asynch
Remove asynch

---------

Co-authored-by: charliermarsh <charlie.r.marsh@gmail.com>"
github.com/huggingface/transformers,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-06-29T09:17:36Z,"Update old existing feature extractor references (#24552)

* Update old existing feature extractor references

* Typo

* Apply suggestions from code review

* Apply suggestions from code review

* Apply suggestions from code review

* Address comments from review - update 'feature extractor'
Co-authored by: Yih-Dar <2521628+ydshieh@users.noreply.github.com>"
github.com/huggingface/transformers,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-02-22T08:14:54Z,Apply ruff flake8-comprehensions (#21694)
github.com/huggingface/transformers,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/huggingface/transformers,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/huggingface/transformers,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2022-05-12T20:25:55Z,"Black preview (#17217)

* Black preview

* Fixup too!

* Fix check copies

* Use the same version as the CI

* Bump black"
github.com/huggingface/transformers,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2022-04-07T19:58:00Z,"RegNet (#16188)

* base model done

* make style

* done

* added files

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Trigger doc build

* resolved conversations

* resolved conversations

* seer models

* minor changes

* minor changes

* make fixup

* glob variables

* minor changes

* fix copies

* config when possibile

* resolved conflicts

* resolved conflicts

* resolved conflicts

* CI

* conversion script for 10b param

* fixed for 10b model

* minor updates in the doc + make style

* removed unused code

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* removed unused code

* removed unused code

* updated modeling_utils from main

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <Sylvain.gugger@gmail.com>"
github.com/huggingface/transformers,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-06-29T09:17:36Z,"Update old existing feature extractor references (#24552)

* Update old existing feature extractor references

* Typo

* Apply suggestions from code review

* Apply suggestions from code review

* Apply suggestions from code review

* Address comments from review - update 'feature extractor'
Co-authored by: Yih-Dar <2521628+ydshieh@users.noreply.github.com>"
github.com/huggingface/transformers,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-02-22T08:14:54Z,Apply ruff flake8-comprehensions (#21694)
github.com/huggingface/transformers,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/huggingface/transformers,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/huggingface/transformers,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-05-12T20:25:55Z,"Black preview (#17217)

* Black preview

* Fixup too!

* Fix check copies

* Use the same version as the CI

* Bump black"
github.com/huggingface/transformers,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/huggingface/transformers,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-03-14T18:57:55Z,"[WIP] Resnet (#15770)

* first commit

* ResNet model correctly implemented.

basic modeling + weights conversion is done

removed unused doc

mdx file

doc and conversion script

added feature_extractor to auto

test

minor changes + style + quality

doc

test

Delete process.yml

A left over from my attempt of running circleci locally

* minor changes

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* new test format

* minor changes from conversations

* minor changes from conversations

* make style + quality

* readded the tests

* test + README

* minor changes from conversations

* error in README

* make fix-copies

* removed regression for classification head

* make quality

* fixed loss control flow

* fixed loss control flow

* resolved conversations

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* READMEs

* index.mdx

* minor changes

* updated tests and models

* unused import

* outputs

* Update docs/source/model_doc/resnet.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* added embeddings_size

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* conversation

* added push to hub

* test

* embedding_size

* make fix-copies

* resolved conversations

* CI

* changed organization

* minor changes

* CI

* minor changes

* conversations

* conversation

* doc

* tests

* removed unused docstring

* conversation

* removed unused outputs

* CI

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>
Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>"
github.com/huggingface/transformers,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-06-29T09:17:36Z,"Update old existing feature extractor references (#24552)

* Update old existing feature extractor references

* Typo

* Apply suggestions from code review

* Apply suggestions from code review

* Apply suggestions from code review

* Address comments from review - update 'feature extractor'
Co-authored by: Yih-Dar <2521628+ydshieh@users.noreply.github.com>"
github.com/huggingface/transformers,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/huggingface/transformers,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/huggingface/transformers,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/huggingface/transformers,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-08-04T16:29:23Z,"Add BEiT (#12994)

* First pass

* Make conversion script work

* Improve conversion script

* Fix bug, conversion script working

* Improve conversion script, implement BEiTFeatureExtractor

* Make conversion script work based on URL

* Improve conversion script

* Add tests, add documentation

* Fix bug in conversion script

* Fix another bug

* Add support for converting masked image modeling model

* Add support for converting masked image modeling

* Fix bug

* Add print statement for debugging

* Fix another bug

* Make conversion script finally work for masked image modeling models

* Move id2label for datasets to JSON files on the hub

* Make sure id's are read in as integers

* Add integration tests

* Make style & quality

* Fix test, add BEiT to README

* Apply suggestions from @sgugger's review

* Apply suggestions from code review

* Make quality

* Replace nielsr by microsoft in tests, add docs

* Rename BEiT to Beit

* Minor fix

* Fix docs of BeitForMaskedImageModeling

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/huggingface/transformers,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-04-12T22:07:10Z,"Add DeiT (PyTorch) (#11056)

* First draft of deit

* More improvements

* Remove DeiTTokenizerFast from init

* Conversion script works

* Add DeiT to ViT conversion script

* Add tests, add head model, add support for deit in vit conversion script

* Update model checkpoint names

* Update image_mean and image_std, set resample to bicubic

* Improve docs

* Docs improvements

* Add DeiTForImageClassificationWithTeacher to init

* Address comments by @sgugger

* Improve feature extractors

* Make fix-copies

* Minor fixes

* Address comments by @patil-suraj

* All models uploaded

* Fix tests

* Remove labels argument from DeiTForImageClassificationWithTeacher

* Fix-copies, style and quality

* Fix tests

* Fix typo

* Multiple docs improvements

* More docs fixes"
github.com/huggingface/transformers,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-06-29T09:17:36Z,"Update old existing feature extractor references (#24552)

* Update old existing feature extractor references

* Typo

* Apply suggestions from code review

* Apply suggestions from code review

* Apply suggestions from code review

* Address comments from review - update 'feature extractor'
Co-authored by: Yih-Dar <2521628+ydshieh@users.noreply.github.com>"
github.com/huggingface/transformers,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/huggingface/transformers,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/huggingface/transformers,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/huggingface/transformers,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-01-21T11:10:41Z,"Add Swin Transformer (#15085)

* Add all files

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Updates

* Apply suggestions from review

* Fix failing tests

* Update __init__.py

* Update configuration_swin.py

* Update auto_factory.py

* Fix pytests

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Fix tests and default checkpoint

* Fix Recursion error

* Code quality

* Remove copied from

* Update modeling_swin.py

* Code quality

* Update modeling_swin.py

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

* Fix feature extractor

* Fix code quality

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

* Update configuration_swin.py

* Update default checkpoint

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/model_doc/swin.mdx

Co-authored-by: Mishig Davaadorj <mishig.davaadorj@coloradocollege.edu>

* Update conversion script

* Reformat conversion script

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>
Co-authored-by: Mishig Davaadorj <mishig.davaadorj@coloradocollege.edu>"
github.com/deepinsight/insightface,alignment/synthetics/trainer_synthetics.py,2021-11-25T06:42:43Z,add synthetics alignment
github.com/fastai/fastai,fastai/vision/learner.py,2023-08-28T08:18:28Z,fix torch.jit.script on TimmBody
github.com/fastai/fastai,fastai/vision/learner.py,2023-08-17T22:15:36Z,support torchvision's multi-weight api
github.com/fastai/fastai,fastai/vision/learner.py,2023-08-05T12:58:08Z,Fix string format in plot_top_losses for SegmentationInterpretation
github.com/fastai/fastai,fastai/vision/learner.py,2022-10-19T18:23:08Z,Forgotten nbdev_export
github.com/fastai/fastai,fastai/vision/learner.py,2022-10-18T19:32:01Z,Add check to '_add_norm'
github.com/fastai/fastai,fastai/vision/learner.py,2022-09-15T19:54:21Z,fixes #3781
github.com/fastai/fastai,fastai/vision/learner.py,2022-07-25T23:10:18Z,nbdev2 fixes
github.com/fastai/fastai,fastai/vision/learner.py,2022-07-12T08:27:09Z,use py310 style union annotations
github.com/fastai/fastai,fastai/vision/learner.py,2022-06-30T01:38:34Z,fixes #3716
github.com/fastai/fastai,fastai/vision/learner.py,2022-05-11T00:01:34Z,Add from future import
github.com/fastai/fastai,fastai/vision/learner.py,2022-05-01T05:01:46Z,passing kwargs through to timm (#3632)
github.com/fastai/fastai,fastai/vision/learner.py,2022-05-01T02:57:06Z,fixes #3631
github.com/fastai/fastai,fastai/vision/learner.py,2022-04-22T17:08:31Z,fix create_head to allow for no pooling cases (#3626)
github.com/fastai/fastai,fastai/vision/learner.py,2022-04-21T21:36:22Z,fixes #3625
github.com/fastai/fastai,fastai/vision/learner.py,2022-04-20T20:22:49Z,fixes #3624
github.com/fastai/fastai,fastai/vision/learner.py,2022-02-26T22:10:30Z,removes add_vert from get_grid calls (#3593)
github.com/fastai/fastai,fastai/vision/learner.py,2021-09-30T01:56:18Z,"Typo on exception name (#3488)

* fix typo

* fix typo"
github.com/fastai/fastai,fastai/vision/learner.py,2021-06-18T00:12:45Z,"Fix #3404 #3364 (#3405)

* add missing kwargs to plot_to_losses

* add __getitem__ to TensorCategory

Co-authored-by: Thomas Capelle <thomas.capelle@steady-sun.com>"
github.com/fastai/fastai,fastai/vision/learner.py,2021-06-16T00:20:05Z,"Check if normalize exists on `_add_norm` (#3371)

* check if normalize already exists

* simplify code by removing return

Co-authored-by: Jeremy Howard <github@jhoward.fastmail.fm>

* simplify code by removing return

Co-authored-by: Jeremy Howard <github@jhoward.fastmail.fm>

* simplify code by removing return

* sync nb

Co-authored-by: Jeremy Howard <github@jhoward.fastmail.fm>"
github.com/fastai/fastai,fastai/vision/learner.py,2021-03-27T01:06:13Z,"Updated to support adding transforms to multiple dataloaders (#3268)

* Updated to support adding transforms to multiple dataloaders

* Dataloaders.add_tfms Updated based on suggestions"
github.com/fastai/fastai,fastai/vision/learner.py,2021-01-22T02:40:42Z,"SegmentationInterpretation Class with plot_top_losses() method (#3179)

* feature: add in plot_top_losses for SegmentationnInterpreation

* docs: added examples to tutorials that train UNet Segmentation models

* chore: spacing on if statement to match library conventions

* feature: add in plot_top_losses for SegmentationnInterpreation

* chore: clean notebooks for failing test

Co-authored-by: patrick <patrick.ford@libertymutual.com>"
github.com/fastai/fastai,fastai/vision/learner.py,2021-01-06T22:04:12Z,fix build
github.com/fastai/fastai,fastai/vision/learner.py,2021-01-06T19:49:03Z,fixes #3127
github.com/fastai/fastai,fastai/vision/learner.py,2021-01-02T20:17:33Z,Make create_head more intuitive + tests (#3115)
github.com/fastai/fastai,fastai/vision/learner.py,2020-12-29T03:30:45Z,Fix unet_learner store_attr bug (#3112)
github.com/fastai/fastai,fastai/vision/learner.py,2020-12-28T17:43:07Z,"Avoid redundant BatchNorm in create_head (#3015)

* Avoid redundant BatchNorm in create_head

* nbdev changed vision/utils.py

* rm create_cnn_model changes

* rm warning"
github.com/fastai/fastai,fastai/vision/learner.py,2020-12-22T20:01:49Z,fixes #3091
github.com/fastai/fastai,fastai/vision/learner.py,2020-11-10T14:39:02Z,"Deprecate `config` in `create_cnn` and instead pass kwargs directly (#2966)

* feat: vision learners config

* feat: keep track of vision args

* feat: config backwards compatible

* feat: improve warning message"
github.com/fastai/fastai,fastai/vision/learner.py,2020-11-07T18:57:17Z,fixes #2954
github.com/fastai/fastai,fastai/vision/learner.py,2020-09-06T21:19:48Z,fixes #2765
github.com/fastai/fastai,fastai/vision/learner.py,2020-08-23T17:46:36Z,"Fix typos (#2648)

* Fix typos

* Fix more typos

* Fix more typos and resolve conflict

* Fix more typos"
github.com/fastai/fastai,fastai/vision/learner.py,2020-08-21T02:19:37Z,rename
github.com/huggingface/transformers,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-06-29T09:17:36Z,"Update old existing feature extractor references (#24552)

* Update old existing feature extractor references

* Typo

* Apply suggestions from code review

* Apply suggestions from code review

* Apply suggestions from code review

* Address comments from review - update 'feature extractor'
Co-authored by: Yih-Dar <2521628+ydshieh@users.noreply.github.com>"
github.com/huggingface/transformers,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/huggingface/transformers,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-01-06T12:27:30Z,"fix levit timm conversion file (#20938)

* fix levit timm conversion file

* remove set_defaults"
github.com/huggingface/transformers,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/huggingface/transformers,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2022-06-01T15:06:20Z,"Adding LeViT Model by Facebook (#17466)

* levit files

* levit tests

* weights script

* weights script

* update

* style fixes

* few minor corrections

* Added teacher model

* edit docs

* fix-copies

* style fixes

* pr error resolved

* Update README.md

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/index.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/__init__.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/__init__.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/configuration_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/configuration_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* suggested pr changes

* style fixes

* minor bug

* update

* minor doc edit

* style

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update tests/models/levit/test_modeling_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* residual layer readable

* style

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update tests/models/levit/test_feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* change checkpoints and style

* update

* minor changes

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/huggingface/transformers,src/transformers/models/timm_backbone/modeling_timm_backbone.py,2023-11-01T15:58:35Z,"improving TimmBackbone to support FrozenBatchNorm2d (#27160)

* supporting freeze_batch_norm_2d

* supporting freeze_batch_norm_2d

* including unfreeze + separate into methods

* fix typo

* calling unfreeze

* lint

* Update src/transformers/models/timm_backbone/modeling_timm_backbone.py

Co-authored-by: amyeroberts <22614925+amyeroberts@users.noreply.github.com>

---------

Co-authored-by: Rafael Padilla <rafael.padilla@huggingface.co>
Co-authored-by: amyeroberts <22614925+amyeroberts@users.noreply.github.com>"
github.com/huggingface/transformers,src/transformers/models/timm_backbone/modeling_timm_backbone.py,2023-08-28T13:31:22Z,"Add type hints for pytorch models (final batch) (#25750)

* Add type hints for table_transformer

* Add type hints to Timesformer model

* Add type hints to Timm Backbone model

* Add type hints to TVLT family models

* Add type hints to Vivit family models

* Use the typing instance instead of the python builtin.

* Fix the `replace_return_docstrings` decorator for Vivit model

Co-authored-by: Matt <Rocketknight1@users.noreply.github.com>

---------

Co-authored-by: Matt <Rocketknight1@users.noreply.github.com>"
github.com/huggingface/transformers,src/transformers/models/timm_backbone/modeling_timm_backbone.py,2023-06-06T16:11:30Z,"Add TimmBackbone model (#22619)

* Add test_backbone for convnext

* Add TimmBackbone model

* Add check for backbone type

* Tidying up - config checks

* Update convnextv2

* Tidy up

* Fix indices & clearer comment

* Exceptions for config checks

* Correclty update config for tests

* Safer imports

* Safer safer imports

* Fix where decorators go

* Update import logic and backbone tests

* More import fixes

* Fixup

* Only import all_models if torch available

* Fix kwarg updates in from_pretrained & main rebase

* Tidy up

* Add tests for AutoBackbone

* Tidy up

* Fix import error

* Fix up

* Install nattan in doc_test_job

* Revert back to setting self._out_xxx directly

* Bug fix - out_indices mapping from out_features

* Fix tests

* Dont accept output_loading_info for Timm models

* Set out_xxx and don't remap

* Use smaller checkpoint for test

* Don't remap timm indices - check out_indices based on stage names

* Skip test as it's n/a

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Cleaner imports / spelling is hard

---------

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/huggingface/transformers,src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-06-29T09:17:36Z,"Update old existing feature extractor references (#24552)

* Update old existing feature extractor references

* Typo

* Apply suggestions from code review

* Apply suggestions from code review

* Apply suggestions from code review

* Address comments from review - update 'feature extractor'
Co-authored by: Yih-Dar <2521628+ydshieh@users.noreply.github.com>"
github.com/huggingface/transformers,src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/huggingface/transformers,src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/huggingface/transformers,src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2022-07-27T15:14:47Z,"Add swin transformer v2 (#17469)

* Add files generated using transformer-cli add-new-model-like command

* Add changes for swinv2 attention and forward method

* Add fixes

* Add modifications for weight conversion and remaining args in swin model

* Add changes for patchmerging

* Add changes for SwinV2selfattention

* Update conversion script

* Add final fixes for the swin_v2 model

* Add changes for conversion script for pretrained window size case

* Add pretrained window size value from config in SwinV2Encoder class

* Make fixup

* Add swinv2 to models_not_in_readme to utils/check_copies.py

* Modify Swinv2v2 to Swin Transformer V2

* Remove copied from, to run make fixup command

* Add updates to swinv2tf from main branch

* Add pretrained_window_size to config, to make tests pass

* Add modified weights from nandwalritik profile for swinv2

* Update model weights from swinv2 from nandwalritik profile

* Add fix for build_pr_documentation CI fix

* Add fixes for weight conversion

* Add change to make input with padding work

* Add fixes for test cases

* Add few changes from swin to swinv2 to pass test cases

* Remove tests for tensorflow as swinv2 for TF is not added yet

* Overide test_pt_tf_model_equivalence function as TF implementation for swinv2 is not added yet

* Add modeling_tf_swinv2 to _ignore_modules as test file is removed for this one right now.

* Update docs url for swinv2 in README.md

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Undo changes for check_repo

* Update url in readme.md

* Remove overrided function to test pt_tf_model_equivalence

* Remove TF model imports for Swinv2 as its not implemented in this PR

* Add changes for index.mdx

* Add swinv2 papers link,abstract and contributors details

* Rename cpb_mlp to continous_position_bias_mlp

* Add tips for swinv2 model

* Update src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Fix indentation for docstring example in src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update import order in src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add copyright statements in weights conversion script.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Remove Swinv2 from models_not_in_readme

* Reformat code

* Remove TF implementation file for swinv2

* Update start docstring.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add changes for docstring

* Update orgname for weights to microsoft

* Remove to_2tuple function

* Add copied from statements wherever applicable

* Add copied from to Swinv2ForMaskedImageModelling class

* Reformat code.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add unittest.skip(with reason.) for test_inputs_embeds test case.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add updates for test_modeling_swinv2.py

* Add @unittest.skip() annotation for clarity to create_and_test_config_common_properties function

* Add continuous_position_bias_mlp parameter to conversion script

* Add test for testing masked_image_modelling for swinv2

* Update Swinv2 to Swin Transformer v2 in docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update Swinv2 to Swin Transformer v2 in docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add suggested changes

* Add copied from to forward methods of Swinv2Stage and Swinv2Encoder

* Add push_to_hub flag to weight conversion script

* Change order or Swinv2DropPath class

* Add id2label mapping for imagenet 21k

* Add updated url for SwinV2 functions and classes used in implementation

* Update input_feature dimensions format, mentioned in comments.

Co-authored-by: Alara Dirik <8944735+alaradirik@users.noreply.github.com>

* Add suggested changes for modeling_swin2.py

* Update docs

* Remove create_and_test_config_common_properties function, as test_model_common_attributes is sufficient.

* Fix indentation.

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Add changes for making Nit objects in code style

* Add suggested changes

* Add suggested changes for test_modelling_swinv2

* make fix-copies

* Update docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Alara Dirik <8944735+alaradirik@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/huggingface/transformers,src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/huggingface/transformers,src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2022-12-07T10:03:39Z,"Add BiT + ViT hybrid (#20550)

* First draft

* More improvements

* Add backbone, first draft of ViT hybrid

* Add AutoBackbone

* More improvements

* Fix bug

* More improvements

* More improvements

* Convert ViT-hybrid

* More improvements

* add patch bit

* Fix style

* Improve code

* cleaned v1

* more cleaning

* more refactoring

* Improve models, add tests

* Add docs and tests

* Make more tests pass

* Improve default backbone config

* Update model_type

* Fix more tests

* Add more copied from statements

* More improvements

* Add push to hub to conversion scripts

* clean

* more cleanup

* clean

* replace to

* fix

* Update src/transformers/models/bit/configuration_bit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* fix base model prefix

* more cleaning

* get rid of stem

* clean

* replace flag

* Update src/transformers/models/bit/configuration_bit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/bit/configuration_bit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* add check

* another check

* fix for hybrid vit

* final fix

* update config

* fix class name

* fix `make fix-copies`

* remove `use_activation`

* Update src/transformers/models/bit/configuration_bit.py

* rm unneeded file

* Add BiT image processor

* rm unneeded file

* add doc

* Add image processor to conversion script

* Add ViTHybrid image processor

* Add resources

* Move bit to correct position

* Fix auto mapping

* Rename hybrid to Hybrid

* Fix name in toctree

* Fix READMEs'

* Improve config

* Simplify GroupNormActivation layer

* fix test + make style

* Improve config

* Apply suggestions from code review

Co-authored-by: Patrick von Platen <patrick.v.platen@gmail.com>

* remove comment

* remove comment

* replace

* replace

* remove all conv_layer

* refactor norm_layer

* revert x

* add copied from

* last changes + integration tests

* make fixup

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* fix name

* fix message

* remove assert and refactor

* refactor + make fixup

* refactor - add  + sfety checker

* fix docstring + checkpoint names

* fix merge issues

* fix function name

* fix copies

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* fix model checkpoint

* fix doctest output

* vit name on doc

* fix name on doc

* fix small nits

* fixed integration tests

* final changes - slow tests pass

Co-authored-by: Niels Rogge <nielsrogge@Nielss-MacBook-Pro.local>
Co-authored-by: younesbelkada <younesbelkada@gmail.com>
Co-authored-by: Younes Belkada <49240599+younesbelkada@users.noreply.github.com>
Co-authored-by: Patrick von Platen <patrick.v.platen@gmail.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/microsoft/unilm,kosmos-2/open_clip/src/open_clip/timm_model.py,2023-06-27T06:07:24Z,init
github.com/microsoft/unilm,kosmos-g/open_clip/src/open_clip/timm_model.py,2023-10-03T14:53:32Z,kosmos-g init
github.com/hpcaitech/ColossalAI,examples/images/diffusion/ldm/modules/midas/midas/vit.py,2023-09-19T06:20:26Z,"[misc] update pre-commit and run all files (#4752)

* [misc] update pre-commit

* [misc] run pre-commit

* [misc] remove useless configuration files

* [misc] ignore cuda for clang-format"
github.com/hpcaitech/ColossalAI,examples/images/diffusion/ldm/modules/midas/midas/vit.py,2022-12-13T06:26:49Z,support stable diffusion v2
github.com/salesforce/LAVIS,lavis/models/clip_models/model.py,2022-09-16T03:14:32Z,renaming features to embeds_proj.
github.com/salesforce/LAVIS,lavis/models/clip_models/model.py,2022-09-14T17:48:52Z,added licence headers.
github.com/salesforce/LAVIS,lavis/models/clip_models/model.py,2022-08-19T06:28:36Z,"(feat) feature extractor for ALBEF, BLIP, CLIP."
github.com/salesforce/LAVIS,lavis/models/clip_models/model.py,2022-07-31T10:03:55Z,"(feat, caution) return intermediate variables after ALBEF, BLIP, ALPRO forward."
github.com/salesforce/LAVIS,lavis/models/clip_models/model.py,2022-07-27T07:55:17Z,(refactor) rename PRETRAIEND_MODEL_DICT to PRETRAINED_MODEL_CONFIG_DICT; rename type2path to DATASET_CONFIG_DICT.
github.com/salesforce/LAVIS,lavis/models/clip_models/model.py,2022-07-11T14:05:13Z,(refactor) rename type2path to PRETRAIN_MODEL_DICT.
github.com/salesforce/LAVIS,lavis/models/clip_models/model.py,2022-07-02T11:58:07Z,"(fix, refactor) refactor model and dataset default config paths to allow installing lavis as a package."
github.com/salesforce/LAVIS,lavis/models/clip_models/model.py,2022-06-11T11:35:26Z,(feat) finished clip zero-shot imagenet eval. Verfied using ViT-L-14-336.
github.com/salesforce/LAVIS,lavis/models/clip_models/model.py,2022-06-08T03:06:10Z,"(feat, wip) update retrieval task to allow CLIP, ALBEF, BLIP coexist."
github.com/salesforce/LAVIS,lavis/models/clip_models/model.py,2022-06-07T08:27:53Z,"(wip) add clip models, can run training and zero-shot classification."
github.com/ashawkey/stable-dreamfusion,dpt.py,2023-04-21T06:08:37Z,"fix depth, add normal"
github.com/alembics/disco-diffusion,disco.py,2023-01-01T03:12:38Z,Release notes for the MiDaS v3 fix
github.com/alembics/disco-diffusion,disco.py,2023-01-01T02:38:57Z,Fix MiDaS clone by cloning from tag 'v3'
github.com/alembics/disco-diffusion,disco.py,2022-08-21T20:15:45Z,Prioritize huggingface secondary diffusion model download link
github.com/alembics/disco-diffusion,disco.py,2022-08-21T19:11:54Z,Add v5.61 versioning and changelog notes (corresponding to progressbar fix and 512x512 diffusion model download link update)
github.com/alembics/disco-diffusion,disco.py,2022-08-21T19:01:59Z,"Downgrade ipywidgets to 7.x on Colab to enable tqdm progress bar to work, and avoid unsightly message pane.
Prioritize huggingface.co download link for the 512x512 diffusion model over the-eye's (since the-eye's currently isn't working)."
github.com/alembics/disco-diffusion,disco.py,2022-07-17T05:06:21Z,"Open settings.txt file for writing with UTF-8 encoding

Fixes UnicodeEncodeError exception 'charmap' codec can't encode character when using some artist names in languages other than English"
github.com/alembics/disco-diffusion,disco.py,2022-07-14T06:04:19Z,Integrated portrait_generator_v001 512x512 diffusion model
github.com/alembics/disco-diffusion,disco.py,2022-07-11T21:45:23Z,"Addition of more OpenCLIP models, refactoring of downloading of diffusion models, addition of settings to handle 256x256 vs 512x512, credits"
github.com/alembics/disco-diffusion,disco.py,2022-06-24T04:45:12Z,"Fixed a bug in the video generation (at the end)

Fixed a bug in the video generation (at the end)"
github.com/alembics/disco-diffusion,disco.py,2022-06-17T23:27:59Z,Fix another bug with RAFT model installation. I think it's actually fixed now (famous last words).
github.com/alembics/disco-diffusion,disco.py,2022-06-17T19:56:46Z,Bugfix to installation of RAFT models
github.com/alembics/disco-diffusion,disco.py,2022-06-17T01:01:33Z,Improvement (correction?) to installation of the RAFT model
github.com/alembics/disco-diffusion,disco.py,2022-06-16T05:16:01Z,A fix to the directories used with video_init_blend_mode
github.com/alembics/disco-diffusion,disco.py,2022-06-16T04:07:30Z,Default animation_mode = 'None'
github.com/alembics/disco-diffusion,disco.py,2022-06-16T04:06:15Z,"Correction to args for animation_mode other than ""Video Input"""
github.com/alembics/disco-diffusion,disco.py,2022-06-16T00:16:08Z,"The first official warp/flow release in official Disco Diffusion -- v5.4
This removes the consistency checker which was in temporarily in v5.3.999. Still figuring out that bit.."
github.com/alembics/disco-diffusion,disco.py,2022-06-16T00:05:25Z,Fix to RAFT installation logic on subsequent runs.. and to video init steps.
github.com/alembics/disco-diffusion,disco.py,2022-06-15T21:10:34Z,Temporarily including all of the Warp stuff including the consistency checker. This causes us to have to include GPL while it's in. So we'll put it in for a moment for the commit history because we've got it.. and then I'll remove it momentarily.
github.com/alembics/disco-diffusion,disco.py,2022-06-12T18:10:05Z,Replace primary download url for 512x512 diffusion model
github.com/alembics/disco-diffusion,disco.py,2022-06-11T06:36:44Z,Update disco.py
github.com/alembics/disco-diffusion,disco.py,2022-06-11T05:33:17Z,Add symmetry and ViT14_336px
github.com/alembics/disco-diffusion,disco.py,2022-05-26T15:03:31Z,Fix init_scale bug (thanks aztecman)
github.com/alembics/disco-diffusion,disco.py,2022-05-26T14:49:33Z,Update disco.py
github.com/alembics/disco-diffusion,disco.py,2022-05-26T14:48:27Z,Update disco.py - Correction from Jan 2021 -> Jan 2022 in changelog
github.com/alembics/disco-diffusion,disco.py,2022-05-19T16:39:18Z,"Commenting out the PyTorch downgrade code for T4 and V100 on Colab, since there seems to be an increase in errors being reported since it was added."
github.com/alembics/disco-diffusion,disco.py,2022-05-17T20:59:15Z,"Only do the T4 or V100 torch downgrade if on Colab.
Indentation changes across all of disco.py and corresponding notebook (standardizing on 4 spaces)."
github.com/alembics/disco-diffusion,disco.py,2022-05-17T19:27:05Z,Downgrade torch for T4 and V100
github.com/alembics/disco-diffusion,disco.py,2022-05-15T01:18:33Z,"update for compiler

align notebooks and python file
also add contributing info for converter"
github.com/alembics/disco-diffusion,disco.py,2022-05-05T02:24:16Z,Update torch.device() logic
github.com/alembics/disco-diffusion,disco.py,2022-05-05T02:12:06Z,Add option to run with CPU
github.com/alembics/disco-diffusion,disco.py,2022-05-03T04:58:18Z,update fallback urls
github.com/alembics/disco-diffusion,disco.py,2022-05-02T23:53:48Z,add fallback model URLS
github.com/alembics/disco-diffusion,disco.py,2022-04-22T04:05:54Z,cleaner fix
github.com/alembics/disco-diffusion,disco.py,2022-04-22T03:58:45Z,"update init_image to take ""None"""
github.com/alembics/disco-diffusion,disco.py,2022-04-16T11:46:16Z,Fix to disable VR mode when not 3d
github.com/alembics/disco-diffusion,disco.py,2022-04-16T00:32:11Z,VR Turbo missing frames fix
github.com/alembics/disco-diffusion,disco.py,2022-04-10T16:41:39Z,Update .ipynb title for v5.2 VR Mode
github.com/alembics/disco-diffusion,disco.py,2022-04-10T16:34:16Z,Add Colab markup to expose VR mode settings in Colab notebook
github.com/alembics/disco-diffusion,disco.py,2022-04-10T16:28:14Z,Changelog and credits updates
github.com/alembics/disco-diffusion,disco.py,2022-04-10T13:26:36Z,Fix VR translation scale issue
github.com/alembics/disco-diffusion,disco.py,2022-04-10T02:47:40Z,"Bugfixes to the VR PR. It looks like it wouldn't have run successfully.
Need to look into trans_scale and a couple values that had bad syntax.
Also ported the changes to disco.py"
github.com/alembics/disco-diffusion,disco.py,2022-04-07T17:13:25Z,"Update Tutorial Section 

add links to guide and discord"
github.com/alembics/disco-diffusion,disco.py,2022-04-06T20:19:31Z,Allow low-res 3D animations. i.e. upscale for AdaBins
github.com/alembics/disco-diffusion,disco.py,2022-04-06T01:10:41Z,Fix disco_xform_utils import
github.com/alembics/disco-diffusion,disco.py,2022-04-05T20:55:06Z,"Fix Video Input mode's ffmpeg subprocess call, and improve imports"
github.com/alembics/disco-diffusion,disco.py,2022-04-05T16:33:11Z,Fix AdaBins model installation
github.com/alembics/disco-diffusion,disco.py,2022-04-05T15:44:59Z,Fix import of CLIP
github.com/alembics/disco-diffusion,disco.py,2022-04-05T14:16:22Z,Merge branch 'main' into cross-platofrm
github.com/alembics/disco-diffusion,disco.py,2022-04-04T18:46:10Z,"Don't run Turbo on frame 0 

it needs precursors that are not there yet."
github.com/alembics/disco-diffusion,disco.py,2022-04-04T18:38:09Z,"Merge pull request #11 from njbbaer/fix-missing-secondary-model

Fix error loading missing secondary model"
github.com/alembics/disco-diffusion,disco.py,2022-04-04T18:10:07Z,"In disco.py, split out new MSFTServer/HostsServer Apr 4th 2022 changes in the changelist notes - and added mention of the crossplatform support update"
github.com/alembics/disco-diffusion,disco.py,2022-04-04T05:45:12Z,update clip imports and path exists check
github.com/alembics/disco-diffusion,disco.py,2022-04-04T04:56:41Z,update install to be crossplatform
github.com/alembics/disco-diffusion,disco.py,2022-04-04T04:07:35Z,remove slip
github.com/alembics/disco-diffusion,disco.py,2022-04-04T02:06:25Z,"remove super resolution

fix image saving remove slip duplicate
remove super resolution
add meta data to ipynb"
github.com/alembics/disco-diffusion,disco.py,2022-04-03T05:33:57Z,"Merge pull request #18 from alembics/dev

Removal of confusing, redundant step params."
github.com/alembics/disco-diffusion,disco.py,2022-04-03T05:32:27Z,"Merge pull request #15 from MSFTserver/main

Pytorch3d Lite!"
github.com/alembics/disco-diffusion,disco.py,2022-04-03T00:52:18Z,correct turbo blend factor for diff frames
github.com/alembics/disco-diffusion,disco.py,2022-04-02T22:23:13Z,"remove references to turbo_blend

Is redundant. Turbo always blends."
github.com/alembics/disco-diffusion,disco.py,2022-04-01T04:22:24Z,"Removal of confusing, redundant step params."
github.com/alembics/disco-diffusion,disco.py,2022-03-31T04:42:24Z,Merge branch 'alembics:main' into main
github.com/alembics/disco-diffusion,disco.py,2022-03-31T04:40:56Z,"update for lite version of pytorch3d

update pytorch3d to lite version that uses a slimmed down repo only containing what we need"
github.com/alembics/disco-diffusion,disco.py,2022-03-30T20:39:49Z,Adds changelog note for video_init_seed_continuity
github.com/alembics/disco-diffusion,disco.py,2022-03-30T20:36:29Z,Adds video_init_frame_continuity parameter. Removes some extraneous code from do_3d_step()
github.com/alembics/disco-diffusion,disco.py,2022-03-30T20:15:25Z,Correction to sampling_mode name collision. Now it is separated into diffusion_sampling_mode (for plms vs. ddim) and sampling_mode (for 3D transform sampling mode).
github.com/alembics/disco-diffusion,disco.py,2022-03-30T19:15:20Z,3D rotation parameter units are now degrees rather than radians
github.com/alembics/disco-diffusion,disco.py,2022-03-30T18:42:31Z,Adds some documentation for Turbo Mode and disables it by default
github.com/alembics/disco-diffusion,disco.py,2022-03-30T18:29:54Z,Slight turbo mode cleanup. Added questionable code to protect people who may modify the settings code (or that may hurt them - It could go either way)
github.com/alembics/disco-diffusion,disco.py,2022-03-30T17:42:17Z,Adds improved zippy turbo blending
github.com/alembics/disco-diffusion,disco.py,2022-03-30T03:34:56Z,Add original simple turbo blending
github.com/alembics/disco-diffusion,disco.py,2022-03-30T03:08:34Z,Adds basic/original zippy turbo mode - with working resume functionality
github.com/alembics/disco-diffusion,disco.py,2022-03-13T07:48:33Z,Check if using secondary model before loading it
github.com/alembics/disco-diffusion,disco.py,2022-03-12T05:47:18Z,"Adds a human-readable id to each cell. Collapses more cells by default, and makes more code appear as forms by default.
Also restores some param UI fields."
github.com/alembics/disco-diffusion,disco.py,2022-03-12T04:31:29Z,Some PLMS vs DDIM changes made in the notebook weren't made in disco.py. This brings them over.
github.com/alembics/disco-diffusion,disco.py,2022-03-12T04:07:05Z,Give Set Up its own top-level section (instead of having it stuck in Tutorial by accident)
github.com/alembics/disco-diffusion,disco.py,2022-03-11T03:14:33Z,Attempting quick fix to broken calls to wget()
github.com/alembics/disco-diffusion,disco.py,2022-03-10T22:13:21Z,IPython magic commands replaced by Python code
github.com/alembics/disco-diffusion,disco.py,2022-03-10T22:11:38Z,IPython magic commands replaced by Python code
github.com/jacobgil/pytorch-grad-cam,usage_examples/swinT_example.py,2022-10-18T07:47:56Z,XAI for HuggingFace vision models tutorial
github.com/jacobgil/pytorch-grad-cam,usage_examples/swinT_example.py,2022-03-12T15:06:28Z,"Fix VIT example, and VIT+AblationCAM"
github.com/jacobgil/pytorch-grad-cam,usage_examples/swinT_example.py,2021-10-30T07:48:12Z,Add target layers
github.com/jacobgil/pytorch-grad-cam,usage_examples/swinT_example.py,2021-09-12T19:25:37Z,"Fix tests (#131)

* Tests"
github.com/jacobgil/pytorch-grad-cam,usage_examples/swinT_example.py,2021-09-12T17:01:32Z,Cleanup
github.com/jacobgil/pytorch-grad-cam,usage_examples/swinT_example.py,2021-09-12T16:54:12Z,Autopep8
github.com/jacobgil/pytorch-grad-cam,usage_examples/swinT_example.py,2021-09-09T14:43:25Z,Update for Swin Transformers
github.com/jacobgil/pytorch-grad-cam,usage_examples/swinT_example.py,2021-05-05T12:11:03Z,"Example for Swin Transformer (#85)

SwinTransformer example"
github.com/salesforce/LAVIS,lavis/models/clip_models/timm_model.py,2022-09-14T17:48:52Z,added licence headers.
github.com/salesforce/LAVIS,lavis/models/clip_models/timm_model.py,2022-06-07T08:27:53Z,"(wip) add clip models, can run training and zero-shot classification."
github.com/salesforce/LAVIS,lavis/models/ulip_models/ULIP_models.py,2023-11-30T19:33:26Z,Init Commit
github.com/salesforce/LAVIS,lavis/common/annotator/midas/midas/vit.py,2023-07-21T02:30:49Z,"20230623 blip diffusion documentation (#441)

* BLIP-Diffusion"
github.com/mlfoundations/open_clip,src/open_clip/timm_model.py,2023-10-20T15:52:07Z,"Combining CLIPA-v2 and SigLIP (both big_vision based) models (#660)

* merge changes for clipa inference

* update get_tokenizer to pass CI test; replace gelu_appoximate with act_kwargs

* Temporary, cannot have a force tf dependency

* Supporting SigLIP and CLIPA-v2 models (both sourced from big_vision jax based modelling code).

* Fix some test failures, remove old v1 CLIPA configs, add add 336 H14 CLIPA

* Fix torchscript

* Fix CoCa expand typo, force final LN after attentional pool

* Used wrong default clean fn in SimpleTokenizer, put lower case back

* Attempt to fix xlm roberta test w/ pretrained hf weight difference

* SigLIP weights working. More changes to support differing image preprocessing / text tokenization sensibly.

* A typo and unused import

* Fix two small issues, add hf_tokenizer_name to SigLIP models for non hf-hub use

* CLIPA reference temppory rwightman/ models for testing

* Rename profile->profiler to avoid python naming conflict

* More tokenizer rework, add context_len as class attr set in factory, default __call__() arg to None. Clean up reduction masking logic and fix #680

* fix ViT-SO400M-14-SigLIP name

* Fix CoCa pool LN, improve clarity of ViT pooling logic

* Exclude first/last tokens from tokens output of text models, should match prev CoCa behaviour, but at odds with argmax which leaves special tokens in (not consistent)

* Add eval results for CLIPA + SigLIP models

* Fixup bigG CLIPA config, 83.03 top-1 IN-1k

---------

Co-authored-by: zw <26880977+zw615@users.noreply.github.com>
Co-authored-by: Gabriel Ilharco <gabriel.ilharco@gmail.com>"
github.com/mlfoundations/open_clip,src/open_clip/timm_model.py,2023-05-12T18:35:41Z,"Add EVA models (via timm backbone), torch.compile support, more (#500)

* Add EVA models (via timm backbone), torch.compile support, pure bf16/fp16 mode, safetensors push support

* Fix optional type refinement for torchscript

* Back torchcompile changes out of factory, needs to be closer to use for various reasons

* Fix output_dict + jit regression, remove native OpenAI jit load as it's not working reliably in PyTorch 2.0, always extract state-dict, load model, re-jit (if enabled)"
github.com/mlfoundations/open_clip,src/open_clip/timm_model.py,2023-01-21T18:48:38Z,"Add convnext_base pretrained weights and a number of related changes (#357)

* Add convnext_base pretrained weights and a number of related changes
* timm augmentation support for train, via AugmentationCfg, --aug-cfg command line for specifing
* timm part of reqs as quite a few new weights and upcoming ones require it
* add drop path / dropout support to timm vision configs
* remove timm prefix for model configs that use it, remove a few redundant / not useful configs
* support image size override, tested w/ vit upscaling and convnext model

* Fix force image size for pretrained factory

* Consume use_timm aug cfg to avoid warning"
github.com/mlfoundations/open_clip,src/open_clip/timm_model.py,2022-12-29T07:17:23Z,Add xxlarge convnext and fix timm import for current pre-release of timm
github.com/mlfoundations/open_clip,src/open_clip/timm_model.py,2022-11-04T18:50:33Z,Fix grad checkpoing for timm models (bug). Change grad clipping arg naming/tense to match other args.
github.com/mlfoundations/open_clip,src/open_clip/timm_model.py,2022-11-03T00:23:30Z,Add/remove some model configs. Add profiler. Add support for layer_scale. No bias on timm model projection by default. Fix null pretrained arg handling.
github.com/mlfoundations/open_clip,src/open_clip/timm_model.py,2022-04-06T23:07:11Z,Add support for locked image towers and pretrained image tower weight load (timm models only)
github.com/mlfoundations/open_clip,src/open_clip/timm_model.py,2022-04-06T17:07:27Z,"Move timm model wrapper to own file, add improved OpenAI attribution to relevant files"
github.com/brycedrennan/imaginAIry,imaginairy/modules/midas/midas/backbones/vit.py,2023-12-18T21:01:56Z,feature: update midas (depth maps)
github.com/qubvel/segmentation_models.pytorch,misc/generate_table_timm.py,2023-01-07T10:15:21Z,"Release update 0.3.2 (#705)

* Update timm encoders list

* Update flake8 config

* Update author name

* Bump version"
github.com/qubvel/segmentation_models.pytorch,misc/generate_table_timm.py,2022-01-05T20:49:07Z,"Add black and flake8 (#532)

* Add black and flake8
* Fix test losses
* Fix pre-commit 
* Update README"
github.com/qubvel/segmentation_models.pytorch,misc/generate_table_timm.py,2021-07-05T18:33:43Z,Timm universal encoder (#433)
github.com/brycedrennan/imaginAIry,imaginairy/modules/midas/midas/backbones/beit.py,2023-12-18T21:01:56Z,feature: update midas (depth maps)
github.com/aws/amazon-sagemaker-examples,inference/nlp/realtime/triton/multi-model/ensemble-roberta/utils/model_utils.py,2023-03-14T23:23:03Z,"Adding Triton ONNX and JIT Tracing examples (#3820)

* LLM-Workshop commits

for the LLM workshops

* Added pip install upgrade for sagemaker api

* Changed the pip import statements

pip install sagemaker boto3 --upgrade --quiet

* Header increased to H2

* Reformatted the notebooks with Black command

* Adding triton specific ONNX , Ensemble and JIT Traced models

* Added Roberta Onnx and Roberta Traced examples

* Changed the compilation errors, Data Scient image and instance type

* Fixed the bucket in this

---------

Co-authored-by: atqy <95724753+atqy@users.noreply.github.com>"
github.com/brycedrennan/imaginAIry,imaginairy/vendored/imaginairy_normal_map/encoder.py,2023-05-06T20:01:50Z,"fix: move normal map code inline

Fixes conda package. Fixes #317"
github.com/zilliztech/gptcache,gptcache/embedding/timm.py,2023-04-20T08:54:27Z,"Fix image mode issue (#254)

Signed-off-by: Jael Gu <mengjia.gu@zilliz.com>"
github.com/zilliztech/gptcache,gptcache/embedding/timm.py,2023-04-20T05:50:31Z,"Allow image path or file-like object as input of image embedding (#252)

Signed-off-by: Jael Gu <mengjia.gu@zilliz.com>"
github.com/zilliztech/gptcache,gptcache/embedding/timm.py,2023-04-20T03:06:27Z,"Add image embedding timm (#249)

Signed-off-by: Jael Gu <mengjia.gu@zilliz.com>"
github.com/facebookresearch/nougat,nougat/model.py,2023-10-02T11:18:31Z,"correct dtype conversion

- adds option to run on full precision (#108)
- fixes edge case (#133)"
github.com/facebookresearch/nougat,nougat/model.py,2023-09-22T16:22:23Z,add custom page support
github.com/facebookresearch/nougat,nougat/model.py,2023-09-18T09:13:13Z,import func + backward compatibility
github.com/facebookresearch/nougat,nougat/model.py,2023-09-17T11:59:06Z,Merge branch 'main' into feature/add-mps-support
github.com/facebookresearch/nougat,nougat/model.py,2023-09-17T11:50:34Z,use bfloat16 when it is available (namely: not MPS)
github.com/facebookresearch/nougat,nougat/model.py,2023-09-15T18:35:07Z,fix device error
github.com/facebookresearch/nougat,nougat/model.py,2023-09-15T13:27:56Z,fix device error
github.com/facebookresearch/nougat,nougat/model.py,2023-09-15T11:41:21Z,"Merge pull request #68 from goggle/typos01

Correct two typos"
github.com/facebookresearch/nougat,nougat/model.py,2023-09-15T11:33:53Z,Merge branch 'main' of https://github.com/facebookresearch/nougat into main
github.com/facebookresearch/nougat,nougat/model.py,2023-09-15T11:31:31Z,add no skipping option
github.com/facebookresearch/nougat,nougat/model.py,2023-09-15T07:29:59Z,"Implementation Improvement for nougat.inference 

In the inference process, it appears that [the forward pass of the encoder is executed twice](https://github.com/facebookresearch/nougat/blob/c8c33a6e83da8d8ca56c47ac77cfcfe5fc2ebfe0/nougat/model.py#L577-L580), and the output of the second run consistently overwrites the results of the first run."
github.com/facebookresearch/nougat,nougat/model.py,2023-09-14T23:27:29Z,"Correct two typos

Signed-off-by: Alexander Seiler <seileralex@gmail.com>"
github.com/facebookresearch/nougat,nougat/model.py,2023-09-05T08:48:52Z,"Squashed commit of the following:

commit 25781ea7b87415d8155750490e6ce71cdb9d5c62
Author: Lukas Blecher <luk.blecher@gmail.com>
Date:   Tue Sep 5 10:48:12 2023 +0200

    format

commit e0139cb1c28a75357056db62c474d85cc818a446
Merge: d810428 490ed5b
Author: Lukas Blecher <luk.blecher@gmail.com>
Date:   Tue Sep 5 10:30:04 2023 +0200

    Merge branch 'main' into lightning2

commit d81042884201d7bf26f324a6f1a0afd9a31c9f86
Author: Lukas Blecher <luk.blecher@gmail.com>
Date:   Tue Sep 5 10:28:44 2023 +0200

    pytorch lightning 2.0"
github.com/facebookresearch/nougat,nougat/model.py,2023-09-02T07:12:27Z,"Merge pull request #28 from guspan-tanadi/main

docs: bit misspell in code comments"
github.com/facebookresearch/nougat,nougat/model.py,2023-09-01T14:58:01Z,docs: bit misspell in code comment
github.com/facebookresearch/nougat,nougat/model.py,2023-09-01T13:37:51Z,udate
github.com/facebookresearch/nougat,nougat/model.py,2023-09-01T05:15:50Z,added more strings
github.com/facebookresearch/nougat,nougat/model.py,2023-08-31T07:43:02Z,"support newer transformers versions

also add markdown compatibility option"
github.com/facebookresearch/nougat,nougat/model.py,2023-08-16T13:13:53Z,initial commit
github.com/roboflow/supervision,supervision/classification/core.py,2024-02-01T18:39:57Z,"docs(link): add relative urls  and fix readme urls

Signed-off-by: Onuralp SEZER <thunderbirdtr@gmail.com>"
github.com/roboflow/supervision,supervision/classification/core.py,2024-01-24T12:26:43Z,"docs: 📝 supervision downloader classfication draw geometry and utils >>>/... removed

Signed-off-by: Onuralp SEZER <thunderbirdtr@gmail.com>"
github.com/roboflow/supervision,supervision/classification/core.py,2023-11-27T14:27:39Z,Refactored the code in core.py to optimize softmax calculation and improve the related docstrings.
github.com/roboflow/supervision,supervision/classification/core.py,2023-11-27T14:04:06Z,Update docstrings and softmax calculation in core.py
github.com/roboflow/supervision,supervision/classification/core.py,2023-11-27T13:50:15Z,Merge branch 'develop' into add-classification-annotator
github.com/roboflow/supervision,supervision/classification/core.py,2023-11-27T11:58:34Z,"Optimize imports in core.py

Adjustments have been made to the import statements in the 'core.py' file of the 'classification' module."
github.com/roboflow/supervision,supervision/classification/core.py,2023-11-27T11:51:05Z,"Refactor code for clarity and better variable use

The variable names and usage within the 'ultralytics' and 'timm' functions were updated for improved code readability. The docstrings were also refined to better explain the function parameters. Instances where YOLO was redundantly called were also eliminated."
github.com/roboflow/supervision,supervision/classification/core.py,2023-11-27T10:57:00Z,fix precommit
github.com/roboflow/supervision,supervision/classification/core.py,2023-11-03T18:25:09Z,add timm data loader
github.com/roboflow/supervision,supervision/classification/core.py,2023-10-13T22:50:18Z,add classification annotator and from_clip loader
github.com/roboflow/supervision,supervision/classification/core.py,2023-10-09T11:41:56Z,"Reorganize documentation structure and reformat code

Moved advanced filtering documentation to `how_to` directory from `quickstart` to make way for more comprehensive starter guide. Reorganized MkDocs configuration accordingly. Formatted some code in `classification/core.py` and `dataset/core.py` for better readability. Added placeholder files in `how_to` for future guides on object detection, video processing, object tracking, model evaluation, and detections filtering."
github.com/roboflow/supervision,supervision/classification/core.py,2023-10-09T09:58:21Z,Remove unnecessary empty line in core.py
github.com/roboflow/supervision,supervision/classification/core.py,2023-10-09T09:52:13Z,fix(pre_commit): 🎨 auto format pre-commit hooks
github.com/roboflow/supervision,supervision/classification/core.py,2023-10-09T09:51:56Z,"Remove deprecated method from_yolov8 in Classification class

The method 'from_yolov8' was deprecated and was scheduled for removal in 0.16.0 release. The users are encouraged to use the more general method 'from_ultralytics' which supports results from any Ultralytics engine."
github.com/roboflow/supervision,supervision/classification/core.py,2023-08-15T10:40:30Z,🛠️ small fix
github.com/roboflow/supervision,supervision/classification/core.py,2023-08-15T05:32:02Z,fix pre-commit-ci flake8 test
github.com/roboflow/supervision,supervision/classification/core.py,2023-08-15T05:31:24Z,fix pre-commit-ci flake8 test
github.com/roboflow/supervision,supervision/classification/core.py,2023-08-15T05:27:42Z,flake tests
github.com/roboflow/supervision,supervision/classification/core.py,2023-08-15T05:20:49Z,embellish comment
github.com/roboflow/supervision,supervision/classification/core.py,2023-08-15T05:17:16Z,embellish comment
github.com/roboflow/supervision,supervision/classification/core.py,2023-08-14T19:18:12Z,remove redundant imports from comments
github.com/roboflow/supervision,supervision/classification/core.py,2023-08-12T12:07:34Z,Merge remote-tracking branch 'origin/classificationUltralytics' into classificationUltralytics
github.com/roboflow/supervision,supervision/classification/core.py,2023-08-12T12:07:00Z,change examples to classification models
github.com/roboflow/supervision,supervision/classification/core.py,2023-08-12T12:01:26Z,Merge branch 'develop' into classificationUltralytics
github.com/roboflow/supervision,supervision/classification/core.py,2023-08-11T12:57:04Z,doc fix
github.com/roboflow/supervision,supervision/classification/core.py,2023-08-11T12:25:13Z,format fix
github.com/roboflow/supervision,supervision/classification/core.py,2023-08-11T12:17:17Z,classification ultralytics
github.com/roboflow/supervision,supervision/classification/core.py,2023-07-25T20:09:14Z,"fix: 🐛 200+ E501 doc error lines are fixed.

Signed-off-by: Onuralp SEZER <thunderbirdtr@gmail.com>"
github.com/roboflow/supervision,supervision/classification/core.py,2023-06-14T12:07:14Z,8️⃣ `Classifications.from_yolov8` added
github.com/roboflow/supervision,supervision/classification/core.py,2023-06-14T11:15:28Z,🧪 ready for final tests
github.com/roboflow/supervision,supervision/classification/core.py,2023-06-14T08:48:00Z,respond to feedback
github.com/roboflow/supervision,supervision/classification/core.py,2023-06-13T12:16:48Z,"remove unused imports, fix top k bug, fix import paths"
github.com/roboflow/supervision,supervision/classification/core.py,2023-06-13T11:48:34Z,run linter
github.com/roboflow/supervision,supervision/classification/core.py,2023-06-13T11:48:07Z,"refactor code, respond to feedback"
github.com/roboflow/supervision,supervision/classification/core.py,2023-06-13T11:00:46Z,respond to feedback
github.com/roboflow/supervision,supervision/classification/core.py,2023-06-13T10:38:19Z,run linter
github.com/roboflow/supervision,supervision/classification/core.py,2023-06-13T10:38:02Z,generalise as_multiclass_folder_structure
github.com/roboflow/supervision,supervision/classification/core.py,2023-06-13T10:13:38Z,continue work on classifications
github.com/open-mmlab/mmsegmentation,mmseg/models/backbones/timm_backbone.py,2022-09-19T06:06:29Z,"[Refactor] Add pyupgrade pre-commit hook (#2078)

* add pyupgrade hook

* run pyupgrade precommit hook"
github.com/open-mmlab/mmsegmentation,mmseg/models/backbones/timm_backbone.py,2022-08-25T07:15:21Z,"[Fix]Remove modules from mmcv.runner and mmcv.utils (#1966)

* [WIP] mmcv-clean

* [WIP]Remove modules from mmcv.runner and mmcv.utils

* wip

* fix import mmengine

* remove ut

* loadcheckpoint in mae"
github.com/open-mmlab/mmsegmentation,mmseg/models/backbones/timm_backbone.py,2022-07-27T07:35:12Z,"[Fix] Use MMEngine BaseModule (#1829)

* [Fix] Use MMEngine BaseModule

* delete auto_fp16"
github.com/open-mmlab/mmsegmentation,mmseg/models/backbones/timm_backbone.py,2022-05-10T12:15:20Z,[Refactor] Refactor all registries
github.com/open-mmlab/mmsegmentation,mmseg/models/backbones/timm_backbone.py,2021-11-02T04:51:11Z,"[Feature] Support TIMMBackbone (#998)

* add TIMMBackbone and unittests

* add timm to tests requirements

* deprecate pt1.3.1

* reduce the unittests input of timm backbone

* fix ci

* fix ci

* fix ci

* fix ci

* fix ci

* fix ci

* fix ci

* fix ci

* fix ci

* remove unittests of large models of timm backbone

* generate coverage report for all unittests env

* reduce the unittests input of timm backbone

* reduce the unittests input of timm backbone"
github.com/aws/amazon-sagemaker-examples,inference/nlp/realtime/triton/multi-model/onnx-roberta-backend/utils/model_utils.py,2023-03-14T23:23:03Z,"Adding Triton ONNX and JIT Tracing examples (#3820)

* LLM-Workshop commits

for the LLM workshops

* Added pip install upgrade for sagemaker api

* Changed the pip import statements

pip install sagemaker boto3 --upgrade --quiet

* Header increased to H2

* Reformatted the notebooks with Black command

* Adding triton specific ONNX , Ensemble and JIT Traced models

* Added Roberta Onnx and Roberta Traced examples

* Changed the compilation errors, Data Scient image and instance type

* Fixed the bucket in this

---------

Co-authored-by: atqy <95724753+atqy@users.noreply.github.com>"
github.com/aws/amazon-sagemaker-examples,inference/nlp/realtime/triton/multi-model/pytorch-traced-roberta/utils/model_utils.py,2023-03-14T23:23:03Z,"Adding Triton ONNX and JIT Tracing examples (#3820)

* LLM-Workshop commits

for the LLM workshops

* Added pip install upgrade for sagemaker api

* Changed the pip import statements

pip install sagemaker boto3 --upgrade --quiet

* Header increased to H2

* Reformatted the notebooks with Black command

* Adding triton specific ONNX , Ensemble and JIT Traced models

* Added Roberta Onnx and Roberta Traced examples

* Changed the compilation errors, Data Scient image and instance type

* Fixed the bucket in this

---------

Co-authored-by: atqy <95724753+atqy@users.noreply.github.com>"
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2024-03-12T23:14:31Z,[AutoMM]Remove grounding-dino (#3974)
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2024-01-26T23:38:13Z,"[AutoMM] Add support for loading pre-trained weights in ft_transformer (#3859)

Co-authored-by: Zhiqiang Tang <zhiqiang.tang@rutgers.edu>"
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2024-01-16T17:18:42Z,"[AutoMM] Fix the bug when introducing PEFT methods that do not require adding additional parameters. (#3840)

Co-authored-by: Ubuntu <ubuntu@ip-172-31-3-160.us-west-2.compute.internal>"
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2023-11-15T05:34:14Z,[AutoMM] Update ft_transformer hyperparameters and add ft_transformer tutorial (#3700)
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2023-11-14T18:01:44Z,"[WIP] Parameter Efficient Fine-tuning SAM with LoRA for multi-class semantic segmentation tasks.  (#3677)

Co-authored-by: Ubuntu <ubuntu@ip-172-31-3-160.us-west-2.compute.internal>"
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2023-11-07T22:24:50Z,[AutoMM] Unify default config names (#3667)
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2023-11-07T09:24:53Z,"[AutoMM] Parameter Efficient Fine-tuning SAM with LoRA for binary semantic segmentation tasks. (#3645)

Co-authored-by: Ubuntu <ubuntu@ip-172-31-3-160.us-west-2.compute.internal>"
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2023-11-03T23:33:57Z,[AutoMM] Refactor AutoMM with learner class (#3650)
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2023-10-30T02:16:50Z,[AutoMM] FT_Transformer refactor (#3621)
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2023-08-26T04:34:26Z,[AutoMM] Support multi-gpu training in notebook (#3484)
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2023-08-03T21:04:28Z,[AutoMM] Unify creating tokenizers for all models (#3434)
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2023-06-08T00:51:14Z,[AutoMM] Support model parameter number statistics (#3289)
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2023-05-25T06:27:49Z,[multimodal]Enable backbone freezing to boost finetuning speed and save GPU usage (#3220)
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2023-05-15T23:08:08Z,[multimodal] Add Foundation Model for Object Detection (#3164)
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2023-03-03T18:02:09Z,[Post 0.7] [multimodal] Support xywh output for object detection (#2948)
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2023-02-10T21:42:04Z,[AutoMM] Update logger (#2894)
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2023-02-02T08:07:07Z,"[AutoMM] Add document classification pipeline (#2765)

Co-authored-by: Ubuntu <ubuntu@ip-172-31-29-208.eu-west-1.compute.internal>"
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2023-01-31T20:52:24Z,[AutoMM] Filter out unused model configs (#2789)
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2023-01-23T19:51:42Z,"[object detection] Model Save/Load and Objects365 Pretraining (#2700)

* objects 365 pretraining and evaluation

* refactors

* add reset classes

* lint

* black

* fix

* black

* fix

* fix s3 path

* fix example

* add a todo, restart ci

* fix

* fix

* example

* no need to input config_file"
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2023-01-18T23:44:02Z,"Support dump and load timm and hf_text models on MultiModalPredictor (#2682)

* add dump_timm_image and dump_hf_text to MultiModalPredictor

* load timm image model from path when supplied in hyperparameter

* add tests

* support multiple models under fusion_mlp

* address CR comments

* refactor"
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2022-12-14T08:47:59Z,"[Merge after 0.6.1][NER] add multimodal named entity recognition (#2556)

* add multimodal named entity recognition

* update constants

* update modality

* fix backward compability issue

* fix ci issue

* fix ci issue

* update

* add multimodal ner tutorial

* update ner tutorial

* revise based on feedback

* update

* remove label processor for ner

* fix ci

* fix ci issue

* fix ci issue

* fix backward compability issue

* fix ci issue

Co-authored-by: Ubuntu <ubuntu@ip-172-31-4-137.eu-west-1.compute.internal>"
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2022-11-22T03:53:07Z,"Adding Joint IA3_LoRA as efficient finetuning strategy (#2451)

* adding ia3_lora peft and raft#1 preset

* fix

* dynamic max length template choice;

* fix trigger of PEFT

* add coment for 11B model in preset

Co-authored-by: Ubuntu <ubuntu@ip-172-31-44-212.eu-west-1.compute.internal>"
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2022-11-15T09:30:53Z,"Remove dummy layer (#2394)

* Update constants.py

* Update predictor.py

* Update ner_text.py

* Update ner_text.py

* Update ner_text.py

* add standalone test

* fix

* Update test_ner_standalone.py

* Update test_ner.py

* Update test_ner.py

* fix

* Update process_ner.py

* Update test_ner_standalone.py

* Update process_ner.py

* Update fusion_mlp_image_text_tabular.yaml

* Update model.py

* Update process_ner.py

* Update process_ner.py

* Update ner_text.py

* start ci

Co-authored-by: Ubuntu <ubuntu@ip-172-31-53-45.us-west-2.compute.internal>"
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2022-11-13T00:25:46Z,"Add standalone test (#2372)

* Update constants.py

* Update predictor.py

* Update ner_text.py

* Update ner_text.py

* Update ner_text.py

* add standalone test

* fix

* Update test_ner_standalone.py

* Update test_ner.py

* Update test_ner.py

* fix

* Update process_ner.py

* Update test_ner_standalone.py

Co-authored-by: Ubuntu <ubuntu@ip-172-31-53-45.us-west-2.compute.internal>"
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2022-11-08T04:31:47Z,"Add AutoMM backend to ag.vision (#2316)

* add backend

* add fit_summary

* lint

* list models

* add docstring

* remove preset

* fix head bug

* install automm before vision text

* remove automm in vision setup

* add features

* add doc

* fix load

* fit_summary compatible with other metric"
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2022-11-04T15:26:02Z,"Change backbone used in efficient finetuning tutorial to FLAN-T5 + Add flag for lowering peak CPU usage of large LMs. (#2285)

* add  test-case about flan-t5

* Update efficient_finetuning_basic.md

* reduce number of epochs

* Use smaller backbone

* add low_cpu_memory_usage

* use flan-t5-xl

* retrigger CI

* Update utils.py

* Update efficient_finetuning_basic.md

* Update efficient_finetuning_basic.md

* Update efficient_finetuning_basic.md

* Update efficient_finetuning_basic.md

* improve tutorial

* update"
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2022-11-03T18:51:20Z,"Finetune CLIP (#2297)

* image text similarity

* clip loss

* val metric

* debug

* debug metric

* evaluate in top k average

* symmetric evaluation

* tests

* clean

* preset

* lint

* fix

* lint

* clean

* docstrings

* lint"
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2022-11-02T06:51:45Z,"AutoMM Detection Multi GPU (DDP) Inference (#2265)

* add an example for automm distillation

* Add an example of using automm with distillation on GLUE datasets

* add test for distillation with different model structures

* add tutorial for automm distillation

* add an example for automm distillation

* Add an example of using automm with distillation on GLUE datasets

* finish pawsx example and update readme

* rebase fix

* remove python code notation to avoid running it during build

* Updated the logic to infer rois.

* remove tutorial and a minor fix

* add raw_feature for hf_text

* add onnx export

* black

* format and hp changes

* black

* fix get_column_features for other modality, need refactor

* add export_onnx, remove index vectorization

* minor fixes

* black

* add eval

* remove hard code in get_processed_batch

* remove hardcoded batch size

* fix bug and refactor

* black

* add descriptions for functions

* lint

* update example and fix comments

* remove extra inpit

* change back config

* fix label column infer in _predict

* update feature extraction example

* black

* add test add fix several comments

* black

* black

* lint

* add onnxruntime in setup

* fix

* remove code for test

* black

* remove print in test

* remove default batch test

* skip onnx test for version conflict

* edit setup

* minor fix

* change eval to evaluate

* fix merge

* fix merge

* change cascade_rcnn_x101 to a smaller centernet in detection test

* increase timeout from 15 to 120 for mim install

* update centernet version

* fix

* change to maskrcnn

* finished ft, testing val metric

* complete val metric integration for obj detection

* fix val bug

* fix val_metric error

* yolo voc finetune success

* refactors

* remove COLLECTION

* refactors

* refactor

* refactor

* black

* small fic

* small fix

* black

* lint

* lint

* lint

* fix pred without label

* fix ocr

* add comments

* add comments

* fix merge

* revert detection inference example change

* fix a conflict in matcher and update a dependency for mmocr

* decrease mim timeout to 60 second

* import mmcv only when use

* import mmcv only when use

* black

* black

* bug fix

* bug fix

* update detection eval example

* add todo mark

* cleaner code and black

* resolve several comments

* change infer_label_column_type_by's name

* fix typo

* add todo mark

* change constant map to mAP

* change mmcv_model constant to mmlab_models

* lint

* add todos and add if det to reset_index

* multi gpu training

* black

* add val_metric option and fix some TODOs

* small refactors

* black

* lint

* fix circular import

* black

* small fix

* fix collate and better integrate with lightning for detection

* remove unnecessary save/load

* remove train_to_val and val_to_train in litmmdet

* fix map

* temp fix for MMOCR, need to update

* enable multigpu inference

* merge

* lint

* fix single gpu inference

* add doc

* skip ocr test for now

* black

* black

* rename output_shape to num_classes

* fix

* add a TODO

* add train from scratch for detection model

* fix hardcoding for voc and coco while load coco format data

* black

* small fix and add voc2coco tool

* update voc2coco.py

* fix type

* fix voc2coco

* fix

* fix classes hardcode and add support for two stage lr

* fix single gpu eval and fix torchmetrics eval

* add support for voc format input

* fix a word

* add preset, fix eval bug for voc

* some refactors

* black and small refactor

* lint

* fix assets loading

* fix

* black

* add docs

* open PIL safely to avoid resource warning

* add fasterrcnn 2 stage lr and black

* add set_num_gpus

Co-authored-by: Haoyang Fang <haoyfang@amazon.com>"
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2022-10-24T04:39:03Z,"AutoMM MMDet (#2215)

* add an example for automm distillation

* Add an example of using automm with distillation on GLUE datasets

* add test for distillation with different model structures

* add tutorial for automm distillation

* add an example for automm distillation

* Add an example of using automm with distillation on GLUE datasets

* finish pawsx example and update readme

* rebase fix

* remove python code notation to avoid running it during build

* Updated the logic to infer rois.

* remove tutorial and a minor fix

* add raw_feature for hf_text

* add onnx export

* black

* format and hp changes

* black

* fix get_column_features for other modality, need refactor

* add export_onnx, remove index vectorization

* minor fixes

* black

* add eval

* remove hard code in get_processed_batch

* remove hardcoded batch size

* fix bug and refactor

* black

* add descriptions for functions

* lint

* update example and fix comments

* remove extra inpit

* change back config

* fix label column infer in _predict

* update feature extraction example

* black

* add test add fix several comments

* black

* black

* lint

* add onnxruntime in setup

* fix

* remove code for test

* black

* remove print in test

* remove default batch test

* skip onnx test for version conflict

* edit setup

* minor fix

* change eval to evaluate

* fix merge

* fix merge

* change cascade_rcnn_x101 to a smaller centernet in detection test

* increase timeout from 15 to 120 for mim install

* update centernet version

* fix

* change to maskrcnn

* finished ft, testing val metric

* complete val metric integration for obj detection

* fix val bug

* fix val_metric error

* yolo voc finetune success

* refactors

* remove COLLECTION

* refactors

* refactor

* refactor

* black

* small fic

* small fix

* black

* lint

* lint

* lint

* fix pred without label

* fix ocr

* add comments

* add comments

* fix merge

* revert detection inference example change

* fix a conflict in matcher and update a dependency for mmocr

* decrease mim timeout to 60 second

* import mmcv only when use

* import mmcv only when use

* black

* black

* bug fix

* bug fix

* update detection eval example

* add todo mark

* cleaner code and black

* resolve several comments

* change infer_label_column_type_by's name

* fix typo

* add todo mark

* change constant map to mAP

* change mmcv_model constant to mmlab_models

* lint

* add todos and add if det to reset_index

Co-authored-by: Haoyang Fang <haoyfang@amazon.com>"
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2022-10-18T00:21:34Z,"Fix timm (#2219)

* fix timm

* fix

* cap timm in core"
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2022-10-14T15:09:40Z,"Add AutoMM named entity recognition (#2183)

* add AutoMM named entity recognition

* add dependent libraries

* fix lint check issues

* set version range for the evaluate lib

* resolve the conflict between the datasets script in unittest and the datasets library

* fix config issue in df preprocess

* fix keyerror in data utils

* fix config issue when initialize df preprocessor

* to initiate CI

* to initiate CI

* add unit test for ner

* update unit test

* fix lint error

* add missed model util

* fix import error

* add dependency seqeval

* add dependency seqeval

* add blank line

* inherit from HFAutoModelForTextPrediction and move config to init

* add todo and remove num_classes

* start CI

* fix based on comments

* lit_ner inherit from lit_module

* lit_ner inherit lit_module

* fix

* fix

* fix

* fix matcher init_df_preprocessor config

* fix transform text index issue

* resolve conflict

* fix conflicts and bugs in realtime inference

Co-authored-by: Ubuntu <ubuntu@ip-172-31-0-192.us-west-2.compute.internal>
Co-authored-by: Ubuntu <ubuntu@ip-172-31-53-45.us-west-2.compute.internal>"
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2022-10-12T14:33:14Z,"Added additive attention (linear complexity) to transformer models. (#2194)

* Added row_attention

* Added row_attention

* Added row_attention

* Added additive attention (linear complexity) to transformer models.

* Added additive attention (linear complexity) to transformer models.

* Added additive attention (linear complexity) to transformer models.

* Added additive attention (linear complexity) to transformer models.

* Added additive attention (linear complexity) to transformer models.

* Added additive attention (linear complexity) to transformer models.

* Fixed unit test

* Added filters to remove nan in output.

* Added filters to remove nan in output.

* Added filters to remove nan in output.

* Added filters to remove nan in output.

* Fixed number of tokens for Categorical Transformer.

* Fixed number of tokens for Categorical Transformer.

* Fixed number of tokens for Categorical Transformer.

* Fixed format

* Fixed format

* Fixed format

* Fixed format"
github.com/autogluon/autogluon,multimodal/src/autogluon/multimodal/utils/model.py,2022-09-27T16:06:19Z,"Refactor AutoMM's utils (#2166)

* refactor utils

* update

* trigger build

* refactor utils

* update

* trigger build

* rm old utils

* isort"
github.com/facebookincubator/AITemplate,examples/01_resnet-50/weight_utils.py,2023-05-23T14:08:00Z,"check if the tensor is none before copying (#704)

Summary:
In fuse_conv_bn_weights, check if the tensor is none before copying

Pull Request resolved: https://github.com/facebookincubator/AITemplate/pull/704

Reviewed By: chenyang78

Differential Revision: D45986809

Pulled By: alexanderguzhva

fbshipit-source-id: 1423be506295b00b665107e6c5e3fecb49c77541"
github.com/facebookincubator/AITemplate,examples/01_resnet-50/weight_utils.py,2023-03-22T14:52:20Z,"Remove inheritance from object (#465)

Summary:
Inheritance from `object` was needed in Python2.
However, in Python3 classes are implicitly inherit from `object`.

More [info](https://stackoverflow.com/questions/4015417/why-do-python-classes-inherit-object) on it

Pull Request resolved: https://github.com/facebookincubator/AITemplate/pull/465

Reviewed By: alexanderguzhva

Differential Revision: D44293772

Pulled By: aakhundov

fbshipit-source-id: 581a8fa49405d71c4c29152a2f38c864cec384a7"
github.com/facebookincubator/AITemplate,examples/01_resnet-50/weight_utils.py,2023-01-31T21:45:25Z,"add test for OSS resnet50 to internal CI (#158)

Summary:
Pull Request resolved: https://github.com/facebookincubator/AITemplate/pull/158

using a random input and untrained model seems sufficient here

Reviewed By: chenyang78

Differential Revision: D42872904

fbshipit-source-id: ad58d83fc0610b8018f129ff23863ff625785252"
github.com/facebookincubator/AITemplate,examples/01_resnet-50/weight_utils.py,2022-10-03T06:35:54Z,v0.1
github.com/facebookincubator/AITemplate,examples/01_resnet-50/benchmark_pt.py,2022-10-03T06:35:54Z,v0.1
github.com/open-mmlab/mmsegmentation,projects/Adabins/backbones/adabins_backbone.py,2023-09-13T09:06:03Z,[CodeCamp2023-608] Add Adabins model (#3257)
github.com/layumi/Person_reID_baseline_pytorch,model.py,2023-12-27T11:52:47Z,suit for different timm
github.com/layumi/Person_reID_baseline_pytorch,model.py,2022-09-05T16:01:59Z,swinv2 training seems fine
github.com/layumi/Person_reID_baseline_pytorch,model.py,2022-09-05T15:53:40Z,swinv2 testing
github.com/layumi/Person_reID_baseline_pytorch,model.py,2022-07-16T10:36:33Z,rm history
github.com/clovaai/donut,donut/model.py,2023-07-31T05:59:42Z,feat: update pl version supports
github.com/clovaai/donut,donut/model.py,2023-03-21T05:57:09Z,fix: compatibility with latest transformers
github.com/clovaai/donut,donut/model.py,2022-11-14T09:15:03Z,feat: remove bfloat16 for cpu
github.com/clovaai/donut,donut/model.py,2022-10-05T02:13:26Z,fix: prepare_inputs_for_inference (this also supports 4.11.3)
github.com/clovaai/donut,donut/model.py,2022-09-19T17:52:07Z,Change model_kwarg to encoder_outputs
github.com/clovaai/donut,donut/model.py,2022-08-04T14:57:05Z,"feat: loads the pre-trained weight from the official branch, related to #10"
github.com/clovaai/donut,donut/model.py,2022-07-29T15:02:42Z,fix: ensure RGB
github.com/clovaai/donut,donut/model.py,2022-07-20T14:15:30Z,initial commit
github.com/NVIDIA-AI-IOT/torch2trt,scripts/profile_timm.py,2022-10-14T20:01:45Z,fix stderr profile timm
github.com/NVIDIA-AI-IOT/torch2trt,scripts/profile_timm.py,2022-10-13T23:23:44Z,capture stdout/stderr
github.com/NVIDIA-AI-IOT/torch2trt,scripts/profile_timm.py,2022-10-13T22:48:52Z,add timm profile script
github.com/Sygil-Dev/Sygil-WebUI,ldm/modules/midas/midas/vit.py,2023-06-23T02:58:24Z,"[pre-commit.ci] auto fixes from pre-commit.com hooks

for more information, see https://pre-commit.ci"
github.com/Sygil-Dev/Sygil-WebUI,ldm/modules/midas/midas/vit.py,2022-11-25T03:29:29Z,Included more files needed for running the 2.0 model.
github.com/huggingface/accelerate,src/accelerate/commands/estimate.py,2024-03-07T12:22:34Z,"Enable using dash or underscore for CLI args (#2527)

* New approach

* New version, good

* Complete rewrite, and works for testing

* More nits

* Simplify option_string filtering

* More suggestions from codereview

* Add test

* Fix broken tests"
github.com/huggingface/accelerate,src/accelerate/commands/estimate.py,2024-02-12T19:23:36Z,Fix test (#2435)
github.com/huggingface/accelerate,src/accelerate/commands/estimate.py,2024-01-11T18:47:59Z,"Fix model memory issue (#2327)

* Potential fix

* REmove config part?"
github.com/huggingface/accelerate,src/accelerate/commands/estimate.py,2023-08-28T13:47:44Z,"Final nits on model util (#1896)

* Nits

* Annoying markdown tables

* Try with one

* I give, try raw md

* Moot

* W/o code tick

* Markdown"
github.com/huggingface/accelerate,src/accelerate/commands/estimate.py,2023-08-25T14:05:58Z,"Add hub as core dep (#1885)

* Add hub as dep

* Missing refs"
github.com/huggingface/accelerate,src/accelerate/commands/estimate.py,2023-08-24T19:43:37Z,"Enable a token to be used (#1886)

* Enable based on passing the token

* Doc more"
github.com/huggingface/accelerate,src/accelerate/commands/estimate.py,2023-08-24T16:12:01Z,"Introduce model memory estimator (#1876)

* Estimator

* Right err

* Fixup tests

* trust remote code

* Print output for debugging purposes

* trust_remote_code

* Address some comments

* change doc to req arg

* Properly check for _no_split_modules in transformer models

* Note on transformer models

* Check/handle pentabytes

Co-authored-by: Benjamin Bossan <BenjaminBossan@users.noreply.github.com>

* Tests are passing locally again, better handle for no_split

* Adjust setup?

* Let's see if the cleaner version works

* Refactor and clean up for testing

* Specify in comments

* Better error handling

* A million tests later

* More tests + err handling

* Require hub

* More with remote code

* Clean up

* Add a test for no_split

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Docstring

* Address some comments

* rm einops

* Let it err out

* Adjust errs

* Tests

* Reduce test repeats

* Clean up borders

* Tip on 20%

---------

Co-authored-by: Benjamin Bossan <BenjaminBossan@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/huggingface/pytorch-image-models,tests/test_utils.py,2021-10-02T15:10:11Z,Fix ordering of tests
github.com/huggingface/pytorch-image-models,tests/test_utils.py,2021-10-02T14:55:08Z,Freeze unfreeze functionality finalized. Tests added
github.com/huggingface/pytorch-image-models,tests/test_models.py,2023-11-17T04:27:59Z,device agnostic testing
github.com/huggingface/pytorch-image-models,tests/test_models.py,2023-09-01T18:05:56Z,tinyvit skip ci test
github.com/huggingface/pytorch-image-models,tests/test_models.py,2023-08-19T23:26:45Z,"Merge pull request #1919 from ChengpengChen/main

Add RepGhost models and weights"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2023-08-17T06:40:17Z,fix bug in ci for efficientvits
github.com/huggingface/pytorch-image-models,tests/test_models.py,2023-08-16T03:54:53Z,Add RepGhost models and weights
github.com/huggingface/pytorch-image-models,tests/test_models.py,2023-05-17T04:51:12Z,fix unit test for samvit
github.com/huggingface/pytorch-image-models,tests/test_models.py,2023-04-26T22:52:13Z,"Final push to get remaining models using multi-weight pretrained configs, almost all weights on HF hub"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2023-03-31T15:33:26Z,Another test filter adjustment
github.com/huggingface/pytorch-image-models,tests/test_models.py,2023-03-31T07:04:56Z,Update test filtering for enormoous
github.com/huggingface/pytorch-image-models,tests/test_models.py,2023-03-28T05:56:52Z,Add eva02 to non-std test models
github.com/huggingface/pytorch-image-models,tests/test_models.py,2023-03-22T17:21:22Z,Improve filtering behaviour for tag + non-tagged model wildcard consistency.
github.com/huggingface/pytorch-image-models,tests/test_models.py,2023-03-16T21:51:20Z,"Exclude the large models from default_cfgs, failing github CI"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2023-03-16T06:21:51Z,"All swin models support spatial output, add output_fmt to v1/v2 and use ClassifierHead.
* update ClassifierHead to allow different input format
* add output format support to patch embed
* fix some flatten issues for a few conv head models
* add Format enum and helpers for tensor format (layout) choices"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2023-02-24T20:28:57Z,"CI: Split CI tests to run them in parallel (#1691)

* Split CI tests to run them in parallel

The idea of this PR is to split tests into multiple sets that can be run
in parallel by GH. For this, all tests in test_models.py that would run
on GH get a pytest marker. The GH workflow matrix is factorized to run
only a single marker. That way, only a subset of tests should run per
worker, leading to quicker results.

There is also a worker that runs all the tests that are not inside
test_models.py.

* [skip ci] empty commit to abort ci

* Fix typo in marker name

* Split fx into forward and backward

* Comment out test coverage for now

Checking if it's responsible for regression in CI runtime.

* Remove pytest cov completely from requirements

* Remove cov call in pyproject.toml

Missed that one."
github.com/huggingface/pytorch-image-models,tests/test_models.py,2023-01-27T21:54:04Z,"Finalize DaViT, some formatting and modelling simplifications (separate PatchEmbed to Stem + Downsample, weights on HF hub."
github.com/huggingface/pytorch-image-models,tests/test_models.py,2023-01-26T18:49:15Z,Merge remote-tracking branch 'upstream/main'
github.com/huggingface/pytorch-image-models,tests/test_models.py,2023-01-21T00:16:20Z,xlarge maxvit killing the tests
github.com/huggingface/pytorch-image-models,tests/test_models.py,2023-01-20T22:45:25Z,"Push all MaxxViT weights to HF hub, cleanup impl, add feature map extraction support and prompote to 'std' architecture. Fix norm head for proper embedding / feat map output. Add new in12k + ft 1k weights."
github.com/huggingface/pytorch-image-models,tests/test_models.py,2023-01-15T22:37:52Z,Merge remote-tracking branch 'upstream/main'
github.com/huggingface/pytorch-image-models,tests/test_models.py,2023-01-15T22:34:56Z,"Davit update formatting and fix grad checkpointing (#7)

fixed head to gap->norm->fc as per convnext, along with option for norm->gap->fc
failed tests due to clip convnext models, davit tests passed"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2023-01-05T15:53:32Z,"Add ConvNeXt-V2 support (model additions and weights) (#1614)

* Add ConvNeXt-V2 support (model additions and weights)

* ConvNeXt-V2 weights on HF Hub, tweaking some tests

* Update README, fixing convnextv2 tests"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-12-23T05:32:31Z,Add flexivit to non-std tests list
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-12-13T07:13:58Z,Merge branch 'rwightman:main' into main
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-12-11T11:03:22Z,"Davit std (#5)

* Update davit.py

* Update test_models.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* starting point

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update test_models.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Davit revised (#4)

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

clean up

* Update test_models.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update davit.py

* Update test_models.py

* Update davit.py"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-12-09T22:49:44Z,Merge remote-tracking branch 'origin/main' into refactor-imports
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-12-09T10:53:21Z,"Davit std (#3)

Davit with all features working"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-12-07T16:54:06Z,"Add EVA FT results, hopefully fix BEiT test failures"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-12-06T23:00:06Z,"Major module / path restructure, timm.models.layers -> timm.layers, add _ prefix to all non model modules in timm.models"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-12-05T18:21:34Z,"Initial multi-weight support, handled so old pretraing config handling co-exists with new tags."
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-09-07T15:09:47Z,Fix beitv2 tests
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-08-23T20:38:26Z,"More test fixes, pool size for 256x256 maxvit models"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-08-23T00:40:31Z,More model and test fixes
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-08-18T23:19:46Z,"Fix some test failures, torchscript issues"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-07-17T21:55:47Z,Attempt to fix unit tests by removing subset of tests on mac runner
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-05-13T05:31:55Z,"Swin-V2 test fixes, typo"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-05-09T22:20:24Z,Fix tests for rank-4 output where feature channels dim is -1 (3) and not 1
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-05-06T14:08:10Z,Add Sequencer to non std filters
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-03-21T20:41:43Z,Merge remote-tracking branch 'origin/master' into norm_norm_norm
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-02-28T21:56:23Z,"Significant model refactor and additions:
* All models updated with revised foward_features / forward_head interface
* Vision transformer and MLP based models consistently output sequence from forward_features (pooling or token selection considered part of 'head')
* WIP param grouping interface to allow consistent grouping of parameters for layer-wise decay across all model types
* Add gradient checkpointing support to a significant % of models, especially popular architectures
* Formatting and interface consistency improvements across models
* layer-wise LR decay impl part of optimizer factory w/ scale support in scheduler
* Poolformer and Volo architectures added"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-02-24T03:50:26Z,Missed comitting outstanding changes to default_cfg keys and test exclusions for swin v2
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-01-27T06:53:57Z,"Move DeiT to own file, vit getting crowded. Working towards fixing #1029, make pooling interface for transformers and mlp closer to convnets. Still working through some details..."
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-01-26T06:20:45Z,Merge remote-tracking branch 'origin/master' into norm_norm_norm
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-01-26T05:54:13Z,"Transitioning default_cfg -> pretrained_cfg. Improving handling of pretrained_cfg source (HF-Hub, files, timm config, etc). Checkpoint handling tweaks."
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-01-17T20:20:02Z,Add Dino pretrained weights (no head) for vit models. Add support to tests and helpers for models w/ no classifier (num_classes=0 in pretrained cfg)
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-01-15T01:23:35Z,"Giant/gigantic vits snuck through in a test a broke GitHub test runner, add filter"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-01-15T00:28:27Z,"Extra vit_huge model likely to cause test issue (non in21k variant), adding to filters"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-01-15T00:28:27Z,Update REAMDE.md. Sneak in g/G (giant / gigantic?) ViT defs from scaling paper
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-01-07T06:21:05Z,Add lcnet_100 and mnasnet_small weights
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-01-07T02:08:39Z,Remove deprecated bn-tf train arg and create_model handler. Add evos/evob models back into fx test filter until norm_norm_norm branch merged.
github.com/huggingface/pytorch-image-models,tests/test_models.py,2022-01-07T00:04:23Z,"Update pytest for GitHub runner to use --forked with xdist, hopefully eliminate memory buildup"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-12-01T22:58:56Z,Add FX backward tests back
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-12-01T20:09:23Z,"Update pytest for GitHub runner to use --forked with xdist, hopefully eliminate memory buildup"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-11-24T21:21:24Z,Remove evonorm models from FX tests
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-11-24T06:24:58Z,Would like to pass GitHub tests again disabling both FX feature extract backward and torchscript tests
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-11-23T22:32:32Z,Remove FX backward test from GitHub actions runs for now.
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-11-22T22:00:27Z,Add patch8 vit model to FX exclusion filter
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-11-22T19:48:40Z,"New FX test strategy, filter based on param count"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-11-22T17:46:43Z,More FX test tweaks
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-11-22T05:26:44Z,Filter more large models from FX tests
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-11-22T03:49:33Z,Filter more models for FX tests
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-11-21T22:08:53Z,Add nfnet_f2 to FX test exclusion
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-11-20T23:51:48Z,Add more models to FX filter
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-11-20T01:35:41Z,Add FX test exclusion since it uses more ram and barfs on GitHub actions. Will take a few iterations to include needed models :(
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-11-19T22:24:12Z,Attempt to reduce memory footprint of FX tests for GitHub actions runs
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-11-19T16:39:48Z,"beit_large models killing GitHub actions test, filter out"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-11-19T05:25:00Z,Cleanup qkv_bias cat in beit model so it can be traced
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-11-19T03:47:07Z,Minor post FX merge cleanup
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-11-13T00:06:33Z,fx ready for review
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-11-12T21:16:53Z,Add try/except guards
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-11-12T20:45:05Z,wip - pre-rebase
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-11-12T20:45:05Z,Tests to enforce all models FX traceable
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-09-13T23:38:23Z,"Add BeiT 'finetuned' 1k weights and pretrained 22k weights, pretraining specific (masked) model excluded for now"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-09-13T20:01:05Z,"Better handling of crossvit for tests / forward_features, fix torchscript regression in my changes"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-09-13T18:49:54Z,"Post crossvit merge cleanup, change model names to reflect input size, cleanup img size vs scale handling, fix tests"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-09-01T21:13:12Z,add crossvit
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-08-07T23:45:29Z,Add gc_efficientnetv2_rw_t weights (global context instead of SE attn). Add TF XL weights even though the fine-tuned ones don't validate that well. Change default arg for GlobalContext to use scal (mul) mode.
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-07-13T23:33:55Z,Attempt to fix xcit test failures on github runner by filter largest models
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-07-11T08:39:38Z,wip xcit
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-07-03T11:10:12Z,wip to review
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-06-23T06:16:05Z,"Fix a few issues loading pretrained vit/bit npz weights w/ num_classes=0 __init__ arg. Missed a few other small classifier handling detail on Mlp, GhostNet, Levit. Should fix #713"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-06-20T05:28:44Z,Add hybrid model fwds back
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-06-13T06:31:24Z,Try lower max size for non_std default_cfg test
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-06-12T23:40:02Z,"Refactoring, cleanup, improved test coverage.
* Add eca_nfnet_l2 weights, 84.7 @ 384x384
* All 'non-std' (ie transformer / mlp) models have classifier / default_cfg test added
* Fix #694 reset_classifer / num_features / forward_features / num_classes=0 consistency for transformer / mlp models
* Add direct loading of npz to vision transformer (pure transformer so far, hybrid to come)
* Rename vit_deit* to deit_*
* Remove some deprecated vit hybrid model defs
* Clean up classifier flatten for conv classifiers and unusual cases (mobilenetv3/ghostnet)
* Remove explicit model fns for levit conv, just pass in arg"
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-05-31T05:00:43Z,Missed comma in test filters.
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-05-30T19:47:02Z,Able to use other attn layer in EfficientNet now. Create test ECA + GC B0 configs. Make ECA more configurable.
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-05-26T22:28:42Z,"Fix #661, move hardswish out of default args for LeViT. Enable native torch support for hardswish, hardsigmoid, mish if present."
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-05-25T21:11:36Z,Fix visformer in_chans stem handling
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-05-25T19:52:07Z,Filter large vit models from torchscript tests
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-05-25T18:10:17Z,Hopefully the last test update for this PR...
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-05-25T17:14:45Z,Filter test models before creation for backward/torchscript tests
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-05-25T05:50:12Z,"Add Visformer-small weighs, tweak torchscript jit test img size."
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-05-25T04:36:56Z,Lower max backward size for tests.
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-05-25T04:13:26Z,Expand scope of testing for non-std vision transformer / mlp models. Some related cleanup and create fn cleanup for all vision transformer and mlp models. More CoaT weights.
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-05-22T23:34:31Z,Merge branch 'master' into levit_visformer_rednet
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-05-21T23:27:10Z,Merge branch 'convit' of https://github.com/amaarora/pytorch-image-models into amaarora-convit
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-05-21T03:46:47Z,Add convit to non-std filters as vit_
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-05-21T01:11:56Z,update tests and exclude convit_base
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-05-20T03:20:39Z,update test_models.py
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-05-19T18:09:42Z,Update tests for new mlp models
github.com/huggingface/pytorch-image-models,tests/test_models.py,2021-05-15T00:16:34Z,"Add levit, levit_c, and visformer model defs. Largely untested and not finished cleanup."
github.com/towhee-io/towhee,towhee/models/isc/isc.py,2022-12-13T11:07:20Z,"Modify isc to support onnx export (#2338)

Signed-off-by: Jael Gu <mengjia.gu@zilliz.com>

Signed-off-by: Jael Gu <mengjia.gu@zilliz.com>"
github.com/towhee-io/towhee,towhee/models/isc/isc.py,2022-11-28T09:07:11Z,"Fix isc: no need to load pretrained backbone (#2307)

Signed-off-by: Jael Gu <mengjia.gu@zilliz.com>

Signed-off-by: Jael Gu <mengjia.gu@zilliz.com>"
github.com/towhee-io/towhee,towhee/models/isc/isc.py,2022-09-13T08:04:29Z,"Add ISC to towhee.models (#2070)

Signed-off-by: Jael Gu <mengjia.gu@zilliz.com>

Signed-off-by: Jael Gu <mengjia.gu@zilliz.com>"
github.com/amazon-science/mm-cot,extract_features.py,2023-08-17T18:45:16Z,add (#58)
github.com/amazon-science/mm-cot,extract_features.py,2023-07-11T13:12:28Z,"add extract_features (#45)

* add extract_features.py

* fix readme

* update readme

* Update README.md

* add timm

* update shell"
github.com/Mikubill/sd-webui-controlnet,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/vit.py,2023-04-13T10:01:29Z,"Add {lineart, lineart_anime, normalbae, oneformer, shuffle, zoe} annotator"
github.com/Mikubill/sd-webui-controlnet,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/beit.py,2024-02-19T02:52:38Z,"type error in depth zoe, converting numpy type into int (#2650)"
github.com/Mikubill/sd-webui-controlnet,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/beit.py,2023-08-28T12:50:32Z,fix zoe
github.com/Mikubill/sd-webui-controlnet,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/beit.py,2023-04-13T10:01:29Z,"Add {lineart, lineart_anime, normalbae, oneformer, shuffle, zoe} annotator"
github.com/PINTO0309/PINTO_model_zoo,428_ISR/export_onnx.py,2023-12-27T13:19:32Z,Support for NxM ReID
github.com/Mikubill/sd-webui-controlnet,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin.py,2023-04-13T10:01:29Z,"Add {lineart, lineart_anime, normalbae, oneformer, shuffle, zoe} annotator"
github.com/Picsart-AI-Research/Text2Video-Zero,annotator/midas/midas/vit.py,2023-04-11T10:35:56Z,depth control added
github.com/Mikubill/sd-webui-controlnet,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/levit.py,2023-04-13T10:01:29Z,"Add {lineart, lineart_anime, normalbae, oneformer, shuffle, zoe} annotator"
github.com/Mikubill/sd-webui-controlnet,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin2.py,2023-04-13T10:01:29Z,"Add {lineart, lineart_anime, normalbae, oneformer, shuffle, zoe} annotator"
github.com/FMInference/FlexGen,benchmark/third_party/transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-02-21T02:38:10Z,"Release and merge commits

Co-authored-by: Ying Sheng <sqy1415@gmail.com>
Co-authored-by: Lianmin Zheng <lianminzheng@gmail.com>
Co-authored-by: Zhuohan Li <zhuohan123@gmail.com>
Co-authored-by: Beidi Chen <beidic@fb.com>"
github.com/Mikubill/sd-webui-controlnet,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/next_vit.py,2023-04-13T10:01:29Z,"Add {lineart, lineart_anime, normalbae, oneformer, shuffle, zoe} annotator"
github.com/isl-org/MiDaS,midas/backbones/vit.py,2022-12-23T23:41:34Z,refactor midas folder structure
github.com/FMInference/FlexGen,benchmark/third_party/transformers/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-02-21T02:38:10Z,"Release and merge commits

Co-authored-by: Ying Sheng <sqy1415@gmail.com>
Co-authored-by: Lianmin Zheng <lianminzheng@gmail.com>
Co-authored-by: Zhuohan Li <zhuohan123@gmail.com>
Co-authored-by: Beidi Chen <beidic@fb.com>"
github.com/modelscope/modelscope,modelscope/models/cv/text_driven_segmentation/lseg_vit.py,2022-09-28T06:30:37Z,"[to #42322933]update license 

以下算法进行了header变更：
modelscope.models.cv.cmdssl_video_embedding
modelscope.models.cv.action_recognition 
modelscope.models.cv.animal_recognition
modelscope.models.multi_modal.multi_stage_diffusion
modelscope.models.multi_modal.gemm

modelscope.pipelines.cv.live_category_pipeline
modelscope.pipelines.cv.video_category_pipeline
modelscope.models.cv.image_to_image_translation
modelscope.models.cv.image_to_image_generation

modelscope.models.cv.video_inpainting
modelscope.models.multi_modal.diffusion
modelscope.models.multi_modal.team
modelscope.models.cv.shop_segmentation
modelscope.models.cv.text_driven_segmentation
modelscope.models.cv.action_recognition 


modelscope.models.cv.face_emotion
modelscope.models.cv.hand_static
        Link: https://code.alibaba-inc.com/Ali-MaaS/MaaS-lib/codereview/10268474"
github.com/modelscope/modelscope,modelscope/models/cv/text_driven_segmentation/lseg_vit.py,2022-09-02T06:14:47Z,"[to #42322933]文本指导的语义分割模型 

文本指导的语义分割模型，根据输入的文本信息，讲图像中对应文本描述的物体分割出来。
        Link: https://code.alibaba-inc.com/Ali-MaaS/MaaS-lib/codereview/9942863"
github.com/FMInference/FlexGen,benchmark/third_party/transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-02-21T02:38:10Z,"Release and merge commits

Co-authored-by: Ying Sheng <sqy1415@gmail.com>
Co-authored-by: Lianmin Zheng <lianminzheng@gmail.com>
Co-authored-by: Zhuohan Li <zhuohan123@gmail.com>
Co-authored-by: Beidi Chen <beidic@fb.com>"
github.com/FMInference/FlexGen,benchmark/third_party/transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-02-21T02:38:10Z,"Release and merge commits

Co-authored-by: Ying Sheng <sqy1415@gmail.com>
Co-authored-by: Lianmin Zheng <lianminzheng@gmail.com>
Co-authored-by: Zhuohan Li <zhuohan123@gmail.com>
Co-authored-by: Beidi Chen <beidic@fb.com>"
github.com/FMInference/FlexGen,benchmark/third_party/transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-02-21T02:38:10Z,"Release and merge commits

Co-authored-by: Ying Sheng <sqy1415@gmail.com>
Co-authored-by: Lianmin Zheng <lianminzheng@gmail.com>
Co-authored-by: Zhuohan Li <zhuohan123@gmail.com>
Co-authored-by: Beidi Chen <beidic@fb.com>"
github.com/isl-org/MiDaS,midas/backbones/beit.py,2022-12-23T23:41:34Z,refactor midas folder structure
github.com/microsoft/DeepSpeedExamples,training/data_efficiency/vit_finetuning/models/vit.py,2023-03-31T00:20:37Z,DeepSpeedExamples major restructure  (#245)
github.com/isl-org/MiDaS,midas/backbones/swin.py,2022-12-23T23:41:34Z,refactor midas folder structure
github.com/pytorch/TensorRT,tools/perf/utils.py,2023-11-02T03:11:39Z,"fix: Segfault fix for Benchmarks

- Segfault fix for benchmarking on Docker container with CUDNN 8.8
- Likely due to Torch 2.1.0 based on CUDNN 8.9"
github.com/pytorch/TensorRT,tools/perf/utils.py,2023-11-01T23:33:47Z,"chore: update perf tooling to add dynamo options (#2423)

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>
Co-authored-by: George S <113141689+gs-olive@users.noreply.github.com>"
github.com/pytorch/TensorRT,tools/perf/utils.py,2022-12-05T17:59:08Z,"feat: Add functionality to only benchmark FX

- Add support for FX in YAML config specification path of `perf_run.py`
- Add support for only specifying one of: a PyTorch or TorchScript model
- Improve input model validation to throw errors earlier
- Remove deprecated option from torchvision model"
github.com/pytorch/TensorRT,tools/perf/utils.py,2022-12-02T21:49:19Z,"feat: Add functionality for easily benchmarking fx

- Add fx path in benchmarking code
- Add fx saving tools to `utils` and `hub`
- Add PyTorch model parsing and loading in `perf_run` script"
github.com/pytorch/TensorRT,tools/perf/utils.py,2022-09-08T17:53:12Z,"chore: Linter fixes

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>"
github.com/pytorch/TensorRT,tools/perf/utils.py,2022-08-11T19:35:39Z,"chore: Apply precommit tooling

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>"
github.com/pytorch/TensorRT,tools/perf/utils.py,2022-08-11T18:11:58Z,"refactor: Refactor perf_run and add internal benchmark scripts

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>"
github.com/FMInference/FlexGen,benchmark/third_party/transformers/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-02-21T02:38:10Z,"Release and merge commits

Co-authored-by: Ying Sheng <sqy1415@gmail.com>
Co-authored-by: Lianmin Zheng <lianminzheng@gmail.com>
Co-authored-by: Zhuohan Li <zhuohan123@gmail.com>
Co-authored-by: Beidi Chen <beidic@fb.com>"
github.com/PINTO0309/PINTO_model_zoo,428_ISR/export_onnx_1n.py,2023-12-27T14:25:09Z,update
github.com/PINTO0309/PINTO_model_zoo,428_ISR/export_onnx_1n.py,2023-12-27T13:19:32Z,Support for NxM ReID
github.com/PINTO0309/PINTO_model_zoo,428_ISR/export_onnx_nm.py,2023-12-27T13:19:32Z,Support for NxM ReID
github.com/lllyasviel/ControlNet-v1-1-nightly,annotator/midas/midas/vit.py,2023-03-14T16:03:00Z,first commit
github.com/isl-org/MiDaS,midas/backbones/levit.py,2022-12-23T23:41:34Z,refactor midas folder structure
github.com/FMInference/FlexGen,benchmark/third_party/transformers/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-02-21T02:38:10Z,"Release and merge commits

Co-authored-by: Ying Sheng <sqy1415@gmail.com>
Co-authored-by: Lianmin Zheng <lianminzheng@gmail.com>
Co-authored-by: Zhuohan Li <zhuohan123@gmail.com>
Co-authored-by: Beidi Chen <beidic@fb.com>"
github.com/isl-org/MiDaS,midas/backbones/swin2.py,2022-12-23T23:41:34Z,refactor midas folder structure
github.com/microsoft/torchgeo,torchgeo/models/vit.py,2024-03-02T20:34:02Z,HuggingFace: use stable download URLs (#1916)
github.com/microsoft/torchgeo,torchgeo/models/vit.py,2024-02-23T17:20:31Z,ViTSmall16_Weights: fix typo (#1904)
github.com/microsoft/torchgeo,torchgeo/models/vit.py,2023-09-30T18:50:43Z,"SSL4EO-L Weights (#1482)

* ssl4eo landsat 18 weights

* add resnet and vit moco weights under new hf repo

* add simclr ssl checkpoint

* add docs

* order models and new csv tablesf for docs

* adjust spacing of table

* lots of numbers and formatting

* missing resnet etm-sr weights

* fix failing tests

* check slow tests

* Fix URL checksum

* fix weight names

* Use 2 digits for all metrics

* hyphen -> en dash

* Use 2 digits for all metrics

* Landsat first

* EOL char before EOF char

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/models/vit.py,2023-09-30T15:55:12Z,"Correct the seco weight names (#1593)

* upload correct weight

* fixed again...

* another upload

* Actually test weights are loaded correctly

* Black fixes

* MoCo model was not supposed to have changed

* Semi-strict tests

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/models/vit.py,2023-03-23T04:59:47Z,"Models: fix preprocessing transforms (#1166)

* Models: fix preprocessing transforms

* Fix normalization of SeCo std dev

* black

* Fix SeCo transforms

* Add comment explaining source of transforms"
github.com/microsoft/torchgeo,torchgeo/models/vit.py,2023-02-20T20:40:51Z,"Add seco transforms and zhu normalization to pretrained weights (#1119)

* add seco transforms and zhu normalization

* adapt links

* add additional comment zhu lab

* left from merge"
github.com/microsoft/torchgeo,torchgeo/models/vit.py,2023-02-20T18:19:36Z,"Weights: add sha256 suffix (#1105)

* Weights: add sha256 suffix

* Fix URL"
github.com/microsoft/torchgeo,torchgeo/models/vit.py,2023-01-22T22:25:49Z,"Add Multi-Weight Support API (#917)

* load pretrained weights

* change name millionaid

* restructure and additional weights

* rename sentinel1 weights

* add vit small weights

* forgot to add vit.py

* struggling with test

* wrong name failing test

* feedback on tests

* increase test coverage

* fix failing test

* fix failing test

* fix failing test and add vit tests

* fix failing vit test

* torchgeo.models.utils

* forgot utils file

* typo num channels

* nitpick docs, version torchvision

* another try min dependencies

* add documentation table

* expand pytests to test pretrained weights on tasks

* reverse changes to byol task

* add tests to init pretrained weights from config

* forgot to add the conf files

* change path

* increase test coverage

* vit tests all pass locally including slow

* now remote

* fix tests another one

* add a draft tutorial

* run black on tutorial notebook

* Tutorial typo fixes

* Lower min torch/vision versions

* Fix bad rebase

* Remove dead code

* Flake8 fixes

* Consistent in_chans

* Black fixes

* bison > yacs

* Remove one more reference

* Download modified weights from hugging face

* Add entrypoints

* Add torch.hub support

* progress arg is required

* Fix model loading for resnet18

* Add transforms, update tests

* VIT -> ViT

* add seco weights

* Fix type hints

* Link to timm docs

* Fix pydocstyle

* Try to fix timm docs link

* Fix tests

* Nuke ignores

* Ignore timm links

* Add model API methods

* Add to __init__ and document

* Test model API functions

* fix tests

* Use correct documentation link for intersphinx

* Typos

* Fix Windows tests

* meth -> func

* Explicit function scope

* weight-specific filename

* Support enums in classification trainer

* Update other trainers too

* Fix regression tests

* Fix classification tests

* Fix byol tests

* Fix types

* progress_bar is required arg

* Test weight enums

* Fix pickling

* Fix regression tests

* Improve coverage of classification tests

* Improve coverage of BYOL tests

* Update resnet table

* Update ViT table

* Update get_state_dict usage

* Remove unused YAML files

* Update table widths

* Documentation improvements

* Tweak tables

* Try to fix Windows tests

* Revert ""Try to fix Windows tests""

This reverts commit 1325b13ff779b28adcaca36725e098ae8352a1d6.

* Monkeypatch everything

* Revert ""Monkeypatch everything""

This reverts commit e3e8d7d04231f8c0a39b5accd8f3d977aa7cbab2.

* Revert ""Revert ""Monkeypatch everything""""

This reverts commit 9b27bd705b06a743c092301c36802ce6e9503898.

* Patch things not at the source

* Fix missing import

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/modelscope/modelscope,modelscope/models/cv/image_quality_assessment_man/maniqa.py,2024-02-21T06:24:24Z,Fix word pubicly -> publicly (#748)
github.com/modelscope/modelscope,modelscope/models/cv/image_quality_assessment_man/maniqa.py,2023-03-08T16:44:55Z,"add MAN for image-quality-assessment 

add MAN model for image-quality-assessment

Link: https://code.alibaba-inc.com/Ali-MaaS/MaaS-lib/codereview/11890708

* add MAN for image-quality-assessment

* update and fix bugs in init file"
github.com/lllyasviel/ControlNet-v1-1-nightly,ldm/modules/midas/midas/vit.py,2023-04-12T17:45:57Z,i
github.com/microsoft/torchgeo,torchgeo/models/resnet.py,2024-03-02T20:34:02Z,HuggingFace: use stable download URLs (#1916)
github.com/microsoft/torchgeo,torchgeo/models/resnet.py,2023-09-30T18:50:43Z,"SSL4EO-L Weights (#1482)

* ssl4eo landsat 18 weights

* add resnet and vit moco weights under new hf repo

* add simclr ssl checkpoint

* add docs

* order models and new csv tablesf for docs

* adjust spacing of table

* lots of numbers and formatting

* missing resnet etm-sr weights

* fix failing tests

* check slow tests

* Fix URL checksum

* fix weight names

* Use 2 digits for all metrics

* hyphen -> en dash

* Use 2 digits for all metrics

* Landsat first

* EOL char before EOF char

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/models/resnet.py,2023-09-30T15:55:12Z,"Correct the seco weight names (#1593)

* upload correct weight

* fixed again...

* another upload

* Actually test weights are loaded correctly

* Black fixes

* MoCo model was not supposed to have changed

* Semi-strict tests

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/models/resnet.py,2023-05-24T15:42:20Z,"GASSL ResNet50 Weights (#1325)

* add gassl weights

* add transforms and update docs"
github.com/microsoft/torchgeo,torchgeo/models/resnet.py,2023-03-23T04:59:47Z,"Models: fix preprocessing transforms (#1166)

* Models: fix preprocessing transforms

* Fix normalization of SeCo std dev

* black

* Fix SeCo transforms

* Add comment explaining source of transforms"
github.com/microsoft/torchgeo,torchgeo/models/resnet.py,2023-02-20T20:40:51Z,"Add seco transforms and zhu normalization to pretrained weights (#1119)

* add seco transforms and zhu normalization

* adapt links

* add additional comment zhu lab

* left from merge"
github.com/microsoft/torchgeo,torchgeo/models/resnet.py,2023-02-20T18:19:36Z,"Weights: add sha256 suffix (#1105)

* Weights: add sha256 suffix

* Fix URL"
github.com/microsoft/torchgeo,torchgeo/models/resnet.py,2023-01-22T22:25:49Z,"Add Multi-Weight Support API (#917)

* load pretrained weights

* change name millionaid

* restructure and additional weights

* rename sentinel1 weights

* add vit small weights

* forgot to add vit.py

* struggling with test

* wrong name failing test

* feedback on tests

* increase test coverage

* fix failing test

* fix failing test

* fix failing test and add vit tests

* fix failing vit test

* torchgeo.models.utils

* forgot utils file

* typo num channels

* nitpick docs, version torchvision

* another try min dependencies

* add documentation table

* expand pytests to test pretrained weights on tasks

* reverse changes to byol task

* add tests to init pretrained weights from config

* forgot to add the conf files

* change path

* increase test coverage

* vit tests all pass locally including slow

* now remote

* fix tests another one

* add a draft tutorial

* run black on tutorial notebook

* Tutorial typo fixes

* Lower min torch/vision versions

* Fix bad rebase

* Remove dead code

* Flake8 fixes

* Consistent in_chans

* Black fixes

* bison > yacs

* Remove one more reference

* Download modified weights from hugging face

* Add entrypoints

* Add torch.hub support

* progress arg is required

* Fix model loading for resnet18

* Add transforms, update tests

* VIT -> ViT

* add seco weights

* Fix type hints

* Link to timm docs

* Fix pydocstyle

* Try to fix timm docs link

* Fix tests

* Nuke ignores

* Ignore timm links

* Add model API methods

* Add to __init__ and document

* Test model API functions

* fix tests

* Use correct documentation link for intersphinx

* Typos

* Fix Windows tests

* meth -> func

* Explicit function scope

* weight-specific filename

* Support enums in classification trainer

* Update other trainers too

* Fix regression tests

* Fix classification tests

* Fix byol tests

* Fix types

* progress_bar is required arg

* Test weight enums

* Fix pickling

* Fix regression tests

* Improve coverage of classification tests

* Improve coverage of BYOL tests

* Update resnet table

* Update ViT table

* Update get_state_dict usage

* Remove unused YAML files

* Update table widths

* Documentation improvements

* Tweak tables

* Try to fix Windows tests

* Revert ""Try to fix Windows tests""

This reverts commit 1325b13ff779b28adcaca36725e098ae8352a1d6.

* Monkeypatch everything

* Revert ""Monkeypatch everything""

This reverts commit e3e8d7d04231f8c0a39b5accd8f3d977aa7cbab2.

* Revert ""Revert ""Monkeypatch everything""""

This reverts commit 9b27bd705b06a743c092301c36802ce6e9503898.

* Patch things not at the source

* Fix missing import

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/models/resnet.py,2022-06-30T17:39:03Z,"Bump torchvision from 0.12.0 to 0.13.0 in /requirements (#631)

* Bump torchvision from 0.12.0 to 0.13.0 in /requirements

Bumps [torchvision](https://github.com/pytorch/vision) from 0.12.0 to 0.13.0.
- [Release notes](https://github.com/pytorch/vision/releases)
- [Commits](https://github.com/pytorch/vision/compare/v0.12.0...v0.13.0)

---
updated-dependencies:
- dependency-name: torchvision
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* Bump PyTorch too

* mypy fixes

* Fix deprecation warning in tests

* Style fixes

* More fixes

* Bump minimum packaging

* Silence mypy

* Fix tests

* Fix tests

* Fix tests

* Improve test coverage

* Improve test coverage

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/models/resnet.py,2022-03-14T20:35:37Z,"Remove type ignores for PyTorch (#460)

* Remove type ignores for PyTorch

* Mypy fixes for pytest MonkeyPatch

* Black

* Ignore Identity

* Generic fixes

* Remove unused Generator import

* More fixes

* Fix remaining mypy errors

* More typing cleanups

* typing.OrderedDict isn't available until Python 3.7.2+

* Need Python 3.9 to build docs for fancy OrderedDict

* Fix Python 3.8 and earlier support

* Fix BigEarthNet tests

* Fix bug in ETCI 2021 tests

* Remove unused flake8 ignore

* More robust and well-documented trainer steps

* Many functions don't actually use batch_idx

* Store cast hparams in trainers"
github.com/microsoft/torchgeo,torchgeo/models/resnet.py,2021-11-01T20:03:01Z,"Add pre-trained models for ResNet (#209)

* Add pre-trained models for ResNet

* Style fixes

* Add unit tests

* Mypy fix

* Add bands parameter"
github.com/microsoft/torchgeo,torchgeo/models/resnet.py,2021-10-28T21:36:32Z,"Revert ""Add pre-trained models for ResNet""

This reverts commit 9b7a0c43f5613186efa7f2a401ac084113746cc2."
github.com/microsoft/torchgeo,torchgeo/models/resnet.py,2021-10-28T21:34:41Z,Add pre-trained models for ResNet
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2024-03-11T10:04:29Z,BaseTask: explicitly pass batch size to logger (#1933)
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2024-02-06T09:55:15Z,"load_state_dict does not return the model (#1503)

* Update pretrained_weights.ipynb

Fixed an error in the state dict loading of the turorial and added a comment on the num_classes parameter when creating timm models.

* Update docs/tutorials/pretrained_weights.ipynb

* Update utils.py

* Import Tuple from typing
* Change return of `load_state_dict` from `model` to `Tuple[List[str], List[str]]`, matching the return of the standard PyTorch builtin function.

* Update pretrained_weights.ipynb

Remove example of loading pretrained model without prediction head (`num_classes=0`).

* Update README.md

Adapt new `load_state_dict` function.

* Mimic return type of builtin load_state_dict

* Modern type hints

* Blacken

* Try being explicit

---------

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2023-11-10T14:33:39Z,"Trainers: skip weights and augmentations when saving hparams (#1670)

* Update base.py to fix for custom augmentations

* Allow subclasses to ignore specific arguments

* Fix typing

* Save to self.weights

* pyupgrade

* Add test

* Save weights

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2023-09-11T22:05:28Z,"Refactor trainers (#1541)

* Refactor trainers

* Update conf files

* Fix pydocstyle

* Add scheduler monitor

* Update conf files

* Fix BYOL backbone

* Remove broken configure_optimizers out type

* Fix type hints

* No casts

* Increase test coverage

* Better documentation of supported models

* Remove unimportant configuration

* Remove unimportant configuration

* Drop model_kwargs

* Docstring improvements

* Add base class for all torchgeo trainers

* Add configure_* methods for losses/metrics/models

* init must come first

* More type hints"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2023-06-08T04:11:19Z,"Bump lightning from 2.0.2 to 2.0.3 in /requirements (#1406)

* Bump lightning from 2.0.2 to 2.0.3 in /requirements

Bumps [lightning](https://github.com/Lightning-AI/lightning) from 2.0.2 to 2.0.3.
- [Release notes](https://github.com/Lightning-AI/lightning/releases)
- [Commits](https://github.com/Lightning-AI/lightning/compare/2.0.2...2.0.3)

---
updated-dependencies:
- dependency-name: lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

* Update datamodule base class

* Check attributes first

* Fix remaining type hints

* More fixes

* Try again

* Try casting

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2023-04-16T01:27:51Z,Drop Python 3.8 support (#1246)
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2023-03-19T16:48:55Z,"Fix lightning imports (#1179)

* Fix lightning imports

* Style fixes"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2023-03-17T19:20:25Z,"SeCo/BYOL: add datamodule, RandomSeasonContrast (#1168)

* SeCo/BYOL: add datamodule, RandomSeasonContrast

* black

* Fix length, mypy

* Fix tests

* Fix float length

* Simplify length logic

* Simpler plotting

* Fix axes indexing

* Increase coverage

* Increase coverage

* CVPR prior not compatible with segmentation, but is with BYOL

* Increase coverage

* isort fix

* mypy fix"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2023-03-16T16:14:48Z,"Bump pytorch-lightning[extra] from 1.9.4 to 2.0.0 in /requirements (#1178)

* Bump pytorch-lightning[extra] from 1.9.4 to 2.0.0 in /requirements

Bumps [pytorch-lightning[extra]](https://github.com/Lightning-AI/lightning) from 1.9.4 to 2.0.0.
- [Release notes](https://github.com/Lightning-AI/lightning/releases)
- [Commits](https://github.com/Lightning-AI/lightning/compare/1.9.4...2.0.0)

---
updated-dependencies:
- dependency-name: pytorch-lightning[extra]
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>

* Remove deprecated features

* pytorch_lightning -> lightning

* bump radiant-mlhub too

* isort fix

* lightning does not yet have public type hints

* More ignores

* blanket ignore

* blanket ignore

* Fix function typo

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2023-02-26T18:14:37Z,"Fix broken URLs (#1125)

* Fix broken URLs

* Flake8 fix

* Don't change Chesapeake URL"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2023-02-11T21:07:08Z,"Fix load_state_dict for all timm models (#1084)

* implement isaacs solution

* simple test for function

* private function but failing tests

* Fix in_channels

* Fix model

* Test real weights

* Real weights have no final layer

* Style fixes

* expand test coverage of other trainers

* revert byol image_size

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2023-02-06T23:20:42Z,"Bump mypy from 0.991 to 1.0.0 in /requirements (#1089)

* Bump mypy from 0.991 to 1.0.0 in /requirements

Bumps [mypy](https://github.com/python/mypy) from 0.991 to 1.0.0.
- [Release notes](https://github.com/python/mypy/releases)
- [Commits](https://github.com/python/mypy/compare/v0.991...v1.0.0)

---
updated-dependencies:
- dependency-name: mypy
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>

* Bump upper bound

* mypy fixes

* Ignore undocumented base class

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2023-01-23T22:08:17Z,"DataModules: run all data augmentation on the GPU (#992)

* DataModules: run all data augmentation on the GPU

* Passing tests

* Update BigEarthNet

* Break ChesapeakeCVPR

* Update COWC

* Update Cyclone

* Update ETCI2021

* mypy fixes

* Update FAIR1M

* Update Inria

* Update LandCoverAI

* Update LoveDA

* Update NAIP

* Update NASA

* Update OSCD

* Update RESISC45

* Update SEN12MS

* Update So2Sat

* Update SpaceNet

* Update UCMerced

* Update USAVars

* Update xview

* Remove seed

* mypy fixes

* OSCD hacks

* Add NonGeoDataModule base class

* Fixes

* Add base class to docs

* mypy fixes

* Fix several tests

* Fix Normalize

* Syntax error

* Fix bigearthnet

* Fix dtype

* Consistent kornia import

* Get regression datasets working

* Fix detection tests

* Fix some chesapeake bugs

* Fix several segmentation issues

* isort fixes

* Undo breaking change

* Remove more code duplication, standardize docstrings

* mypy fixes

* Add default augmentation

* Augmentations can be any callable

* Fix datasets tests

* Fix datamodule tests

* Fix more datamodules

* Typo fix

* Set up val_dataset even when fit

* Fix classification tests

* Fix ETCI2021

* Fix SEN12MS

* Add GeoDataModule base class

* Fix several chesapeake bugs

* Fix dtype and shape

* Fix crs/bbox issue

* Fix test dtype

* Fix unequal size stacking error

* flake8 fix

* Better checks on sampler

* Fix bug introduced in NAIP dm

* Fix chesapeake dimensions

* Add one to mask

* Fix missing imports

* Fix batch size

* Simplify augmentations

* Don't run test or predict without datasets

* Fix tests

* Allow shared dataset

* One more try

* Fix typo

* Fix another typo

* Fix Chesapeake dimensions

* Apply augmentations during sanity check too

* Don't reuse fixtures

* Increase coverage

* Fix ETCI tests

* Test predict_step

* Test all loss methods

* Simplify validation plotting

* Document new classes

* Fix plotting

* Plotting should be robust in case dataset does not contain RGB bands

* Fix flake8

* 100% coverage of trainers

* Add lightning-lite dependency

* Revert ""Add lightning-lite dependency""

This reverts commit 1df7291ae59f6257a2cabd20a6c767e178bf4f0f.

* Define our own MisconfigurationException

* Properly test new data module base classes

* Fix mistake in setup call

* ExtractTensorPatches runs into OOM errors

* Test both fast_dev_run True and False

* Fix plot methods

* Fix OSCD tests

* Fix bug with inconsistent train/val/test splits between stages

* Fix issues with images of different sizes

* Fix OSCD tests

* Fix OSCD tests

* Bad rebase

* No trainer for OSCD so no need for config

* Bad rebase

* plot: only works during validation

* Fix collation of NASA Marine Debris dataset

* flake8 fix

* Quick test

* Revert ""Quick test""

This reverts commit f465efcbef904b8a5bc2257f2800eed931c491ab.

* 56 workers is a bit excessive

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2023-01-22T22:25:49Z,"Add Multi-Weight Support API (#917)

* load pretrained weights

* change name millionaid

* restructure and additional weights

* rename sentinel1 weights

* add vit small weights

* forgot to add vit.py

* struggling with test

* wrong name failing test

* feedback on tests

* increase test coverage

* fix failing test

* fix failing test

* fix failing test and add vit tests

* fix failing vit test

* torchgeo.models.utils

* forgot utils file

* typo num channels

* nitpick docs, version torchvision

* another try min dependencies

* add documentation table

* expand pytests to test pretrained weights on tasks

* reverse changes to byol task

* add tests to init pretrained weights from config

* forgot to add the conf files

* change path

* increase test coverage

* vit tests all pass locally including slow

* now remote

* fix tests another one

* add a draft tutorial

* run black on tutorial notebook

* Tutorial typo fixes

* Lower min torch/vision versions

* Fix bad rebase

* Remove dead code

* Flake8 fixes

* Consistent in_chans

* Black fixes

* bison > yacs

* Remove one more reference

* Download modified weights from hugging face

* Add entrypoints

* Add torch.hub support

* progress arg is required

* Fix model loading for resnet18

* Add transforms, update tests

* VIT -> ViT

* add seco weights

* Fix type hints

* Link to timm docs

* Fix pydocstyle

* Try to fix timm docs link

* Fix tests

* Nuke ignores

* Ignore timm links

* Add model API methods

* Add to __init__ and document

* Test model API functions

* fix tests

* Use correct documentation link for intersphinx

* Typos

* Fix Windows tests

* meth -> func

* Explicit function scope

* weight-specific filename

* Support enums in classification trainer

* Update other trainers too

* Fix regression tests

* Fix classification tests

* Fix byol tests

* Fix types

* progress_bar is required arg

* Test weight enums

* Fix pickling

* Fix regression tests

* Improve coverage of classification tests

* Improve coverage of BYOL tests

* Update resnet table

* Update ViT table

* Update get_state_dict usage

* Remove unused YAML files

* Update table widths

* Documentation improvements

* Tweak tables

* Try to fix Windows tests

* Revert ""Try to fix Windows tests""

This reverts commit 1325b13ff779b28adcaca36725e098ae8352a1d6.

* Monkeypatch everything

* Revert ""Monkeypatch everything""

This reverts commit e3e8d7d04231f8c0a39b5accd8f3d977aa7cbab2.

* Revert ""Revert ""Monkeypatch everything""""

This reverts commit 9b27bd705b06a743c092301c36802ce6e9503898.

* Patch things not at the source

* Fix missing import

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2022-12-26T15:51:30Z,"Remove __module__ hacks (#976)

* Remove __module__ hacks

* Remove unused imports

* Fix typo in reference

* Explicit link"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2022-12-15T20:22:59Z,"Change BYOL task argument name and switch to timm models (#918)

* change argument name and supporrt timm

* list_models()

* encoder -> backbone

* fix failing test

* suggested changes"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2022-10-06T13:41:30Z,Trainers: replace self.forward() with self() (#807)
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2022-10-05T02:59:03Z,"add predict_step to BYOLTask (#819)

* add predict_step to BYOLTask and tests

* fixes per suggestions"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2022-09-06T16:28:31Z,Fix torchvision constraint (#761)
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2022-08-02T23:39:10Z,"Bump pytorch-lightning from 1.6.5 to 1.7.0 in /requirements (#697)

* Bump pytorch-lightning from 1.6.5 to 1.7.0 in /requirements

Bumps [pytorch-lightning](https://github.com/Lightning-AI/lightning) from 1.6.5 to 1.7.0.
- [Release notes](https://github.com/Lightning-AI/lightning/releases)
- [Commits](https://github.com/Lightning-AI/lightning/compare/1.6.5...pl/1.7.0)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* Remove protobuf restrictions

* LightningModule was moved

* Mypy fixes

* Ensure same behavior

* Fix docs

* Silence warnings

* Change error message location

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2022-06-30T17:39:03Z,"Bump torchvision from 0.12.0 to 0.13.0 in /requirements (#631)

* Bump torchvision from 0.12.0 to 0.13.0 in /requirements

Bumps [torchvision](https://github.com/pytorch/vision) from 0.12.0 to 0.13.0.
- [Release notes](https://github.com/pytorch/vision/releases)
- [Commits](https://github.com/pytorch/vision/compare/v0.12.0...v0.13.0)

---
updated-dependencies:
- dependency-name: torchvision
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* Bump PyTorch too

* mypy fixes

* Fix deprecation warning in tests

* Style fixes

* More fixes

* Bump minimum packaging

* Silence mypy

* Fix tests

* Fix tests

* Fix tests

* Improve test coverage

* Improve test coverage

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2022-05-02T23:00:38Z,"Fix error when using other than 4 channel images with BYOL task (#522)

Co-authored-by: BAHL Gaetan <gaetan.bahl@inria.fr￼>"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2022-03-14T20:35:37Z,"Remove type ignores for PyTorch (#460)

* Remove type ignores for PyTorch

* Mypy fixes for pytest MonkeyPatch

* Black

* Ignore Identity

* Generic fixes

* Remove unused Generator import

* More fixes

* Fix remaining mypy errors

* More typing cleanups

* typing.OrderedDict isn't available until Python 3.7.2+

* Need Python 3.9 to build docs for fancy OrderedDict

* Fix Python 3.8 and earlier support

* Fix BigEarthNet tests

* Fix bug in ETCI 2021 tests

* Remove unused flake8 ignore

* More robust and well-documented trainer steps

* Many functions don't actually use batch_idx

* Store cast hparams in trainers"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2021-12-30T19:54:47Z,"Refactor datamodule/model testing (#329)

* Refactor RegressionTask testing

* Programmatically determine max value

* Refactor ClassificationTask testing

* Silence warnings

* Refactor SegmentationTask testing

* Fix training mappings

* Fix GeoDataset trainers

* Fix ETCI trainer fake data

* Update OSCD training data

* Get LandCoverAI tests to pass

* Fix OSCD checksum handling

* Fix NAIP-Chesapeake tests

* Fix OSCD tests

* Keep BoundingBox icy

* Fix other datamodules

* Fix chesapeake testing

* Refactor BYOLTask tests

* Style fixes

* Silence pytorch-lightning warnings

* Get coverage for Chesapeake CVPR prior

* Fix trainer tests"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2021-11-08T04:05:58Z,"0.1.0 release (#226)

* 0.1.0 release

* Train deps needed for release testing

* Update development status

* setup.py should not be run directly

* Test more trainers

* Fix local docs build

* Update installation instructions

* Specify test data dir in config

* Fix tutorial docs

* Trainers should default to num_workers=0, download=False

* Correct location for root_dir

* Try different GDAL name

* Try again

* Various fixes to release tests

* Update pip installs in tutorials

* Fix some bugs

* Config file not being picked up

* Get back to 100% test coverage

* Added correct weight string to UCMerced

* yolo fix

* yolo fix pt 2

* yolo fix 2 pt. 1

* Simplify tests a bit

* Make the trainer notebook look stupid

* UCMerced should download by default in the trainers

* Revert

* Fix logo/author, include LICENSE in upload

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2021-11-07T04:57:40Z,"Trainers: split tasks into separate files, add SemanticSegmentationTask (#224)

* Trainers: split tasks into separate files

* Add SemanticSegmentationTask

* Fix doc tests

* Keep dataset-specific tasks in separate files

* Remove duplicate So2Sat trainer"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2021-10-26T21:17:50Z,"Increase coverage of trainers (#109)

* Increase coverage of trainers

* Actually make the tests work

* Updated Cyclone trainer

* Style fix in cyclone tests

* Fixing landcoverai trainer

* Moving mock log to utils

* Fixing the RESISC45 trainer and related

* Skip RESISC45 trainer tests if Windows

* Removing some stupid docstrings from the RESISC45 trainer

* Adding So2Sat trainer tests

* isort

* Adding RESISC45 test data

* Use os.path.join for paths

* Remove unused import

* Add tests for ChesapeakeCVPR trainer

* mypy fixes

* Fix most Chesapeake tests

* Fixed test batching issue in the test dataset

* Get 100% coverage of Chesapeake trainer

* use a FakeTrainer instead of pl.Trainer

* Add naive BYOL trainer tests

* Style fixes

* Add 100% test coverage for BYOL trainer

* Get 100% coverage for LandCover.ai trainer

* Simplify tests

* Add tests for NAIP + Chesapeake trainer

* Fix tests

* Add tests for checkpoint loading

* Reorganize fixtures and specify scope

* Fix various test bugs

* Mypy fixes

* Reduce patch sizes

* Test fewer possible combinations of params

* Prevent warnings in tests

* Restore missing line of coverage in So2Sat trainer

* Silence resampling warning

* Ignore difference in output classes

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2021-10-22T21:10:37Z,"Remove Kornia master install inside Github Actions (#203)

* remove kornia master install in tests action

* removed unused ignore comments

* removed unused ignore comments x2"
github.com/microsoft/torchgeo,torchgeo/trainers/byol.py,2021-09-29T20:48:40Z,"Adding new trainers (#145)

* Added support for training on different splits to Chesapeake trainer

* Fixed test script

* Specifying test splits in the test script

* Removing useless prepare_data function from SEN12MS trainer

* Updating LandCoverAI trainer to reflect Chesapeake trainer changes

* Remove verbose in Chesapeake trainer

* Remove adamw in conf files

* Black

* Added experiment run script

* Add augmentation to the landcoverai trainer

* Add augmentation to the landcoverai trainer

* Adding So2Sat trainer

* Fixing style

* Adding So2Sat trainer

* Adding So2Sat trainer

* Adding to so2sat

* Fixing tests

* Add kornia dependency

* Test coverage for GridGeoSampler length

* Added tests for so2sat

* Cleaning up

* Isort

* Adding capability to reindex So2Sat

* Renaming gpu to device

* Setting up so2sat trainer for paper experiments

* So2Sat training sweep

* Idontsort

* Call trainer.tune() step if auto_lr_find is set

* So2Sat trainer work

* Adding SSL method (#162)

* Added support for training on different splits to Chesapeake trainer

* Fixed test script

* Specifying test splits in the test script

* Removing useless prepare_data function from SEN12MS trainer

* Updating LandCoverAI trainer to reflect Chesapeake trainer changes

* Remove verbose in Chesapeake trainer

* Remove adamw in conf files

* Black

* Added experiment run script

* Add augmentation to the landcoverai trainer

* Add augmentation to the landcoverai trainer

* Adding So2Sat trainer

* Fixing style

* Adding So2Sat trainer

* starting SSL trainers

* starting SSL trainers

* Adding BYOL as SSL method, it is fully functional and works for any encoder, next steps includes adding other SSL aproaches like Seasonal Contrast and SSL evaluation at large

* Adding BYOL as SSL method, it is fully functional and works for any encoder, next steps includes adding other SSL aproaches like Seasonal Contrast and SSL evaluation at large

* Making pydocstyle happy

Co-authored-by: Anthony O <anthony.ortiz@microsoft.com>

* Working on experiments

* Updates to So2Sat

* Experiments

* Experiments

* Review changes

* Review changes

* Grabbing the kornia mypy workaround

* updating BYOL to support resnet 50 and updating some docstring

* updating BYOL to support resnet 50 and updating some docstring

* addressing flake8 concerns

* trying to address mypy issues

* mypy

* mypy

* mypy

* adding byol documentation corrections

* Updating byol default and moving experiment scripts to experiments subdir

* Setting up experiment scripts

* Working

* Moving landcoverai seed experiment script

* Fixing formatting in the experiment scripts

* Update torchgeo/trainers/so2sat.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/trainers/so2sat.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/trainers/byol.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/trainers/byol.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/trainers/byol.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/trainers/byol.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/trainers/byol.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/trainers/byol.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/trainers/byol.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/trainers/byol.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Black formatting

* Reorganizing and documenting BYOL code

* Formatting

* BYOL trainer is not Chesapeake specific

* Updating docstrings

* changing to input_channels uniformly

* Fixing BYOL

* Formatting fixes

* Update experiments/run_landcoverai_experiments.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update experiments/run_landcoverai_experiments.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update experiments/run_landcoverai_experiments.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/trainers/byol.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Docstring changes

* Docstring fixes

* Black formatting

* Forward slashes have been judiciously eliminated and I threw in some comments for free

* flake8

* flake8

Co-authored-by: Anthony O <anthony.ortiz@microsoft.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/moco.py,2024-03-11T10:04:29Z,BaseTask: explicitly pass batch size to logger (#1933)
github.com/microsoft/torchgeo,torchgeo/trainers/moco.py,2024-02-06T09:55:15Z,"load_state_dict does not return the model (#1503)

* Update pretrained_weights.ipynb

Fixed an error in the state dict loading of the turorial and added a comment on the num_classes parameter when creating timm models.

* Update docs/tutorials/pretrained_weights.ipynb

* Update utils.py

* Import Tuple from typing
* Change return of `load_state_dict` from `model` to `Tuple[List[str], List[str]]`, matching the return of the standard PyTorch builtin function.

* Update pretrained_weights.ipynb

Remove example of loading pretrained model without prediction head (`num_classes=0`).

* Update README.md

Adapt new `load_state_dict` function.

* Mimic return type of builtin load_state_dict

* Modern type hints

* Blacken

* Try being explicit

---------

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/moco.py,2023-11-10T14:33:39Z,"Trainers: skip weights and augmentations when saving hparams (#1670)

* Update base.py to fix for custom augmentations

* Allow subclasses to ignore specific arguments

* Fix typing

* Save to self.weights

* pyupgrade

* Add test

* Save weights

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/moco.py,2023-09-18T20:18:30Z,Bump lightning from 2.0.8 to 2.0.9 in /requirements (#1564)
github.com/microsoft/torchgeo,torchgeo/trainers/moco.py,2023-09-11T22:05:28Z,"Refactor trainers (#1541)

* Refactor trainers

* Update conf files

* Fix pydocstyle

* Add scheduler monitor

* Update conf files

* Fix BYOL backbone

* Remove broken configure_optimizers out type

* Fix type hints

* No casts

* Increase test coverage

* Better documentation of supported models

* Remove unimportant configuration

* Remove unimportant configuration

* Drop model_kwargs

* Docstring improvements

* Add base class for all torchgeo trainers

* Add configure_* methods for losses/metrics/models

* init must come first

* More type hints"
github.com/microsoft/torchgeo,torchgeo/trainers/moco.py,2023-06-08T04:11:19Z,"Bump lightning from 2.0.2 to 2.0.3 in /requirements (#1406)

* Bump lightning from 2.0.2 to 2.0.3 in /requirements

Bumps [lightning](https://github.com/Lightning-AI/lightning) from 2.0.2 to 2.0.3.
- [Release notes](https://github.com/Lightning-AI/lightning/releases)
- [Commits](https://github.com/Lightning-AI/lightning/compare/2.0.2...2.0.3)

---
updated-dependencies:
- dependency-name: lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

* Update datamodule base class

* Check attributes first

* Fix remaining type hints

* More fixes

* Try again

* Try casting

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/moco.py,2023-05-24T15:04:25Z,"MoCo/SimCLR: better default lr (#1363)

* MoCo/SimCLR: better default lr

* New MoCo v3 lr"
github.com/microsoft/torchgeo,torchgeo/trainers/moco.py,2023-05-23T16:41:21Z,"MoCo/SimCLR transforms update (#1357)

* fix randomgrayscale device bug

* add random brightness and contrast augs to moco

* update simclr

* update augmentation values

* kornia 0.6.9+ required for RandomBrightness"
github.com/microsoft/torchgeo,torchgeo/trainers/moco.py,2023-05-12T04:05:39Z,"Add MoCo trainer (#1285)

* Add MoCo trainer

* pyupgrade

* isort

* Fix type hints

* Lightly now supports MoCo v3

* Add RandomGrayscale

* Fix bug

* Remove duplicated dep

* Add check for mode collapse in feature representation

* Fix undefined variable"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2023-09-06T13:22:28Z,[Fix] Refine ActionDataSample structure (#2658)
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2023-07-04T12:02:23Z,[Feature] Support new config (#2542)
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2023-06-12T09:18:43Z,[Fix] Fix BC-breaking of timm for TSN (#2497)
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2023-01-10T10:02:42Z,"[Improve] support init_cfg for Swin and ViTMAE (#2055)

Co-authored-by: wxDai <wxDai2001@gmail.com>"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2023-01-10T10:02:42Z,"[Fix] Fix multi-view inference (#2045)

* fix multiple crop inference
* move convert_to_datasample to BaseHead
*  add ut for average_clips is None
* modify tsn config"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2022-08-30T08:52:47Z,"[Refactor] refactor audio models (#1857)

* update audio model


Co-authored-by: KaiHoo <kaiorhu@gmail.com>"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2022-08-27T08:13:09Z,"[Refactor] Refactor data flow (#1832)

* [Refactor] Refactor data flow

* fix lint

* fix lint

* [Refactor] Refactor data flow of ava_metric

* fix ut

Co-authored-by: Dai-Wenxun <wxDai2001@gmail.com>"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2022-08-05T07:55:05Z,"[Refactor] rename the data_elements to structures (#1764)

* [Refactor] rename data_elements to structures"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2022-08-03T08:31:22Z,"[Refactor] Refactor model related configs and readmes (#1756)

* update video dataset

* update video dataset

* update video dataset

* refactor tanet

* update r2plus1d

* update x3d

* update c3d

* update c3d

* update

* update

* update i3d

* update recognizers and tpn neck

* update tpn

* update timesformer

* update timesformer

* update tanet

* update slowfast

* update slowfast

* [Fix] fix lint

Co-authored-by: KaiHoo <kaiorhu@gmail.com>"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2022-07-20T08:36:15Z,[Enhance] fix lint of PR #1717
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2022-07-20T08:17:10Z,"[Refactor] refactor package (#1717)

* refactor package

* update version

* refactor package"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2022-07-18T09:39:15Z,[refactor] fix unit test
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2022-07-18T07:40:36Z,"[refactor] fix lint (#1710)

* [refactor] fix lint

* [refactor] fix lint

* [refactor] fix lint

* [refactor] fix lint

Co-authored-by: actioning <hkpjlab@gmail.com>"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2022-07-15T10:07:33Z,refactor package
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2022-07-15T08:58:50Z,Update base.py
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2022-07-14T15:40:36Z,[Feature] add config conversion tool
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2022-07-13T09:07:07Z,[Enhance] add type hint for models
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2022-06-12T17:31:45Z,refactor model
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2022-05-31T01:27:00Z,refactor all registries
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2022-05-19T06:30:56Z,refactor blending and remove module_hooks
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2022-05-17T06:27:20Z,Refactor
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2022-02-08T10:36:23Z,update isort
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2021-09-08T11:46:46Z,[Fix] Compatible with new mmcls (#1139)
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2021-08-17T05:20:05Z,[Docs] add copyright (#1099)
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2021-06-07T03:29:33Z,Merge branch 'master' into tsn-timm
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2021-05-31T13:43:36Z,"[Feature] Feature extraction (#856)

* support feature extraction

* add feature extraction config

* update

* fix bug

* fix bug

* update

* handle slowfast

* fix bug

* fix bug

* fix bug

* fix bug

* add documentation

* resolve comments

* update README

* support feature extraction

* add feature extraction config

* update

* fix bug

* fix bug

* update

* handle slowfast

* fix bug

* fix bug

* fix bug

* fix bug

* add documentation

* resolve comments

* update README

* move feature_extraction to test_cfg"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2021-05-22T11:26:28Z,first commit
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2021-04-30T13:41:20Z,"[Refactor] Use MMCV Model Registry (#843)

* use registry

* use registry

* use registry

* fix circle import

* fix"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2021-04-10T13:03:52Z,add self.with_neck (#796)
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2021-03-25T06:52:46Z,"[Feature] Enable torchvision backbones (#720)

* resolve comments

* update changelog

* support torchvision backbones

* add ckpt, changelog and unittest

* fix lint

* fix lint

* fix lint

* Update changelog.md

* Update changelog.md"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2021-03-24T02:50:53Z,"[Feature] Support Mixup and Cutmix for Recognizers. (#681)

* add todo list

* codes of mixup/cutmix/register/recognizers

* add unittest

* add demo config

* fix unittest

* remove toto list

* update changelog

* fix unittest and training bug

* fix

* fix unittest

* add todo

* remove useless codes

* update comments

* update docs

* fix

* fix a bug

* update configs

* update sthv1 training results

* add tsn config and modify default alpha value

* fix lint

* add unittest

* fix tin sthv2 config

* update links

* remove useless docs

Co-authored-by: Kenny <dhd.efz@gmail.com>"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2021-03-11T04:11:55Z,"[Improvement] Change 3rdparty style (#707)

* resolve comments

* update changelog

* change the style of 3rdparty"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2021-03-09T11:27:42Z,"[Feature] Support MMCls backbones for TSN  (#679)

* resolve comments

* update changelog

* enable TSNxMMCls Backbone

* add rn101 config

* install mmcls

* add a unittest

* fix config

* Update README.md

remove backbones from other sources for now

* Update changelog.md

Co-authored-by: Jintao Lin <528557675@qq.com>"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2021-01-13T08:59:57Z,"[Feature] Test batch (#511)

* resolve comments

* update changelog

* add test_batch

* add testing for `test_batch`

* fix mmcv version

* add test_batch

* add testing for `test_batch`

* enlarge test_input to pass unittest

* update names

* update changelog & faq

* update name"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-11-30T15:42:18Z,"[Improve] Harmless changes according to Pylint (#338)

* solve R1710

* solve W0107

* solve W0613 a little bit

* solve R0201

* solve R1705

* solve W0612

* solve C0325

* solve W0235

* solve R1719

* solve C0200

* solve R1716

* fix

* add pylintrc for convenience

* polish

* update"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-11-27T06:16:58Z,"[Improvement] Update docs about test crops. (#359)

* [Docs] Update docs about test crops.
1. Add more docs.
2. Update default configs in TSM model when using DenseSampleFrames.

* [Docs] Update docs about test crops
1. Add more docs.
2. Update default configs in TSM model when using DenseSampleFrames.

* calculate num_crops automatically

* remove `twice_sample/test_crops` in test_cfg

* update all tsm model `test_cfg['average_clips']` default value to 'prob'

* add changelog

* fix a bug when using tsn and `test_cfg['average_clips']='prob'`

* fix docs and add docs for #363

* use `num_segments` instead of `num_segs` in average_clip

* use `num_segs` in TSMHead and average_clip."
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-11-12T13:53:22Z,"[Feature] Add GradCAM utils for Recognizer. (#324)

* [Feature] Add GradCAM utils for Recognizer.

* [Fix] abstract forward gradcam bug.

* 1. update codes based on reviewer suggestions.
2. add reisze params in demo_gradcam.py.
3. smaller demo_gradcam.gif.
4. add unittest for `GradCAM` & `forward_gradcam`.
5. add more docs.

* smaller input data shapes for unittest

* modify codes based on reviewer's suggestions.

* update codes after reviewers' suggestions.

* update codes after reviewer's suggestions.

* remove `gradcam` in BaseRecognition forward.

Co-authored-by: Jintao Lin <528557675@qq.com>"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-10-29T19:06:28Z,"[Improve] Harmless changes (#284)

* harmless

* remove (object)

* minor

* update apis

* f-string

* update README

* polish docstring

* update onnx unittest

* fix

* add repr

* add repr_str

* fix

* polish docstring"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-10-21T04:55:53Z,"[Feature] HVU Training (#235)

* add hvu video dataset

* add aux_info interface

* add HVU Loss

* update arg name

* fix bug

* fix bug

* put HVU label loading in loading.py

* update HVU Dataset, so that it accept both video and rawframe annotation files

* fix bug

* update

* fix bug

* fix bug

* fix bug

* fix bug

* fix bug in HVU Loss

* resolve comments

* resolve comments

* add option: `reduction = ""sum""`

* bug fix

* deal with multi class label in a lazy style

* bug fix

* fix evaluation bug

* fix testing

* add testing for HVULoss and LoadHVULabel

* fix testing bug

* bug fix

* add testing for HVU Dataset

* add mean_average_precision, rename the old one as mmit_mean_average_precision

* fix hvu dataset testing

* fix testing bug

* resolve comments

* update changelog

* update changelog

* fix linting"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-09-30T15:37:20Z,"Add TPN model (#170)

* add ColorJitter code

* add out_inices in resnet3d

* tpn

* fix unittest

* add docstring

* add README and pretrain config

* update README.md

* use 'np.random.rand()' rather than 'np.random.uniform(0, 1)'

* update with dtype

* fix"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-09-30T06:17:20Z,"Support multi-batch inference (#184)

* val

* modify average_clips

* support multi-batch

* update

* update docs

* add changelog"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-08-26T08:56:53Z,"Add fp16 support in action recognition (#25)

* add fp16 support in recognition

* use fp16 from mmcv

* use fp16 from mmcv"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-08-22T09:39:53Z,"Modify 'val_step()' to validate data for each val mode epoch (#123)

Co-authored-by: lizz <innerlee@users.noreply.github.com>"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-07-17T06:02:49Z,Update docstring formats using docformatter (#32)
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-07-09T10:57:25Z,Add docstring
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-07-09T09:55:46Z,Add docstring
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-07-04T13:10:57Z,fix
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-07-03T12:49:53Z,"fix localization api

Signed-off-by: lixuanyi <lixuanyi@sensetime.com>"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-07-01T02:33:54Z,Move parse_loss into class
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-06-29T10:35:45Z,"[docs]add some docstring to increase the coverage

[fix] fix minor typo"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-06-29T07:57:33Z,Update code with latest  template
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-06-23T07:07:59Z,High-level APIs for testing video
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-06-12T02:36:04Z,Simplify super function
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-04-21T09:07:30Z,"Use ""Args"" to replace ""Attributes"" and do some minor docstring reformatting"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-03-17T01:31:28Z,Minor fix for val interval and FrameSelector docstring typo
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-03-13T13:37:20Z,Use dataloader for eval hooks
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-03-09T07:40:04Z,Use fstring to take place of original string format
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-02-25T17:02:36Z,Fix bug by using data_loader in EvalHook to avoid the dataset generating data continually
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-02-21T03:09:35Z,"add model related test

fix unittest for backbone, forward and norm/conv module

add average_clips unittest

dynamically generate config path list and fix some typos

add test codes for construction, attributes in heads"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-02-15T16:09:58Z,"add evaluation part

add eval hook docstring

rewrite evalation function

move evaluation part to datasets

add confusion matrix

add docstring

modify typo and docstring"
github.com/open-mmlab/mmaction2,mmaction/models/recognizers/base.py,2020-02-04T13:08:59Z,Support I3D
github.com/microsoft/torchgeo,torchgeo/trainers/simclr.py,2024-03-11T10:04:29Z,BaseTask: explicitly pass batch size to logger (#1933)
github.com/microsoft/torchgeo,torchgeo/trainers/simclr.py,2024-02-06T09:55:15Z,"load_state_dict does not return the model (#1503)

* Update pretrained_weights.ipynb

Fixed an error in the state dict loading of the turorial and added a comment on the num_classes parameter when creating timm models.

* Update docs/tutorials/pretrained_weights.ipynb

* Update utils.py

* Import Tuple from typing
* Change return of `load_state_dict` from `model` to `Tuple[List[str], List[str]]`, matching the return of the standard PyTorch builtin function.

* Update pretrained_weights.ipynb

Remove example of loading pretrained model without prediction head (`num_classes=0`).

* Update README.md

Adapt new `load_state_dict` function.

* Mimic return type of builtin load_state_dict

* Modern type hints

* Blacken

* Try being explicit

---------

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/simclr.py,2023-11-10T14:33:39Z,"Trainers: skip weights and augmentations when saving hparams (#1670)

* Update base.py to fix for custom augmentations

* Allow subclasses to ignore specific arguments

* Fix typing

* Save to self.weights

* pyupgrade

* Add test

* Save weights

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/simclr.py,2023-09-18T20:18:30Z,Bump lightning from 2.0.8 to 2.0.9 in /requirements (#1564)
github.com/microsoft/torchgeo,torchgeo/trainers/simclr.py,2023-09-11T22:05:28Z,"Refactor trainers (#1541)

* Refactor trainers

* Update conf files

* Fix pydocstyle

* Add scheduler monitor

* Update conf files

* Fix BYOL backbone

* Remove broken configure_optimizers out type

* Fix type hints

* No casts

* Increase test coverage

* Better documentation of supported models

* Remove unimportant configuration

* Remove unimportant configuration

* Drop model_kwargs

* Docstring improvements

* Add base class for all torchgeo trainers

* Add configure_* methods for losses/metrics/models

* init must come first

* More type hints"
github.com/microsoft/torchgeo,torchgeo/trainers/simclr.py,2023-06-08T04:11:19Z,"Bump lightning from 2.0.2 to 2.0.3 in /requirements (#1406)

* Bump lightning from 2.0.2 to 2.0.3 in /requirements

Bumps [lightning](https://github.com/Lightning-AI/lightning) from 2.0.2 to 2.0.3.
- [Release notes](https://github.com/Lightning-AI/lightning/releases)
- [Commits](https://github.com/Lightning-AI/lightning/compare/2.0.2...2.0.3)

---
updated-dependencies:
- dependency-name: lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

* Update datamodule base class

* Check attributes first

* Fix remaining type hints

* More fixes

* Try again

* Try casting

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/simclr.py,2023-05-24T15:04:25Z,"MoCo/SimCLR: better default lr (#1363)

* MoCo/SimCLR: better default lr

* New MoCo v3 lr"
github.com/microsoft/torchgeo,torchgeo/trainers/simclr.py,2023-05-23T16:41:21Z,"MoCo/SimCLR transforms update (#1357)

* fix randomgrayscale device bug

* add random brightness and contrast augs to moco

* update simclr

* update augmentation values

* kornia 0.6.9+ required for RandomBrightness"
github.com/microsoft/torchgeo,torchgeo/trainers/simclr.py,2023-05-12T04:05:39Z,"Add MoCo trainer (#1285)

* Add MoCo trainer

* pyupgrade

* isort

* Fix type hints

* Lightly now supports MoCo v3

* Add RandomGrayscale

* Fix bug

* Remove duplicated dep

* Add check for mode collapse in feature representation

* Fix undefined variable"
github.com/microsoft/torchgeo,torchgeo/trainers/simclr.py,2023-05-11T16:40:53Z,"Add SimCLR trainer (#1252)

* add simclr and tests

* add lightly to reqs

* pyupgrade

* Copy things from prior implementation

* Add SimCLR v2 projection head

* Remove kwargs

* Call __init__ explicitly

* Fix mypy and docs

* Can't test newer setuptools

* Default to output dim of model

* Add memory bank

* Ignore erroneous warning

* Fix configs, test SSL4EO

* Fix a few layer bugs

* mypy fixes

* kernel_size must be an integer

* Fix SeCo in_channels

* Get more coverage

* Bump min lightly

* Default logging

* Test weights

* mypy fix

* Grab max_epochs from the trainer

* max_epochs param removed

* Use num_features

* Remove classification head

* SimCLR uses LARS, with Adam as a backup

* Add warnings

* Grab num features directly from model

* Check if identity

* Match timm model design

* Capture warnings

* Fix tests

* Increase coverage

* Fix method name

* More typos

* Escape regex

* Newer setuptools now supported

* New batch norm for every layer

* Rename forward arg

* Clarify usage of weights parameter

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>

* Fix flake8

* Check it

* Use hydra

* Track average L2 normed stdev over features

* SimCLR decays lr to 0

* Add lr warmup

* Fix version access

* Fix LinearLR

* isinstance supports tuples

* Comment capitalization

* Require lightly 1.4.3+

* Require lightly 1.4.3+

* Bump lightly version

* Add RandomGrayscale

* Flake8 fixes

* Placate pydocstyle

* Clarify docs

* Pass correct weights

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>
Co-authored-by: Caleb Robinson <calebrob6@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/simclr.py,2023-03-29T20:50:35Z,"Revert ""SimCLR: add new trainer (#1195)"" (#1205)

This reverts commit 39d6941d48b785988561c4f75f1132ac2049be88."
github.com/microsoft/torchgeo,torchgeo/trainers/simclr.py,2023-03-29T10:06:39Z,"SimCLR: add new trainer (#1195)

* SimCLR: add new trainer

* Add tests

* Support custom number of MLP layers

* Change default params, add TODOs

* Fix mypy

* Fix docs and most of tests

* Fix all tests

* Fix support for older Kornia versions

* Fix support for older Kornia versions

* Crop should be 224, not 96"
github.com/microsoft/torchgeo,experiments/ssl4eo/flops.py,2023-10-20T15:05:18Z,SSL4EO: convert script from MiB to MB (#1669)
github.com/microsoft/torchgeo,experiments/ssl4eo/flops.py,2023-08-31T16:50:16Z,"SSL4EO: add script to measure flops of models (#1516)

* SSL4EO: add script to measure flops of models

* Calculate memory requirements too"
github.com/RangiLyu/nanodet,nanodet/model/backbone/timm_wrapper.py,2022-08-26T08:34:23Z,"[Feature] Support timm backbones. (#399)

* [Feature] Support timm backbones.

* update ci

* fix lint"
github.com/isl-org/MiDaS,midas/backbones/next_vit.py,2023-01-02T12:55:03Z,"Fix usage of Next-ViT
  - make Next-ViT optional by importing from Next-ViT repo only if Next-ViT model is used
  - use git submodule to include Next-ViT as external dependency (credit to hafriedlander)
  - replace shell script by installation instruction in readme"
github.com/isl-org/MiDaS,midas/backbones/next_vit.py,2022-12-23T23:41:34Z,refactor midas folder structure
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2024-03-11T10:04:29Z,BaseTask: explicitly pass batch size to logger (#1933)
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2024-03-03T18:45:08Z,"Docs: fix trainer metric definitions (#1924)

* Docs: fix trainer metric definitions

* Link to torchmetrics docs

* Teach Sphinx where docs live"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2024-03-02T21:54:42Z,"Document default trainer metrics (#1914)

* Expand metrics documentation

* typo

* Update documentation following robmarkcole suggestion

* Update summary to be consistent with other trainers

* Move to unordered lists, fix indentation, use note

* Update configure metrics for other trainers

* typo

* Update torchgeo/trainers/classification.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Add detail on wanted values, reword macro note.

* Remove redundant paragraph

* Add acronyms, clarify regression metrics

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2024-02-06T09:55:15Z,"load_state_dict does not return the model (#1503)

* Update pretrained_weights.ipynb

Fixed an error in the state dict loading of the turorial and added a comment on the num_classes parameter when creating timm models.

* Update docs/tutorials/pretrained_weights.ipynb

* Update utils.py

* Import Tuple from typing
* Change return of `load_state_dict` from `model` to `Tuple[List[str], List[str]]`, matching the return of the standard PyTorch builtin function.

* Update pretrained_weights.ipynb

Remove example of loading pretrained model without prediction head (`num_classes=0`).

* Update README.md

Adapt new `load_state_dict` function.

* Mimic return type of builtin load_state_dict

* Modern type hints

* Blacken

* Try being explicit

---------

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2023-12-07T23:00:40Z,RGBBandsMissingError (#1737)
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2023-11-10T14:33:39Z,"Trainers: skip weights and augmentations when saving hparams (#1670)

* Update base.py to fix for custom augmentations

* Allow subclasses to ignore specific arguments

* Fix typing

* Save to self.weights

* pyupgrade

* Add test

* Save weights

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2023-10-28T14:51:51Z,"Fix all Trainers to support PyTorch DataLoaders (#1703)

* Fix all Trainers to support PyTorch DataLoaders

* Add DataLoader Fix For MultiLabelClassification

---------

Co-authored-by: Kay Benkert <kbenkert@mail.uni-paderborn.de>"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2023-10-13T21:33:37Z,"Bump lightning[pytorch-extra] from 2.0.9.post0 to 2.1.0 in /requirements (#1662)

* Bump lightning[pytorch-extra] from 2.0.9.post0 to 2.1.0 in /requirements

Bumps [lightning[pytorch-extra]](https://github.com/Lightning-AI/lightning) from 2.0.9.post0 to 2.1.0.
- [Release notes](https://github.com/Lightning-AI/lightning/releases)
- [Commits](https://github.com/Lightning-AI/lightning/compare/2.0.9.post0...2.1.0)

---
updated-dependencies:
- dependency-name: lightning[pytorch-extra]
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* Remove type ignores

* Capture more warnings

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Caleb Robinson <calebrob6@gmail.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2023-09-27T17:11:52Z,"Add command line script (#1559)

* Add command line script

* Label PRs correctly

* Flake8 fix

* Add callbacks

* Update all conf files

* Enforce class of model/data

* Update BYOL tests

* Update all tests

* Use default num workers: 0

* Variable interpolation only supported by omegaconf backend

* Fix regression tests

* Ensure that jsonargparse is installed during testing

* Bump minimimum lightning version

* Workaround for lightning/jsonargparse bugs

* Ignore Python 3.9 warning message

* Add test coverage for __main__.py

* Increase coverage of PixelwiseRegressionTask

* jsonargparse bug fixed in latest release

* Revert ""jsonargparse bug fixed in latest release""

This reverts commit 4f38cdfca30d792485af49a6245ea9929a3b45c5.

* Use default logging frequency

* Ensure that metrics are actually logged

* Fix ObjectDetectionTask logging

* Ignore type errors

* Not all need to be ignored"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2023-09-25T16:40:53Z,Fix trainer support for datasets without a plot method (#1585)
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2023-09-11T22:05:28Z,"Refactor trainers (#1541)

* Refactor trainers

* Update conf files

* Fix pydocstyle

* Add scheduler monitor

* Update conf files

* Fix BYOL backbone

* Remove broken configure_optimizers out type

* Fix type hints

* No casts

* Increase test coverage

* Better documentation of supported models

* Remove unimportant configuration

* Remove unimportant configuration

* Drop model_kwargs

* Docstring improvements

* Add base class for all torchgeo trainers

* Add configure_* methods for losses/metrics/models

* init must come first

* More type hints"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2023-06-08T04:11:19Z,"Bump lightning from 2.0.2 to 2.0.3 in /requirements (#1406)

* Bump lightning from 2.0.2 to 2.0.3 in /requirements

Bumps [lightning](https://github.com/Lightning-AI/lightning) from 2.0.2 to 2.0.3.
- [Release notes](https://github.com/Lightning-AI/lightning/releases)
- [Commits](https://github.com/Lightning-AI/lightning/compare/2.0.2...2.0.3)

---
updated-dependencies:
- dependency-name: lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

* Update datamodule base class

* Check attributes first

* Fix remaining type hints

* More fixes

* Try again

* Try casting

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2023-05-06T14:48:11Z,"freeze_backbone and freeze_decoder docstrings update (#1292)

* update docstrings for freeze parameters

* Update torchgeo/trainers/classification.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/trainers/classification.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/trainers/detection.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/trainers/regression.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* update docstring

* update docstring x2

---------

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2023-05-04T02:08:45Z,add support to pretrained encoder weights (#1306)
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2023-04-26T12:00:00Z,freeze_backbone and freeze_decoder in Trainers (#1290)
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2023-04-25T14:05:10Z,Add PixelwiseRegressionTask (#1241)
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2023-04-16T01:27:51Z,Drop Python 3.8 support (#1246)
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2023-03-19T16:48:55Z,"Fix lightning imports (#1179)

* Fix lightning imports

* Style fixes"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2023-03-16T16:14:48Z,"Bump pytorch-lightning[extra] from 1.9.4 to 2.0.0 in /requirements (#1178)

* Bump pytorch-lightning[extra] from 1.9.4 to 2.0.0 in /requirements

Bumps [pytorch-lightning[extra]](https://github.com/Lightning-AI/lightning) from 1.9.4 to 2.0.0.
- [Release notes](https://github.com/Lightning-AI/lightning/releases)
- [Commits](https://github.com/Lightning-AI/lightning/compare/1.9.4...2.0.0)

---
updated-dependencies:
- dependency-name: pytorch-lightning[extra]
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>

* Remove deprecated features

* pytorch_lightning -> lightning

* bump radiant-mlhub too

* isort fix

* lightning does not yet have public type hints

* More ignores

* blanket ignore

* blanket ignore

* Fix function typo

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2023-02-26T18:14:37Z,"Fix broken URLs (#1125)

* Fix broken URLs

* Flake8 fix

* Don't change Chesapeake URL"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2023-02-25T22:39:48Z,"Trainers: fix support for non-TensorBoardLogger (#1145)

* Trainers: fix support for CSVLogger

* No need to check truthiness of attr

* Revert ""No need to check truthiness of attr""

This reverts commit 450df6c53c53c6e64cf4178a0b1ed91c33aa5c45."
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2023-02-06T23:20:42Z,"Bump mypy from 0.991 to 1.0.0 in /requirements (#1089)

* Bump mypy from 0.991 to 1.0.0 in /requirements

Bumps [mypy](https://github.com/python/mypy) from 0.991 to 1.0.0.
- [Release notes](https://github.com/python/mypy/releases)
- [Commits](https://github.com/python/mypy/compare/v0.991...v1.0.0)

---
updated-dependencies:
- dependency-name: mypy
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>

* Bump upper bound

* mypy fixes

* Ignore undocumented base class

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2023-01-23T22:08:17Z,"DataModules: run all data augmentation on the GPU (#992)

* DataModules: run all data augmentation on the GPU

* Passing tests

* Update BigEarthNet

* Break ChesapeakeCVPR

* Update COWC

* Update Cyclone

* Update ETCI2021

* mypy fixes

* Update FAIR1M

* Update Inria

* Update LandCoverAI

* Update LoveDA

* Update NAIP

* Update NASA

* Update OSCD

* Update RESISC45

* Update SEN12MS

* Update So2Sat

* Update SpaceNet

* Update UCMerced

* Update USAVars

* Update xview

* Remove seed

* mypy fixes

* OSCD hacks

* Add NonGeoDataModule base class

* Fixes

* Add base class to docs

* mypy fixes

* Fix several tests

* Fix Normalize

* Syntax error

* Fix bigearthnet

* Fix dtype

* Consistent kornia import

* Get regression datasets working

* Fix detection tests

* Fix some chesapeake bugs

* Fix several segmentation issues

* isort fixes

* Undo breaking change

* Remove more code duplication, standardize docstrings

* mypy fixes

* Add default augmentation

* Augmentations can be any callable

* Fix datasets tests

* Fix datamodule tests

* Fix more datamodules

* Typo fix

* Set up val_dataset even when fit

* Fix classification tests

* Fix ETCI2021

* Fix SEN12MS

* Add GeoDataModule base class

* Fix several chesapeake bugs

* Fix dtype and shape

* Fix crs/bbox issue

* Fix test dtype

* Fix unequal size stacking error

* flake8 fix

* Better checks on sampler

* Fix bug introduced in NAIP dm

* Fix chesapeake dimensions

* Add one to mask

* Fix missing imports

* Fix batch size

* Simplify augmentations

* Don't run test or predict without datasets

* Fix tests

* Allow shared dataset

* One more try

* Fix typo

* Fix another typo

* Fix Chesapeake dimensions

* Apply augmentations during sanity check too

* Don't reuse fixtures

* Increase coverage

* Fix ETCI tests

* Test predict_step

* Test all loss methods

* Simplify validation plotting

* Document new classes

* Fix plotting

* Plotting should be robust in case dataset does not contain RGB bands

* Fix flake8

* 100% coverage of trainers

* Add lightning-lite dependency

* Revert ""Add lightning-lite dependency""

This reverts commit 1df7291ae59f6257a2cabd20a6c767e178bf4f0f.

* Define our own MisconfigurationException

* Properly test new data module base classes

* Fix mistake in setup call

* ExtractTensorPatches runs into OOM errors

* Test both fast_dev_run True and False

* Fix plot methods

* Fix OSCD tests

* Fix bug with inconsistent train/val/test splits between stages

* Fix issues with images of different sizes

* Fix OSCD tests

* Fix OSCD tests

* Bad rebase

* No trainer for OSCD so no need for config

* Bad rebase

* plot: only works during validation

* Fix collation of NASA Marine Debris dataset

* flake8 fix

* Quick test

* Revert ""Quick test""

This reverts commit f465efcbef904b8a5bc2257f2800eed931c491ab.

* 56 workers is a bit excessive

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2023-01-22T22:25:49Z,"Add Multi-Weight Support API (#917)

* load pretrained weights

* change name millionaid

* restructure and additional weights

* rename sentinel1 weights

* add vit small weights

* forgot to add vit.py

* struggling with test

* wrong name failing test

* feedback on tests

* increase test coverage

* fix failing test

* fix failing test

* fix failing test and add vit tests

* fix failing vit test

* torchgeo.models.utils

* forgot utils file

* typo num channels

* nitpick docs, version torchvision

* another try min dependencies

* add documentation table

* expand pytests to test pretrained weights on tasks

* reverse changes to byol task

* add tests to init pretrained weights from config

* forgot to add the conf files

* change path

* increase test coverage

* vit tests all pass locally including slow

* now remote

* fix tests another one

* add a draft tutorial

* run black on tutorial notebook

* Tutorial typo fixes

* Lower min torch/vision versions

* Fix bad rebase

* Remove dead code

* Flake8 fixes

* Consistent in_chans

* Black fixes

* bison > yacs

* Remove one more reference

* Download modified weights from hugging face

* Add entrypoints

* Add torch.hub support

* progress arg is required

* Fix model loading for resnet18

* Add transforms, update tests

* VIT -> ViT

* add seco weights

* Fix type hints

* Link to timm docs

* Fix pydocstyle

* Try to fix timm docs link

* Fix tests

* Nuke ignores

* Ignore timm links

* Add model API methods

* Add to __init__ and document

* Test model API functions

* fix tests

* Use correct documentation link for intersphinx

* Typos

* Fix Windows tests

* meth -> func

* Explicit function scope

* weight-specific filename

* Support enums in classification trainer

* Update other trainers too

* Fix regression tests

* Fix classification tests

* Fix byol tests

* Fix types

* progress_bar is required arg

* Test weight enums

* Fix pickling

* Fix regression tests

* Improve coverage of classification tests

* Improve coverage of BYOL tests

* Update resnet table

* Update ViT table

* Update get_state_dict usage

* Remove unused YAML files

* Update table widths

* Documentation improvements

* Tweak tables

* Try to fix Windows tests

* Revert ""Try to fix Windows tests""

This reverts commit 1325b13ff779b28adcaca36725e098ae8352a1d6.

* Monkeypatch everything

* Revert ""Monkeypatch everything""

This reverts commit e3e8d7d04231f8c0a39b5accd8f3d977aa7cbab2.

* Revert ""Revert ""Monkeypatch everything""""

This reverts commit 9b27bd705b06a743c092301c36802ce6e9503898.

* Patch things not at the source

* Fix missing import

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2022-12-26T15:51:30Z,"Remove __module__ hacks (#976)

* Remove __module__ hacks

* Remove unused imports

* Fix typo in reference

* Explicit link"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2022-12-15T20:22:59Z,"Change BYOL task argument name and switch to timm models (#918)

* change argument name and supporrt timm

* list_models()

* encoder -> backbone

* fix failing test

* suggested changes"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2022-12-07T16:12:27Z,"Change regression task to timm support (#854)

* change regression task to timm support

* add docstring about available models

* typo again

* failing test

* change name

* change name

* expose all available models

* docstring list_models

* Update torchgeo/trainers/regression.py

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2022-10-11T14:25:53Z,Trainers: fix plotting file handle leak (#826)
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2022-10-06T13:41:30Z,Trainers: replace self.forward() with self() (#807)
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2022-10-04T21:21:57Z,add predict_step to RegressionTask and tests (#818)
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2022-09-06T16:28:31Z,Fix torchvision constraint (#761)
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2022-08-14T22:58:45Z,"Add COWC counting experiment (#706)

* Add COWC counting experiment

* Fix tests

* Search event logs for all versions

* Add seed experiments"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2022-08-02T23:39:10Z,"Bump pytorch-lightning from 1.6.5 to 1.7.0 in /requirements (#697)

* Bump pytorch-lightning from 1.6.5 to 1.7.0 in /requirements

Bumps [pytorch-lightning](https://github.com/Lightning-AI/lightning) from 1.6.5 to 1.7.0.
- [Release notes](https://github.com/Lightning-AI/lightning/releases)
- [Commits](https://github.com/Lightning-AI/lightning/compare/1.6.5...pl/1.7.0)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* Remove protobuf restrictions

* LightningModule was moved

* Mypy fixes

* Ensure same behavior

* Fix docs

* Silence warnings

* Change error message location

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2022-06-30T17:39:03Z,"Bump torchvision from 0.12.0 to 0.13.0 in /requirements (#631)

* Bump torchvision from 0.12.0 to 0.13.0 in /requirements

Bumps [torchvision](https://github.com/pytorch/vision) from 0.12.0 to 0.13.0.
- [Release notes](https://github.com/pytorch/vision/releases)
- [Commits](https://github.com/pytorch/vision/compare/v0.12.0...v0.13.0)

---
updated-dependencies:
- dependency-name: torchvision
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* Bump PyTorch too

* mypy fixes

* Fix deprecation warning in tests

* Style fixes

* More fixes

* Bump minimum packaging

* Silence mypy

* Fix tests

* Fix tests

* Fix tests

* Improve test coverage

* Improve test coverage

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2022-03-30T02:39:19Z,Fix PyTorch Lightning 1.6 type hints (#487)
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2022-03-14T20:35:37Z,"Remove type ignores for PyTorch (#460)

* Remove type ignores for PyTorch

* Mypy fixes for pytest MonkeyPatch

* Black

* Ignore Identity

* Generic fixes

* Remove unused Generator import

* More fixes

* Fix remaining mypy errors

* More typing cleanups

* typing.OrderedDict isn't available until Python 3.7.2+

* Need Python 3.9 to build docs for fancy OrderedDict

* Fix Python 3.8 and earlier support

* Fix BigEarthNet tests

* Fix bug in ETCI 2021 tests

* Remove unused flake8 ignore

* More robust and well-documented trainer steps

* Many functions don't actually use batch_idx

* Store cast hparams in trainers"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2022-01-01T20:14:19Z,"Remove dataset-specific trainers (#286)

* Remove dataset-specific trainers

* Collation functions will be new in 0.2.0

* Clarify arg docstring

* Style fixes

* Remove files forgotten in rebase

* Fix bug in unbind_samples, add tests

* Fix bugs in datamodule augmentations

* Increase coverage for datamodules

* Fix bugs in logger plotting, properly test

* Fix tests

* Increase coverage of trainers

* Use datamodule plot instead of dataset plot

* Skip datamodules without tests

* Plot predictions

* Fix ClassificationTask tests

* Fix SemanticSegmentationTask tests

* EAFP -> LBYL

* Ensure that tensors are on the CPU before plotting"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2021-12-10T01:38:30Z,"Fixing network calls in unit tests (#265)

* Fixing network call in test of pretrained resnet

* Enable loading a pretrained model from a local path

* Fix filename

* monkeypatch the load_state_dict_from_url method instead of going around it

* Make default configs use random weights instead of imagenet pre-trained weights

* Removing internet access requirement from tests

* Deleted So2Sat trainer"
github.com/microsoft/torchgeo,torchgeo/trainers/regression.py,2021-11-07T04:57:40Z,"Trainers: split tasks into separate files, add SemanticSegmentationTask (#224)

* Trainers: split tasks into separate files

* Add SemanticSegmentationTask

* Fix doc tests

* Keep dataset-specific tasks in separate files

* Remove duplicate So2Sat trainer"
github.com/thuml/Transfer-Learning-Library,examples/model_selection/utils.py,2022-08-03T08:05:25Z,Update format and docs for Pre-trained Model Selection
github.com/thuml/Transfer-Learning-Library,examples/model_selection/utils.py,2022-03-14T09:48:32Z,add doc and exp results
github.com/thuml/Transfer-Learning-Library,examples/model_selection/utils.py,2022-03-12T13:43:57Z,fix
github.com/thuml/Transfer-Learning-Library,examples/model_selection/utils.py,2022-03-10T07:56:38Z,fixed
github.com/thuml/Transfer-Learning-Library,examples/model_selection/utils.py,2022-03-07T13:27:58Z,first add
github.com/deforum-art/deforum-stable-diffusion,src/midas/vit.py,2022-10-28T23:20:59Z,add src files
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2024-03-11T10:04:29Z,BaseTask: explicitly pass batch size to logger (#1933)
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2024-03-03T18:45:08Z,"Docs: fix trainer metric definitions (#1924)

* Docs: fix trainer metric definitions

* Link to torchmetrics docs

* Teach Sphinx where docs live"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2024-03-02T21:54:42Z,"Document default trainer metrics (#1914)

* Expand metrics documentation

* typo

* Update documentation following robmarkcole suggestion

* Update summary to be consistent with other trainers

* Move to unordered lists, fix indentation, use note

* Update configure metrics for other trainers

* typo

* Update torchgeo/trainers/classification.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Add detail on wanted values, reword macro note.

* Remove redundant paragraph

* Add acronyms, clarify regression metrics

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2024-02-06T09:55:15Z,"load_state_dict does not return the model (#1503)

* Update pretrained_weights.ipynb

Fixed an error in the state dict loading of the turorial and added a comment on the num_classes parameter when creating timm models.

* Update docs/tutorials/pretrained_weights.ipynb

* Update utils.py

* Import Tuple from typing
* Change return of `load_state_dict` from `model` to `Tuple[List[str], List[str]]`, matching the return of the standard PyTorch builtin function.

* Update pretrained_weights.ipynb

Remove example of loading pretrained model without prediction head (`num_classes=0`).

* Update README.md

Adapt new `load_state_dict` function.

* Mimic return type of builtin load_state_dict

* Modern type hints

* Blacken

* Try being explicit

---------

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2023-12-15T16:55:15Z,"Remov Argmax Computation for torchmetrics in Classification and Segmentation (#1777)

* remove y_hat_hard

* argmax vs softmax :)"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2023-12-07T23:00:40Z,RGBBandsMissingError (#1737)
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2023-11-10T14:33:39Z,"Trainers: skip weights and augmentations when saving hparams (#1670)

* Update base.py to fix for custom augmentations

* Allow subclasses to ignore specific arguments

* Fix typing

* Save to self.weights

* pyupgrade

* Add test

* Save weights

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2023-10-28T14:51:51Z,"Fix all Trainers to support PyTorch DataLoaders (#1703)

* Fix all Trainers to support PyTorch DataLoaders

* Add DataLoader Fix For MultiLabelClassification

---------

Co-authored-by: Kay Benkert <kbenkert@mail.uni-paderborn.de>"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2023-10-13T21:33:37Z,"Bump lightning[pytorch-extra] from 2.0.9.post0 to 2.1.0 in /requirements (#1662)

* Bump lightning[pytorch-extra] from 2.0.9.post0 to 2.1.0 in /requirements

Bumps [lightning[pytorch-extra]](https://github.com/Lightning-AI/lightning) from 2.0.9.post0 to 2.1.0.
- [Release notes](https://github.com/Lightning-AI/lightning/releases)
- [Commits](https://github.com/Lightning-AI/lightning/compare/2.0.9.post0...2.1.0)

---
updated-dependencies:
- dependency-name: lightning[pytorch-extra]
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* Remove type ignores

* Capture more warnings

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Caleb Robinson <calebrob6@gmail.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2023-09-28T21:21:02Z,"ClassificationTask: add class_weights parameter (#1592)

* ClassificationTask: add class_weights parameter

* black fix"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2023-09-27T17:11:52Z,"Add command line script (#1559)

* Add command line script

* Label PRs correctly

* Flake8 fix

* Add callbacks

* Update all conf files

* Enforce class of model/data

* Update BYOL tests

* Update all tests

* Use default num workers: 0

* Variable interpolation only supported by omegaconf backend

* Fix regression tests

* Ensure that jsonargparse is installed during testing

* Bump minimimum lightning version

* Workaround for lightning/jsonargparse bugs

* Ignore Python 3.9 warning message

* Add test coverage for __main__.py

* Increase coverage of PixelwiseRegressionTask

* jsonargparse bug fixed in latest release

* Revert ""jsonargparse bug fixed in latest release""

This reverts commit 4f38cdfca30d792485af49a6245ea9929a3b45c5.

* Use default logging frequency

* Ensure that metrics are actually logged

* Fix ObjectDetectionTask logging

* Ignore type errors

* Not all need to be ignored"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2023-09-25T16:40:53Z,Fix trainer support for datasets without a plot method (#1585)
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2023-09-11T22:05:28Z,"Refactor trainers (#1541)

* Refactor trainers

* Update conf files

* Fix pydocstyle

* Add scheduler monitor

* Update conf files

* Fix BYOL backbone

* Remove broken configure_optimizers out type

* Fix type hints

* No casts

* Increase test coverage

* Better documentation of supported models

* Remove unimportant configuration

* Remove unimportant configuration

* Drop model_kwargs

* Docstring improvements

* Add base class for all torchgeo trainers

* Add configure_* methods for losses/metrics/models

* init must come first

* More type hints"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2023-06-08T04:11:19Z,"Bump lightning from 2.0.2 to 2.0.3 in /requirements (#1406)

* Bump lightning from 2.0.2 to 2.0.3 in /requirements

Bumps [lightning](https://github.com/Lightning-AI/lightning) from 2.0.2 to 2.0.3.
- [Release notes](https://github.com/Lightning-AI/lightning/releases)
- [Commits](https://github.com/Lightning-AI/lightning/compare/2.0.2...2.0.3)

---
updated-dependencies:
- dependency-name: lightning
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

* Update datamodule base class

* Check attributes first

* Fix remaining type hints

* More fixes

* Try again

* Try casting

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2023-05-06T14:48:11Z,"freeze_backbone and freeze_decoder docstrings update (#1292)

* update docstrings for freeze parameters

* Update torchgeo/trainers/classification.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/trainers/classification.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/trainers/detection.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/trainers/regression.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* update docstring

* update docstring x2

---------

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2023-04-26T12:00:00Z,freeze_backbone and freeze_decoder in Trainers (#1290)
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2023-04-16T01:27:51Z,Drop Python 3.8 support (#1246)
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2023-03-19T16:48:55Z,"Fix lightning imports (#1179)

* Fix lightning imports

* Style fixes"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2023-03-16T16:14:48Z,"Bump pytorch-lightning[extra] from 1.9.4 to 2.0.0 in /requirements (#1178)

* Bump pytorch-lightning[extra] from 1.9.4 to 2.0.0 in /requirements

Bumps [pytorch-lightning[extra]](https://github.com/Lightning-AI/lightning) from 1.9.4 to 2.0.0.
- [Release notes](https://github.com/Lightning-AI/lightning/releases)
- [Commits](https://github.com/Lightning-AI/lightning/compare/1.9.4...2.0.0)

---
updated-dependencies:
- dependency-name: pytorch-lightning[extra]
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>

* Remove deprecated features

* pytorch_lightning -> lightning

* bump radiant-mlhub too

* isort fix

* lightning does not yet have public type hints

* More ignores

* blanket ignore

* blanket ignore

* Fix function typo

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2023-02-26T18:14:37Z,"Fix broken URLs (#1125)

* Fix broken URLs

* Flake8 fix

* Don't change Chesapeake URL"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2023-02-25T22:39:48Z,"Trainers: fix support for non-TensorBoardLogger (#1145)

* Trainers: fix support for CSVLogger

* No need to check truthiness of attr

* Revert ""No need to check truthiness of attr""

This reverts commit 450df6c53c53c6e64cf4178a0b1ed91c33aa5c45."
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2023-02-06T23:20:42Z,"Bump mypy from 0.991 to 1.0.0 in /requirements (#1089)

* Bump mypy from 0.991 to 1.0.0 in /requirements

Bumps [mypy](https://github.com/python/mypy) from 0.991 to 1.0.0.
- [Release notes](https://github.com/python/mypy/releases)
- [Commits](https://github.com/python/mypy/compare/v0.991...v1.0.0)

---
updated-dependencies:
- dependency-name: mypy
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>

* Bump upper bound

* mypy fixes

* Ignore undocumented base class

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2023-01-23T22:08:17Z,"DataModules: run all data augmentation on the GPU (#992)

* DataModules: run all data augmentation on the GPU

* Passing tests

* Update BigEarthNet

* Break ChesapeakeCVPR

* Update COWC

* Update Cyclone

* Update ETCI2021

* mypy fixes

* Update FAIR1M

* Update Inria

* Update LandCoverAI

* Update LoveDA

* Update NAIP

* Update NASA

* Update OSCD

* Update RESISC45

* Update SEN12MS

* Update So2Sat

* Update SpaceNet

* Update UCMerced

* Update USAVars

* Update xview

* Remove seed

* mypy fixes

* OSCD hacks

* Add NonGeoDataModule base class

* Fixes

* Add base class to docs

* mypy fixes

* Fix several tests

* Fix Normalize

* Syntax error

* Fix bigearthnet

* Fix dtype

* Consistent kornia import

* Get regression datasets working

* Fix detection tests

* Fix some chesapeake bugs

* Fix several segmentation issues

* isort fixes

* Undo breaking change

* Remove more code duplication, standardize docstrings

* mypy fixes

* Add default augmentation

* Augmentations can be any callable

* Fix datasets tests

* Fix datamodule tests

* Fix more datamodules

* Typo fix

* Set up val_dataset even when fit

* Fix classification tests

* Fix ETCI2021

* Fix SEN12MS

* Add GeoDataModule base class

* Fix several chesapeake bugs

* Fix dtype and shape

* Fix crs/bbox issue

* Fix test dtype

* Fix unequal size stacking error

* flake8 fix

* Better checks on sampler

* Fix bug introduced in NAIP dm

* Fix chesapeake dimensions

* Add one to mask

* Fix missing imports

* Fix batch size

* Simplify augmentations

* Don't run test or predict without datasets

* Fix tests

* Allow shared dataset

* One more try

* Fix typo

* Fix another typo

* Fix Chesapeake dimensions

* Apply augmentations during sanity check too

* Don't reuse fixtures

* Increase coverage

* Fix ETCI tests

* Test predict_step

* Test all loss methods

* Simplify validation plotting

* Document new classes

* Fix plotting

* Plotting should be robust in case dataset does not contain RGB bands

* Fix flake8

* 100% coverage of trainers

* Add lightning-lite dependency

* Revert ""Add lightning-lite dependency""

This reverts commit 1df7291ae59f6257a2cabd20a6c767e178bf4f0f.

* Define our own MisconfigurationException

* Properly test new data module base classes

* Fix mistake in setup call

* ExtractTensorPatches runs into OOM errors

* Test both fast_dev_run True and False

* Fix plot methods

* Fix OSCD tests

* Fix bug with inconsistent train/val/test splits between stages

* Fix issues with images of different sizes

* Fix OSCD tests

* Fix OSCD tests

* Bad rebase

* No trainer for OSCD so no need for config

* Bad rebase

* plot: only works during validation

* Fix collation of NASA Marine Debris dataset

* flake8 fix

* Quick test

* Revert ""Quick test""

This reverts commit f465efcbef904b8a5bc2257f2800eed931c491ab.

* 56 workers is a bit excessive

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2023-01-22T22:25:49Z,"Add Multi-Weight Support API (#917)

* load pretrained weights

* change name millionaid

* restructure and additional weights

* rename sentinel1 weights

* add vit small weights

* forgot to add vit.py

* struggling with test

* wrong name failing test

* feedback on tests

* increase test coverage

* fix failing test

* fix failing test

* fix failing test and add vit tests

* fix failing vit test

* torchgeo.models.utils

* forgot utils file

* typo num channels

* nitpick docs, version torchvision

* another try min dependencies

* add documentation table

* expand pytests to test pretrained weights on tasks

* reverse changes to byol task

* add tests to init pretrained weights from config

* forgot to add the conf files

* change path

* increase test coverage

* vit tests all pass locally including slow

* now remote

* fix tests another one

* add a draft tutorial

* run black on tutorial notebook

* Tutorial typo fixes

* Lower min torch/vision versions

* Fix bad rebase

* Remove dead code

* Flake8 fixes

* Consistent in_chans

* Black fixes

* bison > yacs

* Remove one more reference

* Download modified weights from hugging face

* Add entrypoints

* Add torch.hub support

* progress arg is required

* Fix model loading for resnet18

* Add transforms, update tests

* VIT -> ViT

* add seco weights

* Fix type hints

* Link to timm docs

* Fix pydocstyle

* Try to fix timm docs link

* Fix tests

* Nuke ignores

* Ignore timm links

* Add model API methods

* Add to __init__ and document

* Test model API functions

* fix tests

* Use correct documentation link for intersphinx

* Typos

* Fix Windows tests

* meth -> func

* Explicit function scope

* weight-specific filename

* Support enums in classification trainer

* Update other trainers too

* Fix regression tests

* Fix classification tests

* Fix byol tests

* Fix types

* progress_bar is required arg

* Test weight enums

* Fix pickling

* Fix regression tests

* Improve coverage of classification tests

* Improve coverage of BYOL tests

* Update resnet table

* Update ViT table

* Update get_state_dict usage

* Remove unused YAML files

* Update table widths

* Documentation improvements

* Tweak tables

* Try to fix Windows tests

* Revert ""Try to fix Windows tests""

This reverts commit 1325b13ff779b28adcaca36725e098ae8352a1d6.

* Monkeypatch everything

* Revert ""Monkeypatch everything""

This reverts commit e3e8d7d04231f8c0a39b5accd8f3d977aa7cbab2.

* Revert ""Revert ""Monkeypatch everything""""

This reverts commit 9b27bd705b06a743c092301c36802ce6e9503898.

* Patch things not at the source

* Fix missing import

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2022-12-26T15:51:30Z,"Remove __module__ hacks (#976)

* Remove __module__ hacks

* Remove unused imports

* Fix typo in reference

* Explicit link"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2022-12-15T20:22:59Z,"Change BYOL task argument name and switch to timm models (#918)

* change argument name and supporrt timm

* list_models()

* encoder -> backbone

* fix failing test

* suggested changes"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2022-12-04T19:54:25Z,"Change ""classification_model"" to ""model"" (#916)

* name change

* fix failing test

* expose all available timm models

* chmod

* imagenet pretrained flag

* remove extra

* docstring list_models"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2022-11-30T21:44:26Z,"Bump torchmetrics from 0.10.3 to 0.11.0 in /requirements (#925)

* Bump torchmetrics from 0.10.3 to 0.11.0 in /requirements

Bumps [torchmetrics](https://github.com/Lightning-AI/metrics) from 0.10.3 to 0.11.0.
- [Release notes](https://github.com/Lightning-AI/metrics/releases)
- [Changelog](https://github.com/Lightning-AI/metrics/blob/master/CHANGELOG.md)
- [Commits](https://github.com/Lightning-AI/metrics/compare/v0.10.3...v0.11.0)

---
updated-dependencies:
- dependency-name: torchmetrics
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* mypy fixes

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2022-11-15T04:33:17Z,"Docs/trainers for Classification and Segmentation Task (#852)

* progess on docs

* add docs

* no versionchange for docs

* remove versionchanged

* verb typo

* add space for multiline f string

* do not print model list but docstring instead"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2022-10-11T14:25:53Z,Trainers: fix plotting file handle leak (#826)
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2022-10-10T18:15:10Z,"Bump torchmetrics from 0.9.3 to 0.10.0 in /requirements (#816)

* Bump torchmetrics from 0.9.3 to 0.10.0 in /requirements

Bumps [torchmetrics](https://github.com/Lightning-AI/metrics) from 0.9.3 to 0.10.0.
- [Release notes](https://github.com/Lightning-AI/metrics/releases)
- [Changelog](https://github.com/Lightning-AI/metrics/blob/master/CHANGELOG.md)
- [Commits](https://github.com/Lightning-AI/metrics/compare/v0.9.3...v0.10.0)

---
updated-dependencies:
- dependency-name: torchmetrics
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* Drop support for older torchmetrics

* Update evaluate.py as well

* Args no longer valid

* Style fix

* Fix imports

* multiclass -> multilabel

* Fix tests

* Verbose install

* Bump minimum version

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2022-10-06T13:41:30Z,Trainers: replace self.forward() with self() (#807)
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2022-10-03T17:58:53Z,"ClassificationTask predict step (#790)

* add predict_step method to ClassificationTask

* fix mypy error"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2022-09-30T17:01:40Z,multilabel classifier outputs should be followed by sigmoid not softmax op (#791)
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2022-09-30T17:01:19Z,"MultiLabelClassificationTask predict step (#792)

* add predict_step to MultiLabelClassificationTask

* fix docs"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2022-08-02T23:39:10Z,"Bump pytorch-lightning from 1.6.5 to 1.7.0 in /requirements (#697)

* Bump pytorch-lightning from 1.6.5 to 1.7.0 in /requirements

Bumps [pytorch-lightning](https://github.com/Lightning-AI/lightning) from 1.6.5 to 1.7.0.
- [Release notes](https://github.com/Lightning-AI/lightning/releases)
- [Commits](https://github.com/Lightning-AI/lightning/compare/1.6.5...pl/1.7.0)

---
updated-dependencies:
- dependency-name: pytorch-lightning
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* Remove protobuf restrictions

* LightningModule was moved

* Mypy fixes

* Ensure same behavior

* Fix docs

* Silence warnings

* Change error message location

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2022-03-30T02:39:19Z,Fix PyTorch Lightning 1.6 type hints (#487)
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2022-03-14T20:35:37Z,"Remove type ignores for PyTorch (#460)

* Remove type ignores for PyTorch

* Mypy fixes for pytest MonkeyPatch

* Black

* Ignore Identity

* Generic fixes

* Remove unused Generator import

* More fixes

* Fix remaining mypy errors

* More typing cleanups

* typing.OrderedDict isn't available until Python 3.7.2+

* Need Python 3.9 to build docs for fancy OrderedDict

* Fix Python 3.8 and earlier support

* Fix BigEarthNet tests

* Fix bug in ETCI 2021 tests

* Remove unused flake8 ignore

* More robust and well-documented trainer steps

* Many functions don't actually use batch_idx

* Store cast hparams in trainers"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2022-02-01T00:23:20Z,Fixing torchmetrics deprecations (#382)
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2022-01-18T20:34:15Z,torchmetrics: IoU -> JaccardIndex (#361)
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2022-01-01T20:14:19Z,"Remove dataset-specific trainers (#286)

* Remove dataset-specific trainers

* Collation functions will be new in 0.2.0

* Clarify arg docstring

* Style fixes

* Remove files forgotten in rebase

* Fix bug in unbind_samples, add tests

* Fix bugs in datamodule augmentations

* Increase coverage for datamodules

* Fix bugs in logger plotting, properly test

* Fix tests

* Increase coverage of trainers

* Use datamodule plot instead of dataset plot

* Skip datamodules without tests

* Plot predictions

* Fix ClassificationTask tests

* Fix SemanticSegmentationTask tests

* EAFP -> LBYL

* Ensure that tensors are on the CPU before plotting"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2021-12-10T01:38:30Z,"Fixing network calls in unit tests (#265)

* Fixing network call in test of pretrained resnet

* Enable loading a pretrained model from a local path

* Fix filename

* monkeypatch the load_state_dict_from_url method instead of going around it

* Make default configs use random weights instead of imagenet pre-trained weights

* Removing internet access requirement from tests

* Deleted So2Sat trainer"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2021-11-08T04:05:58Z,"0.1.0 release (#226)

* 0.1.0 release

* Train deps needed for release testing

* Update development status

* setup.py should not be run directly

* Test more trainers

* Fix local docs build

* Update installation instructions

* Specify test data dir in config

* Fix tutorial docs

* Trainers should default to num_workers=0, download=False

* Correct location for root_dir

* Try different GDAL name

* Try again

* Various fixes to release tests

* Update pip installs in tutorials

* Fix some bugs

* Config file not being picked up

* Get back to 100% test coverage

* Added correct weight string to UCMerced

* yolo fix

* yolo fix pt 2

* yolo fix 2 pt. 1

* Simplify tests a bit

* Make the trainer notebook look stupid

* UCMerced should download by default in the trainers

* Revert

* Fix logo/author, include LICENSE in upload

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>"
github.com/microsoft/torchgeo,torchgeo/trainers/classification.py,2021-11-07T04:57:40Z,"Trainers: split tasks into separate files, add SemanticSegmentationTask (#224)

* Trainers: split tasks into separate files

* Add SemanticSegmentationTask

* Fix doc tests

* Keep dataset-specific tasks in separate files

* Remove duplicate So2Sat trainer"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-12-19T15:59:01Z,Apply suggestions from code review
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-12-19T15:55:54Z,Update art/estimators/certification/derandomized_smoothing/pytorch.py
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-12-18T13:40:42Z,"general inclusion of pylint: disable=W0221. Updates to randomized/derandomized tools

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-12-15T09:12:24Z,"mypy fixes

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-12-14T17:05:04Z,"standardise verbose use across tools

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-10-21T22:32:43Z,"Update workflows for TensorFlow/Keras 2.14

Signed-off-by: Beat Buesser <beat.buesser@ibm.com>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-09-12T13:25:09Z,"name changes to follow ART patterns

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-09-04T16:56:47Z,"mypy fix

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-09-04T16:27:50Z,"review edits

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-08-31T14:44:13Z,"Incorporating review feedback

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-08-31T14:44:13Z,"initial review edits

Co-authored-by: Beat Buesser <49047826+beat-buesser@users.noreply.github.com>
Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-08-31T14:44:05Z,"updates to tensorflow classifier

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-08-31T14:44:05Z,"bugfix in pytorch ci for timm

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-08-31T14:44:05Z,"Enabling logging to be seen on console. Resolve conflict with lingvo in test CI pipeline

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-08-31T14:44:05Z,"refactor to reflect correct input dimensionality. Removing general development file

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-08-31T14:44:05Z,"fixing bug in which tests folder was overwritten

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-08-31T14:43:47Z,"adding row mode and test

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-08-31T14:41:37Z,"black formatting. Removal of legacy code

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-08-31T14:41:37Z,"updating for derandomised smoothing tests

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-08-31T14:41:37Z,"address tiebreak in kthvalue vs argmax

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-08-31T14:41:37Z,"adapting tests for cpu only

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-08-31T14:41:37Z,"refactor to eval_and_certify. Adding block ablations

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-08-31T14:41:37Z,"splitting out pytorch functionalities

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-08-31T14:41:24Z,"init refactor

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-08-31T14:38:38Z,"make colum pos optional in vit ablator, updating tests

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2023-08-31T14:38:38Z,"move vit functionality into derandomised smoothing toolset

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2022-11-16T01:15:43Z,"Remove LGTM

Signed-off-by: Beat Buesser <beat.buesser@ie.ibm.com>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2022-11-02T14:49:14Z,"Update missing parameter application

Signed-off-by: Beat Buesser <beat.buesser@ie.ibm.com>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2022-10-25T22:19:19Z,"Update fit methods

Signed-off-by: Beat Buesser <beat.buesser@ie.ibm.com>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2022-10-21T12:32:46Z,"Fix style checks

Signed-off-by: Beat Buesser <beat.buesser@ie.ibm.com>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2022-06-30T21:16:51Z,"Update default value for nb_classes

Signed-off-by: Beat Buesser <beat.buesser@ie.ibm.com>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2022-06-25T16:56:46Z,"fix kwargs bug

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2022-06-21T11:16:04Z,"Update art/estimators/certification/derandomized_smoothing/pytorch.py

Co-authored-by: Beat Buesser <49047826+beat-buesser@users.noreply.github.com>
Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2022-06-21T11:15:37Z,"Update art/estimators/certification/derandomized_smoothing/pytorch.py

Co-authored-by: Beat Buesser <49047826+beat-buesser@users.noreply.github.com>
Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2022-06-04T15:21:00Z,"formatting

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2022-06-04T14:29:25Z,"minor formatting

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2022-06-04T14:22:23Z,"comments and fix to tests

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2022-05-29T17:19:08Z,"adding comments to functions

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2022-05-26T16:00:31Z,"addressing pylint and mypy formatting

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2022-05-25T17:57:55Z,"general development

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2022-05-25T11:22:47Z,"check for softmax and removal of old variables and functions

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2022-05-21T18:27:04Z,"initial tensorflow functions

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/Trusted-AI/adversarial-robustness-toolbox,art/estimators/certification/derandomized_smoothing/pytorch.py,2022-05-18T17:51:50Z,"initial functions for pytorch

Signed-off-by: GiulioZizzo <giulio.zizzo@yahoo.co.uk>"
github.com/rwightman/efficientdet-pytorch,train.py,2023-05-22T19:46:38Z,"Switch to torchrun for distributed launch, use timm init_distributed_device helper for cluster training support"
github.com/rwightman/efficientdet-pytorch,train.py,2023-05-21T22:15:53Z,"Use opt default eps (arg defaults to None), torch.compile after DDP"
github.com/rwightman/efficientdet-pytorch,train.py,2023-02-10T01:43:39Z,"A bit of cleanup, testing w/ PyTorch 2.0 nightlies, initial torchcompile support"
github.com/rwightman/efficientdet-pytorch,train.py,2021-11-30T22:09:47Z,"Add AGC support to train script, add updated v2_dt trained weights, timm req moved up to 0.4.12"
github.com/rwightman/efficientdet-pytorch,train.py,2021-11-17T05:00:19Z,"Merge pull request #246 from qAp/argpare_help_typo

Change 'model' to 'dataset' to train"
github.com/rwightman/efficientdet-pytorch,train.py,2021-11-16T22:52:38Z,Add EfficientDetV2-RW-DT (v2 'tiny' backbone) weights from recent experiment .458 mAP
github.com/rwightman/efficientdet-pytorch,train.py,2021-08-17T15:18:40Z,Change 'model' to 'dataset' to train
github.com/rwightman/efficientdet-pytorch,train.py,2021-02-19T07:01:01Z,Add new model weights for bilinear/bilinear FPN up/down sample. Add support for training models with mish or other activations with torchscript considerations.
github.com/rwightman/efficientdet-pytorch,train.py,2020-12-14T21:32:18Z,"Put some post-proc/nms constants (MAX_DET..., soft-nms) as config options. Soft-nms via cmd line. Fix #120 and comment typo for fix #150."
github.com/rwightman/efficientdet-pytorch,train.py,2020-12-07T20:35:07Z,Improve assert message for torchscript training
github.com/rwightman/efficientdet-pytorch,train.py,2020-12-07T18:49:01Z,"Change default focal loss back to legacy, new focal has proven more numerically stable in recent exps."
github.com/rwightman/efficientdet-pytorch,train.py,2020-12-03T17:59:26Z,Update EMA weights with post-DDP sync'd copy
github.com/rwightman/efficientdet-pytorch,train.py,2020-12-03T05:44:41Z,Add transform and collate fn arguments to loader setup args. Related to #139. Add random train interpolation support as augmentation.
github.com/rwightman/efficientdet-pytorch,train.py,2020-12-01T00:36:34Z,"A bit of cleanup, some model defs, and timm dep updates
* bump effdet version to 0.2.3
* update timm deps to 0.3.2 for latest ModelEmaV2 changes (jit compatible)
* add ability to specify separate act fn for head layers (update cspresdet50 as experiment)
* add efficientdet_q1/q2 (quad-fpn) model defs for upcoming weights
* add torchscript arg to train script"
github.com/rwightman/efficientdet-pytorch,train.py,2020-11-16T20:54:30Z,"Experimenting with EMA simplifications in timm + jit'd model during train, issues with sync-bn"
github.com/rwightman/efficientdet-pytorch,train.py,2020-10-30T07:25:07Z,"Switch back to legacy focal loss as the default, faster w/ less memory, especially w/ jit, not a clear benefit for the smoothing"
github.com/rwightman/efficientdet-pytorch,train.py,2020-10-22T23:53:17Z,"Flip some args, default to non-jit loss, labeler in loader (not in bench), and filter gt targets based on -1 sentinel by default"
github.com/rwightman/efficientdet-pytorch,train.py,2020-10-06T20:12:38Z,Some more anchor/matcher optimizations/simplifications
github.com/rwightman/efficientdet-pytorch,train.py,2020-10-06T07:00:22Z,"And support for non-square anchor layouts, allow generation of anchor labels in loader (collate) for reduced GPU load and less CPU load on primary process."
github.com/rwightman/efficientdet-pytorch,train.py,2020-10-02T23:13:47Z,"Update train script to use native or apex AMP, update to latest timm utils interface, fix sotabench, add resdet50 weights, add csp model defs, cleanup collate fn"
github.com/rwightman/efficientdet-pytorch,train.py,2020-10-01T00:20:31Z,"Cleanup, add validation every n subset, fixup input config resolution between args and model config."
github.com/rwightman/efficientdet-pytorch,train.py,2020-09-29T00:12:08Z,"Finish evaluators for Pascal and OpenImages. Cleanup and refactoring. VOC tested to 79.5 mAP D0, no tuning of hparams. Running initial OpenImages tests."
github.com/rwightman/efficientdet-pytorch,train.py,2020-09-18T21:56:13Z,Move data modules into effdet. Add config for legacy vs smoothing focal loss and args for random erasing.
github.com/rwightman/efficientdet-pytorch,train.py,2020-09-14T18:43:43Z,"A lot of changes w/ new datasets, new augs, new model defs, improved loss fn.
* OpenImages and Pascal VOC support
* A few new model cfgs
* More changes/additions in the loss and performance optimization effort, incl label_smoothing loss
* RandomErasing aug added, currently hardcoded, to fix after reorg"
github.com/rwightman/efficientdet-pytorch,train.py,2020-06-15T05:18:42Z,Port and updated D7 weights from official TF repo (53.1 mAP in PyTorch). Fix a train arg desc.
github.com/rwightman/efficientdet-pytorch,train.py,2020-06-12T00:41:17Z,"Change redundant bias args in train/validate to overrides, default is to base it on model cfg"
github.com/rwightman/efficientdet-pytorch,train.py,2020-06-03T06:59:11Z,Add some new model configs that use upcoming timm features...
github.com/rwightman/efficientdet-pytorch,train.py,2020-05-24T03:58:03Z,"Rename config -> model_config, update README.md"
github.com/rwightman/efficientdet-pytorch,train.py,2020-05-24T01:03:15Z,"Add model factory w/ pretrained weight download. Add setup.py and version for pypi release. Fix #18, fix #15."
github.com/rwightman/efficientdet-pytorch,train.py,2020-05-22T19:58:31Z,"A whack of changes, attempting to optimize train/inference with torchscript and some structural change. Backed off torchscript. Added clipping of bbox before NMS, improve scores."
github.com/rwightman/efficientdet-pytorch,train.py,2020-05-17T18:05:20Z,"Initial evaluator work, still need to fix validation script, cleanup, finish train run"
github.com/rwightman/efficientdet-pytorch,train.py,2020-05-03T05:12:18Z,"Fix resume, remove DataParallel support, just use DistributedDataParallel"
github.com/rwightman/efficientdet-pytorch,train.py,2020-05-03T01:48:53Z,"Add some args for hardcoded config I was using locally for training experiments, fix saved checkpoints (don't save whole bench)"
github.com/rwightman/efficientdet-pytorch,train.py,2020-04-28T01:33:14Z,"Change default optimizer to 'momentum' (SGD w/o Nesterov), matches TF impl and more stable, requires time >= 0.1.22"
github.com/rwightman/efficientdet-pytorch,train.py,2020-04-23T06:05:58Z,"Improve train stability, BN momentum to .01, 5 warmup epochs by default"
github.com/rwightman/efficientdet-pytorch,train.py,2020-04-20T08:38:17Z,"Add clip grad norm, switch default opt, add omegaconf dep, redudant_bias flag to enable/disable bias + BN combo (default True for TF)"
github.com/rwightman/efficientdet-pytorch,train.py,2020-04-12T22:49:27Z,Missed some files
github.com/microsoft/torchgeo,tests/models/test_vit.py,2023-09-30T18:50:43Z,"SSL4EO-L Weights (#1482)

* ssl4eo landsat 18 weights

* add resnet and vit moco weights under new hf repo

* add simclr ssl checkpoint

* add docs

* order models and new csv tablesf for docs

* adjust spacing of table

* lots of numbers and formatting

* missing resnet etm-sr weights

* fix failing tests

* check slow tests

* Fix URL checksum

* fix weight names

* Use 2 digits for all metrics

* hyphen -> en dash

* Use 2 digits for all metrics

* Landsat first

* EOL char before EOF char

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/models/test_vit.py,2023-05-14T16:00:19Z,"MonkeyPatch exposed in public API in newer pytest (#1333)

* MonkeyPatch exposed in public API in newer pytest

* Fix import order"
github.com/microsoft/torchgeo,tests/models/test_vit.py,2023-04-16T01:27:51Z,Drop Python 3.8 support (#1246)
github.com/microsoft/torchgeo,tests/models/test_vit.py,2023-03-23T04:59:47Z,"Models: fix preprocessing transforms (#1166)

* Models: fix preprocessing transforms

* Fix normalization of SeCo std dev

* black

* Fix SeCo transforms

* Add comment explaining source of transforms"
github.com/microsoft/torchgeo,tests/models/test_vit.py,2023-03-16T17:28:39Z,"Bump torchvision from 0.14.1 to 0.15.1 in /requirements (#1177)

* Bump torchvision from 0.14.1 to 0.15.1 in /requirements

Bumps [torchvision](https://github.com/pytorch/vision) from 0.14.1 to 0.15.1.
- [Release notes](https://github.com/pytorch/vision/releases)
- [Commits](https://github.com/pytorch/vision/compare/v0.14.1...v0.15.1)

---
updated-dependencies:
- dependency-name: torchvision
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* bump pytorch too

* Fix tests

* bump precommit

* blacken

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/models/test_vit.py,2023-01-22T22:25:49Z,"Add Multi-Weight Support API (#917)

* load pretrained weights

* change name millionaid

* restructure and additional weights

* rename sentinel1 weights

* add vit small weights

* forgot to add vit.py

* struggling with test

* wrong name failing test

* feedback on tests

* increase test coverage

* fix failing test

* fix failing test

* fix failing test and add vit tests

* fix failing vit test

* torchgeo.models.utils

* forgot utils file

* typo num channels

* nitpick docs, version torchvision

* another try min dependencies

* add documentation table

* expand pytests to test pretrained weights on tasks

* reverse changes to byol task

* add tests to init pretrained weights from config

* forgot to add the conf files

* change path

* increase test coverage

* vit tests all pass locally including slow

* now remote

* fix tests another one

* add a draft tutorial

* run black on tutorial notebook

* Tutorial typo fixes

* Lower min torch/vision versions

* Fix bad rebase

* Remove dead code

* Flake8 fixes

* Consistent in_chans

* Black fixes

* bison > yacs

* Remove one more reference

* Download modified weights from hugging face

* Add entrypoints

* Add torch.hub support

* progress arg is required

* Fix model loading for resnet18

* Add transforms, update tests

* VIT -> ViT

* add seco weights

* Fix type hints

* Link to timm docs

* Fix pydocstyle

* Try to fix timm docs link

* Fix tests

* Nuke ignores

* Ignore timm links

* Add model API methods

* Add to __init__ and document

* Test model API functions

* fix tests

* Use correct documentation link for intersphinx

* Typos

* Fix Windows tests

* meth -> func

* Explicit function scope

* weight-specific filename

* Support enums in classification trainer

* Update other trainers too

* Fix regression tests

* Fix classification tests

* Fix byol tests

* Fix types

* progress_bar is required arg

* Test weight enums

* Fix pickling

* Fix regression tests

* Improve coverage of classification tests

* Improve coverage of BYOL tests

* Update resnet table

* Update ViT table

* Update get_state_dict usage

* Remove unused YAML files

* Update table widths

* Documentation improvements

* Tweak tables

* Try to fix Windows tests

* Revert ""Try to fix Windows tests""

This reverts commit 1325b13ff779b28adcaca36725e098ae8352a1d6.

* Monkeypatch everything

* Revert ""Monkeypatch everything""

This reverts commit e3e8d7d04231f8c0a39b5accd8f3d977aa7cbab2.

* Revert ""Revert ""Monkeypatch everything""""

This reverts commit 9b27bd705b06a743c092301c36802ce6e9503898.

* Patch things not at the source

* Fix missing import

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/ethen8181/machine-learning,deep_learning/contrastive/clip/clip/models.py,2023-02-03T21:08:44Z,clip & contrastive learning notes init
github.com/tyxsspa/AnyText,ldm/modules/midas/midas/vit.py,2023-12-26T13:36:32Z,inference code and demo
github.com/modelscope/modelscope,modelscope/models/cv/image_normal_estimation/modules/midas/vit.py,2024-01-09T03:53:02Z,"Feature/image normal estimation (#683)

* image_normal_estimation

* image_normal_estimation

* update according to pr review

* update submodule data test

---------

Co-authored-by: Weihao Yuan <qianmu.ywh@alibaba-inc.com>"
github.com/guochengqian/Magic123,dpt.py,2023-08-03T02:51:43Z,first commit
github.com/microsoft/torchgeo,tests/models/test_resnet.py,2023-09-30T18:50:43Z,"SSL4EO-L Weights (#1482)

* ssl4eo landsat 18 weights

* add resnet and vit moco weights under new hf repo

* add simclr ssl checkpoint

* add docs

* order models and new csv tablesf for docs

* adjust spacing of table

* lots of numbers and formatting

* missing resnet etm-sr weights

* fix failing tests

* check slow tests

* Fix URL checksum

* fix weight names

* Use 2 digits for all metrics

* hyphen -> en dash

* Use 2 digits for all metrics

* Landsat first

* EOL char before EOF char

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/models/test_resnet.py,2023-05-14T16:00:19Z,"MonkeyPatch exposed in public API in newer pytest (#1333)

* MonkeyPatch exposed in public API in newer pytest

* Fix import order"
github.com/microsoft/torchgeo,tests/models/test_resnet.py,2023-04-16T01:27:51Z,Drop Python 3.8 support (#1246)
github.com/microsoft/torchgeo,tests/models/test_resnet.py,2023-03-23T04:59:47Z,"Models: fix preprocessing transforms (#1166)

* Models: fix preprocessing transforms

* Fix normalization of SeCo std dev

* black

* Fix SeCo transforms

* Add comment explaining source of transforms"
github.com/microsoft/torchgeo,tests/models/test_resnet.py,2023-03-16T17:28:39Z,"Bump torchvision from 0.14.1 to 0.15.1 in /requirements (#1177)

* Bump torchvision from 0.14.1 to 0.15.1 in /requirements

Bumps [torchvision](https://github.com/pytorch/vision) from 0.14.1 to 0.15.1.
- [Release notes](https://github.com/pytorch/vision/releases)
- [Commits](https://github.com/pytorch/vision/compare/v0.14.1...v0.15.1)

---
updated-dependencies:
- dependency-name: torchvision
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* bump pytorch too

* Fix tests

* bump precommit

* blacken

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/models/test_resnet.py,2023-01-22T22:25:49Z,"Add Multi-Weight Support API (#917)

* load pretrained weights

* change name millionaid

* restructure and additional weights

* rename sentinel1 weights

* add vit small weights

* forgot to add vit.py

* struggling with test

* wrong name failing test

* feedback on tests

* increase test coverage

* fix failing test

* fix failing test

* fix failing test and add vit tests

* fix failing vit test

* torchgeo.models.utils

* forgot utils file

* typo num channels

* nitpick docs, version torchvision

* another try min dependencies

* add documentation table

* expand pytests to test pretrained weights on tasks

* reverse changes to byol task

* add tests to init pretrained weights from config

* forgot to add the conf files

* change path

* increase test coverage

* vit tests all pass locally including slow

* now remote

* fix tests another one

* add a draft tutorial

* run black on tutorial notebook

* Tutorial typo fixes

* Lower min torch/vision versions

* Fix bad rebase

* Remove dead code

* Flake8 fixes

* Consistent in_chans

* Black fixes

* bison > yacs

* Remove one more reference

* Download modified weights from hugging face

* Add entrypoints

* Add torch.hub support

* progress arg is required

* Fix model loading for resnet18

* Add transforms, update tests

* VIT -> ViT

* add seco weights

* Fix type hints

* Link to timm docs

* Fix pydocstyle

* Try to fix timm docs link

* Fix tests

* Nuke ignores

* Ignore timm links

* Add model API methods

* Add to __init__ and document

* Test model API functions

* fix tests

* Use correct documentation link for intersphinx

* Typos

* Fix Windows tests

* meth -> func

* Explicit function scope

* weight-specific filename

* Support enums in classification trainer

* Update other trainers too

* Fix regression tests

* Fix classification tests

* Fix byol tests

* Fix types

* progress_bar is required arg

* Test weight enums

* Fix pickling

* Fix regression tests

* Improve coverage of classification tests

* Improve coverage of BYOL tests

* Update resnet table

* Update ViT table

* Update get_state_dict usage

* Remove unused YAML files

* Update table widths

* Documentation improvements

* Tweak tables

* Try to fix Windows tests

* Revert ""Try to fix Windows tests""

This reverts commit 1325b13ff779b28adcaca36725e098ae8352a1d6.

* Monkeypatch everything

* Revert ""Monkeypatch everything""

This reverts commit e3e8d7d04231f8c0a39b5accd8f3d977aa7cbab2.

* Revert ""Revert ""Monkeypatch everything""""

This reverts commit 9b27bd705b06a743c092301c36802ce6e9503898.

* Patch things not at the source

* Fix missing import

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/models/test_resnet.py,2022-10-29T04:19:12Z,"Bump torch from 1.12.1 to 1.13.0 in /requirements (#875)

* Bump torch from 1.12.1 to 1.13.0 in /requirements

Bumps [torch](https://github.com/pytorch/pytorch) from 1.12.1 to 1.13.0.
- [Release notes](https://github.com/pytorch/pytorch/releases)
- [Changelog](https://github.com/pytorch/pytorch/blob/master/RELEASE.md)
- [Commits](https://github.com/pytorch/pytorch/compare/v1.12.1...v1.13.0)

---
updated-dependencies:
- dependency-name: torch
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* Bump torchvision from 1.13.1 to 1.14.0 in /requirements

* torch.load now has type hints

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/models/test_resnet.py,2022-03-14T20:35:37Z,"Remove type ignores for PyTorch (#460)

* Remove type ignores for PyTorch

* Mypy fixes for pytest MonkeyPatch

* Black

* Ignore Identity

* Generic fixes

* Remove unused Generator import

* More fixes

* Fix remaining mypy errors

* More typing cleanups

* typing.OrderedDict isn't available until Python 3.7.2+

* Need Python 3.9 to build docs for fancy OrderedDict

* Fix Python 3.8 and earlier support

* Fix BigEarthNet tests

* Fix bug in ETCI 2021 tests

* Remove unused flake8 ignore

* More robust and well-documented trainer steps

* Many functions don't actually use batch_idx

* Store cast hparams in trainers"
github.com/microsoft/torchgeo,tests/models/test_resnet.py,2021-12-10T01:38:30Z,"Fixing network calls in unit tests (#265)

* Fixing network call in test of pretrained resnet

* Enable loading a pretrained model from a local path

* Fix filename

* monkeypatch the load_state_dict_from_url method instead of going around it

* Make default configs use random weights instead of imagenet pre-trained weights

* Removing internet access requirement from tests

* Deleted So2Sat trainer"
github.com/microsoft/torchgeo,tests/models/test_resnet.py,2021-11-01T20:03:01Z,"Add pre-trained models for ResNet (#209)

* Add pre-trained models for ResNet

* Style fixes

* Add unit tests

* Mypy fix

* Add bands parameter"
github.com/microsoft/torchgeo,tests/trainers/test_moco.py,2023-09-30T21:43:39Z,"0.5.0 release (#1604)

* 0.5.0 release

* Fix caching hash

* Warnings not raised because not final layer

* Skip tests that require optional deps

* Isort fixes

* Fix? ChesapeakeCVPR tests

* Hack to avoid GeoDataset bug"
github.com/microsoft/torchgeo,tests/trainers/test_moco.py,2023-09-27T17:11:52Z,"Add command line script (#1559)

* Add command line script

* Label PRs correctly

* Flake8 fix

* Add callbacks

* Update all conf files

* Enforce class of model/data

* Update BYOL tests

* Update all tests

* Use default num workers: 0

* Variable interpolation only supported by omegaconf backend

* Fix regression tests

* Ensure that jsonargparse is installed during testing

* Bump minimimum lightning version

* Workaround for lightning/jsonargparse bugs

* Ignore Python 3.9 warning message

* Add test coverage for __main__.py

* Increase coverage of PixelwiseRegressionTask

* jsonargparse bug fixed in latest release

* Revert ""jsonargparse bug fixed in latest release""

This reverts commit 4f38cdfca30d792485af49a6245ea9929a3b45c5.

* Use default logging frequency

* Ensure that metrics are actually logged

* Fix ObjectDetectionTask logging

* Ignore type errors

* Not all need to be ignored"
github.com/microsoft/torchgeo,tests/trainers/test_moco.py,2023-09-11T22:05:28Z,"Refactor trainers (#1541)

* Refactor trainers

* Update conf files

* Fix pydocstyle

* Add scheduler monitor

* Update conf files

* Fix BYOL backbone

* Remove broken configure_optimizers out type

* Fix type hints

* No casts

* Increase test coverage

* Better documentation of supported models

* Remove unimportant configuration

* Remove unimportant configuration

* Drop model_kwargs

* Docstring improvements

* Add base class for all torchgeo trainers

* Add configure_* methods for losses/metrics/models

* init must come first

* More type hints"
github.com/microsoft/torchgeo,tests/trainers/test_moco.py,2023-05-29T16:28:36Z,"Test fewer models in trainers to avoid exceeding RAM (#1377)

* Stop the madness

* isort

* flake8

* Repeat for other trainers

* Parentheses not needed

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_moco.py,2023-05-14T16:01:58Z,"SSL4EO-L: add new dataset (#1332)

* SSL4EO-L: add new dataset

* Fix style tests

* Add data module

* Doc improvements

* Thematic Mapper introduced in Landsat 4"
github.com/microsoft/torchgeo,tests/trainers/test_moco.py,2023-05-14T16:00:19Z,"MonkeyPatch exposed in public API in newer pytest (#1333)

* MonkeyPatch exposed in public API in newer pytest

* Fix import order"
github.com/microsoft/torchgeo,tests/trainers/test_moco.py,2023-05-12T04:05:39Z,"Add MoCo trainer (#1285)

* Add MoCo trainer

* pyupgrade

* isort

* Fix type hints

* Lightly now supports MoCo v3

* Add RandomGrayscale

* Fix bug

* Remove duplicated dep

* Add check for mode collapse in feature representation

* Fix undefined variable"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2023-09-27T17:11:52Z,"Add command line script (#1559)

* Add command line script

* Label PRs correctly

* Flake8 fix

* Add callbacks

* Update all conf files

* Enforce class of model/data

* Update BYOL tests

* Update all tests

* Use default num workers: 0

* Variable interpolation only supported by omegaconf backend

* Fix regression tests

* Ensure that jsonargparse is installed during testing

* Bump minimimum lightning version

* Workaround for lightning/jsonargparse bugs

* Ignore Python 3.9 warning message

* Add test coverage for __main__.py

* Increase coverage of PixelwiseRegressionTask

* jsonargparse bug fixed in latest release

* Revert ""jsonargparse bug fixed in latest release""

This reverts commit 4f38cdfca30d792485af49a6245ea9929a3b45c5.

* Use default logging frequency

* Ensure that metrics are actually logged

* Fix ObjectDetectionTask logging

* Ignore type errors

* Not all need to be ignored"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2023-09-11T22:05:28Z,"Refactor trainers (#1541)

* Refactor trainers

* Update conf files

* Fix pydocstyle

* Add scheduler monitor

* Update conf files

* Fix BYOL backbone

* Remove broken configure_optimizers out type

* Fix type hints

* No casts

* Increase test coverage

* Better documentation of supported models

* Remove unimportant configuration

* Remove unimportant configuration

* Drop model_kwargs

* Docstring improvements

* Add base class for all torchgeo trainers

* Add configure_* methods for losses/metrics/models

* init must come first

* More type hints"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2023-05-29T16:28:36Z,"Test fewer models in trainers to avoid exceeding RAM (#1377)

* Stop the madness

* isort

* flake8

* Repeat for other trainers

* Parentheses not needed

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2023-05-14T16:01:58Z,"SSL4EO-L: add new dataset (#1332)

* SSL4EO-L: add new dataset

* Fix style tests

* Add data module

* Doc improvements

* Thematic Mapper introduced in Landsat 4"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2023-05-14T16:00:19Z,"MonkeyPatch exposed in public API in newer pytest (#1333)

* MonkeyPatch exposed in public API in newer pytest

* Fix import order"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2023-04-23T22:37:29Z,"Refactor train.py (#1237)

* add pretrain.py tested with seco100k

* refactor

* add pretrain.py tested with seco100k

* refactor

* refactor to train.py and add simclr

* revert simclr and pretrain.py changes

* revert more simclr changesg

* add refactor to configs and train.py

* add hydra.utils.instantiate import

* fix flake8

* update tests and add hydra-core to deps

* fix byol tests

* update exp name

* format

* remove evaluate.py

* add hydra-core to min tests deps

* update tests

* add trainer to configs and use lightning.Trainer insteead of pl.Trainer

* add eurosat100 test

* update train.py

* lightning.Trainer -> lightning.pytorch.Trainer

* remove omegaconf

* update hydra-core to 1.1.1 and fix mypy

* add recursive hydra config test

* update coment

* update test config

* fix tests

* add omegaconf back in

* remove hydra recursive test

* update hydra-core to 2.3.0 for ci

* Try older hydra

* Older hydra requires old omegaconf

* Try older hydra

* Try newer hydra

* Try older hydra

* Try newer hydra

* Finalize minimum dep versions

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2023-04-16T01:27:51Z,Drop Python 3.8 support (#1246)
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2023-04-15T20:51:37Z,"SSL4EO-S12: add new dataset/datamodule (#1151)

* SSL4EO-S12: add new dataset

* Style fixes

* 100% coverage

* fix mypy

* black fixes

* mypy fix

* Convert from db to power

* Don't cast to numpy

* Remove comments referring to SeCo

* SSL4EO: add extraction time

* Add RandomSeasonContrast

* Fix axes indexing

* Add datamodule

* fix tests

* mypy fixes

* fix missing import

* Fix tests

* isort fix

* Typo fix

* s2c: add B10

* Update test channels

* S2 plotting was broken

* Fix plotting

* Black fix

* Rename conf files

* Remove file introduced by bad merge

* Fix pixel size of bands

* black fix

* Better S1 plotting

---------

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2023-03-29T20:50:35Z,"Revert ""SimCLR: add new trainer (#1195)"" (#1205)

This reverts commit 39d6941d48b785988561c4f75f1132ac2049be88."
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2023-03-29T10:06:39Z,"SimCLR: add new trainer (#1195)

* SimCLR: add new trainer

* Add tests

* Support custom number of MLP layers

* Change default params, add TODOs

* Fix mypy

* Fix docs and most of tests

* Fix all tests

* Fix support for older Kornia versions

* Fix support for older Kornia versions

* Crop should be 224, not 96"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2023-03-22T12:26:45Z,Fix tests when PyTorch built with MPS support (#1188)
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2023-03-19T16:48:55Z,"Fix lightning imports (#1179)

* Fix lightning imports

* Style fixes"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2023-03-17T19:20:25Z,"SeCo/BYOL: add datamodule, RandomSeasonContrast (#1168)

* SeCo/BYOL: add datamodule, RandomSeasonContrast

* black

* Fix length, mypy

* Fix tests

* Fix float length

* Simplify length logic

* Simpler plotting

* Fix axes indexing

* Increase coverage

* Increase coverage

* CVPR prior not compatible with segmentation, but is with BYOL

* Increase coverage

* isort fix

* mypy fix"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2023-03-16T17:28:39Z,"Bump torchvision from 0.14.1 to 0.15.1 in /requirements (#1177)

* Bump torchvision from 0.14.1 to 0.15.1 in /requirements

Bumps [torchvision](https://github.com/pytorch/vision) from 0.14.1 to 0.15.1.
- [Release notes](https://github.com/pytorch/vision/releases)
- [Commits](https://github.com/pytorch/vision/compare/v0.14.1...v0.15.1)

---
updated-dependencies:
- dependency-name: torchvision
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* bump pytorch too

* Fix tests

* bump precommit

* blacken

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2023-03-16T16:14:48Z,"Bump pytorch-lightning[extra] from 1.9.4 to 2.0.0 in /requirements (#1178)

* Bump pytorch-lightning[extra] from 1.9.4 to 2.0.0 in /requirements

Bumps [pytorch-lightning[extra]](https://github.com/Lightning-AI/lightning) from 1.9.4 to 2.0.0.
- [Release notes](https://github.com/Lightning-AI/lightning/releases)
- [Commits](https://github.com/Lightning-AI/lightning/compare/1.9.4...2.0.0)

---
updated-dependencies:
- dependency-name: pytorch-lightning[extra]
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>

* Remove deprecated features

* pytorch_lightning -> lightning

* bump radiant-mlhub too

* isort fix

* lightning does not yet have public type hints

* More ignores

* blanket ignore

* blanket ignore

* Fix function typo

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2023-02-23T23:26:26Z,Trainers: refactor tests (#1132)
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2023-02-11T21:07:08Z,"Fix load_state_dict for all timm models (#1084)

* implement isaacs solution

* simple test for function

* private function but failing tests

* Fix in_channels

* Fix model

* Test real weights

* Real weights have no final layer

* Style fixes

* expand test coverage of other trainers

* revert byol image_size

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2023-01-23T22:08:17Z,"DataModules: run all data augmentation on the GPU (#992)

* DataModules: run all data augmentation on the GPU

* Passing tests

* Update BigEarthNet

* Break ChesapeakeCVPR

* Update COWC

* Update Cyclone

* Update ETCI2021

* mypy fixes

* Update FAIR1M

* Update Inria

* Update LandCoverAI

* Update LoveDA

* Update NAIP

* Update NASA

* Update OSCD

* Update RESISC45

* Update SEN12MS

* Update So2Sat

* Update SpaceNet

* Update UCMerced

* Update USAVars

* Update xview

* Remove seed

* mypy fixes

* OSCD hacks

* Add NonGeoDataModule base class

* Fixes

* Add base class to docs

* mypy fixes

* Fix several tests

* Fix Normalize

* Syntax error

* Fix bigearthnet

* Fix dtype

* Consistent kornia import

* Get regression datasets working

* Fix detection tests

* Fix some chesapeake bugs

* Fix several segmentation issues

* isort fixes

* Undo breaking change

* Remove more code duplication, standardize docstrings

* mypy fixes

* Add default augmentation

* Augmentations can be any callable

* Fix datasets tests

* Fix datamodule tests

* Fix more datamodules

* Typo fix

* Set up val_dataset even when fit

* Fix classification tests

* Fix ETCI2021

* Fix SEN12MS

* Add GeoDataModule base class

* Fix several chesapeake bugs

* Fix dtype and shape

* Fix crs/bbox issue

* Fix test dtype

* Fix unequal size stacking error

* flake8 fix

* Better checks on sampler

* Fix bug introduced in NAIP dm

* Fix chesapeake dimensions

* Add one to mask

* Fix missing imports

* Fix batch size

* Simplify augmentations

* Don't run test or predict without datasets

* Fix tests

* Allow shared dataset

* One more try

* Fix typo

* Fix another typo

* Fix Chesapeake dimensions

* Apply augmentations during sanity check too

* Don't reuse fixtures

* Increase coverage

* Fix ETCI tests

* Test predict_step

* Test all loss methods

* Simplify validation plotting

* Document new classes

* Fix plotting

* Plotting should be robust in case dataset does not contain RGB bands

* Fix flake8

* 100% coverage of trainers

* Add lightning-lite dependency

* Revert ""Add lightning-lite dependency""

This reverts commit 1df7291ae59f6257a2cabd20a6c767e178bf4f0f.

* Define our own MisconfigurationException

* Properly test new data module base classes

* Fix mistake in setup call

* ExtractTensorPatches runs into OOM errors

* Test both fast_dev_run True and False

* Fix plot methods

* Fix OSCD tests

* Fix bug with inconsistent train/val/test splits between stages

* Fix issues with images of different sizes

* Fix OSCD tests

* Fix OSCD tests

* Bad rebase

* No trainer for OSCD so no need for config

* Bad rebase

* plot: only works during validation

* Fix collation of NASA Marine Debris dataset

* flake8 fix

* Quick test

* Revert ""Quick test""

This reverts commit f465efcbef904b8a5bc2257f2800eed931c491ab.

* 56 workers is a bit excessive

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2023-01-22T22:25:49Z,"Add Multi-Weight Support API (#917)

* load pretrained weights

* change name millionaid

* restructure and additional weights

* rename sentinel1 weights

* add vit small weights

* forgot to add vit.py

* struggling with test

* wrong name failing test

* feedback on tests

* increase test coverage

* fix failing test

* fix failing test

* fix failing test and add vit tests

* fix failing vit test

* torchgeo.models.utils

* forgot utils file

* typo num channels

* nitpick docs, version torchvision

* another try min dependencies

* add documentation table

* expand pytests to test pretrained weights on tasks

* reverse changes to byol task

* add tests to init pretrained weights from config

* forgot to add the conf files

* change path

* increase test coverage

* vit tests all pass locally including slow

* now remote

* fix tests another one

* add a draft tutorial

* run black on tutorial notebook

* Tutorial typo fixes

* Lower min torch/vision versions

* Fix bad rebase

* Remove dead code

* Flake8 fixes

* Consistent in_chans

* Black fixes

* bison > yacs

* Remove one more reference

* Download modified weights from hugging face

* Add entrypoints

* Add torch.hub support

* progress arg is required

* Fix model loading for resnet18

* Add transforms, update tests

* VIT -> ViT

* add seco weights

* Fix type hints

* Link to timm docs

* Fix pydocstyle

* Try to fix timm docs link

* Fix tests

* Nuke ignores

* Ignore timm links

* Add model API methods

* Add to __init__ and document

* Test model API functions

* fix tests

* Use correct documentation link for intersphinx

* Typos

* Fix Windows tests

* meth -> func

* Explicit function scope

* weight-specific filename

* Support enums in classification trainer

* Update other trainers too

* Fix regression tests

* Fix classification tests

* Fix byol tests

* Fix types

* progress_bar is required arg

* Test weight enums

* Fix pickling

* Fix regression tests

* Improve coverage of classification tests

* Improve coverage of BYOL tests

* Update resnet table

* Update ViT table

* Update get_state_dict usage

* Remove unused YAML files

* Update table widths

* Documentation improvements

* Tweak tables

* Try to fix Windows tests

* Revert ""Try to fix Windows tests""

This reverts commit 1325b13ff779b28adcaca36725e098ae8352a1d6.

* Monkeypatch everything

* Revert ""Monkeypatch everything""

This reverts commit e3e8d7d04231f8c0a39b5accd8f3d977aa7cbab2.

* Revert ""Revert ""Monkeypatch everything""""

This reverts commit 9b27bd705b06a743c092301c36802ce6e9503898.

* Patch things not at the source

* Fix missing import

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2022-12-15T20:22:59Z,"Change BYOL task argument name and switch to timm models (#918)

* change argument name and supporrt timm

* list_models()

* encoder -> backbone

* fix failing test

* suggested changes"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2022-10-05T02:59:03Z,"add predict_step to BYOLTask (#819)

* add predict_step to BYOLTask and tests

* fixes per suggestions"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2022-06-30T17:39:03Z,"Bump torchvision from 0.12.0 to 0.13.0 in /requirements (#631)

* Bump torchvision from 0.12.0 to 0.13.0 in /requirements

Bumps [torchvision](https://github.com/pytorch/vision) from 0.12.0 to 0.13.0.
- [Release notes](https://github.com/pytorch/vision/releases)
- [Commits](https://github.com/pytorch/vision/compare/v0.12.0...v0.13.0)

---
updated-dependencies:
- dependency-name: torchvision
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* Bump PyTorch too

* mypy fixes

* Fix deprecation warning in tests

* Style fixes

* More fixes

* Bump minimum packaging

* Silence mypy

* Fix tests

* Fix tests

* Fix tests

* Improve test coverage

* Improve test coverage

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2022-06-13T17:38:17Z,"Resolve DeprecationWarnings (#567)

* Resolve DeprecationWarnings

* Fix PIL version check

* Add ignores, hide ignores

* Always specify max_epochs

* Re-add one of the ignores that was removed

* Silence ColorJitter behavior change warnings

* Fix num_workers warning on macOS

* Ignore coverage of lines missed by older pillow versions

* Fix support for pre/post versions of PIL

* Wordsmithing

* Remove unused imports"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2022-03-14T20:35:37Z,"Remove type ignores for PyTorch (#460)

* Remove type ignores for PyTorch

* Mypy fixes for pytest MonkeyPatch

* Black

* Ignore Identity

* Generic fixes

* Remove unused Generator import

* More fixes

* Fix remaining mypy errors

* More typing cleanups

* typing.OrderedDict isn't available until Python 3.7.2+

* Need Python 3.9 to build docs for fancy OrderedDict

* Fix Python 3.8 and earlier support

* Fix BigEarthNet tests

* Fix bug in ETCI 2021 tests

* Remove unused flake8 ignore

* More robust and well-documented trainer steps

* Many functions don't actually use batch_idx

* Store cast hparams in trainers"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2022-01-08T16:11:49Z,"Reorganize configuration files (#352)

* Reorganize configuration files

* Undo changes to tests/conf files"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2022-01-02T02:07:43Z,"0.2.0 release (#348)

* 0.2.0 release

* Fix notebooks

* Fix minimal dependency tests

* Fix integration tests

* Fix integration tests

* Try to avoid running GitHub Actions twice on release PRs

* Revert ""Try to avoid running GitHub Actions twice on release PRs""

This reverts commit a1ac7ab4cf923a4066098c175379b27da1799b96.

* GeoDatasets use intersection, not addition

* Adding stack_samples to benchmarks

* Fix zero division error in SEN12MS tests

* Replaces test models with dummy models (#344)

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* lc values must be < num_classes

* updated indices tutorial with latest indices

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>
Co-authored-by: isaaccorley <22203655+isaaccorley@users.noreply.github.com>"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2021-12-30T19:54:47Z,"Refactor datamodule/model testing (#329)

* Refactor RegressionTask testing

* Programmatically determine max value

* Refactor ClassificationTask testing

* Silence warnings

* Refactor SegmentationTask testing

* Fix training mappings

* Fix GeoDataset trainers

* Fix ETCI trainer fake data

* Update OSCD training data

* Get LandCoverAI tests to pass

* Fix OSCD checksum handling

* Fix NAIP-Chesapeake tests

* Fix OSCD tests

* Keep BoundingBox icy

* Fix other datamodules

* Fix chesapeake testing

* Refactor BYOLTask tests

* Style fixes

* Silence pytorch-lightning warnings

* Get coverage for Chesapeake CVPR prior

* Fix trainer tests"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2021-12-24T02:10:50Z,"Move DataModules to torchgeo.datamodules (#321)

* Move DataModules to torchgeo.datamodules

* Clean up local imports"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2021-11-07T04:57:40Z,"Trainers: split tasks into separate files, add SemanticSegmentationTask (#224)

* Trainers: split tasks into separate files

* Add SemanticSegmentationTask

* Fix doc tests

* Keep dataset-specific tasks in separate files

* Remove duplicate So2Sat trainer"
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2021-11-04T22:15:29Z,Move DataModules from torchgeo.trainers to torchgeo.datasets (#220)
github.com/microsoft/torchgeo,tests/trainers/test_byol.py,2021-10-26T21:17:50Z,"Increase coverage of trainers (#109)

* Increase coverage of trainers

* Actually make the tests work

* Updated Cyclone trainer

* Style fix in cyclone tests

* Fixing landcoverai trainer

* Moving mock log to utils

* Fixing the RESISC45 trainer and related

* Skip RESISC45 trainer tests if Windows

* Removing some stupid docstrings from the RESISC45 trainer

* Adding So2Sat trainer tests

* isort

* Adding RESISC45 test data

* Use os.path.join for paths

* Remove unused import

* Add tests for ChesapeakeCVPR trainer

* mypy fixes

* Fix most Chesapeake tests

* Fixed test batching issue in the test dataset

* Get 100% coverage of Chesapeake trainer

* use a FakeTrainer instead of pl.Trainer

* Add naive BYOL trainer tests

* Style fixes

* Add 100% test coverage for BYOL trainer

* Get 100% coverage for LandCover.ai trainer

* Simplify tests

* Add tests for NAIP + Chesapeake trainer

* Fix tests

* Add tests for checkpoint loading

* Reorganize fixtures and specify scope

* Fix various test bugs

* Mypy fixes

* Reduce patch sizes

* Test fewer possible combinations of params

* Prevent warnings in tests

* Restore missing line of coverage in So2Sat trainer

* Silence resampling warning

* Ignore difference in output classes

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>"
github.com/deepseek-ai/DreamCraft3D,threestudio/utils/dpt.py,2023-12-15T09:44:44Z,chores: rebase commits
github.com/microsoft/torchgeo,tests/trainers/test_utils.py,2024-03-03T19:39:27Z,load_state_dict: monkeypatch during testing (#1932)
github.com/microsoft/torchgeo,tests/trainers/test_utils.py,2024-02-06T09:55:15Z,"load_state_dict does not return the model (#1503)

* Update pretrained_weights.ipynb

Fixed an error in the state dict loading of the turorial and added a comment on the num_classes parameter when creating timm models.

* Update docs/tutorials/pretrained_weights.ipynb

* Update utils.py

* Import Tuple from typing
* Change return of `load_state_dict` from `model` to `Tuple[List[str], List[str]]`, matching the return of the standard PyTorch builtin function.

* Update pretrained_weights.ipynb

Remove example of loading pretrained model without prediction head (`num_classes=0`).

* Update README.md

Adapt new `load_state_dict` function.

* Mimic return type of builtin load_state_dict

* Modern type hints

* Blacken

* Try being explicit

---------

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_utils.py,2023-02-23T23:26:26Z,Trainers: refactor tests (#1132)
github.com/microsoft/torchgeo,tests/trainers/test_utils.py,2023-02-11T21:07:08Z,"Fix load_state_dict for all timm models (#1084)

* implement isaacs solution

* simple test for function

* private function but failing tests

* Fix in_channels

* Fix model

* Test real weights

* Real weights have no final layer

* Style fixes

* expand test coverage of other trainers

* revert byol image_size

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_utils.py,2022-12-15T20:22:59Z,"Change BYOL task argument name and switch to timm models (#918)

* change argument name and supporrt timm

* list_models()

* encoder -> backbone

* fix failing test

* suggested changes"
github.com/microsoft/torchgeo,tests/trainers/test_utils.py,2022-12-04T19:54:25Z,"Change ""classification_model"" to ""model"" (#916)

* name change

* fix failing test

* expose all available timm models

* chmod

* imagenet pretrained flag

* remove extra

* docstring list_models"
github.com/microsoft/torchgeo,tests/trainers/test_utils.py,2022-03-14T20:35:37Z,"Remove type ignores for PyTorch (#460)

* Remove type ignores for PyTorch

* Mypy fixes for pytest MonkeyPatch

* Black

* Ignore Identity

* Generic fixes

* Remove unused Generator import

* More fixes

* Fix remaining mypy errors

* More typing cleanups

* typing.OrderedDict isn't available until Python 3.7.2+

* Need Python 3.9 to build docs for fancy OrderedDict

* Fix Python 3.8 and earlier support

* Fix BigEarthNet tests

* Fix bug in ETCI 2021 tests

* Remove unused flake8 ignore

* More robust and well-documented trainer steps

* Many functions don't actually use batch_idx

* Store cast hparams in trainers"
github.com/microsoft/torchgeo,tests/trainers/test_utils.py,2022-01-02T02:07:43Z,"0.2.0 release (#348)

* 0.2.0 release

* Fix notebooks

* Fix minimal dependency tests

* Fix integration tests

* Fix integration tests

* Try to avoid running GitHub Actions twice on release PRs

* Revert ""Try to avoid running GitHub Actions twice on release PRs""

This reverts commit a1ac7ab4cf923a4066098c175379b27da1799b96.

* GeoDatasets use intersection, not addition

* Adding stack_samples to benchmarks

* Fix zero division error in SEN12MS tests

* Replaces test models with dummy models (#344)

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* lc values must be < num_classes

* updated indices tutorial with latest indices

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>
Co-authored-by: isaaccorley <22203655+isaaccorley@users.noreply.github.com>"
github.com/microsoft/torchgeo,tests/trainers/test_utils.py,2022-01-01T20:14:19Z,"Remove dataset-specific trainers (#286)

* Remove dataset-specific trainers

* Collation functions will be new in 0.2.0

* Clarify arg docstring

* Style fixes

* Remove files forgotten in rebase

* Fix bug in unbind_samples, add tests

* Fix bugs in datamodule augmentations

* Increase coverage for datamodules

* Fix bugs in logger plotting, properly test

* Fix tests

* Increase coverage of trainers

* Use datamodule plot instead of dataset plot

* Skip datamodules without tests

* Plot predictions

* Fix ClassificationTask tests

* Fix SemanticSegmentationTask tests

* EAFP -> LBYL

* Ensure that tensors are on the CPU before plotting"
github.com/microsoft/torchgeo,tests/trainers/test_utils.py,2021-11-03T22:34:33Z,"Adding timm models to the classification task and refactoring (#210)

* Adding support for VGG models in the classification task
Refactoring the logic for replacing the first conv layer in a network

* Fix formatting

* Testing the stuff

* mypy with torch is such a waste of time

* Update torchgeo/trainers/utils.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/trainers/utils.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Adding timm dependency

* Incorporate timm into ClassificationTask

* Fix tests?

* Formatting

* Allow for overriding stride and padding in `reinit_initial_conv_layer`

* Putting back some stuff I accidentally overwrote in the rebase

* Bug

* Format

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_utils.py,2021-10-26T21:17:50Z,"Increase coverage of trainers (#109)

* Increase coverage of trainers

* Actually make the tests work

* Updated Cyclone trainer

* Style fix in cyclone tests

* Fixing landcoverai trainer

* Moving mock log to utils

* Fixing the RESISC45 trainer and related

* Skip RESISC45 trainer tests if Windows

* Removing some stupid docstrings from the RESISC45 trainer

* Adding So2Sat trainer tests

* isort

* Adding RESISC45 test data

* Use os.path.join for paths

* Remove unused import

* Add tests for ChesapeakeCVPR trainer

* mypy fixes

* Fix most Chesapeake tests

* Fixed test batching issue in the test dataset

* Get 100% coverage of Chesapeake trainer

* use a FakeTrainer instead of pl.Trainer

* Add naive BYOL trainer tests

* Style fixes

* Add 100% test coverage for BYOL trainer

* Get 100% coverage for LandCover.ai trainer

* Simplify tests

* Add tests for NAIP + Chesapeake trainer

* Fix tests

* Add tests for checkpoint loading

* Reorganize fixtures and specify scope

* Fix various test bugs

* Mypy fixes

* Reduce patch sizes

* Test fewer possible combinations of params

* Prevent warnings in tests

* Restore missing line of coverage in So2Sat trainer

* Silence resampling warning

* Ignore difference in output classes

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_utils.py,2021-10-17T04:51:57Z,add tests for trainer utils (#200)
github.com/openvinotoolkit/openvino,tests/model_hub_tests/pytorch/test_timm.py,2024-03-01T10:59:32Z,"Fix timm filter and run timm models in parallel (#23116)

### Details:
 - *Update list of timm models to comply with new version of timm*
- *Run timm models and torchvision models in trace and export model in
parallel*

### Tickets:
 - *ticket-id*"
github.com/openvinotoolkit/openvino,tests/model_hub_tests/pytorch/test_timm.py,2024-02-26T12:41:09Z,"[TF FE] Test TF Hugging Face models (#22970)

### Details:
 - TF Hugging face tests

### Tickets:
 - 132904

---------

Co-authored-by: Roman Kazantsev <roman.kazantsev@intel.com>"
github.com/Harry24k/adversarial-attacks-pytorch,robustbench/utils.py,2023-10-20T02:43:38Z,include robustbench
github.com/Harry24k/adversarial-attacks-pytorch,robustbench/utils.py,2023-10-20T02:29:45Z,delete robustbench
github.com/Harry24k/adversarial-attacks-pytorch,robustbench/utils.py,2022-09-30T06:37:30Z,Merge robustbench
github.com/microsoft/torchgeo,tests/trainers/test_simclr.py,2023-09-30T21:43:39Z,"0.5.0 release (#1604)

* 0.5.0 release

* Fix caching hash

* Warnings not raised because not final layer

* Skip tests that require optional deps

* Isort fixes

* Fix? ChesapeakeCVPR tests

* Hack to avoid GeoDataset bug"
github.com/microsoft/torchgeo,tests/trainers/test_simclr.py,2023-09-27T17:11:52Z,"Add command line script (#1559)

* Add command line script

* Label PRs correctly

* Flake8 fix

* Add callbacks

* Update all conf files

* Enforce class of model/data

* Update BYOL tests

* Update all tests

* Use default num workers: 0

* Variable interpolation only supported by omegaconf backend

* Fix regression tests

* Ensure that jsonargparse is installed during testing

* Bump minimimum lightning version

* Workaround for lightning/jsonargparse bugs

* Ignore Python 3.9 warning message

* Add test coverage for __main__.py

* Increase coverage of PixelwiseRegressionTask

* jsonargparse bug fixed in latest release

* Revert ""jsonargparse bug fixed in latest release""

This reverts commit 4f38cdfca30d792485af49a6245ea9929a3b45c5.

* Use default logging frequency

* Ensure that metrics are actually logged

* Fix ObjectDetectionTask logging

* Ignore type errors

* Not all need to be ignored"
github.com/microsoft/torchgeo,tests/trainers/test_simclr.py,2023-09-11T22:05:28Z,"Refactor trainers (#1541)

* Refactor trainers

* Update conf files

* Fix pydocstyle

* Add scheduler monitor

* Update conf files

* Fix BYOL backbone

* Remove broken configure_optimizers out type

* Fix type hints

* No casts

* Increase test coverage

* Better documentation of supported models

* Remove unimportant configuration

* Remove unimportant configuration

* Drop model_kwargs

* Docstring improvements

* Add base class for all torchgeo trainers

* Add configure_* methods for losses/metrics/models

* init must come first

* More type hints"
github.com/microsoft/torchgeo,tests/trainers/test_simclr.py,2023-05-29T16:28:36Z,"Test fewer models in trainers to avoid exceeding RAM (#1377)

* Stop the madness

* isort

* flake8

* Repeat for other trainers

* Parentheses not needed

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_simclr.py,2023-05-14T16:01:58Z,"SSL4EO-L: add new dataset (#1332)

* SSL4EO-L: add new dataset

* Fix style tests

* Add data module

* Doc improvements

* Thematic Mapper introduced in Landsat 4"
github.com/microsoft/torchgeo,tests/trainers/test_simclr.py,2023-05-14T16:00:19Z,"MonkeyPatch exposed in public API in newer pytest (#1333)

* MonkeyPatch exposed in public API in newer pytest

* Fix import order"
github.com/microsoft/torchgeo,tests/trainers/test_simclr.py,2023-05-11T16:40:53Z,"Add SimCLR trainer (#1252)

* add simclr and tests

* add lightly to reqs

* pyupgrade

* Copy things from prior implementation

* Add SimCLR v2 projection head

* Remove kwargs

* Call __init__ explicitly

* Fix mypy and docs

* Can't test newer setuptools

* Default to output dim of model

* Add memory bank

* Ignore erroneous warning

* Fix configs, test SSL4EO

* Fix a few layer bugs

* mypy fixes

* kernel_size must be an integer

* Fix SeCo in_channels

* Get more coverage

* Bump min lightly

* Default logging

* Test weights

* mypy fix

* Grab max_epochs from the trainer

* max_epochs param removed

* Use num_features

* Remove classification head

* SimCLR uses LARS, with Adam as a backup

* Add warnings

* Grab num features directly from model

* Check if identity

* Match timm model design

* Capture warnings

* Fix tests

* Increase coverage

* Fix method name

* More typos

* Escape regex

* Newer setuptools now supported

* New batch norm for every layer

* Rename forward arg

* Clarify usage of weights parameter

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>

* Fix flake8

* Check it

* Use hydra

* Track average L2 normed stdev over features

* SimCLR decays lr to 0

* Add lr warmup

* Fix version access

* Fix LinearLR

* isinstance supports tuples

* Comment capitalization

* Require lightly 1.4.3+

* Require lightly 1.4.3+

* Bump lightly version

* Add RandomGrayscale

* Flake8 fixes

* Placate pydocstyle

* Clarify docs

* Pass correct weights

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>
Co-authored-by: Caleb Robinson <calebrob6@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_simclr.py,2023-03-29T20:50:35Z,"Revert ""SimCLR: add new trainer (#1195)"" (#1205)

This reverts commit 39d6941d48b785988561c4f75f1132ac2049be88."
github.com/microsoft/torchgeo,tests/trainers/test_simclr.py,2023-03-29T10:06:39Z,"SimCLR: add new trainer (#1195)

* SimCLR: add new trainer

* Add tests

* Support custom number of MLP layers

* Change default params, add TODOs

* Fix mypy

* Fix docs and most of tests

* Fix all tests

* Fix support for older Kornia versions

* Fix support for older Kornia versions

* Crop should be 224, not 96"
github.com/invictus717/MetaTransformer,X-Ray/train.py,2023-07-28T15:39:22Z,Release code for X-Ray and hyper-spectrum
github.com/VainF/Torch-Pruning,examples/transformers/finetune.py,2023-09-20T11:51:50Z,Support deit pruning
github.com/VainF/Torch-Pruning,examples/transformers/finetune.py,2023-09-12T09:13:03Z,Add finetuning code for Huggingface ViT
github.com/VainF/Torch-Pruning,examples/transformers/finetune.py,2023-09-10T16:38:33Z,Add latency test for ViT
github.com/VainF/Torch-Pruning,examples/transformers/finetune.py,2023-09-09T12:50:34Z,Fixed a bug in image transformation
github.com/VainF/Torch-Pruning,examples/transformers/finetune.py,2023-09-08T06:44:45Z,Update training sctips for ViT
github.com/VainF/Torch-Pruning,examples/transformers/finetune.py,2023-09-06T16:42:19Z,Pruning & Finetuning examples for ViT
github.com/baaivision/EVA,EVA-CLIP/rei/eva_clip/timm_model.py,2023-03-21T10:15:37Z,add EVA-CLIP
github.com/qubvel/segmentation_models.pytorch,segmentation_models_pytorch/encoders/timm_universal.py,2022-07-29T08:28:48Z,Update black formatting
github.com/qubvel/segmentation_models.pytorch,segmentation_models_pytorch/encoders/timm_universal.py,2022-01-30T21:49:18Z,Add check for input shape (#549)
github.com/qubvel/segmentation_models.pytorch,segmentation_models_pytorch/encoders/timm_universal.py,2022-01-05T20:49:07Z,"Add black and flake8 (#532)

* Add black and flake8
* Fix test losses
* Fix pre-commit 
* Update README"
github.com/qubvel/segmentation_models.pytorch,segmentation_models_pytorch/encoders/timm_universal.py,2021-07-20T13:14:45Z,Fix _out_channels for universal timm encoder
github.com/qubvel/segmentation_models.pytorch,segmentation_models_pytorch/encoders/timm_universal.py,2021-07-05T18:33:43Z,Timm universal encoder (#433)
github.com/VainF/Torch-Pruning,examples/latency/measure_latency.py,2023-12-29T14:46:32Z,Rename
github.com/AIGC-Audio/AudioGPT,text_to_audio/Make_An_Audio/ldm/modules/encoders/open_clap/timm_model.py,2023-04-30T15:20:22Z,update
github.com/DLLXW/data-science-competition,kaggle/shopee/model.py,2021-05-30T08:36:05Z,wechat
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-12-07T23:00:40Z,RGBBandsMissingError (#1737)
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-09-30T21:43:39Z,"0.5.0 release (#1604)

* 0.5.0 release

* Fix caching hash

* Warnings not raised because not final layer

* Skip tests that require optional deps

* Isort fixes

* Fix? ChesapeakeCVPR tests

* Hack to avoid GeoDataset bug"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-09-27T17:11:52Z,"Add command line script (#1559)

* Add command line script

* Label PRs correctly

* Flake8 fix

* Add callbacks

* Update all conf files

* Enforce class of model/data

* Update BYOL tests

* Update all tests

* Use default num workers: 0

* Variable interpolation only supported by omegaconf backend

* Fix regression tests

* Ensure that jsonargparse is installed during testing

* Bump minimimum lightning version

* Workaround for lightning/jsonargparse bugs

* Ignore Python 3.9 warning message

* Add test coverage for __main__.py

* Increase coverage of PixelwiseRegressionTask

* jsonargparse bug fixed in latest release

* Revert ""jsonargparse bug fixed in latest release""

This reverts commit 4f38cdfca30d792485af49a6245ea9929a3b45c5.

* Use default logging frequency

* Ensure that metrics are actually logged

* Fix ObjectDetectionTask logging

* Ignore type errors

* Not all need to be ignored"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-09-11T22:05:28Z,"Refactor trainers (#1541)

* Refactor trainers

* Update conf files

* Fix pydocstyle

* Add scheduler monitor

* Update conf files

* Fix BYOL backbone

* Remove broken configure_optimizers out type

* Fix type hints

* No casts

* Increase test coverage

* Better documentation of supported models

* Remove unimportant configuration

* Remove unimportant configuration

* Drop model_kwargs

* Docstring improvements

* Add base class for all torchgeo trainers

* Add configure_* methods for losses/metrics/models

* init must come first

* More type hints"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-05-29T16:28:36Z,"Test fewer models in trainers to avoid exceeding RAM (#1377)

* Stop the madness

* isort

* flake8

* Repeat for other trainers

* Parentheses not needed

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-05-14T16:00:19Z,"MonkeyPatch exposed in public API in newer pytest (#1333)

* MonkeyPatch exposed in public API in newer pytest

* Fix import order"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-05-04T02:08:45Z,add support to pretrained encoder weights (#1306)
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-04-26T12:00:00Z,freeze_backbone and freeze_decoder in Trainers (#1290)
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-04-25T14:05:10Z,Add PixelwiseRegressionTask (#1241)
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-04-23T22:37:29Z,"Refactor train.py (#1237)

* add pretrain.py tested with seco100k

* refactor

* add pretrain.py tested with seco100k

* refactor

* refactor to train.py and add simclr

* revert simclr and pretrain.py changes

* revert more simclr changesg

* add refactor to configs and train.py

* add hydra.utils.instantiate import

* fix flake8

* update tests and add hydra-core to deps

* fix byol tests

* update exp name

* format

* remove evaluate.py

* add hydra-core to min tests deps

* update tests

* add trainer to configs and use lightning.Trainer insteead of pl.Trainer

* add eurosat100 test

* update train.py

* lightning.Trainer -> lightning.pytorch.Trainer

* remove omegaconf

* update hydra-core to 1.1.1 and fix mypy

* add recursive hydra config test

* update coment

* update test config

* fix tests

* add omegaconf back in

* remove hydra recursive test

* update hydra-core to 2.3.0 for ci

* Try older hydra

* Older hydra requires old omegaconf

* Try older hydra

* Try newer hydra

* Try older hydra

* Try newer hydra

* Finalize minimum dep versions

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-04-20T15:11:07Z,"Add SustainBench Crop Yield Dataset (#1253)

* dataloading working

* add datamodule

* add dataset and module to docs

* add unit tests

* version added datamodule

* version in wrong place

* add test for datamodule

* fill coverage gap

* forgot conf test file datamodule

* fix docs

* fix inconsistent naming

* remove prediction from file names

* suggested changes

* Fix typo

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-04-19T19:27:24Z,"Add SKIPP'D Dataset (#1267)

* add dataset

* add datamodule

* add unit tests

* add docs

* requested changes

* requested changes

* wrong args in docs

* args order"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-04-16T01:27:51Z,Drop Python 3.8 support (#1246)
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-04-12T13:06:40Z,"Revert ""Tests: downloaded weights have different number of classes (#1229)"" (#1233)"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-04-11T20:00:22Z,Tests: downloaded weights have different number of classes (#1229)
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-03-22T12:26:45Z,Fix tests when PyTorch built with MPS support (#1188)
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-03-19T16:48:55Z,"Fix lightning imports (#1179)

* Fix lightning imports

* Style fixes"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-03-16T17:28:39Z,"Bump torchvision from 0.14.1 to 0.15.1 in /requirements (#1177)

* Bump torchvision from 0.14.1 to 0.15.1 in /requirements

Bumps [torchvision](https://github.com/pytorch/vision) from 0.14.1 to 0.15.1.
- [Release notes](https://github.com/pytorch/vision/releases)
- [Commits](https://github.com/pytorch/vision/compare/v0.14.1...v0.15.1)

---
updated-dependencies:
- dependency-name: torchvision
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* bump pytorch too

* Fix tests

* bump precommit

* blacken

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-03-16T16:14:48Z,"Bump pytorch-lightning[extra] from 1.9.4 to 2.0.0 in /requirements (#1178)

* Bump pytorch-lightning[extra] from 1.9.4 to 2.0.0 in /requirements

Bumps [pytorch-lightning[extra]](https://github.com/Lightning-AI/lightning) from 1.9.4 to 2.0.0.
- [Release notes](https://github.com/Lightning-AI/lightning/releases)
- [Commits](https://github.com/Lightning-AI/lightning/compare/1.9.4...2.0.0)

---
updated-dependencies:
- dependency-name: pytorch-lightning[extra]
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>

* Remove deprecated features

* pytorch_lightning -> lightning

* bump radiant-mlhub too

* isort fix

* lightning does not yet have public type hints

* More ignores

* blanket ignore

* blanket ignore

* Fix function typo

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-02-23T23:26:26Z,Trainers: refactor tests (#1132)
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-02-11T21:07:08Z,"Fix load_state_dict for all timm models (#1084)

* implement isaacs solution

* simple test for function

* private function but failing tests

* Fix in_channels

* Fix model

* Test real weights

* Real weights have no final layer

* Style fixes

* expand test coverage of other trainers

* revert byol image_size

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-01-23T22:08:17Z,"DataModules: run all data augmentation on the GPU (#992)

* DataModules: run all data augmentation on the GPU

* Passing tests

* Update BigEarthNet

* Break ChesapeakeCVPR

* Update COWC

* Update Cyclone

* Update ETCI2021

* mypy fixes

* Update FAIR1M

* Update Inria

* Update LandCoverAI

* Update LoveDA

* Update NAIP

* Update NASA

* Update OSCD

* Update RESISC45

* Update SEN12MS

* Update So2Sat

* Update SpaceNet

* Update UCMerced

* Update USAVars

* Update xview

* Remove seed

* mypy fixes

* OSCD hacks

* Add NonGeoDataModule base class

* Fixes

* Add base class to docs

* mypy fixes

* Fix several tests

* Fix Normalize

* Syntax error

* Fix bigearthnet

* Fix dtype

* Consistent kornia import

* Get regression datasets working

* Fix detection tests

* Fix some chesapeake bugs

* Fix several segmentation issues

* isort fixes

* Undo breaking change

* Remove more code duplication, standardize docstrings

* mypy fixes

* Add default augmentation

* Augmentations can be any callable

* Fix datasets tests

* Fix datamodule tests

* Fix more datamodules

* Typo fix

* Set up val_dataset even when fit

* Fix classification tests

* Fix ETCI2021

* Fix SEN12MS

* Add GeoDataModule base class

* Fix several chesapeake bugs

* Fix dtype and shape

* Fix crs/bbox issue

* Fix test dtype

* Fix unequal size stacking error

* flake8 fix

* Better checks on sampler

* Fix bug introduced in NAIP dm

* Fix chesapeake dimensions

* Add one to mask

* Fix missing imports

* Fix batch size

* Simplify augmentations

* Don't run test or predict without datasets

* Fix tests

* Allow shared dataset

* One more try

* Fix typo

* Fix another typo

* Fix Chesapeake dimensions

* Apply augmentations during sanity check too

* Don't reuse fixtures

* Increase coverage

* Fix ETCI tests

* Test predict_step

* Test all loss methods

* Simplify validation plotting

* Document new classes

* Fix plotting

* Plotting should be robust in case dataset does not contain RGB bands

* Fix flake8

* 100% coverage of trainers

* Add lightning-lite dependency

* Revert ""Add lightning-lite dependency""

This reverts commit 1df7291ae59f6257a2cabd20a6c767e178bf4f0f.

* Define our own MisconfigurationException

* Properly test new data module base classes

* Fix mistake in setup call

* ExtractTensorPatches runs into OOM errors

* Test both fast_dev_run True and False

* Fix plot methods

* Fix OSCD tests

* Fix bug with inconsistent train/val/test splits between stages

* Fix issues with images of different sizes

* Fix OSCD tests

* Fix OSCD tests

* Bad rebase

* No trainer for OSCD so no need for config

* Bad rebase

* plot: only works during validation

* Fix collation of NASA Marine Debris dataset

* flake8 fix

* Quick test

* Revert ""Quick test""

This reverts commit f465efcbef904b8a5bc2257f2800eed931c491ab.

* 56 workers is a bit excessive

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2023-01-22T22:25:49Z,"Add Multi-Weight Support API (#917)

* load pretrained weights

* change name millionaid

* restructure and additional weights

* rename sentinel1 weights

* add vit small weights

* forgot to add vit.py

* struggling with test

* wrong name failing test

* feedback on tests

* increase test coverage

* fix failing test

* fix failing test

* fix failing test and add vit tests

* fix failing vit test

* torchgeo.models.utils

* forgot utils file

* typo num channels

* nitpick docs, version torchvision

* another try min dependencies

* add documentation table

* expand pytests to test pretrained weights on tasks

* reverse changes to byol task

* add tests to init pretrained weights from config

* forgot to add the conf files

* change path

* increase test coverage

* vit tests all pass locally including slow

* now remote

* fix tests another one

* add a draft tutorial

* run black on tutorial notebook

* Tutorial typo fixes

* Lower min torch/vision versions

* Fix bad rebase

* Remove dead code

* Flake8 fixes

* Consistent in_chans

* Black fixes

* bison > yacs

* Remove one more reference

* Download modified weights from hugging face

* Add entrypoints

* Add torch.hub support

* progress arg is required

* Fix model loading for resnet18

* Add transforms, update tests

* VIT -> ViT

* add seco weights

* Fix type hints

* Link to timm docs

* Fix pydocstyle

* Try to fix timm docs link

* Fix tests

* Nuke ignores

* Ignore timm links

* Add model API methods

* Add to __init__ and document

* Test model API functions

* fix tests

* Use correct documentation link for intersphinx

* Typos

* Fix Windows tests

* meth -> func

* Explicit function scope

* weight-specific filename

* Support enums in classification trainer

* Update other trainers too

* Fix regression tests

* Fix classification tests

* Fix byol tests

* Fix types

* progress_bar is required arg

* Test weight enums

* Fix pickling

* Fix regression tests

* Improve coverage of classification tests

* Improve coverage of BYOL tests

* Update resnet table

* Update ViT table

* Update get_state_dict usage

* Remove unused YAML files

* Update table widths

* Documentation improvements

* Tweak tables

* Try to fix Windows tests

* Revert ""Try to fix Windows tests""

This reverts commit 1325b13ff779b28adcaca36725e098ae8352a1d6.

* Monkeypatch everything

* Revert ""Monkeypatch everything""

This reverts commit e3e8d7d04231f8c0a39b5accd8f3d977aa7cbab2.

* Revert ""Revert ""Monkeypatch everything""""

This reverts commit 9b27bd705b06a743c092301c36802ce6e9503898.

* Patch things not at the source

* Fix missing import

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2022-12-07T16:12:27Z,"Change regression task to timm support (#854)

* change regression task to timm support

* add docstring about available models

* typo again

* failing test

* change name

* change name

* expose all available models

* docstring list_models

* Update torchgeo/trainers/regression.py

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2022-10-18T18:25:09Z,Add plot method to (most) DataModules (#814)
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2022-10-14T17:59:22Z,"Datamodule naming TropicalCyclone (#846)

* name change for consistency

* name change for consistency

* flake8 style correction

* flake8 style correction

* requested changes"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2022-10-04T21:21:57Z,add predict_step to RegressionTask and tests (#818)
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2022-08-14T22:58:45Z,"Add COWC counting experiment (#706)

* Add COWC counting experiment

* Fix tests

* Search event logs for all versions

* Add seed experiments"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2022-06-13T17:38:17Z,"Resolve DeprecationWarnings (#567)

* Resolve DeprecationWarnings

* Fix PIL version check

* Add ignores, hide ignores

* Always specify max_epochs

* Re-add one of the ignores that was removed

* Silence ColorJitter behavior change warnings

* Fix num_workers warning on macOS

* Ignore coverage of lines missed by older pillow versions

* Fix support for pre/post versions of PIL

* Wordsmithing

* Remove unused imports"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2022-03-30T02:39:19Z,Fix PyTorch Lightning 1.6 type hints (#487)
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2022-01-08T16:11:49Z,"Reorganize configuration files (#352)

* Reorganize configuration files

* Undo changes to tests/conf files"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2022-01-02T02:07:43Z,"0.2.0 release (#348)

* 0.2.0 release

* Fix notebooks

* Fix minimal dependency tests

* Fix integration tests

* Fix integration tests

* Try to avoid running GitHub Actions twice on release PRs

* Revert ""Try to avoid running GitHub Actions twice on release PRs""

This reverts commit a1ac7ab4cf923a4066098c175379b27da1799b96.

* GeoDatasets use intersection, not addition

* Adding stack_samples to benchmarks

* Fix zero division error in SEN12MS tests

* Replaces test models with dummy models (#344)

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* lc values must be < num_classes

* updated indices tutorial with latest indices

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>
Co-authored-by: isaaccorley <22203655+isaaccorley@users.noreply.github.com>"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2022-01-01T20:14:19Z,"Remove dataset-specific trainers (#286)

* Remove dataset-specific trainers

* Collation functions will be new in 0.2.0

* Clarify arg docstring

* Style fixes

* Remove files forgotten in rebase

* Fix bug in unbind_samples, add tests

* Fix bugs in datamodule augmentations

* Increase coverage for datamodules

* Fix bugs in logger plotting, properly test

* Fix tests

* Increase coverage of trainers

* Use datamodule plot instead of dataset plot

* Skip datamodules without tests

* Plot predictions

* Fix ClassificationTask tests

* Fix SemanticSegmentationTask tests

* EAFP -> LBYL

* Ensure that tensors are on the CPU before plotting"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2021-12-30T19:54:47Z,"Refactor datamodule/model testing (#329)

* Refactor RegressionTask testing

* Programmatically determine max value

* Refactor ClassificationTask testing

* Silence warnings

* Refactor SegmentationTask testing

* Fix training mappings

* Fix GeoDataset trainers

* Fix ETCI trainer fake data

* Update OSCD training data

* Get LandCoverAI tests to pass

* Fix OSCD checksum handling

* Fix NAIP-Chesapeake tests

* Fix OSCD tests

* Keep BoundingBox icy

* Fix other datamodules

* Fix chesapeake testing

* Refactor BYOLTask tests

* Style fixes

* Silence pytorch-lightning warnings

* Get coverage for Chesapeake CVPR prior

* Fix trainer tests"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2021-12-24T02:10:50Z,"Move DataModules to torchgeo.datamodules (#321)

* Move DataModules to torchgeo.datamodules

* Clean up local imports"
github.com/microsoft/torchgeo,tests/trainers/test_regression.py,2021-11-07T04:57:40Z,"Trainers: split tasks into separate files, add SemanticSegmentationTask (#224)

* Trainers: split tasks into separate files

* Add SemanticSegmentationTask

* Fix doc tests

* Keep dataset-specific tasks in separate files

* Remove duplicate So2Sat trainer"
github.com/DLLXW/data-science-competition,kaggle/shopee/debug.py,2021-05-30T08:36:05Z,wechat
github.com/ali-vilab/AnyDoor,ldm/modules/midas/midas/vit.py,2023-12-17T05:48:26Z,init
github.com/DLLXW/data-science-competition,else/data_lake/car/net.py,2022-06-14T09:17:35Z,update
github.com/isl-org/DPT,dpt/vit.py,2021-04-03T09:33:55Z,timm compatibility
github.com/isl-org/DPT,dpt/vit.py,2021-03-23T22:45:16Z,refactor
github.com/isl-org/DPT,dpt/vit.py,2021-03-23T22:41:50Z,Attention visualization
github.com/isl-org/DPT,dpt/vit.py,2021-03-22T15:53:39Z,new pallete function
github.com/isl-org/DPT,dpt/vit.py,2021-03-22T14:07:26Z,refactor into DPT
github.com/isl-org/DPT,dpt/vit.py,2021-03-22T13:05:01Z,blacken files
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2024-02-25T22:14:22Z,"Correct behavior of ignore_index for JaccardLoss (#1898)

* Correct behavior of ignore_index for JaccardLoss

* Remove UserWarning and related test

* pass flake8

* Chesapeake should ignore 0 class

* ignore yourself

* Tests

* Don't use sets

* Linting

* Commenting

* Change name of variable

* bruh"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2023-12-07T23:00:40Z,RGBBandsMissingError (#1737)
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2023-11-25T21:19:20Z,"Add ChaBuD Dataset (#1259)

* add chabud dataset and datamodule

* add clarifying comment for min/max

* fix wrong channel plotting

* cast image as float

* sort uuids

* add chabud dataset and datamodule

* add clarifying comment for min/max

* fix wrong channel plotting

* cast image as float

* sort uuids

* add chabud dataset and datamodule

* add clarifying comment for min/max

* fix wrong channel plotting

* cast image as float

* sort uuids

* update docs

* update test data

* fix order of operations

* update chabud config

* update per suggestions

* fix mypy error

* update to new test config format

* update version added

* use DatasetNotFoundError

* fix tests

* updates per suggestions

* Matching bands/mean/std

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2023-09-27T17:11:52Z,"Add command line script (#1559)

* Add command line script

* Label PRs correctly

* Flake8 fix

* Add callbacks

* Update all conf files

* Enforce class of model/data

* Update BYOL tests

* Update all tests

* Use default num workers: 0

* Variable interpolation only supported by omegaconf backend

* Fix regression tests

* Ensure that jsonargparse is installed during testing

* Bump minimimum lightning version

* Workaround for lightning/jsonargparse bugs

* Ignore Python 3.9 warning message

* Add test coverage for __main__.py

* Increase coverage of PixelwiseRegressionTask

* jsonargparse bug fixed in latest release

* Revert ""jsonargparse bug fixed in latest release""

This reverts commit 4f38cdfca30d792485af49a6245ea9929a3b45c5.

* Use default logging frequency

* Ensure that metrics are actually logged

* Fix ObjectDetectionTask logging

* Ignore type errors

* Not all need to be ignored"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2023-09-11T22:05:28Z,"Refactor trainers (#1541)

* Refactor trainers

* Update conf files

* Fix pydocstyle

* Add scheduler monitor

* Update conf files

* Fix BYOL backbone

* Remove broken configure_optimizers out type

* Fix type hints

* No casts

* Increase test coverage

* Better documentation of supported models

* Remove unimportant configuration

* Remove unimportant configuration

* Drop model_kwargs

* Docstring improvements

* Add base class for all torchgeo trainers

* Add configure_* methods for losses/metrics/models

* init must come first

* More type hints"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2023-07-07T22:30:16Z,"fix: Support tensors and arrays for class_weight (#1413)

Avoids ambiguous truth value ValueError when the class_weight input
parameter is either a PyTorch tensor or a NumPy array.

Includes new tests for SemanticSegmentationTask's class_weight
parameter."
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2023-05-29T16:28:36Z,"Test fewer models in trainers to avoid exceeding RAM (#1377)

* Stop the madness

* isort

* flake8

* Repeat for other trainers

* Parentheses not needed

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2023-05-25T08:12:48Z,"SSL4EO Landsat Downstream Dataset/module CDL, NLCD (#1338)

* outline downstream dataset

* revert commit

* outline of downstream dataset

* some work

* add test data

* run black

* add plot method

* new naming scheme

* fix unit tests

* add datamodule

* requested changes

* remove comments

* EOF

* battle against red circle

* fix failing tests

* add train val test split

* huggingface support

* fix failing trainer test

* running version of datamodule with trainer

* requested changes

* rename datamodules

* add colormap

* outline downstream dataset

* revert commit

* requested changes

* pass tests

* requested changes"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2023-05-14T16:00:19Z,"MonkeyPatch exposed in public API in newer pytest (#1333)

* MonkeyPatch exposed in public API in newer pytest

* Fix import order"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2023-05-03T21:10:20Z,"Segmentation Pretrained Weights (#1046)

* add pretrained weights loading for the segmentation encoder

* Updating config files to use new pretrained arg style

* fix loading weights enum to encoder

* I have no idea what I'm doing with these tests

* tests passing

* update docstring

* add the tests back in dummy

* add tests

---------

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2023-04-26T12:00:00Z,freeze_backbone and freeze_decoder in Trainers (#1290)
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2023-04-23T22:37:29Z,"Refactor train.py (#1237)

* add pretrain.py tested with seco100k

* refactor

* add pretrain.py tested with seco100k

* refactor

* refactor to train.py and add simclr

* revert simclr and pretrain.py changes

* revert more simclr changesg

* add refactor to configs and train.py

* add hydra.utils.instantiate import

* fix flake8

* update tests and add hydra-core to deps

* fix byol tests

* update exp name

* format

* remove evaluate.py

* add hydra-core to min tests deps

* update tests

* add trainer to configs and use lightning.Trainer insteead of pl.Trainer

* add eurosat100 test

* update train.py

* lightning.Trainer -> lightning.pytorch.Trainer

* remove omegaconf

* update hydra-core to 1.1.1 and fix mypy

* add recursive hydra config test

* update coment

* update test config

* fix tests

* add omegaconf back in

* remove hydra recursive test

* update hydra-core to 2.3.0 for ci

* Try older hydra

* Older hydra requires old omegaconf

* Try older hydra

* Try newer hydra

* Try older hydra

* Try newer hydra

* Finalize minimum dep versions

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2023-04-16T01:27:51Z,Drop Python 3.8 support (#1246)
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2023-04-12T20:29:13Z,"L7 Irish: add new dataset/datamodule (#1197)

* Landsat 7 Irisih: add new dataset/datamodule
adding [Landsat 7 Cloud Cover Assessment Validation Data](https://landsat.usgs.gov/landsat-7-cloud-cover-assessment-validation-data)
from USGS.

The files are .tif format. The naming pattern is slightly different from the Landsat class. Thus, the customized RasterDataset class is used.

* # Changes to be committed:
#	deleted:    .DS_Store
#	deleted:    torchgeo/.DS_Store
#
# Changes not staged for commit:
#	modified:   .gitignore
#	modified:   torchgeo/datasets/l7irish.py

* # Changes to be committed:
#	modified:   .gitignore
#	modified:   torchgeo/datasets/l7irish.py

* add: test_l7irish.py and data.py
modify: .gitignore and l7irish.py

* # Changes to be committed:
#	modified:   .gitignore
#	new file:   tests/data/l7irish/data.py
#	modified:   torchgeo/datasets/l7irish.py

* modified:   tests/datasets/test_l7irish.py,
torchgeo/datasets/__init__.py,
torchgeo/datasets/l7irish.py

* added data.py, austral.tar.gz, test_l7irish.py
modified l7irish.py

* remove comments in test_l7irish.py

* resolve black and flake8 issues

* Fixed _getitem
Added l7irish to __init__
Added L7Irish details to geo_datasets.csv
Will work on datamodules/l7irish.py

* Added L7 Irish datamodule

* fix flake8 space error

* fix black test error

* chmod +x for data.py

* Update docs/api/datamodules.rst

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update docs/api/datasets.rst

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update docs/api/geo_datasets.csv

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/datasets/l7irish.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/datasets/l7irish.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Resolved minor issues in l7irish.py
Added mask assert in test_l7irish.py

* Improved _getitem and plot functions

* Added new artificial data with 5 scenes
Updated test_l7irish.py

* remove comments in l7irish.py

* resolve black, flake8, and isort errors

* add l7irish.yaml and refine test_segmentation.py

* modified l7irish.yaml

* revert a change in .gitignore

* add function test_rgb_bands_absent_plot()

* resolve black test issue

* Update torchgeo/datasets/l7irish.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/datasets/l7irish.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Updaye l7irish.py and create new test data

* update l7irish.py for style tests

* remove old test data

* Update tests/data/l7irish/data.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/datasets/l7irish.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* update data.py and l7irish.py

* update md5s, citations, masks, and thermal bands

* update mask mapping

* update formatting

* update mask path

* Update torchgeo/datasets/l7irish.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/datasets/l7irish.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update tests/data/l7irish/data.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update docs/api/geo_datasets.csv

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update tests/conf/l7irish.yaml

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* resolve issues from comments

* Update L7 Irish link

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* update mask data generation and review changes

* Fix checksums

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2023-04-05T18:28:11Z,"Add L8 Biome Dataset (#1200)

* Added varification of data

* Added getitem and plotting functions - partial

* Update torchgeo/datasets/l8biome.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Changes corresponding to draft PR

* Changed auxilliary files for dataset addition; added L8Biome datamodule

* Fixed dataset verification and download; minor changes in variable declaration

* Running linters to properly format code

* Fixing failed linter tests from previous commit

* Fixing comments from review #2

* Added script to generate artificial data in similar format as original files

* Removed dependency on existing dataset

* Fixes to the getitem function; tested with samples

* Making suggested changes; fixing mask; writing tests

* Changes to plot RGB image

* Changes to plot RGB image - running into errors related to band variables declaration

* Fixed plotting of dataset

* Added masks to artificial data generation; tested with pytest - all tests pass

* Resolving file and code formatting with linters

* Added artificial data

* Fixing lists in docstrings

* Fixing comments from review

* Added new tests

* Regenerated artificial data

* Added test for l8datamodule; linters formatting

* Fixed image generation with more rigorous check on filepath

* docstring formatting change

* Resolving CI test errors

* Added conf/yaml for datamodules test

* Fixing CI test failure bug; Changes from review; Samplers in datamodule WIP

* Added more artificial data

* Fixed yaml and datamodule changes

* Running linters to properly format code

* Reducing batch_size and length for datamodules tests

* Reduced patch size in l8biome yaml to fit within artificial data

* Declaring all samplers each time

* Reverting to stages checks for samplers

* Changed data generation file and generated data again

* Fix getitem

* Included more encompassing tests

* Adding test for RGB bands being absent; running linters

* Added check for mask in getitem test

* Changes corresponding to review

* Update torchgeo/datasets/l8biome.py

Downloading raw data directly

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update l8biome.py

* Update torchgeo/datasets/l8biome.py: Changing RGB bands order

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Change B2 band to B1

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2023-03-22T12:26:45Z,Fix tests when PyTorch built with MPS support (#1188)
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2023-03-19T16:48:55Z,"Fix lightning imports (#1179)

* Fix lightning imports

* Style fixes"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2023-03-17T19:20:25Z,"SeCo/BYOL: add datamodule, RandomSeasonContrast (#1168)

* SeCo/BYOL: add datamodule, RandomSeasonContrast

* black

* Fix length, mypy

* Fix tests

* Fix float length

* Simplify length logic

* Simpler plotting

* Fix axes indexing

* Increase coverage

* Increase coverage

* CVPR prior not compatible with segmentation, but is with BYOL

* Increase coverage

* isort fix

* mypy fix"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2023-03-16T16:14:48Z,"Bump pytorch-lightning[extra] from 1.9.4 to 2.0.0 in /requirements (#1178)

* Bump pytorch-lightning[extra] from 1.9.4 to 2.0.0 in /requirements

Bumps [pytorch-lightning[extra]](https://github.com/Lightning-AI/lightning) from 1.9.4 to 2.0.0.
- [Release notes](https://github.com/Lightning-AI/lightning/releases)
- [Commits](https://github.com/Lightning-AI/lightning/compare/1.9.4...2.0.0)

---
updated-dependencies:
- dependency-name: pytorch-lightning[extra]
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>

* Remove deprecated features

* pytorch_lightning -> lightning

* bump radiant-mlhub too

* isort fix

* lightning does not yet have public type hints

* More ignores

* blanket ignore

* blanket ignore

* Fix function typo

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2023-02-23T23:26:26Z,Trainers: refactor tests (#1132)
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2023-01-23T22:08:17Z,"DataModules: run all data augmentation on the GPU (#992)

* DataModules: run all data augmentation on the GPU

* Passing tests

* Update BigEarthNet

* Break ChesapeakeCVPR

* Update COWC

* Update Cyclone

* Update ETCI2021

* mypy fixes

* Update FAIR1M

* Update Inria

* Update LandCoverAI

* Update LoveDA

* Update NAIP

* Update NASA

* Update OSCD

* Update RESISC45

* Update SEN12MS

* Update So2Sat

* Update SpaceNet

* Update UCMerced

* Update USAVars

* Update xview

* Remove seed

* mypy fixes

* OSCD hacks

* Add NonGeoDataModule base class

* Fixes

* Add base class to docs

* mypy fixes

* Fix several tests

* Fix Normalize

* Syntax error

* Fix bigearthnet

* Fix dtype

* Consistent kornia import

* Get regression datasets working

* Fix detection tests

* Fix some chesapeake bugs

* Fix several segmentation issues

* isort fixes

* Undo breaking change

* Remove more code duplication, standardize docstrings

* mypy fixes

* Add default augmentation

* Augmentations can be any callable

* Fix datasets tests

* Fix datamodule tests

* Fix more datamodules

* Typo fix

* Set up val_dataset even when fit

* Fix classification tests

* Fix ETCI2021

* Fix SEN12MS

* Add GeoDataModule base class

* Fix several chesapeake bugs

* Fix dtype and shape

* Fix crs/bbox issue

* Fix test dtype

* Fix unequal size stacking error

* flake8 fix

* Better checks on sampler

* Fix bug introduced in NAIP dm

* Fix chesapeake dimensions

* Add one to mask

* Fix missing imports

* Fix batch size

* Simplify augmentations

* Don't run test or predict without datasets

* Fix tests

* Allow shared dataset

* One more try

* Fix typo

* Fix another typo

* Fix Chesapeake dimensions

* Apply augmentations during sanity check too

* Don't reuse fixtures

* Increase coverage

* Fix ETCI tests

* Test predict_step

* Test all loss methods

* Simplify validation plotting

* Document new classes

* Fix plotting

* Plotting should be robust in case dataset does not contain RGB bands

* Fix flake8

* 100% coverage of trainers

* Add lightning-lite dependency

* Revert ""Add lightning-lite dependency""

This reverts commit 1df7291ae59f6257a2cabd20a6c767e178bf4f0f.

* Define our own MisconfigurationException

* Properly test new data module base classes

* Fix mistake in setup call

* ExtractTensorPatches runs into OOM errors

* Test both fast_dev_run True and False

* Fix plot methods

* Fix OSCD tests

* Fix bug with inconsistent train/val/test splits between stages

* Fix issues with images of different sizes

* Fix OSCD tests

* Fix OSCD tests

* Bad rebase

* No trainer for OSCD so no need for config

* Bad rebase

* plot: only works during validation

* Fix collation of NASA Marine Debris dataset

* flake8 fix

* Quick test

* Revert ""Quick test""

This reverts commit f465efcbef904b8a5bc2257f2800eed931c491ab.

* 56 workers is a bit excessive

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-12-30T17:31:00Z,"Add datamodule for GID-15 dataset (#928)

* add datamodule with crop logic

* remove print and fix batch_size

* typo

* Use Kornia augmentations

* Style

* Ignore warning

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-12-30T16:34:04Z,"Add crop logic to Potsdam2D datamodule (#929)

* add crop logic to potsdam

* suggested changes

* Use same style as Vaihingen2D

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-12-30T04:43:28Z,"Fix Vaihingen datamodule (#853)

* fix datamodule

* requested changes to vaihingen

* data loader

* fix error an clarity

* fix failing test

* fix failing test crop augmentation

* found a bug

* remove same_batch param

* Trying to get minimum tests to pass

* Formatting

* Formatting again

* Update torchgeo/datamodules/vaihingen.py

* Sort imports

* Isort, yousort, we all sort

* Same logic as deepglobe

* More-specific types

* Missing import

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-12-30T03:46:06Z,"Add LoveDADataModule to the trainer tests (#966)

* Add loveda to trainer tests

* Delete direct loveda datamodule test

* Ignoring deprecation warning for lightning

* Remove ignore

* test -> predict

* Fix typo

* Add comment explaining mismatch

* More coverage

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-12-30T00:08:49Z,"Add random crop logic to DeepGlobeLandCover Datamodule (#876)

* crop logic

* typo

* change train_batch_size logic

* fix failing test

* typos and naming

* return argument train dataloader

* typo

* fix failing test

* suggestions except about test file

* remove test_deepglobe and add test to trainer

* forgot new conf file

* reanme collate function

* move cropping logic to transform and utils

* remove comment

* simplify

* move pad_segmentation to transforms

* another one

* naming and versionadded

* another transforms approach

* typo

* fix read the docs

* some checks for Ncrop

* add unit tests new transforms

* Remove cruft

* More simplification

* Add config file

* Implemented ExtractTensorPatches

* Remove tests

* Remove unnecessary attrs

* Apply to both input and mask

* Implement RandomNCrop

* Fix dimensions

* mypy fixes

* Fix docs

* Ensure that image and mask get the same transformation

* Bump min kornia version

* ignore still needed?

* Remove unneeded hacks

* Fix pydocstyle

* Fix dimensions

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-12-27T05:31:57Z,OSCDDataModule: does not support SemanticSegmentationTask (#983)
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-12-26T16:20:24Z,"InriaAerialImageLabelingDataModule: fix predict dimensions (#975)

* InriaAerialImageLabelingDataModule: fix predict dimensions

* Record number of patches for reconstruction"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-12-24T03:02:38Z,"Datamodule for SpaceNet1 (#965)

* Add SpaceNet1 datamodule

* Running black and isort

* version added

* Fix docs

* SpaceNet1 tests

* Testing spacenet datamodule with trainers

* no loveda

* black

* doc fix

* Removing direct datamodule test

* Make sure percent normalization doesn't divide by zero

* Speed up preprocessing

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-12-13T03:43:25Z,"Change segmentation model argument names (#919)

* name change semgmentation model

* chmod evaluate.py

* fix variable name evaluate

* encoder -> backbone

* remove backbone_output_stride from confs

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-12-08T19:27:54Z,"add predict_step to SemanticSegmentationTask (#939)

* add segmentation predict step

* add OOM wawrning to docstring"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-10-18T18:25:09Z,Add plot method to (most) DataModules (#814)
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-07-02T19:55:36Z,"Add DeepGlobe dataset for land cover  (#578)

* add class for Deep Globe Land Cover dataset

* add Lightning data module implementation for deepglobe land cover

* fix formatting errors

* fix urls, formats and add link for paper

* add tests for deepglobe dataset and datamodule

* fix a test case and a few more formatting error

* add data.py and modify error match for data download

* modify draw_semantic_segmentation_masks for cases when mask is a subset of all class labels

* fix mypy error

* add to docs for documentation

* add deepglobe to the dataset lists csv

* fix error in building docs

* Update datamodules.rst

* Update datasets.rst

* Update data.py

* Update utils.py

* change file permissions of non_geo_datasets.csv

* Add versionadded

* Update torchgeo/datasets/deepglobelandcover.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Change end of line sequence

* Update tests/data/deepglobelandcover/data.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* exist_ok

* Update tests/datasets/test_deepglobelandcover.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Remove datamodule tests

* Remove split monkeypatch

* Running black

* Add val percent to test conf

* Sort filelist so indices are the same across platforms

* Simplified the file and mask fns

* Re-adding datamodule tests for coverage

* Add sub-configs to test val_split_pct in the datamodule

* Lets try it

* Update tests/conf/deepglobelandcover_0.yaml

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* nulllllllll

* ingore_zeros -> ignore_index

Co-authored-by: saumyasinha <t-sasinha@microsoft.com>
Co-authored-by: Caleb Robinson <calebrob6@gmail.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-07-02T17:44:37Z,"SemanticSegmentationTrainer: ignore_zeros -> ignore_index (#644)

* Clarify the ignore_zeros parameter to the segmentationi trainer

* Black

* Add test

* Added warnings

* Renaming ignore_zeros to ignore_index

* Fixed rest of config and tests

* Update conf/chesapeake_cvpr.yaml

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/trainers/segmentation.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/trainers/segmentation.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Changed warning match

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-07-02T17:25:29Z,"LandCover.ai: add data.py script (#643)

* LandCover.ai: add data.py script

* monkeypatch trainer tests

* Add output to repo"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-06-13T17:38:17Z,"Resolve DeprecationWarnings (#567)

* Resolve DeprecationWarnings

* Fix PIL version check

* Add ignores, hide ignores

* Always specify max_epochs

* Re-add one of the ignores that was removed

* Silence ColorJitter behavior change warnings

* Fix num_workers warning on macOS

* Ignore coverage of lines missed by older pillow versions

* Fix support for pre/post versions of PIL

* Wordsmithing

* Remove unused imports"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-05-22T21:51:48Z,"Add Inria datamodule  (#498)

* Add Inria Datamodule

* Fix up

* Add predict.py

* Integrate kornia fns for extracting & combining

Requires kornia/kornia#1558 to be merged

* transform creates problem when calculating metrics

* Update

* Use dict.get

* Add tests & update test data

* Add Inria datamodule to docs

* Reduce test data size

* Datamodules always have predict_dataloader

* Remove comments

* Update predict.py

* Add PredictDataset

* Fix tests

* Update inria.yaml

* Clarify predict_on doc

* Refactor

* Update min kornia

* Update inria.yaml

* Remove predict utilities

* Trainer fix

* Use kornia's compute_padding

* kornia docfix

* Use stable docs

* Fixes"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-03-30T02:39:19Z,Fix PyTorch Lightning 1.6 type hints (#487)
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-03-14T20:35:37Z,"Remove type ignores for PyTorch (#460)

* Remove type ignores for PyTorch

* Mypy fixes for pytest MonkeyPatch

* Black

* Ignore Identity

* Generic fixes

* Remove unused Generator import

* More fixes

* Fix remaining mypy errors

* More typing cleanups

* typing.OrderedDict isn't available until Python 3.7.2+

* Need Python 3.9 to build docs for fancy OrderedDict

* Fix Python 3.8 and earlier support

* Fix BigEarthNet tests

* Fix bug in ETCI 2021 tests

* Remove unused flake8 ignore

* More robust and well-documented trainer steps

* Many functions don't actually use batch_idx

* Store cast hparams in trainers"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-01-15T05:14:51Z,extract_archive: support deflate64-compressed zip files (#282)
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-01-08T16:11:49Z,"Reorganize configuration files (#352)

* Reorganize configuration files

* Undo changes to tests/conf files"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-01-02T02:07:43Z,"0.2.0 release (#348)

* 0.2.0 release

* Fix notebooks

* Fix minimal dependency tests

* Fix integration tests

* Fix integration tests

* Try to avoid running GitHub Actions twice on release PRs

* Revert ""Try to avoid running GitHub Actions twice on release PRs""

This reverts commit a1ac7ab4cf923a4066098c175379b27da1799b96.

* GeoDatasets use intersection, not addition

* Adding stack_samples to benchmarks

* Fix zero division error in SEN12MS tests

* Replaces test models with dummy models (#344)

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* lc values must be < num_classes

* updated indices tutorial with latest indices

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>
Co-authored-by: isaaccorley <22203655+isaaccorley@users.noreply.github.com>"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2022-01-01T20:14:19Z,"Remove dataset-specific trainers (#286)

* Remove dataset-specific trainers

* Collation functions will be new in 0.2.0

* Clarify arg docstring

* Style fixes

* Remove files forgotten in rebase

* Fix bug in unbind_samples, add tests

* Fix bugs in datamodule augmentations

* Increase coverage for datamodules

* Fix bugs in logger plotting, properly test

* Fix tests

* Increase coverage of trainers

* Use datamodule plot instead of dataset plot

* Skip datamodules without tests

* Plot predictions

* Fix ClassificationTask tests

* Fix SemanticSegmentationTask tests

* EAFP -> LBYL

* Ensure that tensors are on the CPU before plotting"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2021-12-30T19:54:47Z,"Refactor datamodule/model testing (#329)

* Refactor RegressionTask testing

* Programmatically determine max value

* Refactor ClassificationTask testing

* Silence warnings

* Refactor SegmentationTask testing

* Fix training mappings

* Fix GeoDataset trainers

* Fix ETCI trainer fake data

* Update OSCD training data

* Get LandCoverAI tests to pass

* Fix OSCD checksum handling

* Fix NAIP-Chesapeake tests

* Fix OSCD tests

* Keep BoundingBox icy

* Fix other datamodules

* Fix chesapeake testing

* Refactor BYOLTask tests

* Style fixes

* Silence pytorch-lightning warnings

* Get coverage for Chesapeake CVPR prior

* Fix trainer tests"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2021-12-24T02:10:50Z,"Move DataModules to torchgeo.datamodules (#321)

* Move DataModules to torchgeo.datamodules

* Clean up local imports"
github.com/microsoft/torchgeo,tests/trainers/test_segmentation.py,2021-11-07T04:57:40Z,"Trainers: split tasks into separate files, add SemanticSegmentationTask (#224)

* Trainers: split tasks into separate files

* Add SemanticSegmentationTask

* Fix doc tests

* Keep dataset-specific tasks in separate files

* Remove duplicate So2Sat trainer"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-12-07T23:00:40Z,RGBBandsMissingError (#1737)
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-09-27T17:11:52Z,"Add command line script (#1559)

* Add command line script

* Label PRs correctly

* Flake8 fix

* Add callbacks

* Update all conf files

* Enforce class of model/data

* Update BYOL tests

* Update all tests

* Use default num workers: 0

* Variable interpolation only supported by omegaconf backend

* Fix regression tests

* Ensure that jsonargparse is installed during testing

* Bump minimimum lightning version

* Workaround for lightning/jsonargparse bugs

* Ignore Python 3.9 warning message

* Add test coverage for __main__.py

* Increase coverage of PixelwiseRegressionTask

* jsonargparse bug fixed in latest release

* Revert ""jsonargparse bug fixed in latest release""

This reverts commit 4f38cdfca30d792485af49a6245ea9929a3b45c5.

* Use default logging frequency

* Ensure that metrics are actually logged

* Fix ObjectDetectionTask logging

* Ignore type errors

* Not all need to be ignored"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-09-11T22:05:28Z,"Refactor trainers (#1541)

* Refactor trainers

* Update conf files

* Fix pydocstyle

* Add scheduler monitor

* Update conf files

* Fix BYOL backbone

* Remove broken configure_optimizers out type

* Fix type hints

* No casts

* Increase test coverage

* Better documentation of supported models

* Remove unimportant configuration

* Remove unimportant configuration

* Drop model_kwargs

* Docstring improvements

* Add base class for all torchgeo trainers

* Add configure_* methods for losses/metrics/models

* init must come first

* More type hints"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-05-29T16:28:36Z,"Test fewer models in trainers to avoid exceeding RAM (#1377)

* Stop the madness

* isort

* flake8

* Repeat for other trainers

* Parentheses not needed

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-05-14T16:00:19Z,"MonkeyPatch exposed in public API in newer pytest (#1333)

* MonkeyPatch exposed in public API in newer pytest

* Fix import order"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-05-11T16:40:53Z,"Add SimCLR trainer (#1252)

* add simclr and tests

* add lightly to reqs

* pyupgrade

* Copy things from prior implementation

* Add SimCLR v2 projection head

* Remove kwargs

* Call __init__ explicitly

* Fix mypy and docs

* Can't test newer setuptools

* Default to output dim of model

* Add memory bank

* Ignore erroneous warning

* Fix configs, test SSL4EO

* Fix a few layer bugs

* mypy fixes

* kernel_size must be an integer

* Fix SeCo in_channels

* Get more coverage

* Bump min lightly

* Default logging

* Test weights

* mypy fix

* Grab max_epochs from the trainer

* max_epochs param removed

* Use num_features

* Remove classification head

* SimCLR uses LARS, with Adam as a backup

* Add warnings

* Grab num features directly from model

* Check if identity

* Match timm model design

* Capture warnings

* Fix tests

* Increase coverage

* Fix method name

* More typos

* Escape regex

* Newer setuptools now supported

* New batch norm for every layer

* Rename forward arg

* Clarify usage of weights parameter

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>

* Fix flake8

* Check it

* Use hydra

* Track average L2 normed stdev over features

* SimCLR decays lr to 0

* Add lr warmup

* Fix version access

* Fix LinearLR

* isinstance supports tuples

* Comment capitalization

* Require lightly 1.4.3+

* Require lightly 1.4.3+

* Bump lightly version

* Add RandomGrayscale

* Flake8 fixes

* Placate pydocstyle

* Clarify docs

* Pass correct weights

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>
Co-authored-by: Caleb Robinson <calebrob6@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-04-26T12:00:00Z,freeze_backbone and freeze_decoder in Trainers (#1290)
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-04-25T22:03:29Z,"Add multiple versions of the So2Sat dataset (#1283)

* Add multiple versions of the So2Sat dataset

* Update tests

* Adding datamodule

* Adding datamodule

* black

* Update tests

* Updated min requirement for pytorch

* Revert ""Updated min requirement for pytorch""

This reverts commit 9c0194ec527a94b47ba1b8789f1fd7750476c699.

* Using old random_split

* Shorten the mean and stdev lists

* Add description of splits to docstring

* Remove version parameter

* Fix version

* Requested updates

* Update torchgeo/datasets/so2sat.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/datasets/so2sat.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/datasets/so2sat.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Update torchgeo/datasets/so2sat.py

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* Requested changes

* Playing with docs

* Updating key in test config

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-04-24T18:34:49Z,"Update test minversions, pyvista min version (#1276)

* Update test minversions

* Test newer pyvista

* Add headless server

* try pyvista 0.30.0

* try pyvista 0.27.0

* try pyvista 0.28.0

* try pyvista 0.29.0

* try pyvista 0.28.1

* pyvista 0.29 confirmed as min version"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-04-23T22:37:29Z,"Refactor train.py (#1237)

* add pretrain.py tested with seco100k

* refactor

* add pretrain.py tested with seco100k

* refactor

* refactor to train.py and add simclr

* revert simclr and pretrain.py changes

* revert more simclr changesg

* add refactor to configs and train.py

* add hydra.utils.instantiate import

* fix flake8

* update tests and add hydra-core to deps

* fix byol tests

* update exp name

* format

* remove evaluate.py

* add hydra-core to min tests deps

* update tests

* add trainer to configs and use lightning.Trainer insteead of pl.Trainer

* add eurosat100 test

* update train.py

* lightning.Trainer -> lightning.pytorch.Trainer

* remove omegaconf

* update hydra-core to 1.1.1 and fix mypy

* add recursive hydra config test

* update coment

* update test config

* fix tests

* add omegaconf back in

* remove hydra recursive test

* update hydra-core to 2.3.0 for ci

* Try older hydra

* Older hydra requires old omegaconf

* Try older hydra

* Try newer hydra

* Try older hydra

* Try newer hydra

* Finalize minimum dep versions

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-04-22T20:49:37Z,"add FireRisk dataset (#1265)

* add FireRisk dataset and datamodule and tests

* remove import

* add FireRisk dataset and datamodule and tests

* remove import

* add FireRisk dataset and datamodule and tests

* remove import

* override setup. dataset has no test set

* updates per suggestions

* rmemove test_dataset definition

* fix config

* Update fire_risk.yaml

* fix tests

* Update tests/conf/fire_risk.yaml

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-04-16T01:27:51Z,Drop Python 3.8 support (#1246)
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-04-12T13:06:40Z,"Revert ""Tests: downloaded weights have different number of classes (#1229)"" (#1233)"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-04-11T20:00:22Z,Tests: downloaded weights have different number of classes (#1229)
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-03-22T12:26:45Z,Fix tests when PyTorch built with MPS support (#1188)
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-03-19T16:48:55Z,"Fix lightning imports (#1179)

* Fix lightning imports

* Style fixes"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-03-16T17:28:39Z,"Bump torchvision from 0.14.1 to 0.15.1 in /requirements (#1177)

* Bump torchvision from 0.14.1 to 0.15.1 in /requirements

Bumps [torchvision](https://github.com/pytorch/vision) from 0.14.1 to 0.15.1.
- [Release notes](https://github.com/pytorch/vision/releases)
- [Commits](https://github.com/pytorch/vision/compare/v0.14.1...v0.15.1)

---
updated-dependencies:
- dependency-name: torchvision
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* bump pytorch too

* Fix tests

* bump precommit

* blacken

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-03-16T16:14:48Z,"Bump pytorch-lightning[extra] from 1.9.4 to 2.0.0 in /requirements (#1178)

* Bump pytorch-lightning[extra] from 1.9.4 to 2.0.0 in /requirements

Bumps [pytorch-lightning[extra]](https://github.com/Lightning-AI/lightning) from 1.9.4 to 2.0.0.
- [Release notes](https://github.com/Lightning-AI/lightning/releases)
- [Commits](https://github.com/Lightning-AI/lightning/compare/1.9.4...2.0.0)

---
updated-dependencies:
- dependency-name: pytorch-lightning[extra]
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>

* Remove deprecated features

* pytorch_lightning -> lightning

* bump radiant-mlhub too

* isort fix

* lightning does not yet have public type hints

* More ignores

* blanket ignore

* blanket ignore

* Fix function typo

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-02-23T23:26:39Z,"EuroSAT100: add new dataset/datamodule (#1130)

* EuroSAT100: add new dataset

* Fix type hints

* Add EuroSAT100DataModule

* Isort and test fixes

* Add disclaimer, remove duplicate code"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-02-23T23:26:26Z,Trainers: refactor tests (#1132)
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-02-11T21:07:08Z,"Fix load_state_dict for all timm models (#1084)

* implement isaacs solution

* simple test for function

* private function but failing tests

* Fix in_channels

* Fix model

* Test real weights

* Real weights have no final layer

* Style fixes

* expand test coverage of other trainers

* revert byol image_size

---------

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-01-23T22:08:17Z,"DataModules: run all data augmentation on the GPU (#992)

* DataModules: run all data augmentation on the GPU

* Passing tests

* Update BigEarthNet

* Break ChesapeakeCVPR

* Update COWC

* Update Cyclone

* Update ETCI2021

* mypy fixes

* Update FAIR1M

* Update Inria

* Update LandCoverAI

* Update LoveDA

* Update NAIP

* Update NASA

* Update OSCD

* Update RESISC45

* Update SEN12MS

* Update So2Sat

* Update SpaceNet

* Update UCMerced

* Update USAVars

* Update xview

* Remove seed

* mypy fixes

* OSCD hacks

* Add NonGeoDataModule base class

* Fixes

* Add base class to docs

* mypy fixes

* Fix several tests

* Fix Normalize

* Syntax error

* Fix bigearthnet

* Fix dtype

* Consistent kornia import

* Get regression datasets working

* Fix detection tests

* Fix some chesapeake bugs

* Fix several segmentation issues

* isort fixes

* Undo breaking change

* Remove more code duplication, standardize docstrings

* mypy fixes

* Add default augmentation

* Augmentations can be any callable

* Fix datasets tests

* Fix datamodule tests

* Fix more datamodules

* Typo fix

* Set up val_dataset even when fit

* Fix classification tests

* Fix ETCI2021

* Fix SEN12MS

* Add GeoDataModule base class

* Fix several chesapeake bugs

* Fix dtype and shape

* Fix crs/bbox issue

* Fix test dtype

* Fix unequal size stacking error

* flake8 fix

* Better checks on sampler

* Fix bug introduced in NAIP dm

* Fix chesapeake dimensions

* Add one to mask

* Fix missing imports

* Fix batch size

* Simplify augmentations

* Don't run test or predict without datasets

* Fix tests

* Allow shared dataset

* One more try

* Fix typo

* Fix another typo

* Fix Chesapeake dimensions

* Apply augmentations during sanity check too

* Don't reuse fixtures

* Increase coverage

* Fix ETCI tests

* Test predict_step

* Test all loss methods

* Simplify validation plotting

* Document new classes

* Fix plotting

* Plotting should be robust in case dataset does not contain RGB bands

* Fix flake8

* 100% coverage of trainers

* Add lightning-lite dependency

* Revert ""Add lightning-lite dependency""

This reverts commit 1df7291ae59f6257a2cabd20a6c767e178bf4f0f.

* Define our own MisconfigurationException

* Properly test new data module base classes

* Fix mistake in setup call

* ExtractTensorPatches runs into OOM errors

* Test both fast_dev_run True and False

* Fix plot methods

* Fix OSCD tests

* Fix bug with inconsistent train/val/test splits between stages

* Fix issues with images of different sizes

* Fix OSCD tests

* Fix OSCD tests

* Bad rebase

* No trainer for OSCD so no need for config

* Bad rebase

* plot: only works during validation

* Fix collation of NASA Marine Debris dataset

* flake8 fix

* Quick test

* Revert ""Quick test""

This reverts commit f465efcbef904b8a5bc2257f2800eed931c491ab.

* 56 workers is a bit excessive

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2023-01-22T22:25:49Z,"Add Multi-Weight Support API (#917)

* load pretrained weights

* change name millionaid

* restructure and additional weights

* rename sentinel1 weights

* add vit small weights

* forgot to add vit.py

* struggling with test

* wrong name failing test

* feedback on tests

* increase test coverage

* fix failing test

* fix failing test

* fix failing test and add vit tests

* fix failing vit test

* torchgeo.models.utils

* forgot utils file

* typo num channels

* nitpick docs, version torchvision

* another try min dependencies

* add documentation table

* expand pytests to test pretrained weights on tasks

* reverse changes to byol task

* add tests to init pretrained weights from config

* forgot to add the conf files

* change path

* increase test coverage

* vit tests all pass locally including slow

* now remote

* fix tests another one

* add a draft tutorial

* run black on tutorial notebook

* Tutorial typo fixes

* Lower min torch/vision versions

* Fix bad rebase

* Remove dead code

* Flake8 fixes

* Consistent in_chans

* Black fixes

* bison > yacs

* Remove one more reference

* Download modified weights from hugging face

* Add entrypoints

* Add torch.hub support

* progress arg is required

* Fix model loading for resnet18

* Add transforms, update tests

* VIT -> ViT

* add seco weights

* Fix type hints

* Link to timm docs

* Fix pydocstyle

* Try to fix timm docs link

* Fix tests

* Nuke ignores

* Ignore timm links

* Add model API methods

* Add to __init__ and document

* Test model API functions

* fix tests

* Use correct documentation link for intersphinx

* Typos

* Fix Windows tests

* meth -> func

* Explicit function scope

* weight-specific filename

* Support enums in classification trainer

* Update other trainers too

* Fix regression tests

* Fix classification tests

* Fix byol tests

* Fix types

* progress_bar is required arg

* Test weight enums

* Fix pickling

* Fix regression tests

* Improve coverage of classification tests

* Improve coverage of BYOL tests

* Update resnet table

* Update ViT table

* Update get_state_dict usage

* Remove unused YAML files

* Update table widths

* Documentation improvements

* Tweak tables

* Try to fix Windows tests

* Revert ""Try to fix Windows tests""

This reverts commit 1325b13ff779b28adcaca36725e098ae8352a1d6.

* Monkeypatch everything

* Revert ""Monkeypatch everything""

This reverts commit e3e8d7d04231f8c0a39b5accd8f3d977aa7cbab2.

* Revert ""Revert ""Monkeypatch everything""""

This reverts commit 9b27bd705b06a743c092301c36802ce6e9503898.

* Patch things not at the source

* Fix missing import

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2022-12-04T19:54:25Z,"Change ""classification_model"" to ""model"" (#916)

* name change

* fix failing test

* expose all available timm models

* chmod

* imagenet pretrained flag

* remove extra

* docstring list_models"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2022-10-18T18:25:09Z,Add plot method to (most) DataModules (#814)
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2022-10-10T18:15:10Z,"Bump torchmetrics from 0.9.3 to 0.10.0 in /requirements (#816)

* Bump torchmetrics from 0.9.3 to 0.10.0 in /requirements

Bumps [torchmetrics](https://github.com/Lightning-AI/metrics) from 0.9.3 to 0.10.0.
- [Release notes](https://github.com/Lightning-AI/metrics/releases)
- [Changelog](https://github.com/Lightning-AI/metrics/blob/master/CHANGELOG.md)
- [Commits](https://github.com/Lightning-AI/metrics/compare/v0.9.3...v0.10.0)

---
updated-dependencies:
- dependency-name: torchmetrics
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

* Drop support for older torchmetrics

* Update evaluate.py as well

* Args no longer valid

* Style fix

* Fix imports

* multiclass -> multilabel

* Fix tests

* Verbose install

* Bump minimum version

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2022-10-03T17:58:53Z,"ClassificationTask predict step (#790)

* add predict_step method to ClassificationTask

* fix mypy error"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2022-09-30T17:01:19Z,"MultiLabelClassificationTask predict step (#792)

* add predict_step to MultiLabelClassificationTask

* fix docs"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2022-06-18T15:00:45Z,Test minimum version of deps (#574)
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2022-06-13T17:38:17Z,"Resolve DeprecationWarnings (#567)

* Resolve DeprecationWarnings

* Fix PIL version check

* Add ignores, hide ignores

* Always specify max_epochs

* Re-add one of the ignores that was removed

* Silence ColorJitter behavior change warnings

* Fix num_workers warning on macOS

* Ignore coverage of lines missed by older pillow versions

* Fix support for pre/post versions of PIL

* Wordsmithing

* Remove unused imports"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2022-03-30T02:39:19Z,Fix PyTorch Lightning 1.6 type hints (#487)
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2022-03-14T20:35:37Z,"Remove type ignores for PyTorch (#460)

* Remove type ignores for PyTorch

* Mypy fixes for pytest MonkeyPatch

* Black

* Ignore Identity

* Generic fixes

* Remove unused Generator import

* More fixes

* Fix remaining mypy errors

* More typing cleanups

* typing.OrderedDict isn't available until Python 3.7.2+

* Need Python 3.9 to build docs for fancy OrderedDict

* Fix Python 3.8 and earlier support

* Fix BigEarthNet tests

* Fix bug in ETCI 2021 tests

* Remove unused flake8 ignore

* More robust and well-documented trainer steps

* Many functions don't actually use batch_idx

* Store cast hparams in trainers"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2022-01-08T16:11:49Z,"Reorganize configuration files (#352)

* Reorganize configuration files

* Undo changes to tests/conf files"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2022-01-02T02:07:43Z,"0.2.0 release (#348)

* 0.2.0 release

* Fix notebooks

* Fix minimal dependency tests

* Fix integration tests

* Fix integration tests

* Try to avoid running GitHub Actions twice on release PRs

* Revert ""Try to avoid running GitHub Actions twice on release PRs""

This reverts commit a1ac7ab4cf923a4066098c175379b27da1799b96.

* GeoDatasets use intersection, not addition

* Adding stack_samples to benchmarks

* Fix zero division error in SEN12MS tests

* Replaces test models with dummy models (#344)

Co-authored-by: Adam J. Stewart <ajstewart426@gmail.com>

* lc values must be < num_classes

* updated indices tutorial with latest indices

Co-authored-by: Caleb Robinson <calebrob6@gmail.com>
Co-authored-by: isaaccorley <22203655+isaaccorley@users.noreply.github.com>"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2022-01-01T20:14:19Z,"Remove dataset-specific trainers (#286)

* Remove dataset-specific trainers

* Collation functions will be new in 0.2.0

* Clarify arg docstring

* Style fixes

* Remove files forgotten in rebase

* Fix bug in unbind_samples, add tests

* Fix bugs in datamodule augmentations

* Increase coverage for datamodules

* Fix bugs in logger plotting, properly test

* Fix tests

* Increase coverage of trainers

* Use datamodule plot instead of dataset plot

* Skip datamodules without tests

* Plot predictions

* Fix ClassificationTask tests

* Fix SemanticSegmentationTask tests

* EAFP -> LBYL

* Ensure that tensors are on the CPU before plotting"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2021-12-30T19:54:47Z,"Refactor datamodule/model testing (#329)

* Refactor RegressionTask testing

* Programmatically determine max value

* Refactor ClassificationTask testing

* Silence warnings

* Refactor SegmentationTask testing

* Fix training mappings

* Fix GeoDataset trainers

* Fix ETCI trainer fake data

* Update OSCD training data

* Get LandCoverAI tests to pass

* Fix OSCD checksum handling

* Fix NAIP-Chesapeake tests

* Fix OSCD tests

* Keep BoundingBox icy

* Fix other datamodules

* Fix chesapeake testing

* Refactor BYOLTask tests

* Style fixes

* Silence pytorch-lightning warnings

* Get coverage for Chesapeake CVPR prior

* Fix trainer tests"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2021-12-10T01:38:30Z,"Fixing network calls in unit tests (#265)

* Fixing network call in test of pretrained resnet

* Enable loading a pretrained model from a local path

* Fix filename

* monkeypatch the load_state_dict_from_url method instead of going around it

* Make default configs use random weights instead of imagenet pre-trained weights

* Removing internet access requirement from tests

* Deleted So2Sat trainer"
github.com/microsoft/torchgeo,tests/trainers/test_classification.py,2021-11-07T04:57:40Z,"Trainers: split tasks into separate files, add SemanticSegmentationTask (#224)

* Trainers: split tasks into separate files

* Add SemanticSegmentationTask

* Fix doc tests

* Keep dataset-specific tasks in separate files

* Remove duplicate So2Sat trainer"
github.com/DLLXW/data-science-competition,kaggle/shopee/model_swin.py,2021-05-30T08:36:05Z,wechat
github.com/deforum-art/sd-webui-deforum,scripts/deforum_helpers/src/midas/vit.py,2022-11-09T11:24:18Z,move stuff to deforum_helpers to fix #76
github.com/DLLXW/data-science-competition,else/data_lake/person/net.py,2022-06-14T09:17:35Z,update
github.com/invictus717/MetaTransformer,Audio/src/models/ast_models.py,2023-08-24T13:39:26Z,Release code for Audio understanding
github.com/NVlabs/prismer,experts/depth/vit.py,2023-03-03T01:09:36Z,First Commit
github.com/qubvel/segmentation_models.pytorch,segmentation_models_pytorch/encoders/timm_mobilenetv3.py,2022-01-05T20:49:07Z,"Add black and flake8 (#532)

* Add black and flake8
* Fix test losses
* Fix pre-commit 
* Update README"
github.com/qubvel/segmentation_models.pytorch,segmentation_models_pytorch/encoders/timm_mobilenetv3.py,2021-07-05T07:35:29Z,"Release 0.2.0 (#430)

* new in_channels != 3 initialization
* docs fixes 
* version resolving"
github.com/qubvel/segmentation_models.pytorch,segmentation_models_pytorch/encoders/timm_mobilenetv3.py,2021-07-04T18:52:48Z,"add timm-MobileNetV3 as an Encoder (#355)

* add timm-mobilenetv3 as encoder

* fix import bug

Co-authored-by: Pavel Yakubovskiy <qubvel@gmail.com>"
github.com/invictus717/MetaTransformer,Time-Series/models/Transformer.py,2023-07-23T12:46:25Z,Image and Time-Series
github.com/GoogleCloudPlatform/vertex-ai-samples,community-content/cpr-examples/timm_serving/build.py,2022-07-21T19:42:31Z,"Add an example use case for custom prediction routines. (#709)

* Add an example use case for custom prediction routines.

* Addressing some PR comments: reworded the readme in a few places, added a 'probe' command to build.py that sends a sample predict request, and pinned versions in requirements. Also fixed a bug where the artifacts_uri passed in during deployment on Vertex AI was not recognized as a directory.

* Autoformat code with black and fix a couple of typing errors.

* Addressing PR comments: Add deployment machine type to the config and add docstring to probe_prediction method.

* Update example to work with new LocalModel interface.

* Update example to work with new LocalModel interface.

Co-authored-by: Karl Weinmeister <11586922+kweinmeister@users.noreply.github.com>"
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-10-16T20:03:01Z,Fixed a bug in head pruning
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-10-16T04:14:39Z,Add an example for head pruning
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-10-15T17:46:29Z,v1.3.0: add head pruning for multi-head attention
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-10-02T11:57:38Z,Default ImageNet root: data/imagenet
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-10-02T11:52:39Z,Add a new argument  for Transformer pruning
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-10-02T09:17:54Z,Update comments
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-09-20T11:51:50Z,Support deit pruning
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-09-15T07:35:36Z,Add L1 pruner
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-09-13T14:11:05Z,Add L2 pruning
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-09-13T13:52:16Z,L1 => L2
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-09-09T12:50:34Z,Fixed a bug in image transformation
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-09-09T10:26:20Z,Merge branch 'master' of https://github.com/VainF/Torch-Pruning
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-09-09T10:26:14Z,Update vit examples
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-09-08T18:24:24Z,Add hessian-based ViT pruning
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-09-08T18:12:48Z,Add hessian pruning
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-09-08T18:09:55Z,Add hessian pruning
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-09-08T04:43:40Z,"Rename prune_bert=>prune_hf_bert, prune_swin=>prune_hf_swin"
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-09-06T16:42:19Z,Pruning & Finetuning examples for ViT
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-09-06T14:38:27Z,Fixed a bug in ViT pruning
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-09-06T09:09:54Z,Add an OpCounter for timm.models.vision_transformer
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-09-06T09:05:50Z,Add an OpCounter for timm.models.vision_transformer
github.com/VainF/Torch-Pruning,examples/transformers/prune_timm_vit.py,2023-09-06T08:05:54Z,Rename
github.com/s3prl/s3prl,s3prl/upstream/ast/ast_models.py,2023-09-26T07:26:15Z,format
github.com/s3prl/s3prl,s3prl/upstream/ast/ast_models.py,2022-10-22T02:17:37Z,refine ast
github.com/s3prl/s3prl,s3prl/upstream/ast/ast_models.py,2022-10-20T00:50:06Z,support window_secs & stride_secs for ast
github.com/s3prl/s3prl,s3prl/upstream/ast/ast_models.py,2022-09-23T12:09:57Z,apply isort
github.com/s3prl/s3prl,s3prl/upstream/ast/ast_models.py,2022-09-17T15:00:46Z,rebase audio upstream to the latest main
github.com/autonomousvision/transfuser,team_code_transfuser/latentTF.py,2022-07-15T21:55:05Z,add dataset and rename transfuser folder
github.com/autonomousvision/transfuser,team_code_transfuser/transfuser.py,2023-09-04T13:39:27Z,Fixed convnext support
github.com/autonomousvision/transfuser,team_code_transfuser/transfuser.py,2022-07-15T21:55:05Z,add dataset and rename transfuser folder
github.com/lllyasviel/stable-diffusion-webui-forge,extensions-builtin/forge_legacy_preprocessors/annotator/midas/midas/vit.py,2024-01-28T23:31:49Z,"Cnet (#20)

* ini

* i

* i

* i

* i

* i

* i

* Update preprocessor_normalbae.py

* i

* i

* i

* i

* Update README.md

* i

* Update preprocessor_depth.py

* Update shared.py

* Update devices.py

* i

* i

* i

* i

* i

* i

* Update README.md

* i

* Update README.md

* i

* Update annotator_path.py

* i

* i

* Update preprocessor_meta.py"
github.com/autonomousvision/transfuser,team_code_transfuser/late_fusion.py,2022-07-15T21:55:05Z,add dataset and rename transfuser folder
github.com/VainF/Torch-Pruning,examples/transformers/measure_latency.py,2023-10-02T13:02:29Z,Rename
github.com/guochengqian/Magic123,midas/backbones/vit.py,2023-08-03T02:51:43Z,first commit
github.com/Harry24k/adversarial-attacks-pytorch,robustbench/model_zoo/cifar10.py,2023-10-20T02:43:38Z,include robustbench
github.com/Harry24k/adversarial-attacks-pytorch,robustbench/model_zoo/cifar10.py,2023-10-20T02:29:45Z,delete robustbench
github.com/Harry24k/adversarial-attacks-pytorch,robustbench/model_zoo/cifar10.py,2022-09-30T06:33:49Z,Merge robustbench
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/object_detection/utils.py,2022-02-10T03:28:50Z,merge object detection da
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/object_detection/utils.py,2022-02-10T01:33:18Z,document and visualization code for DA Detection
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/object_detection/utils.py,2021-12-10T12:25:18Z,add D-adapt v1 (with only category adaptor)
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/object_detection/utils.py,2021-12-07T12:23:47Z,add source only code for cross-domain object detection
github.com/junshutang/Make-It-3D,DPT/dpt/vit.py,2023-07-04T14:09:23Z,update DPT
github.com/VainF/Torch-Pruning,examples/timm_models/prune_timm_models.py,2023-10-15T17:46:29Z,v1.3.0: add head pruning for multi-head attention
github.com/VainF/Torch-Pruning,examples/timm_models/prune_timm_models.py,2023-10-02T11:52:39Z,Add a new argument  for Transformer pruning
github.com/VainF/Torch-Pruning,examples/timm_models/prune_timm_models.py,2023-10-02T08:27:51Z,Update timm examples
github.com/autonomousvision/transfuser,team_code_transfuser/geometric_fusion.py,2022-07-15T21:55:05Z,add dataset and rename transfuser folder
github.com/jolibrain/deepdetect,tools/torch/trace_timm_models.py,2022-12-19T17:19:17Z,update timm extractor for last version of timm
github.com/jolibrain/deepdetect,tools/torch/trace_timm_models.py,2021-06-03T08:27:24Z,chore(ml): updated torchvision and timm model import scripts
github.com/jolibrain/deepdetect,tools/torch/trace_timm_models.py,2021-05-21T13:23:03Z,feat(ml): python script to trace timm vision models
github.com/modelscope/modelscope,modelscope/models/cv/controllable_image_generation/annotator/midas/midas/vit.py,2023-02-28T05:39:12Z,"add ControlNet for controllable image generation 

Link: https://code.alibaba-inc.com/Ali-MaaS/MaaS-lib/codereview/11697239

* add ControlNet for scribble2image

* update code comments

* support scribble input

* update scribble input for demo service

* support all models of ControlNet

* add requirements

* fix code style bug

* update model id"
github.com/IDEA-Research/DWPose,ControlNet-v1-1-nightly/annotator/midas/midas/vit.py,2023-07-28T02:39:55Z,open code controlnet
github.com/baaivision/EVA,EVA-CLIP-18B/shinji/eva_clip/timm_model.py,2024-02-07T02:17:58Z,init EVA-CLIP-18B
github.com/Harry24k/adversarial-attacks-pytorch,robustbench/model_zoo/cifar100.py,2023-10-20T02:43:38Z,include robustbench
github.com/Harry24k/adversarial-attacks-pytorch,robustbench/model_zoo/cifar100.py,2023-10-20T02:29:45Z,delete robustbench
github.com/Harry24k/adversarial-attacks-pytorch,robustbench/model_zoo/cifar100.py,2022-09-30T06:33:49Z,Merge robustbench
github.com/guochengqian/Magic123,midas/backbones/beit.py,2023-08-03T02:51:43Z,first commit
github.com/Harry24k/adversarial-attacks-pytorch,robustbench/model_zoo/imagenet.py,2023-10-20T02:43:38Z,include robustbench
github.com/Harry24k/adversarial-attacks-pytorch,robustbench/model_zoo/imagenet.py,2023-10-20T02:29:45Z,delete robustbench
github.com/Harry24k/adversarial-attacks-pytorch,robustbench/model_zoo/imagenet.py,2022-09-30T06:33:49Z,Merge robustbench
github.com/guochengqian/Magic123,midas/backbones/swin.py,2023-08-03T02:51:43Z,first commit
github.com/openvinotoolkit/anomalib,src/anomalib/models/image/fastflow/torch_model.py,2024-01-24T12:19:17Z,"🚀 V1 (#1663)

* Merge feature/lightning-version-upgrade to feature/custom-trainer (#1297)

Upgrade to Lightning 2.0.5 (#1221)

* Adapt code and configs to PL 2.0.5

* Pre-commit checks.

* Fix a function call.

* Fix function calls.

* pytorch_lightning -> lightning.pytorch

* Add lightning to requirements

---------

Co-authored-by: Weilin Xu <mzweilin@gmail.com>
Co-authored-by: Samet <samet.akcay@intel.com>

* Partially restore tests (#1298)

* Upgrade to Lightning 2.0.5 (#1221)

* Adapt code and configs to PL 2.0.5

* Pre-commit checks.

* Fix a function call.

* Fix function calls.

* pytorch_lightning -> lightning.pytorch

* Add lightning to requirements

---------

Co-authored-by: Samet <samet.akcay@intel.com>

* partially restore tests

* Address PR comments

---------

Co-authored-by: Weilin Xu <mzweilin@gmail.com>
Co-authored-by: Samet <samet.akcay@intel.com>
Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Remove future annotations (#1299)

* remove __future__

* Update changelog

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Refactor postprocessing (#1302)

* remove __future__

* Update changelog

* 🚚 Trainer -> AnomalibTrainer

* add post-processor

* Refactor callback

* Remove handler

* Address PR comments

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] refactor normalization callbacks (#1310)

* remove __future__

* Update changelog

* 🚚 Trainer -> AnomalibTrainer

* add post-processor

* Refactor callback

* Refactor normalization callback

* Match convention

* Refactor imports

* Address PR comments

* Fix path

* Refactor callbacks

* Fix module path

---------

* [Custom Trainer] Refactor thresholding (#1311)

* remove __future__

* Update changelog

* 🚚 Trainer -> AnomalibTrainer

* add post-processor

* Refactor callback

* Refactor normalization callback

* Refactor thresholding

* Match convention

* Refactor imports

* Address PR comments

* Fix path

* Refactor callbacks

* Fix module path

* Address PR comments

* Apply suggestions from code review

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* [Custom Trainer] Refactor Metrics (#1312)

* remove __future__

* Update changelog

* 🚚 Trainer -> AnomalibTrainer

* add post-processor

* Refactor callback

* Refactor normalization callback

* Refactor thresholding

* Refactor metrics configuration

* Match convention

* Refactor imports

* Address PR comments

* Fix path

* Refactor callbacks

* Fix module path

* Address PR comments

* Address PR comments

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Refactor visualization callback (#1313)

* remove __future__

* Update changelog

* 🚚 Trainer -> AnomalibTrainer

* add post-processor

* Refactor callback

* Refactor normalization callback

* Refactor thresholding

* Refactor metrics configuration

* Move visualizer callbacks into trainer

* Match convention

* Refactor imports

* Address PR comments

* Fix path

* Refactor callbacks

* Fix module path

* Address PR comments

* Remove comment

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Initial engine design (#1348)

* Initial engine design

* Address PR comments

* Circular import + trainer->engine

* Update src/anomalib/engine/engine.py

* revert import in __init__

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* [Custom Trainer] Partially fix tests (#1359)

* Partially fix test

* Address PR comments

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Add CLI support (#1381)

* Support trainer methods

* support yaml serialization

* add hpo command

* Add benchmark + train entrypoint

* Add export arguments

* Partially address PR comments

* Add export subcommands + refactor

* Address PR comments

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Partially restore tests (#1391)

* Fix tests

* Patch get experiment logger

* Sort imports

* Add stfpm config

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Add new ruff rules (#1390)

* Add rules to pyproject.toml file

* Only include padim and stfpm in tests

* Fix notebook tests

* Fix notebook tests

* Code quality/enable rules (#1394)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* Enable Ruff rules - Part III (#1397)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* Enable Ruff Rules - Part 4 (#1402)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* [Custom Trainer] Switch to manual optimization for ganomaly (#1404)

* implement manual optimizers for ganomaly

* cleanup

* Enable Ruff Rules - Part 5 (#1403)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* flake8-pie (`PIE`)

* flake8-raise (`RSE`)

* flake8-return (`RET`)

* flake8-self (`SLF`)

* flake8-simplify (`SIM`)

* flake8-unsused-arguments (`ARG`)

* Update src/anomalib/models/components/flow/all_in_one_block.py

Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* addressed pr comments

---------

Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* [Custom Trainer] Add import checks (#1393)

* Add checks

* Add checks for wandb

* move exception handling to method

* fix pre-commit issue

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Remove max epochs > 1 (#1400)

Remove max epochs>1 from default param list

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Add default values (#1395)

* Add checks

* Add default values to datasets + padim model

* update default values

* Remove merge artifact

* Change gt path

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Enable Ruff Rules - Part 6 (#1407)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* flake8-pie (`PIE`)

* flake8-raise (`RSE`)

* flake8-return (`RET`)

* flake8-self (`SLF`)

* flake8-simplify (`SIM`)

* flake8-unsused-arguments (`ARG`)

* flake8-use-pathlib (`PTH`)

* eradicate (`ERA`)

* pylint (`PL`)

* tryceratos (`TRY`), flynt (`FLY`), Perflint (`PERF`)

* NumPy-specific rules (`NPY`)

* Ruff-specific rules (`RUF`)

* Remove pylint ignore comments

* Fix tests

* Fix tests

* Enable Ruff Rules - Part 7 (#1408)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* flake8-pie (`PIE`)

* flake8-raise (`RSE`)

* flake8-return (`RET`)

* flake8-self (`SLF`)

* flake8-simplify (`SIM`)

* flake8-unsused-arguments (`ARG`)

* flake8-use-pathlib (`PTH`)

* eradicate (`ERA`)

* pylint (`PL`)

* tryceratos (`TRY`), flynt (`FLY`), Perflint (`PERF`)

* NumPy-specific rules (`NPY`)

* Ruff-specific rules (`RUF`)

* Remove pylint ignore comments

* Fix tests

* Fix tests

* mccabe (`C90`)

* pygrep-hooks (`PGH`)

* flake8-todos (`TD`)

* flake8-fixme (`FIX`)

* pandas-vet (`PD`)

* Fix random_split tests

* Fix pre-commit

* Fixed the logger test

* Fix the typos in todos

* Enable Ruff Rules - Part 8 (#1412)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* flake8-pie (`PIE`)

* flake8-raise (`RSE`)

* flake8-return (`RET`)

* flake8-self (`SLF`)

* flake8-simplify (`SIM`)

* flake8-unsused-arguments (`ARG`)

* flake8-use-pathlib (`PTH`)

* eradicate (`ERA`)

* pylint (`PL`)

* tryceratos (`TRY`), flynt (`FLY`), Perflint (`PERF`)

* NumPy-specific rules (`NPY`)

* Ruff-specific rules (`RUF`)

* Remove pylint ignore comments

* Fix tests

* Fix tests

* mccabe (`C90`)

* pygrep-hooks (`PGH`)

* flake8-todos (`TD`)

* flake8-fixme (`FIX`)

* pandas-vet (`PD`)

* ignore ANN101 ANN102 and ANN103

* Fix random_split tests

* Fix pre-commit

* ANN partly done

* Remove kwargs: Any

* flake8-annotations (`ANN`)

* Enabled tests

* Revert padim configs

* Enable Ruff Rules - Part 9 (#1419)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* flake8-pie (`PIE`)

* flake8-raise (`RSE`)

* flake8-return (`RET`)

* flake8-self (`SLF`)

* flake8-simplify (`SIM`)

* flake8-unsused-arguments (`ARG`)

* flake8-use-pathlib (`PTH`)

* eradicate (`ERA`)

* pylint (`PL`)

* tryceratos (`TRY`), flynt (`FLY`), Perflint (`PERF`)

* NumPy-specific rules (`NPY`)

* Ruff-specific rules (`RUF`)

* Remove pylint ignore comments

* Fix tests

* Fix tests

* mccabe (`C90`)

* pygrep-hooks (`PGH`)

* flake8-todos (`TD`)

* flake8-fixme (`FIX`)

* pandas-vet (`PD`)

* ignore ANN101 ANN102 and ANN103

* Fix random_split tests

* Fix pre-commit

* ANN partly done

* Remove kwargs: Any

* flake8-annotations (`ANN`)

* Enabled tests

* Revert padim configs

* Add auto fixes

* Fix docstrings

* Update src/anomalib/utils/metrics/binning.py

Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* Update src/anomalib/models/dfkde/lightning_model.py

Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* Update src/anomalib/models/rkde/feature_extractor.py

Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* Fixed pre-commit

---------

Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* Merge main into feature/custom_trainer (#1420)

* Address tiler issues (#1411)

* fix tiler

* deprecate random tile locations

* restore random tiling in tile method

* check tiling section in config

* disable tiling for ganomalu

* pad -> padding

* Refactor Reverse Distillation to match official code (#1389)

* Non-mandatory early stopping

* Added conv4 and bn4 to OCBE

* Loss as in the official code (flattened arrays)

* Added comment on how to use torchvision model as an encoder to reproduce results in the paper

* Remove early stop from config, change default anomaly_map_mode to add

* pre-commit fix

* Updated results

* Update src/anomalib/models/reverse_distillation/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/reverse_distillation/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/reverse_distillation/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Remove early_stopping

* Update src/anomalib/models/reverse_distillation/lightning_model.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Easier to read code

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

---------

Co-authored-by: Dick Ameln <dick.ameln@intel.com>
Co-authored-by: abc-125 <63813435+abc-125@users.noreply.github.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>
Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Enable Ruff Rules - Part 10 (#1423)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* flake8-pie (`PIE`)

* flake8-raise (`RSE`)

* flake8-return (`RET`)

* flake8-self (`SLF`)

* flake8-simplify (`SIM`)

* flake8-unsused-arguments (`ARG`)

* flake8-use-pathlib (`PTH`)

* eradicate (`ERA`)

* pylint (`PL`)

* tryceratos (`TRY`), flynt (`FLY`), Perflint (`PERF`)

* NumPy-specific rules (`NPY`)

* Ruff-specific rules (`RUF`)

* Remove pylint ignore comments

* Fix tests

* Fix tests

* mccabe (`C90`)

* pygrep-hooks (`PGH`)

* flake8-todos (`TD`)

* flake8-fixme (`FIX`)

* pandas-vet (`PD`)

* ignore ANN101 ANN102 and ANN103

* Fix random_split tests

* Fix pre-commit

* ANN partly done

* Remove kwargs: Any

* flake8-annotations (`ANN`)

* Enabled tests

* Revert padim configs

* Add auto fixes

* Fix docstrings

* Enabled ""PLW2901"",  # `for` loop variable `row` overwritten by assignment target

* Enable Ruff Rules - Part 11 (#1425)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* flake8-pie (`PIE`)

* flake8-raise (`RSE`)

* flake8-return (`RET`)

* flake8-self (`SLF`)

* flake8-simplify (`SIM`)

* flake8-unsused-arguments (`ARG`)

* flake8-use-pathlib (`PTH`)

* eradicate (`ERA`)

* pylint (`PL`)

* tryceratos (`TRY`), flynt (`FLY`), Perflint (`PERF`)

* NumPy-specific rules (`NPY`)

* Ruff-specific rules (`RUF`)

* Remove pylint ignore comments

* Fix tests

* Fix tests

* mccabe (`C90`)

* pygrep-hooks (`PGH`)

* flake8-todos (`TD`)

* flake8-fixme (`FIX`)

* pandas-vet (`PD`)

* ignore ANN101 ANN102 and ANN103

* Fix random_split tests

* Fix pre-commit

* ANN partly done

* Remove kwargs: Any

* flake8-annotations (`ANN`)

* Enabled tests

* Revert padim configs

* Add auto fixes

* Fix docstrings

* Enabled ""PLW2901"",  # `for` loop variable `row` overwritten by assignment target

* Add google style to pydocstyle

* Remove dashed line from Returns

* Remove dashed line from Args

* Remove dashed line from Example and Raises

* Removed left-over dashed lines

* Cleanup pyproject.toml file

* [Custom Trainer] Add a verbose help output structure to the CLI (#1396)

* Add Verbosity Help-Formatter class

* Add Help-Formatter unit-tests

* Fix some strings

* Fix pre-commit ruff stuff

* Fix help_formatter's pre-commit

* Add new configs (#1418)

* Add new configs

* Add draem config

* Fix docstring

* Update src/anomalib/models/cflow/lightning_model.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Linting

* Remove --- from docstrings

* Remove any from return type

* Fix linting issues from feature/custom_trainer

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Add CLI Tests (#1426)

* Add new configs

* Add draem config

* Stash cli tests

* Stash cli tests with minor changes

* Stash changes

* Fix reverse distillation

* Fix EfficientAD

* Match ai_vad params to config params

* Fix ucsd and ai_vad configs

* Uncomment validation step

* Refactor directory structure

* Rename method

* use uscd for aivad

* fix ucsd path + modify model checkpoint callback for tests

* fix dfkde config

* Restructure tests + fix normalization test

* Revert file

* add v1 to tox

* Skip testing ai_vad

* Increase train and test size

* use mvtec dataset

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Restructure test directories. (#1438)

* Restructured the test directories

* Fixed typo

* Fix imports

* Fix config path in export tests

* Replace black with ruff formatter (#1439)

* [Custom Trainer] Refactor export (#1440)

* Refactor export

* Fix entrypoint tests

* remove match statements

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Add ruff checks to tests (#1455)

* Fix tests + add ruff check to tests

* Limit gradio version

* Path->str

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Add dummy image dataset generator helper class (#1444)

* Created tests/v1 directory

* update license year

* Add beantech generator

* Refactor mvtec-ad and beantech

* Add visa dataset generator

* Add DummyImageGenerator

* Use DummyImageGenerator in dummy mvtec dataset generator

* Use DummyImageGenerator in dummy mvtec dataset generator

* Use DummyImageGenerator in dummy mvtec3d dataset generator

* Restructured the test directories

* Fixed typo

* Fix imports

* Fix config path in export tests

* Add kolektor dataset

* add ucsdped generator

* Fix tests

* Revert conftest.py

* add method for generating avenue dataset

* Revert conftest.py

* add method for generating shanghaitech dataset

* swap order of typing for better parsing of normalization type

* cleanup

* Dynamically create DataFormat enum

* Add examples to docstring

* address pr comments and rename dataset.py to data.py

* Fix pre-commit issues

---------

Co-authored-by: Dick Ameln <dick.ameln@intel.com>

* Remove configurable parameters (#1453)

* Refactor export

* Fix entrypoint tests

* remove match statements

* Fix tests + remove get_configurable_params + fix hpo,benchmarking

* Path->str

* Update src/anomalib/models/__init__.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/utils/sweep/config.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update tools/inference/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update tools/inference/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* str->Path

* str->Path

* Fix model checkpoint path

* typing + path + test order

* Update src/anomalib/utils/sweep/config.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Mark tests as xfail

* Fix notebook

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Dick Ameln <amelndjd@gmail.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* [v1] - Tests: Add datamodule tests. (#1456)

* Created tests/v1 directory

* update license year

* Add beantech generator

* Refactor mvtec-ad and beantech

* Add visa dataset generator

* Add DummyImageGenerator

* Use DummyImageGenerator in dummy mvtec dataset generator

* Use DummyImageGenerator in dummy mvtec dataset generator

* Use DummyImageGenerator in dummy mvtec3d dataset generator

* Restructured the test directories

* Fixed typo

* Fix imports

* Fix config path in export tests

* Add kolektor dataset

* add ucsdped generator

* Fix tests

* Revert conftest.py

* add method for generating avenue dataset

* Revert conftest.py

* add method for generating shanghaitech dataset

* swap order of typing for better parsing of normalization type

* cleanup

* create the data tests files

* Dynamically create DataFormat enum

* Add examples to docstring

* add conftest.py

* address pr comments and rename dataset.py to data.py

* add some changes

* Add test_datasets to the integration tests

* Change order

* Added datamodule tests

* Format ruff

* Address pre-commit issues

* Fix video tests

* Add the rest of the datamodule tests

---------

Co-authored-by: Dick Ameln <dick.ameln@intel.com>

* [Custom Trainer] Add train subcommand (#1465)

Add train subcommand

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Refactor `Tensor` annotation to `torch.Tensor` (#1477)

* Modify Tensor to torch.Tensor

* list[Tensor] to list[torch.Tensor]

* TODO: Fix formatting issues

* torch_all to torch.all

* Remove redundant import

* Apply ruff format

* Fix the tests

* Refactor tests Part 1 (#1473)

* Refactor CLI tests

* Select a random model

* Fix test for all the models

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Add API tests Part 2 (#1474)

* Partially migrate unit tests Part 3 (#1480)

* Refactor CLI tests

* Add api tests

* Select a random model

* Fix test for all the models

* Fix API tests

* refactor pre-post processing + get model ckpt from fixture

* Add tests for custom transforms

* Address PR comments

* Refactor ckpt_path fixture

* Update conftest.py

* Update __init__.py

* Update __init__.py

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Reorg Part I: Data (#1483)

* Update Anomalib data with the new structure

* Update dataset imports and remove unused imports

* ruff format in engine.py

* Move TaskType to utils/types

* Revert TaskType import from anomalib

* Revert tox.ini

* Refactor imports and fix import errors

* Fix import errors and update type annotations

* Fix imports in jupyter notebooks

* Refactor import statements in test_visualizer.py

* Reorg Part II: Remove `pre_processor` and `post_processor` subpackages (#1485)

* Update Anomalib data with the new structure

* Update dataset imports and remove unused imports

* ruff format in engine.py

* Move TaskType to utils/types

* Revert TaskType import from anomalib

* Revert tox.ini

* Refactor imports and fix import errors

* Fix import errors and update type annotations

* Fix imports in jupyter notebooks

* Remove pre-processor subpackage from anomalib

* Remove unused imports and update import paths

* Refactor import statements in test_visualizer.py

* Remove unused code and deprecate Denormalize and
ToNumpy classes

* Remove empty code cell

* Add a description why input image is read from path

* Fix bug in superimpose

* Migrate deploy tests Part 4 (#1481)

* Refactor CLI tests

* Add api tests

* Select a random model

* Fix test for all the models

* Fix API tests

* refactor pre-post processing + get model ckpt from fixture

* Add tests for custom transforms

* Migrate deploy tests

* trained_padim_path->ckpt_path

* Split normalization line

* Fix normalization class path

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Migrate model components unit tests Part 5 (#1482)

* Refactor CLI tests

* Add api tests

* Select a random model

* Fix test for all the models

* Fix API tests

* refactor pre-post processing + get model ckpt from fixture

* Add tests for custom transforms

* Migrate deploy tests

* Migrate model component tests

* Migrate visualizer callback + cli tests

* Fix lightning entrypoint test

* trained_padim_path->ckpt_path

* Add todo

* Fix TaskType import

* Apply suggestions from code review

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Reorg Part III: Move the main anomalib components from `anomalib.utils` to `anomalib` (#1487)

* Update Anomalib data with the new structure

* Update dataset imports and remove unused imports

* ruff format in engine.py

* Move TaskType to utils/types

* Revert TaskType import from anomalib

* Revert tox.ini

* Refactor imports and fix import errors

* Fix import errors and update type annotations

* Fix imports in jupyter notebooks

* Remove pre-processor subpackage from anomalib

* Remove unused imports and update import paths

* Refactor import statements in test_visualizer.py

* Move callbacks from utils under anomalib

* Fix import statements in benchmarking and CLI
modules

* Move CLI under anomalib

* Add benchmark to pipelines

* Move hpo to pipelines

* Move sweep to pipelines

* Move loggers to anomalib

* Move metrics to anomalib

* Move callbacks from utils to test/utils

* Move config to anomalib.utils

* Fix the metric imports

* Remove unused code and deprecate Denormalize and
ToNumpy classes

* Remove empty code cell

* Add a description why input image is read from path

* Fix bug in superimpose

* Move anomalib.utils.config.config to anomalib.utils.config

* Fix config import

* Merge feature/custom_trainer

* Migrate tools test Part 6 (#1488)

* Refactor CLI tests

* Add api tests

* Select a random model

* Fix test for all the models

* Fix API tests

* refactor pre-post processing + get model ckpt from fixture

* Add tests for custom transforms

* Migrate deploy tests

* Migrate model component tests

* Migrate visualizer callback + cli tests

* Fix lightning entrypoint test

* trained_padim_path->ckpt_path

* Migrate metrics tests

* Migrate tools + remove nightly

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* 🚜 Refactor padim and patchcore models (#1300)

* Fix metadata path

* Ignore hidden directories in folder dataset

* Add check for mask_dir for segmentation tasks in Folder dataset

* add is_fitted

* self.model._is_fitted to self.model.is_fitted

* Format anomaly module

* Remove on_save_checkpoint

* Refactor padim

* Add __repr__ to anomaly score threshold

* Revert patchcore config

* Add memory bank modules for anomaly detection

* Add explanation to MemoryBankTorchModule docstring.

* Update memory bank module imports and fix typo in
Padim model

* Rename Dynamic Buffer Module to Memory Bank
Module in docstring.

* Revert ""Add explanation to MemoryBankTorchModule docstring.""

This reverts commit 44c991450f7c78eee2b0ceb0e7c855c3893a0801.

* Refactor memory bank modules based on Dick's suggestion

* Fix model attribute assignment in lightning models

* Add MemoryBankMixin to anomaly detection models

* revert padim and patchcore

* Reorder inheritance in anomaly detection models

---------

Co-authored-by: Ashwin Vaidya <ashwin.vaidya@intel.com>

* Migrate unit tests Part 7 (#1490)

* Refactor CLI tests

* Add api tests

* Select a random model

* Fix test for all the models

* Fix API tests

* refactor pre-post processing + get model ckpt from fixture

* Add tests for custom transforms

* Migrate deploy tests

* Migrate model component tests

* Migrate visualizer callback + cli tests

* Fix lightning entrypoint test

* trained_padim_path->ckpt_path

* Migrate metrics tests

* Migrate tools + remove nightly

* Increase coverage

* Migrate remaining tests

* Fix imports

* Fix import

* Update tests/unit/deploy/test_inferencer.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update test_get_logger.py

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Fix circular import in cdf normalizer (#1494)

* fix circular import in cdf normalizer

* fix pre-commit

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* 🛠️ Refactor: Split models to image and video (#1493)

* Move AiVad to anomalib.video

* Move cfa to models.image

* Add Ganomaly model to image models

* Add Fastflow model to image models

* Add EfficientAd anomaly detection model to image
models

* Move dfm, dfkde and draem

* Add CS-Flow model implementation for image-based
defect detection

* Add cflow to image models

* Add padim to image models

* Add patchcore to image models

* Add Reverse distillation to image models.

* Add rkde to image models

* Add stfpm to image models.

* Add image models for handling image datasets in
anomalib

* Update copyright year in model files

* Update import statement for Fastflow model

* Update image and video model documentation

* Update src/anomalib/models/video/README.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Update clip_length_in_frames parameter in
AvenueDataset and Avenue classes

* Remove folder references

* Fix a typo in readme

* Fix shape of image in batch

* Update clip_length_in_frames parameter

---------

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* v1: Update the readme file (#1503)

* Fix metadata path

* Ignore hidden directories in folder dataset

* Add check for mask_dir for segmentation tasks in Folder dataset

* Replace docs

* Add each inferencing scripts as a details section

* update readme

* Add training

* modify getting started

* Make getting started a subsection

* tmp

* Added inference section

* Refactor Lightning inference code

* Update entry point in setup.py

* Add training api example to readme

* Update training command in README

* Fix bug in login functionality

* Update HPO and Logging Documentation

* refactor getting started section

* Update HPO and benchmarking commands

* Update the image

* Update README.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Update README.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Remove getting started section

* Update README.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Update README.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Address the reviewer comments

---------

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Extend Engine Tests (#1509)

* Add validate + predict

* Add train

* Add export tests + refactor export cli command

* Fix tests

* Fix jupyternotebook

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* v1: Create the new documentation via `sphinx-design` and `myst` (#1518)

* removed docs

* Created the new docs

* Finished get started

* Remove jupyter notebook from docs

* Add mvtec to data

* Add reference guide

* Add section for each image datasets

* Add base data modules and datasets

* v1 - 📝 Update and Enhance Docstrings (#1532)

* removed docs

* Created the new docs

* Finished get started

* Remove jupyter notebook from docs

* Add mvtec to data

* Add reference guide

* initial commit

* Remove subrocess from btech

* Remove unused import and commented out code

* Add section for each image datasets

* Add base data modules and datasets

* Refactor dataset classes and add docstrings

* Add initial draft for backbone docs

* Update the docstring in folder_3d

* Update mvtec 3d docstring

* Added feature extractor tutorial

* Add a readme file to the docs

* Update folder data docstring

* Update kolektor docstrings

* Update kolektor docstring

* Update mvtec docstring

* Update visa docstrings

* Update avenue docstring

* Update cfa docstring

* Update cflow docstring

* Update csflow docstring

* Update csflow docstring

* Update dfkde docstrings

* Update dfm docstring

* Update draem docstring

* Update efficient ad docstring

* Update ganomaly docstring

* Update padim and patchcore docstrings

* Update reverse distillation docstring

* update rkde docstring

* update stfpm docstring

* Update ai-vad docstring

* Update feature extractors

* add docstring to sparse random projection

* Update dimensionality reduction components

* Exclude prompt from copying

* Normalizing flow update

* Add pro

* Add feature extractor docs

* update aupr

* Update aupr

* Update aupro

* Update auroc

* Update docs/source/markdown/guides/how_to/models/feature_extractors.md

* Update f1 and manual thresholds

* add minmax

* add optimal f1

* update utils

* update comet

* add tensorboard

* update wandb

* Add callbacks

* Update deploy docstrings

* Fix pre-commit on Blasz changes

* Change the requirement file in readthedocs config file

* Partially address pr comments

* Fix the model to padim for the cli integration tests

---------

Co-authored-by: Blaž Rolih <61357777+blaz-r@users.noreply.github.com>
Co-authored-by: Blaz Rolih <blaz.rolih@gmail.com>

* Fix AI-VAD issues (#1524)

* partially fix empty bbox issue

* allow empty region detections

* add torch implementation of gmm (WIP)

* make knn mem bank persistent

* set val_split_mode to same_as_test as default to enforce deterministicness

* add unit tests and docstrings to gmm

* improve typing of knn estimator

* remove todo

* update buffer name

* fix minor mistakes in gmm implementation

* remove unnecessary tensor conversion

* fix visualization when predicting with video model

* add __init__.py to components.cluster

* check for empty bboxes in feature extractor

* reduce default batch size

* cast deep features to float

* fix device issue

* add unit tests for feature extractors

* add license header

* disable random model selection in integration tests

* typing and docstrings

* add test case for non-convergence warning

* 📝  v1 - Docs: Create a dedicated section for each model. (#1540)

* Initial commit for model components

* FIx the grid in model components

* Add image models

* Add video models

* Fix titles and do some cleanup

* reduce the sphinx version as it fails the readthedocs builds

* Fix examples for reading transforms from albumentations Compose object and deserializing from a yaml file

* Update __init__.py

* OpenVINO NNCF updates (#1534)

* Update versions of openvino and nncf

* All export functions return the model path

* Change default OV device to AUTO

* Minor changes on openvino API

* Fix pre-commit issues

* Restored onnx dependency

* Added OV export tests

* Drop export tests

* Rename path var

* Renamed test paths

* [Docs] Add average score to the FastFlow's performance results tables (#1587)

Add average score in the tables of performance results

* Update the paper title in CS-FLOW and CFLOW readme (#1579)

* Fix csflow name in readme

* Update cflow name in readme

* v1 - [Refactor] Reflect the changes in #1562 into v1 (#1595)

Reflect the changes in #1562 into v1

* ✏️ Refactor `ExportMode` to `ExportType` (#1594)

* Update export_mode to export_type

* Fix typo typel -> model

* Revert the python version in the notebook

* 📚 v1 - Modify the PR template (#1596)

* Modify the PR template

* Update pull_request_template.md

* added emojis to the checklist

* [Bug] v1: Fix default input normalization method (#1583)

Fix default input normalization method

* Modify `Engine.predict` (#1514)

* Add validate + predict

* Add train

* Add export tests + refactor export cli command

* Fix tests

* Fix jupyternotebook

* Update engine.predict + expand tests

* Fix lightning entrypoint test

* Address PR comments

* Use only Padim

* Fix commands

* Move padim to common args

* Address 1st PR comment

* Address PR comments

* Fix aivad tests

* Fix missing docstring

* Rename config to args

* Add missing ckpt_path warning in predict

* Remove ckpt_path as required parameter

* Add tests for image path in predict

* Fix image path in predict

* Address PR comments

* Fix missing checkpoint path

* Fix fastflow precommit issue

* Fix tests

* Fix test

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Fix issue with incorrect image save location (#1515)

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Upgrade gradio version to 4.x (#1608)

* upgrade gradio version to 4.x

* refactor variable names

* refactor

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* ✍ InferenceDataset->PredictDataset (#1544)

* ✍ InferenceDataset->PredictDataset

* update predict dataset references

* update predict dataset references

* update predict dataset references

* update predict dataset references

* update predict dataset references

* update notebook

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* `FeatureExtractor` -> `TimmFeatureExtractor` (#1543)

Deprecate FeatureExtractor

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Add `LearningType` and refactor enums (#1598)

* add LearningType and move enums to separate module

* add enum definitions

* move shared enums to root init

* place version above enums

* 📘 Add custom data tutorial (#1571)

* Add custom data tutorial

* Add the custom data training instructions

* Address PR comments

* Start with a classification data

* Release hazelnut toy dataset and refer to the link here.

* Update docs/source/markdown/guides/how_to/data/custom_data.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Update docs/source/markdown/guides/how_to/data/custom_data.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Update docs/source/markdown/guides/how_to/data/custom_data.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Remove no-val-test section from tutorials

* Address PR comments

---------

Co-authored-by: Dick Ameln <amelndjd@gmail.com>
Co-authored-by: Samet Akcay <sakcay@Samets-MacBook-Pro.local>

* Add URL verification for downloading dataset (#1620)

* add url path verification for dataset downloading module

* specify node version to pre-commit-config

* fix import errors on the notebooks

* 🐞 v1 - Fix training with mps accelerator (#1618)

* Convert mask to float32 in AnomalibDataset

* Convert the tensor to cpu before convrting to numpy

* replace np.float32 with np.single

* Update Engine docstrings (#1549)

Update docstrings

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Fixed shape error, allowing arbitary image sizes for EfficientAD

* Revert the previous commit

* Extend supported models in TimmFeatureExtractor (#1443)

Extend Timm feature extractor for v1.0

* 🔒 v1 - Address security issues (#1637)

* Address path traversal issues 1-3

* address traversal path 6

* Address traverse path 8

* modify the comment to make it more descriptive

* 🐞 Fix mps float64 tensor conversion issue (#1644)

Fix leftover

* 🐞 Fix metadata_path arg to metadata in OpenVINO inferencer (#1648)

Fix metadata_path arg to metadata in OpenVINO inferencer

* 🔒 Address path traversal issues (#1643)

* Address path traversal issues 1-3

* address traversal path 6

* Address traverse path 8

* modify the comment to make it more descriptive

* Update get_image_filename function to enhance the input security

* fix example

* Fix incorrect default value assignment

* Refactor project_path fixture to create temporary directory in the root directory of the project

* Update .gitignore file to include test-related files and directories

* Refactor get_image_filenames_from_dir to filter out non-image files

* Add test case for path outside base directory

* Add examples to get_filenames

* Address PR comments.

* Renamed the tmp dir

* 🔒 Add `SECURITY.md` file (#1655)

* Add SECURITY.md file

* Add security item to the type of changes in the pull request template.

* Update pr template

* replace the security emoji

* 🚀 Add zero-/few-shot model support and WinCLIP model implementation (#1575)

* add clip normalization

* initial commit for winclip

* add cosine similarity computation

* add multiscale score computation

* simplify mask generation

* add few-shot extension (unvalidated)

* refactor

* cleanup

* add todo

* formatting

* minor refactor

* add comment

* expose optimal F1 metric

* some cleanup

* add ln_after_pool logic

* remove final_ln_after_pool

* update module docstring and remove comments

* add typing and docstrings to torch model

* cleanup lightning model

* hardcode backbone

* n_shot -> k_shot

* add temperature as constant

* minor bugfix

* add typing and docstrings to utils

* set class name dynamically

* replace inf values in harmonic aggregation

* run validate before test

* set default class name to None

* formatting

* remove config

* comments

* minor bugfix

* Revert ""expose optimal F1 metric""

This reverts commit e8e1ead9601d76c743af3678f26b1eb0e06d38fb.

* more descriptive assert message

* expose scales as configurable parameter and hardcode pretrained as constant

* add readme

* add images for readme

* update docstrings

* update license headers

* ruff

* add openclip as requirement

* skip model tests for winclip

* fix visualizer test

* add example in docstring

* fix typo in function name

* typing

* imports

* docstrings

* check if model has trainer attribute

* remove pylint ignore statement

* typing

* docstring

* improve tensor shape handling

* refactor and rename class_scores function

* add docstring example

* commenting

* Update src/anomalib/models/image/winclip/torch_model.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/image/winclip/torch_model.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/image/winclip/torch_model.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* formatting

* docstrings

* docstrings

* comment

* typing

* multiscale -> multi_scale

* add winclip to docs

* add few_shot_source parameter

* use PredictDataset in WinCLIP implementation

* add learning type to winclip lightning model

* add custom model checkpoint callback to save at validation end

* remove trainer arguments from winclip model

* prune state dict for smaller model file

* add learning type logic to engine.train

* pass full path to model checkpoint

* remove training step

* enable integration tests for winclip

* fix typo

* index masks at 0

* formatting

* simplify make_masks

* validate inputs in make_masks

* add unit tests for winclip utils

* add default class_name to prompt ensemble

* add unit tests for winclip prompt ensemble

* add base class for normalization callback

* add _should_run_validation check

* add engine.model property

* use custom modelcheckpoint in tests

* update name in todos

* fix predict tests

* skip export tests for winclip

* fix mistake in model retrieval from trainer

* add model checks

* fix checks

* simplify model check

* add todo for winclip export

* add todo

* add bufferlist mixin

* update bufferlist docstring

* add setup method and register buffers

* import torch model in root of winclip module

* add unit tests for bufferlist mixin

* add unit tests for torch model

* fix transform and update docstring

* disable strict loading in export

* initialize embeddings as tensors

* add test to check if erors are raised

* add todo

* enable winclip export test

* remove device references in torch model

* restore frozen weights in load_state_dict

* make embedding collection methods private

* move state dict handling to winclip from base

* fix typo

* make generate_masks private

* increase onnx opset version

* remove future import

* update docstring

* Update src/anomalib/callbacks/normalization/__init__.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/callbacks/normalization/cdf_normalization.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/callbacks/normalization/min_max_normalization.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/engine/engine.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* typing in docstrings

* Update src/anomalib/engine/engine.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/engine/engine.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/engine/engine.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/engine/engine.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* use exception instead of assert

* update license header

* docstrings

* bufferlist -> buffer_list

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* WinCLIP attribution (#1662)

give credit to related works

* 🔀 Merge main to v1 (#1652)

* Address tiler issues (#1411)

* fix tiler

* deprecate random tile locations

* restore random tiling in tile method

* check tiling section in config

* disable tiling for ganomalu

* pad -> padding

* Refactor Reverse Distillation to match official code (#1389)

* Non-mandatory early stopping

* Added conv4 and bn4 to OCBE

* Loss as in the official code (flattened arrays)

* Added comment on how to use torchvision model as an encoder to reproduce results in the paper

* Remove early stop from config, change default anomaly_map_mode to add

* pre-commit fix

* Updated results

* Update src/anomalib/models/reverse_distillation/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/reverse_distillation/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/reverse_distillation/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Remove early_stopping

* Update src/anomalib/models/reverse_distillation/lightning_model.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Easier to read code

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Patch for the WinError183 on the OpenVino export mode (#1386)

* Fix WinError183 (Windows Error)

* Add commentary of the change

---------

Co-authored-by: Youho99 <gaylord.giret@viacesi.fr>

* Add DSR model (#1142)

* added license, init.py and draft readme

* added draft DSR files

* minor comment update

* Implemented dsr model + comments

* added dsr discrete model

* added defect generation in torch model + dsr to list of existing methods in init.py

* fixed torch model, started implementing lightning model, implemented anomaly generator

* added loss file for DSR

* Added loss, improved lightning module

* Finished up global implementation of DSR second phase

* minor fixes

* Bugfixes

* Fixed DSR loss calculation

* on_training_start -> on_train_start

* pre-commit run

* updated DSR documentation

* reset config file

* added automatic pretraining weight download

* testing pretrained weights. fixed embedding size in upsampling module and image recon module, to be fixed in original branch

* successful testing on pretrained dsr weights

* checked test quality with pretrained weights, fixed anomaly score calculation

* training is functional

* Fixed training procedure

* test still working

* working upsampling module training and testing

* fixed minor bugs

* updated documentation

* added tests and doc

* adapted learning schedule to steps

* Update src/anomalib/models/dsr/anomaly_generator.py

Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* Apply suggestions from code review

Co-authored-by: Samet Akcay <samet.akcay@intel.com>
Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* refactored outputs into dicts

* remove super() args

* changed downloading weights from anomalib releases + minor fixes

* pre commit hooks + minor fixes

* removed configurable ckpt path refs + default iteration nb from paper

* cleaned up dsr.rst and turned exceptions into RuntimeErrors

* Added upsampling ratio parameter to set third training phase epochs

* Added batched evalaution + minor code simplification

* pre commit hooks

* squeeze output image score tensor

* readded new path check in efficient ad

* fixed double step count with manual optimization

* fixed trailing whitespace

* Fix black issues

* Apply suggestions from code review

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* review suggestions

* updated architecture image links

* Address mypy

* changed output types for dsr model

* readded dict outputs, adapted to TorchInferencer

* fixed error in output dict

* removed default imagenet norm

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>
Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* Fix unexpected key pixel_metrics.AUPRO.fpr_limit (#1055)

* fix unexpected key pixel_metrics.AUPRO.fpr_limit

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>

* load AUPRO before create_metric_collection

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>

* code refine

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>

* fix comment

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>

* fix

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>

* Support test

Signed-off-by: Kang Wenjing <wenjing.kang@intel.com>

* Update test

Signed-off-by: Kang Wenjing <wenjing.kang@intel.com>

* Update test

Signed-off-by: Kang Wenjing <wenjing.kang@intel.com>

---------

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>
Signed-off-by: Kang Wenjing <wenjing.kang@intel.com>
Co-authored-by: FanJiangIntel <fan.jiang@intel.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Improved speed and memory usage of mean+std calculation (#1457)

* preexisting OpenCV version check added to `setup.py`, ran formatting pre-commit hooks on previous contribution. (#1424)

* testing upstream switch

* picked up on stale OpenCV `setup.py` issue #1041

* 🐞 Hotfix: Limit Gradio Version (#1458)

* Fix metadata path

* Ignore hidden directories in folder dataset

* Add check for mask_dir for segmentation tasks in Folder dataset

* Limit the gradio version to <4

* Fix/efficient ad normalize before every validation (#1441)

* Normalize anomaly maps before every validation

* Remove print statement

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Fix DRAEM (#1431)

* Fix beta in augmenter

* Add scheduler

* Change normalization to none

* Replace two lr schedulers with MultiStepLR

* Revert change to beta

* Disable early stopping default

* Format config

* Add opacity parameter beta to config

* Adding U-Flow method (#1415)

* Added uflow model

* Added documentation (README) for uflow model

* Added uflow to the list of available models, and main README updated

* Added missing images for the documentation

* Update src/anomalib/models/uflow/anomaly_map.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/uflow/anomaly_map.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/uflow/feature_extraction.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/uflow/torch_model.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Added uflow to the reference guide in docs

* Added uflow to the pre-merge tests

* removed the _step function, and merged the code with training_step

* added as a comment the values used in the paper

* re-factorized feature extractors to use the TimmFeatureExtractor class

* added annotations for some functions, where the flow graph is created

* updated readme to fix images loading

* Added link in the README to the original code for reproducing the results

* Removed unused kwargs

* Added docstrigs with args explanations to UFlow classes

* Added models in a github release, and linked here

* Passing all pre-commit checks

* Changed freia's AllInOneBlock by Anomalib's version, and converted the subnet contructor to a Class, in order to be pickable, that is needed to export the model to torch

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update README.md

* 📘 Announce anomalib v1 on the main `README.md` (#1542)

* Fix metadata path

* Ignore hidden directories in folder dataset

* Add check for mask_dir for segmentation tasks in Folder dataset

* Limit the gradio version to <4

* Announce anomalib v1 on readme

* Add the installation instructions and update the documentation link

* Fixed DSR (#1486)

* fixed DSR squeeze bug

* added comment

* Refactor/extensions custom dataset (#1562)

* Explanation how to use extension names in the config file

* Added information about extensions to the error message and control of the user input

* Easier to read code

* Replacing assert with raise

* 📚 Modify the PR template (#1611)

Update pull_request_template.md

* Fix result image URLs (#1510)

* Fix tests

* refactor path + fix issues + fix linting issues

* Migrate docs

* fix typing

* fix failing model tests

* Fix tests

* Address PR comments

* Fixed shape error, allowing arbitary image sizes for EfficientAD (#1537)

* Fixed shape error, allowing arbitrary image sizes. Replaced integer parsing by floor operation

* Replaced calculation by ceil operation. Solution of shape error is to round up and not down for the last upsample layer

* Add comment for ceil oepration

* Formatting with pre-commit hook

* Clean up badge

---------

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>
Signed-off-by: Kang Wenjing <wenjing.kang@intel.com>
Co-authored-by: Dick Ameln <dick.ameln@intel.com>
Co-authored-by: abc-125 <63813435+abc-125@users.noreply.github.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>
Co-authored-by: ggiret-thinkdeep <146845847+ggiret-thinkdeep@users.noreply.github.com>
Co-authored-by: Youho99 <gaylord.giret@viacesi.fr>
Co-authored-by: Philippe Carvalho <31983398+phcarval@users.noreply.github.com>
Co-authored-by: Wenjing Kang <wenjing.kang@intel.com>
Co-authored-by: FanJiangIntel <fan.jiang@intel.com>
Co-authored-by: belfner <belfner@belfner.com>
Co-authored-by: Abdulla Al Blooshi <76493346+abdullamatar@users.noreply.github.com>
Co-authored-by: Blaž Rolih <61357777+blaz-r@users.noreply.github.com>
Co-authored-by: Matías Tailanian <895687+mtailanian@users.noreply.github.com>
Co-authored-by: Jan Schlüter <github@jan-schlueter.de>
Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Christopher <48522299+holzweber@users.noreply.github.com>

* Update license headers

---------

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>
Signed-off-by: Kang Wenjing <wenjing.kang@intel.com>
Co-authored-by: Weilin Xu <mzweilin@gmail.com>
Co-authored-by: Samet <samet.akcay@intel.com>
Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Dick Ameln <dick.ameln@intel.com>
Co-authored-by: abc-125 <63813435+abc-125@users.noreply.github.com>
Co-authored-by: Harim Kang <harim.kang@intel.com>
Co-authored-by: Dick Ameln <amelndjd@gmail.com>
Co-authored-by: Blaž Rolih <61357777+blaz-r@users.noreply.github.com>
Co-authored-by: Blaz Rolih <blaz.rolih@gmail.com>
Co-authored-by: Adrian Boguszewski <adekboguszewski@gmail.com>
Co-authored-by: Willy Fitra Hendria <willyfitrahendria@gmail.com>
Co-authored-by: Samet Akcay <sakcay@Samets-MacBook-Pro.local>
Co-authored-by: Yunchu Lee <yunchu.lee@intel.com>
Co-authored-by: ggiret-thinkdeep <146845847+ggiret-thinkdeep@users.noreply.github.com>
Co-authored-by: Youho99 <gaylord.giret@viacesi.fr>
Co-authored-by: Philippe Carvalho <31983398+phcarval@users.noreply.github.com>
Co-authored-by: Wenjing Kang <wenjing.kang@intel.com>
Co-authored-by: FanJiangIntel <fan.jiang@intel.com>
Co-authored-by: belfner <belfner@belfner.com>
Co-authored-by: Abdulla Al Blooshi <76493346+abdullamatar@users.noreply.github.com>
Co-authored-by: Matías Tailanian <895687+mtailanian@users.noreply.github.com>
Co-authored-by: Jan Schlüter <github@jan-schlueter.de>
Co-authored-by: Christopher <48522299+holzweber@users.noreply.github.com>"
github.com/GoogleCloudPlatform/vertex-ai-samples,community-content/vertex_model_garden/model_oss/timm/handler.py,2023-12-04T15:11:07Z,copy vertex_vision_model_garden as vertex_model_garden (#2565)
github.com/nianticlabs/simplerecon,modules/networks.py,2022-12-31T13:25:10Z,"Fixed intrinsics, flip augmentation, and projection."
github.com/nianticlabs/simplerecon,modules/networks.py,2022-09-01T03:29:04Z,Hello World!
github.com/IDEA-Research/DWPose,ControlNet-v1-1-nightly/ldm/modules/midas/midas/vit.py,2023-07-28T02:39:55Z,open code controlnet
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/re_identification/utils.py,2022-02-14T06:40:33Z,update code & docs for da/reid
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/re_identification/utils.py,2022-02-09T12:47:50Z,reorganize api structure
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/re_identification/utils.py,2021-09-26T08:41:36Z,update authors
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/re_identification/utils.py,2021-09-21T18:31:13Z,rename examples directory
github.com/buaacyw/GaussianEditor,threestudio/utils/dpt.py,2023-11-26T17:18:01Z,Initial commit
github.com/open-mmlab/mmpretrain,mmpretrain/models/backbones/timm_backbone.py,2023-05-19T08:50:04Z,"[Feature] Support multiple multi-modal algorithms and inferencers. (#1561)

* [Feat] Migrate blip caption to mmpretrain. (#50)

* Migrate blip caption to mmpretrain

* minor fix

* support train

* [Feature] Support OFA caption task. (#51)

* [Feature] Support OFA caption task.

* Remove duplicated files.

* [Feature] Support OFA vqa task. (#58)

* [Feature] Support OFA vqa task.

* Fix lint.

* [Feat] Add BLIP retrieval to mmpretrain. (#55)

* init

* minor fix for train

* fix according to comments

* refactor

* Update Blip retrieval. (#62)

* [Feature] Support OFA visual grounding task. (#59)

* [Feature] Support OFA visual grounding task.

* minor add TODO

---------

Co-authored-by: yingfhu <yingfhu@gmail.com>

* [Feat] Add flamingos coco caption and vqa. (#60)

* first init

* init flamingo coco

* add vqa

* minor fix

* remove unnecessary modules

* Update config

* Use `ApplyToList`.

---------

Co-authored-by: mzr1996 <mzr1996@163.com>

* [Feature]: BLIP2 coco retrieval  (#53)

* [Feature]: Add blip2 retriever

* [Feature]: Add blip2 all modules

* [Feature]: Refine model

* [Feature]: x1

* [Feature]: Runnable coco ret

* [Feature]: Runnable version

* [Feature]: Fix lint

* [Fix]: Fix lint

* [Feature]: Use 364 img size

* [Feature]: Refactor blip2

* [Fix]: Fix lint

* refactor files

* minor fix

* minor fix

---------

Co-authored-by: yingfhu <yingfhu@gmail.com>

* Remove

* fix blip caption inputs (#68)

* [Feat] Add BLIP NLVR support. (#67)

* first init

* init flamingo coco

* add vqa

* add nlvr

* refactor nlvr

* minor fix

* minor fix

* Update dataset

---------

Co-authored-by: mzr1996 <mzr1996@163.com>

* [Feature]: BLIP2 Caption (#70)

* [Feature]: Add language model

* [Feature]: blip2 caption forward

* [Feature]: Reproduce the results

* [Feature]: Refactor caption

* refine config

---------

Co-authored-by: yingfhu <yingfhu@gmail.com>

* [Feat] Migrate BLIP VQA to mmpretrain (#69)

* reformat

* change

* change

* change

* change

* change

* change

* change

* change

* change

* change

* change

* change

* change

* change

* change

* change

* change

* change

* change

* refactor code

---------

Co-authored-by: yingfhu <yingfhu@gmail.com>

* Update RefCOCO dataset

* [Fix] fix lint

* [Feature] Implement inference APIs for multi-modal tasks. (#65)

* [Feature] Implement inference APIs for multi-modal tasks.

* [Project] Add gradio demo.

* [Improve] Update requirements

* Update flamingo

* Update blip

* Add NLVR inferencer

* Update flamingo

* Update hugging face model register

* Update ofa vqa

* Update BLIP-vqa (#71)

* Update blip-vqa docstring (#72)

* Refine flamingo docstring (#73)

* [Feature]: BLIP2 VQA (#61)

* [Feature]: VQA forward

* [Feature]: Reproduce accuracy

* [Fix]: Fix lint

* [Fix]: Add blank line

* minor fix

---------

Co-authored-by: yingfhu <yingfhu@gmail.com>

* [Feature]: BLIP2 docstring (#74)

* [Feature]: Add caption docstring

* [Feature]: Add docstring to blip2 vqa

* [Feature]: Add docstring to retrieval

* Update BLIP-2 metafile and README (#75)

* [Feature]: Add readme and docstring

* Update blip2 results

---------

Co-authored-by: mzr1996 <mzr1996@163.com>

* [Feature] BLIP Visual Grounding on MMPretrain Branch (#66)

* blip grounding merge with mmpretrain

* remove commit

* blip grounding test and inference api

* refcoco dataset

* refcoco dataset refine config

* rebasing

* gitignore

* rebasing

* minor edit

* minor edit

* Update blip-vqa docstring (#72)

* rebasing

* Revert ""minor edit""

This reverts commit 639cec757c215e654625ed0979319e60f0be9044.

* blip grounding final

* precommit

* refine config

* refine config

* Update blip visual grounding

---------

Co-authored-by: Yiqin Wang 王逸钦 <wyq1217@outlook.com>
Co-authored-by: mzr1996 <mzr1996@163.com>

* Update visual grounding metric

* Update OFA docstring, README and metafiles. (#76)

* [Docs] Update installation docs and gradio demo docs. (#77)

* Update OFA name

* Update Visual Grounding Visualizer

* Integrate accelerate support

* Fix imports.

* Fix timm backbone

* Update imports

* Update README

* Update circle ci

* Update flamingo config

* Add gradio demo README

* [Feature]: Add scienceqa (#1571)

* [Feature]: Add scienceqa

* [Feature]: Change param name

* Update docs

* Update video

---------

Co-authored-by: Hubert <42952108+yingfhu@users.noreply.github.com>
Co-authored-by: yingfhu <yingfhu@gmail.com>
Co-authored-by: Yuan Liu <30762564+YuanLiuuuuuu@users.noreply.github.com>
Co-authored-by: Yiqin Wang 王逸钦 <wyq1217@outlook.com>
Co-authored-by: Rongjie Li <limo97@163.com>"
github.com/open-mmlab/mmpretrain,mmpretrain/models/backbones/timm_backbone.py,2023-02-17T07:20:55Z,Rename the package name to `mmpretrain`.
github.com/autogluon/autogluon,multimodal/tests/unittests/others/test_dump_model.py,2023-11-03T23:33:57Z,[AutoMM] Refactor AutoMM with learner class (#3650)
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/iqt_arch.py,2023-10-09T16:42:27Z,docs: :memo: update docs
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/iqt_arch.py,2023-10-09T11:55:23Z,docs: :memo: add docs with copilot
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/iqt_arch.py,2023-04-01T06:47:12Z,refactor: :coffin: clean unused import
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/iqt_arch.py,2022-09-01T11:41:59Z,"feat: Add MANIQA, AHIQ pretrained weights

add more pretrained models

 improve training pipeline

 add more
datasets"
github.com/guochengqian/Magic123,midas/backbones/levit.py,2023-08-03T02:51:43Z,first commit
github.com/DLLXW/data-science-competition,else/biendata-rubbish/net/model_arcface.py,2021-10-13T05:09:09Z,biendata
github.com/guochengqian/Magic123,midas/backbones/swin2.py,2023-08-03T02:51:43Z,first commit
github.com/modelscope/modelscope,modelscope/models/cv/indoor_layout_estimation/networks/backbone/vit_horizon_pry_image.py,2023-01-11T12:43:09Z,"[to #42322933] Add panovit-layout-estimation-pipeline

Link: https://code.alibaba-inc.com/Ali-MaaS/MaaS-lib/codereview/11234460"
github.com/thuml/Transfer-Learning-Library,examples/task_adaptation/image_classification/utils.py,2022-02-11T13:44:28Z,adjust doc structure; add normalization package
github.com/thuml/Transfer-Learning-Library,examples/task_adaptation/image_classification/utils.py,2022-02-09T12:47:50Z,reorganize api structure
github.com/thuml/Transfer-Learning-Library,examples/task_adaptation/image_classification/utils.py,2021-10-15T15:08:35Z,"update task adaptation

1. clean vtab datasets and add documentations;
2. add task adaptation on specialized datasets;
3. add readme.md for task adaptation"
github.com/thuml/Transfer-Learning-Library,examples/task_adaptation/image_classification/utils.py,2021-09-23T23:53:38Z,rename docs from ftlib to talib
github.com/thuml/Transfer-Learning-Library,examples/task_adaptation/image_classification/utils.py,2021-09-23T11:03:10Z,visualization and optimizer
github.com/thuml/Transfer-Learning-Library,examples/task_adaptation/image_classification/utils.py,2021-09-22T19:04:25Z,add file header comments
github.com/thuml/Transfer-Learning-Library,examples/task_adaptation/image_classification/utils.py,2021-09-21T18:31:13Z,rename examples directory
github.com/microsoft/Cream,TinyCLIP/src/open_clip/timm_model.py,2023-09-21T18:28:31Z,"Add TinyCLIP (#187)

* Tinyclip (#2)

Add TinyCLIP

---------

Co-authored-by: zhouzhenghong-gt <zhouzhenghong1999@gmail.com>

* format code

---------

Co-authored-by: zhouzhenghong-gt <zhouzhenghong1999@gmail.com>"
github.com/visual-layer/fastdup,fastdup/embeddings_timm.py,2024-01-17T08:16:32Z,updaging fastdup to 1.85
github.com/s3prl/s3prl,s3prl/upstream/ssast/ast_models.py,2022-10-22T09:10:35Z,refine ssast
github.com/s3prl/s3prl,s3prl/upstream/ssast/ast_models.py,2022-09-23T12:09:57Z,apply isort
github.com/s3prl/s3prl,s3prl/upstream/ssast/ast_models.py,2022-09-17T15:00:46Z,rebase audio upstream to the latest main
github.com/declare-lab/tango,audioldm/clap/open_clip/timm_model.py,2023-04-24T08:24:14Z,Clean commit
github.com/wandb/examples,examples/wandb-automations/utils.py,2023-05-25T22:08:11Z,"Simple Automations demo project (#414)

* starting from Thomas Capelle repo launch_minimal

* simplify for tutorial

* remove models, update logging

* remove dockerfile and dataset

* comments

* update logging code

* reduce training time with smaller training set

* update size of train and eval datasets to make it go faster

* clear job names

* format init and add comments

* change to MNIST registered model and add requirements file logging

* new registered model name

* update project name"
github.com/wandb/examples,examples/wandb-automations/train.py,2023-05-25T22:08:11Z,"Simple Automations demo project (#414)

* starting from Thomas Capelle repo launch_minimal

* simplify for tutorial

* remove models, update logging

* remove dockerfile and dataset

* comments

* update logging code

* reduce training time with smaller training set

* update size of train and eval datasets to make it go faster

* clear job names

* format init and add comments

* change to MNIST registered model and add requirements file logging

* new registered model name

* update project name"
github.com/openvinotoolkit/anomalib,src/anomalib/models/image/uflow/feature_extraction.py,2024-01-24T12:19:17Z,"🚀 V1 (#1663)

* Merge feature/lightning-version-upgrade to feature/custom-trainer (#1297)

Upgrade to Lightning 2.0.5 (#1221)

* Adapt code and configs to PL 2.0.5

* Pre-commit checks.

* Fix a function call.

* Fix function calls.

* pytorch_lightning -> lightning.pytorch

* Add lightning to requirements

---------

Co-authored-by: Weilin Xu <mzweilin@gmail.com>
Co-authored-by: Samet <samet.akcay@intel.com>

* Partially restore tests (#1298)

* Upgrade to Lightning 2.0.5 (#1221)

* Adapt code and configs to PL 2.0.5

* Pre-commit checks.

* Fix a function call.

* Fix function calls.

* pytorch_lightning -> lightning.pytorch

* Add lightning to requirements

---------

Co-authored-by: Samet <samet.akcay@intel.com>

* partially restore tests

* Address PR comments

---------

Co-authored-by: Weilin Xu <mzweilin@gmail.com>
Co-authored-by: Samet <samet.akcay@intel.com>
Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Remove future annotations (#1299)

* remove __future__

* Update changelog

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Refactor postprocessing (#1302)

* remove __future__

* Update changelog

* 🚚 Trainer -> AnomalibTrainer

* add post-processor

* Refactor callback

* Remove handler

* Address PR comments

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] refactor normalization callbacks (#1310)

* remove __future__

* Update changelog

* 🚚 Trainer -> AnomalibTrainer

* add post-processor

* Refactor callback

* Refactor normalization callback

* Match convention

* Refactor imports

* Address PR comments

* Fix path

* Refactor callbacks

* Fix module path

---------

* [Custom Trainer] Refactor thresholding (#1311)

* remove __future__

* Update changelog

* 🚚 Trainer -> AnomalibTrainer

* add post-processor

* Refactor callback

* Refactor normalization callback

* Refactor thresholding

* Match convention

* Refactor imports

* Address PR comments

* Fix path

* Refactor callbacks

* Fix module path

* Address PR comments

* Apply suggestions from code review

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* [Custom Trainer] Refactor Metrics (#1312)

* remove __future__

* Update changelog

* 🚚 Trainer -> AnomalibTrainer

* add post-processor

* Refactor callback

* Refactor normalization callback

* Refactor thresholding

* Refactor metrics configuration

* Match convention

* Refactor imports

* Address PR comments

* Fix path

* Refactor callbacks

* Fix module path

* Address PR comments

* Address PR comments

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Refactor visualization callback (#1313)

* remove __future__

* Update changelog

* 🚚 Trainer -> AnomalibTrainer

* add post-processor

* Refactor callback

* Refactor normalization callback

* Refactor thresholding

* Refactor metrics configuration

* Move visualizer callbacks into trainer

* Match convention

* Refactor imports

* Address PR comments

* Fix path

* Refactor callbacks

* Fix module path

* Address PR comments

* Remove comment

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Initial engine design (#1348)

* Initial engine design

* Address PR comments

* Circular import + trainer->engine

* Update src/anomalib/engine/engine.py

* revert import in __init__

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* [Custom Trainer] Partially fix tests (#1359)

* Partially fix test

* Address PR comments

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Add CLI support (#1381)

* Support trainer methods

* support yaml serialization

* add hpo command

* Add benchmark + train entrypoint

* Add export arguments

* Partially address PR comments

* Add export subcommands + refactor

* Address PR comments

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Partially restore tests (#1391)

* Fix tests

* Patch get experiment logger

* Sort imports

* Add stfpm config

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Add new ruff rules (#1390)

* Add rules to pyproject.toml file

* Only include padim and stfpm in tests

* Fix notebook tests

* Fix notebook tests

* Code quality/enable rules (#1394)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* Enable Ruff rules - Part III (#1397)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* Enable Ruff Rules - Part 4 (#1402)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* [Custom Trainer] Switch to manual optimization for ganomaly (#1404)

* implement manual optimizers for ganomaly

* cleanup

* Enable Ruff Rules - Part 5 (#1403)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* flake8-pie (`PIE`)

* flake8-raise (`RSE`)

* flake8-return (`RET`)

* flake8-self (`SLF`)

* flake8-simplify (`SIM`)

* flake8-unsused-arguments (`ARG`)

* Update src/anomalib/models/components/flow/all_in_one_block.py

Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* addressed pr comments

---------

Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* [Custom Trainer] Add import checks (#1393)

* Add checks

* Add checks for wandb

* move exception handling to method

* fix pre-commit issue

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Remove max epochs > 1 (#1400)

Remove max epochs>1 from default param list

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Add default values (#1395)

* Add checks

* Add default values to datasets + padim model

* update default values

* Remove merge artifact

* Change gt path

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Enable Ruff Rules - Part 6 (#1407)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* flake8-pie (`PIE`)

* flake8-raise (`RSE`)

* flake8-return (`RET`)

* flake8-self (`SLF`)

* flake8-simplify (`SIM`)

* flake8-unsused-arguments (`ARG`)

* flake8-use-pathlib (`PTH`)

* eradicate (`ERA`)

* pylint (`PL`)

* tryceratos (`TRY`), flynt (`FLY`), Perflint (`PERF`)

* NumPy-specific rules (`NPY`)

* Ruff-specific rules (`RUF`)

* Remove pylint ignore comments

* Fix tests

* Fix tests

* Enable Ruff Rules - Part 7 (#1408)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* flake8-pie (`PIE`)

* flake8-raise (`RSE`)

* flake8-return (`RET`)

* flake8-self (`SLF`)

* flake8-simplify (`SIM`)

* flake8-unsused-arguments (`ARG`)

* flake8-use-pathlib (`PTH`)

* eradicate (`ERA`)

* pylint (`PL`)

* tryceratos (`TRY`), flynt (`FLY`), Perflint (`PERF`)

* NumPy-specific rules (`NPY`)

* Ruff-specific rules (`RUF`)

* Remove pylint ignore comments

* Fix tests

* Fix tests

* mccabe (`C90`)

* pygrep-hooks (`PGH`)

* flake8-todos (`TD`)

* flake8-fixme (`FIX`)

* pandas-vet (`PD`)

* Fix random_split tests

* Fix pre-commit

* Fixed the logger test

* Fix the typos in todos

* Enable Ruff Rules - Part 8 (#1412)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* flake8-pie (`PIE`)

* flake8-raise (`RSE`)

* flake8-return (`RET`)

* flake8-self (`SLF`)

* flake8-simplify (`SIM`)

* flake8-unsused-arguments (`ARG`)

* flake8-use-pathlib (`PTH`)

* eradicate (`ERA`)

* pylint (`PL`)

* tryceratos (`TRY`), flynt (`FLY`), Perflint (`PERF`)

* NumPy-specific rules (`NPY`)

* Ruff-specific rules (`RUF`)

* Remove pylint ignore comments

* Fix tests

* Fix tests

* mccabe (`C90`)

* pygrep-hooks (`PGH`)

* flake8-todos (`TD`)

* flake8-fixme (`FIX`)

* pandas-vet (`PD`)

* ignore ANN101 ANN102 and ANN103

* Fix random_split tests

* Fix pre-commit

* ANN partly done

* Remove kwargs: Any

* flake8-annotations (`ANN`)

* Enabled tests

* Revert padim configs

* Enable Ruff Rules - Part 9 (#1419)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* flake8-pie (`PIE`)

* flake8-raise (`RSE`)

* flake8-return (`RET`)

* flake8-self (`SLF`)

* flake8-simplify (`SIM`)

* flake8-unsused-arguments (`ARG`)

* flake8-use-pathlib (`PTH`)

* eradicate (`ERA`)

* pylint (`PL`)

* tryceratos (`TRY`), flynt (`FLY`), Perflint (`PERF`)

* NumPy-specific rules (`NPY`)

* Ruff-specific rules (`RUF`)

* Remove pylint ignore comments

* Fix tests

* Fix tests

* mccabe (`C90`)

* pygrep-hooks (`PGH`)

* flake8-todos (`TD`)

* flake8-fixme (`FIX`)

* pandas-vet (`PD`)

* ignore ANN101 ANN102 and ANN103

* Fix random_split tests

* Fix pre-commit

* ANN partly done

* Remove kwargs: Any

* flake8-annotations (`ANN`)

* Enabled tests

* Revert padim configs

* Add auto fixes

* Fix docstrings

* Update src/anomalib/utils/metrics/binning.py

Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* Update src/anomalib/models/dfkde/lightning_model.py

Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* Update src/anomalib/models/rkde/feature_extractor.py

Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* Fixed pre-commit

---------

Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* Merge main into feature/custom_trainer (#1420)

* Address tiler issues (#1411)

* fix tiler

* deprecate random tile locations

* restore random tiling in tile method

* check tiling section in config

* disable tiling for ganomalu

* pad -> padding

* Refactor Reverse Distillation to match official code (#1389)

* Non-mandatory early stopping

* Added conv4 and bn4 to OCBE

* Loss as in the official code (flattened arrays)

* Added comment on how to use torchvision model as an encoder to reproduce results in the paper

* Remove early stop from config, change default anomaly_map_mode to add

* pre-commit fix

* Updated results

* Update src/anomalib/models/reverse_distillation/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/reverse_distillation/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/reverse_distillation/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Remove early_stopping

* Update src/anomalib/models/reverse_distillation/lightning_model.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Easier to read code

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

---------

Co-authored-by: Dick Ameln <dick.ameln@intel.com>
Co-authored-by: abc-125 <63813435+abc-125@users.noreply.github.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>
Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Enable Ruff Rules - Part 10 (#1423)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* flake8-pie (`PIE`)

* flake8-raise (`RSE`)

* flake8-return (`RET`)

* flake8-self (`SLF`)

* flake8-simplify (`SIM`)

* flake8-unsused-arguments (`ARG`)

* flake8-use-pathlib (`PTH`)

* eradicate (`ERA`)

* pylint (`PL`)

* tryceratos (`TRY`), flynt (`FLY`), Perflint (`PERF`)

* NumPy-specific rules (`NPY`)

* Ruff-specific rules (`RUF`)

* Remove pylint ignore comments

* Fix tests

* Fix tests

* mccabe (`C90`)

* pygrep-hooks (`PGH`)

* flake8-todos (`TD`)

* flake8-fixme (`FIX`)

* pandas-vet (`PD`)

* ignore ANN101 ANN102 and ANN103

* Fix random_split tests

* Fix pre-commit

* ANN partly done

* Remove kwargs: Any

* flake8-annotations (`ANN`)

* Enabled tests

* Revert padim configs

* Add auto fixes

* Fix docstrings

* Enabled ""PLW2901"",  # `for` loop variable `row` overwritten by assignment target

* Enable Ruff Rules - Part 11 (#1425)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* flake8-pie (`PIE`)

* flake8-raise (`RSE`)

* flake8-return (`RET`)

* flake8-self (`SLF`)

* flake8-simplify (`SIM`)

* flake8-unsused-arguments (`ARG`)

* flake8-use-pathlib (`PTH`)

* eradicate (`ERA`)

* pylint (`PL`)

* tryceratos (`TRY`), flynt (`FLY`), Perflint (`PERF`)

* NumPy-specific rules (`NPY`)

* Ruff-specific rules (`RUF`)

* Remove pylint ignore comments

* Fix tests

* Fix tests

* mccabe (`C90`)

* pygrep-hooks (`PGH`)

* flake8-todos (`TD`)

* flake8-fixme (`FIX`)

* pandas-vet (`PD`)

* ignore ANN101 ANN102 and ANN103

* Fix random_split tests

* Fix pre-commit

* ANN partly done

* Remove kwargs: Any

* flake8-annotations (`ANN`)

* Enabled tests

* Revert padim configs

* Add auto fixes

* Fix docstrings

* Enabled ""PLW2901"",  # `for` loop variable `row` overwritten by assignment target

* Add google style to pydocstyle

* Remove dashed line from Returns

* Remove dashed line from Args

* Remove dashed line from Example and Raises

* Removed left-over dashed lines

* Cleanup pyproject.toml file

* [Custom Trainer] Add a verbose help output structure to the CLI (#1396)

* Add Verbosity Help-Formatter class

* Add Help-Formatter unit-tests

* Fix some strings

* Fix pre-commit ruff stuff

* Fix help_formatter's pre-commit

* Add new configs (#1418)

* Add new configs

* Add draem config

* Fix docstring

* Update src/anomalib/models/cflow/lightning_model.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Linting

* Remove --- from docstrings

* Remove any from return type

* Fix linting issues from feature/custom_trainer

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Add CLI Tests (#1426)

* Add new configs

* Add draem config

* Stash cli tests

* Stash cli tests with minor changes

* Stash changes

* Fix reverse distillation

* Fix EfficientAD

* Match ai_vad params to config params

* Fix ucsd and ai_vad configs

* Uncomment validation step

* Refactor directory structure

* Rename method

* use uscd for aivad

* fix ucsd path + modify model checkpoint callback for tests

* fix dfkde config

* Restructure tests + fix normalization test

* Revert file

* add v1 to tox

* Skip testing ai_vad

* Increase train and test size

* use mvtec dataset

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Restructure test directories. (#1438)

* Restructured the test directories

* Fixed typo

* Fix imports

* Fix config path in export tests

* Replace black with ruff formatter (#1439)

* [Custom Trainer] Refactor export (#1440)

* Refactor export

* Fix entrypoint tests

* remove match statements

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Add ruff checks to tests (#1455)

* Fix tests + add ruff check to tests

* Limit gradio version

* Path->str

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Add dummy image dataset generator helper class (#1444)

* Created tests/v1 directory

* update license year

* Add beantech generator

* Refactor mvtec-ad and beantech

* Add visa dataset generator

* Add DummyImageGenerator

* Use DummyImageGenerator in dummy mvtec dataset generator

* Use DummyImageGenerator in dummy mvtec dataset generator

* Use DummyImageGenerator in dummy mvtec3d dataset generator

* Restructured the test directories

* Fixed typo

* Fix imports

* Fix config path in export tests

* Add kolektor dataset

* add ucsdped generator

* Fix tests

* Revert conftest.py

* add method for generating avenue dataset

* Revert conftest.py

* add method for generating shanghaitech dataset

* swap order of typing for better parsing of normalization type

* cleanup

* Dynamically create DataFormat enum

* Add examples to docstring

* address pr comments and rename dataset.py to data.py

* Fix pre-commit issues

---------

Co-authored-by: Dick Ameln <dick.ameln@intel.com>

* Remove configurable parameters (#1453)

* Refactor export

* Fix entrypoint tests

* remove match statements

* Fix tests + remove get_configurable_params + fix hpo,benchmarking

* Path->str

* Update src/anomalib/models/__init__.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/utils/sweep/config.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update tools/inference/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update tools/inference/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* str->Path

* str->Path

* Fix model checkpoint path

* typing + path + test order

* Update src/anomalib/utils/sweep/config.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Mark tests as xfail

* Fix notebook

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Dick Ameln <amelndjd@gmail.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* [v1] - Tests: Add datamodule tests. (#1456)

* Created tests/v1 directory

* update license year

* Add beantech generator

* Refactor mvtec-ad and beantech

* Add visa dataset generator

* Add DummyImageGenerator

* Use DummyImageGenerator in dummy mvtec dataset generator

* Use DummyImageGenerator in dummy mvtec dataset generator

* Use DummyImageGenerator in dummy mvtec3d dataset generator

* Restructured the test directories

* Fixed typo

* Fix imports

* Fix config path in export tests

* Add kolektor dataset

* add ucsdped generator

* Fix tests

* Revert conftest.py

* add method for generating avenue dataset

* Revert conftest.py

* add method for generating shanghaitech dataset

* swap order of typing for better parsing of normalization type

* cleanup

* create the data tests files

* Dynamically create DataFormat enum

* Add examples to docstring

* add conftest.py

* address pr comments and rename dataset.py to data.py

* add some changes

* Add test_datasets to the integration tests

* Change order

* Added datamodule tests

* Format ruff

* Address pre-commit issues

* Fix video tests

* Add the rest of the datamodule tests

---------

Co-authored-by: Dick Ameln <dick.ameln@intel.com>

* [Custom Trainer] Add train subcommand (#1465)

Add train subcommand

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Refactor `Tensor` annotation to `torch.Tensor` (#1477)

* Modify Tensor to torch.Tensor

* list[Tensor] to list[torch.Tensor]

* TODO: Fix formatting issues

* torch_all to torch.all

* Remove redundant import

* Apply ruff format

* Fix the tests

* Refactor tests Part 1 (#1473)

* Refactor CLI tests

* Select a random model

* Fix test for all the models

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Add API tests Part 2 (#1474)

* Partially migrate unit tests Part 3 (#1480)

* Refactor CLI tests

* Add api tests

* Select a random model

* Fix test for all the models

* Fix API tests

* refactor pre-post processing + get model ckpt from fixture

* Add tests for custom transforms

* Address PR comments

* Refactor ckpt_path fixture

* Update conftest.py

* Update __init__.py

* Update __init__.py

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Reorg Part I: Data (#1483)

* Update Anomalib data with the new structure

* Update dataset imports and remove unused imports

* ruff format in engine.py

* Move TaskType to utils/types

* Revert TaskType import from anomalib

* Revert tox.ini

* Refactor imports and fix import errors

* Fix import errors and update type annotations

* Fix imports in jupyter notebooks

* Refactor import statements in test_visualizer.py

* Reorg Part II: Remove `pre_processor` and `post_processor` subpackages (#1485)

* Update Anomalib data with the new structure

* Update dataset imports and remove unused imports

* ruff format in engine.py

* Move TaskType to utils/types

* Revert TaskType import from anomalib

* Revert tox.ini

* Refactor imports and fix import errors

* Fix import errors and update type annotations

* Fix imports in jupyter notebooks

* Remove pre-processor subpackage from anomalib

* Remove unused imports and update import paths

* Refactor import statements in test_visualizer.py

* Remove unused code and deprecate Denormalize and
ToNumpy classes

* Remove empty code cell

* Add a description why input image is read from path

* Fix bug in superimpose

* Migrate deploy tests Part 4 (#1481)

* Refactor CLI tests

* Add api tests

* Select a random model

* Fix test for all the models

* Fix API tests

* refactor pre-post processing + get model ckpt from fixture

* Add tests for custom transforms

* Migrate deploy tests

* trained_padim_path->ckpt_path

* Split normalization line

* Fix normalization class path

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Migrate model components unit tests Part 5 (#1482)

* Refactor CLI tests

* Add api tests

* Select a random model

* Fix test for all the models

* Fix API tests

* refactor pre-post processing + get model ckpt from fixture

* Add tests for custom transforms

* Migrate deploy tests

* Migrate model component tests

* Migrate visualizer callback + cli tests

* Fix lightning entrypoint test

* trained_padim_path->ckpt_path

* Add todo

* Fix TaskType import

* Apply suggestions from code review

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Reorg Part III: Move the main anomalib components from `anomalib.utils` to `anomalib` (#1487)

* Update Anomalib data with the new structure

* Update dataset imports and remove unused imports

* ruff format in engine.py

* Move TaskType to utils/types

* Revert TaskType import from anomalib

* Revert tox.ini

* Refactor imports and fix import errors

* Fix import errors and update type annotations

* Fix imports in jupyter notebooks

* Remove pre-processor subpackage from anomalib

* Remove unused imports and update import paths

* Refactor import statements in test_visualizer.py

* Move callbacks from utils under anomalib

* Fix import statements in benchmarking and CLI
modules

* Move CLI under anomalib

* Add benchmark to pipelines

* Move hpo to pipelines

* Move sweep to pipelines

* Move loggers to anomalib

* Move metrics to anomalib

* Move callbacks from utils to test/utils

* Move config to anomalib.utils

* Fix the metric imports

* Remove unused code and deprecate Denormalize and
ToNumpy classes

* Remove empty code cell

* Add a description why input image is read from path

* Fix bug in superimpose

* Move anomalib.utils.config.config to anomalib.utils.config

* Fix config import

* Merge feature/custom_trainer

* Migrate tools test Part 6 (#1488)

* Refactor CLI tests

* Add api tests

* Select a random model

* Fix test for all the models

* Fix API tests

* refactor pre-post processing + get model ckpt from fixture

* Add tests for custom transforms

* Migrate deploy tests

* Migrate model component tests

* Migrate visualizer callback + cli tests

* Fix lightning entrypoint test

* trained_padim_path->ckpt_path

* Migrate metrics tests

* Migrate tools + remove nightly

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* 🚜 Refactor padim and patchcore models (#1300)

* Fix metadata path

* Ignore hidden directories in folder dataset

* Add check for mask_dir for segmentation tasks in Folder dataset

* add is_fitted

* self.model._is_fitted to self.model.is_fitted

* Format anomaly module

* Remove on_save_checkpoint

* Refactor padim

* Add __repr__ to anomaly score threshold

* Revert patchcore config

* Add memory bank modules for anomaly detection

* Add explanation to MemoryBankTorchModule docstring.

* Update memory bank module imports and fix typo in
Padim model

* Rename Dynamic Buffer Module to Memory Bank
Module in docstring.

* Revert ""Add explanation to MemoryBankTorchModule docstring.""

This reverts commit 44c991450f7c78eee2b0ceb0e7c855c3893a0801.

* Refactor memory bank modules based on Dick's suggestion

* Fix model attribute assignment in lightning models

* Add MemoryBankMixin to anomaly detection models

* revert padim and patchcore

* Reorder inheritance in anomaly detection models

---------

Co-authored-by: Ashwin Vaidya <ashwin.vaidya@intel.com>

* Migrate unit tests Part 7 (#1490)

* Refactor CLI tests

* Add api tests

* Select a random model

* Fix test for all the models

* Fix API tests

* refactor pre-post processing + get model ckpt from fixture

* Add tests for custom transforms

* Migrate deploy tests

* Migrate model component tests

* Migrate visualizer callback + cli tests

* Fix lightning entrypoint test

* trained_padim_path->ckpt_path

* Migrate metrics tests

* Migrate tools + remove nightly

* Increase coverage

* Migrate remaining tests

* Fix imports

* Fix import

* Update tests/unit/deploy/test_inferencer.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update test_get_logger.py

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Fix circular import in cdf normalizer (#1494)

* fix circular import in cdf normalizer

* fix pre-commit

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* 🛠️ Refactor: Split models to image and video (#1493)

* Move AiVad to anomalib.video

* Move cfa to models.image

* Add Ganomaly model to image models

* Add Fastflow model to image models

* Add EfficientAd anomaly detection model to image
models

* Move dfm, dfkde and draem

* Add CS-Flow model implementation for image-based
defect detection

* Add cflow to image models

* Add padim to image models

* Add patchcore to image models

* Add Reverse distillation to image models.

* Add rkde to image models

* Add stfpm to image models.

* Add image models for handling image datasets in
anomalib

* Update copyright year in model files

* Update import statement for Fastflow model

* Update image and video model documentation

* Update src/anomalib/models/video/README.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Update clip_length_in_frames parameter in
AvenueDataset and Avenue classes

* Remove folder references

* Fix a typo in readme

* Fix shape of image in batch

* Update clip_length_in_frames parameter

---------

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* v1: Update the readme file (#1503)

* Fix metadata path

* Ignore hidden directories in folder dataset

* Add check for mask_dir for segmentation tasks in Folder dataset

* Replace docs

* Add each inferencing scripts as a details section

* update readme

* Add training

* modify getting started

* Make getting started a subsection

* tmp

* Added inference section

* Refactor Lightning inference code

* Update entry point in setup.py

* Add training api example to readme

* Update training command in README

* Fix bug in login functionality

* Update HPO and Logging Documentation

* refactor getting started section

* Update HPO and benchmarking commands

* Update the image

* Update README.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Update README.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Remove getting started section

* Update README.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Update README.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Address the reviewer comments

---------

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Extend Engine Tests (#1509)

* Add validate + predict

* Add train

* Add export tests + refactor export cli command

* Fix tests

* Fix jupyternotebook

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* v1: Create the new documentation via `sphinx-design` and `myst` (#1518)

* removed docs

* Created the new docs

* Finished get started

* Remove jupyter notebook from docs

* Add mvtec to data

* Add reference guide

* Add section for each image datasets

* Add base data modules and datasets

* v1 - 📝 Update and Enhance Docstrings (#1532)

* removed docs

* Created the new docs

* Finished get started

* Remove jupyter notebook from docs

* Add mvtec to data

* Add reference guide

* initial commit

* Remove subrocess from btech

* Remove unused import and commented out code

* Add section for each image datasets

* Add base data modules and datasets

* Refactor dataset classes and add docstrings

* Add initial draft for backbone docs

* Update the docstring in folder_3d

* Update mvtec 3d docstring

* Added feature extractor tutorial

* Add a readme file to the docs

* Update folder data docstring

* Update kolektor docstrings

* Update kolektor docstring

* Update mvtec docstring

* Update visa docstrings

* Update avenue docstring

* Update cfa docstring

* Update cflow docstring

* Update csflow docstring

* Update csflow docstring

* Update dfkde docstrings

* Update dfm docstring

* Update draem docstring

* Update efficient ad docstring

* Update ganomaly docstring

* Update padim and patchcore docstrings

* Update reverse distillation docstring

* update rkde docstring

* update stfpm docstring

* Update ai-vad docstring

* Update feature extractors

* add docstring to sparse random projection

* Update dimensionality reduction components

* Exclude prompt from copying

* Normalizing flow update

* Add pro

* Add feature extractor docs

* update aupr

* Update aupr

* Update aupro

* Update auroc

* Update docs/source/markdown/guides/how_to/models/feature_extractors.md

* Update f1 and manual thresholds

* add minmax

* add optimal f1

* update utils

* update comet

* add tensorboard

* update wandb

* Add callbacks

* Update deploy docstrings

* Fix pre-commit on Blasz changes

* Change the requirement file in readthedocs config file

* Partially address pr comments

* Fix the model to padim for the cli integration tests

---------

Co-authored-by: Blaž Rolih <61357777+blaz-r@users.noreply.github.com>
Co-authored-by: Blaz Rolih <blaz.rolih@gmail.com>

* Fix AI-VAD issues (#1524)

* partially fix empty bbox issue

* allow empty region detections

* add torch implementation of gmm (WIP)

* make knn mem bank persistent

* set val_split_mode to same_as_test as default to enforce deterministicness

* add unit tests and docstrings to gmm

* improve typing of knn estimator

* remove todo

* update buffer name

* fix minor mistakes in gmm implementation

* remove unnecessary tensor conversion

* fix visualization when predicting with video model

* add __init__.py to components.cluster

* check for empty bboxes in feature extractor

* reduce default batch size

* cast deep features to float

* fix device issue

* add unit tests for feature extractors

* add license header

* disable random model selection in integration tests

* typing and docstrings

* add test case for non-convergence warning

* 📝  v1 - Docs: Create a dedicated section for each model. (#1540)

* Initial commit for model components

* FIx the grid in model components

* Add image models

* Add video models

* Fix titles and do some cleanup

* reduce the sphinx version as it fails the readthedocs builds

* Fix examples for reading transforms from albumentations Compose object and deserializing from a yaml file

* Update __init__.py

* OpenVINO NNCF updates (#1534)

* Update versions of openvino and nncf

* All export functions return the model path

* Change default OV device to AUTO

* Minor changes on openvino API

* Fix pre-commit issues

* Restored onnx dependency

* Added OV export tests

* Drop export tests

* Rename path var

* Renamed test paths

* [Docs] Add average score to the FastFlow's performance results tables (#1587)

Add average score in the tables of performance results

* Update the paper title in CS-FLOW and CFLOW readme (#1579)

* Fix csflow name in readme

* Update cflow name in readme

* v1 - [Refactor] Reflect the changes in #1562 into v1 (#1595)

Reflect the changes in #1562 into v1

* ✏️ Refactor `ExportMode` to `ExportType` (#1594)

* Update export_mode to export_type

* Fix typo typel -> model

* Revert the python version in the notebook

* 📚 v1 - Modify the PR template (#1596)

* Modify the PR template

* Update pull_request_template.md

* added emojis to the checklist

* [Bug] v1: Fix default input normalization method (#1583)

Fix default input normalization method

* Modify `Engine.predict` (#1514)

* Add validate + predict

* Add train

* Add export tests + refactor export cli command

* Fix tests

* Fix jupyternotebook

* Update engine.predict + expand tests

* Fix lightning entrypoint test

* Address PR comments

* Use only Padim

* Fix commands

* Move padim to common args

* Address 1st PR comment

* Address PR comments

* Fix aivad tests

* Fix missing docstring

* Rename config to args

* Add missing ckpt_path warning in predict

* Remove ckpt_path as required parameter

* Add tests for image path in predict

* Fix image path in predict

* Address PR comments

* Fix missing checkpoint path

* Fix fastflow precommit issue

* Fix tests

* Fix test

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Fix issue with incorrect image save location (#1515)

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Upgrade gradio version to 4.x (#1608)

* upgrade gradio version to 4.x

* refactor variable names

* refactor

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* ✍ InferenceDataset->PredictDataset (#1544)

* ✍ InferenceDataset->PredictDataset

* update predict dataset references

* update predict dataset references

* update predict dataset references

* update predict dataset references

* update predict dataset references

* update notebook

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* `FeatureExtractor` -> `TimmFeatureExtractor` (#1543)

Deprecate FeatureExtractor

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Add `LearningType` and refactor enums (#1598)

* add LearningType and move enums to separate module

* add enum definitions

* move shared enums to root init

* place version above enums

* 📘 Add custom data tutorial (#1571)

* Add custom data tutorial

* Add the custom data training instructions

* Address PR comments

* Start with a classification data

* Release hazelnut toy dataset and refer to the link here.

* Update docs/source/markdown/guides/how_to/data/custom_data.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Update docs/source/markdown/guides/how_to/data/custom_data.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Update docs/source/markdown/guides/how_to/data/custom_data.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Remove no-val-test section from tutorials

* Address PR comments

---------

Co-authored-by: Dick Ameln <amelndjd@gmail.com>
Co-authored-by: Samet Akcay <sakcay@Samets-MacBook-Pro.local>

* Add URL verification for downloading dataset (#1620)

* add url path verification for dataset downloading module

* specify node version to pre-commit-config

* fix import errors on the notebooks

* 🐞 v1 - Fix training with mps accelerator (#1618)

* Convert mask to float32 in AnomalibDataset

* Convert the tensor to cpu before convrting to numpy

* replace np.float32 with np.single

* Update Engine docstrings (#1549)

Update docstrings

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Fixed shape error, allowing arbitary image sizes for EfficientAD

* Revert the previous commit

* Extend supported models in TimmFeatureExtractor (#1443)

Extend Timm feature extractor for v1.0

* 🔒 v1 - Address security issues (#1637)

* Address path traversal issues 1-3

* address traversal path 6

* Address traverse path 8

* modify the comment to make it more descriptive

* 🐞 Fix mps float64 tensor conversion issue (#1644)

Fix leftover

* 🐞 Fix metadata_path arg to metadata in OpenVINO inferencer (#1648)

Fix metadata_path arg to metadata in OpenVINO inferencer

* 🔒 Address path traversal issues (#1643)

* Address path traversal issues 1-3

* address traversal path 6

* Address traverse path 8

* modify the comment to make it more descriptive

* Update get_image_filename function to enhance the input security

* fix example

* Fix incorrect default value assignment

* Refactor project_path fixture to create temporary directory in the root directory of the project

* Update .gitignore file to include test-related files and directories

* Refactor get_image_filenames_from_dir to filter out non-image files

* Add test case for path outside base directory

* Add examples to get_filenames

* Address PR comments.

* Renamed the tmp dir

* 🔒 Add `SECURITY.md` file (#1655)

* Add SECURITY.md file

* Add security item to the type of changes in the pull request template.

* Update pr template

* replace the security emoji

* 🚀 Add zero-/few-shot model support and WinCLIP model implementation (#1575)

* add clip normalization

* initial commit for winclip

* add cosine similarity computation

* add multiscale score computation

* simplify mask generation

* add few-shot extension (unvalidated)

* refactor

* cleanup

* add todo

* formatting

* minor refactor

* add comment

* expose optimal F1 metric

* some cleanup

* add ln_after_pool logic

* remove final_ln_after_pool

* update module docstring and remove comments

* add typing and docstrings to torch model

* cleanup lightning model

* hardcode backbone

* n_shot -> k_shot

* add temperature as constant

* minor bugfix

* add typing and docstrings to utils

* set class name dynamically

* replace inf values in harmonic aggregation

* run validate before test

* set default class name to None

* formatting

* remove config

* comments

* minor bugfix

* Revert ""expose optimal F1 metric""

This reverts commit e8e1ead9601d76c743af3678f26b1eb0e06d38fb.

* more descriptive assert message

* expose scales as configurable parameter and hardcode pretrained as constant

* add readme

* add images for readme

* update docstrings

* update license headers

* ruff

* add openclip as requirement

* skip model tests for winclip

* fix visualizer test

* add example in docstring

* fix typo in function name

* typing

* imports

* docstrings

* check if model has trainer attribute

* remove pylint ignore statement

* typing

* docstring

* improve tensor shape handling

* refactor and rename class_scores function

* add docstring example

* commenting

* Update src/anomalib/models/image/winclip/torch_model.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/image/winclip/torch_model.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/image/winclip/torch_model.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* formatting

* docstrings

* docstrings

* comment

* typing

* multiscale -> multi_scale

* add winclip to docs

* add few_shot_source parameter

* use PredictDataset in WinCLIP implementation

* add learning type to winclip lightning model

* add custom model checkpoint callback to save at validation end

* remove trainer arguments from winclip model

* prune state dict for smaller model file

* add learning type logic to engine.train

* pass full path to model checkpoint

* remove training step

* enable integration tests for winclip

* fix typo

* index masks at 0

* formatting

* simplify make_masks

* validate inputs in make_masks

* add unit tests for winclip utils

* add default class_name to prompt ensemble

* add unit tests for winclip prompt ensemble

* add base class for normalization callback

* add _should_run_validation check

* add engine.model property

* use custom modelcheckpoint in tests

* update name in todos

* fix predict tests

* skip export tests for winclip

* fix mistake in model retrieval from trainer

* add model checks

* fix checks

* simplify model check

* add todo for winclip export

* add todo

* add bufferlist mixin

* update bufferlist docstring

* add setup method and register buffers

* import torch model in root of winclip module

* add unit tests for bufferlist mixin

* add unit tests for torch model

* fix transform and update docstring

* disable strict loading in export

* initialize embeddings as tensors

* add test to check if erors are raised

* add todo

* enable winclip export test

* remove device references in torch model

* restore frozen weights in load_state_dict

* make embedding collection methods private

* move state dict handling to winclip from base

* fix typo

* make generate_masks private

* increase onnx opset version

* remove future import

* update docstring

* Update src/anomalib/callbacks/normalization/__init__.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/callbacks/normalization/cdf_normalization.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/callbacks/normalization/min_max_normalization.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/engine/engine.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* typing in docstrings

* Update src/anomalib/engine/engine.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/engine/engine.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/engine/engine.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/engine/engine.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* use exception instead of assert

* update license header

* docstrings

* bufferlist -> buffer_list

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* WinCLIP attribution (#1662)

give credit to related works

* 🔀 Merge main to v1 (#1652)

* Address tiler issues (#1411)

* fix tiler

* deprecate random tile locations

* restore random tiling in tile method

* check tiling section in config

* disable tiling for ganomalu

* pad -> padding

* Refactor Reverse Distillation to match official code (#1389)

* Non-mandatory early stopping

* Added conv4 and bn4 to OCBE

* Loss as in the official code (flattened arrays)

* Added comment on how to use torchvision model as an encoder to reproduce results in the paper

* Remove early stop from config, change default anomaly_map_mode to add

* pre-commit fix

* Updated results

* Update src/anomalib/models/reverse_distillation/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/reverse_distillation/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/reverse_distillation/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Remove early_stopping

* Update src/anomalib/models/reverse_distillation/lightning_model.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Easier to read code

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Patch for the WinError183 on the OpenVino export mode (#1386)

* Fix WinError183 (Windows Error)

* Add commentary of the change

---------

Co-authored-by: Youho99 <gaylord.giret@viacesi.fr>

* Add DSR model (#1142)

* added license, init.py and draft readme

* added draft DSR files

* minor comment update

* Implemented dsr model + comments

* added dsr discrete model

* added defect generation in torch model + dsr to list of existing methods in init.py

* fixed torch model, started implementing lightning model, implemented anomaly generator

* added loss file for DSR

* Added loss, improved lightning module

* Finished up global implementation of DSR second phase

* minor fixes

* Bugfixes

* Fixed DSR loss calculation

* on_training_start -> on_train_start

* pre-commit run

* updated DSR documentation

* reset config file

* added automatic pretraining weight download

* testing pretrained weights. fixed embedding size in upsampling module and image recon module, to be fixed in original branch

* successful testing on pretrained dsr weights

* checked test quality with pretrained weights, fixed anomaly score calculation

* training is functional

* Fixed training procedure

* test still working

* working upsampling module training and testing

* fixed minor bugs

* updated documentation

* added tests and doc

* adapted learning schedule to steps

* Update src/anomalib/models/dsr/anomaly_generator.py

Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* Apply suggestions from code review

Co-authored-by: Samet Akcay <samet.akcay@intel.com>
Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* refactored outputs into dicts

* remove super() args

* changed downloading weights from anomalib releases + minor fixes

* pre commit hooks + minor fixes

* removed configurable ckpt path refs + default iteration nb from paper

* cleaned up dsr.rst and turned exceptions into RuntimeErrors

* Added upsampling ratio parameter to set third training phase epochs

* Added batched evalaution + minor code simplification

* pre commit hooks

* squeeze output image score tensor

* readded new path check in efficient ad

* fixed double step count with manual optimization

* fixed trailing whitespace

* Fix black issues

* Apply suggestions from code review

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* review suggestions

* updated architecture image links

* Address mypy

* changed output types for dsr model

* readded dict outputs, adapted to TorchInferencer

* fixed error in output dict

* removed default imagenet norm

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>
Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* Fix unexpected key pixel_metrics.AUPRO.fpr_limit (#1055)

* fix unexpected key pixel_metrics.AUPRO.fpr_limit

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>

* load AUPRO before create_metric_collection

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>

* code refine

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>

* fix comment

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>

* fix

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>

* Support test

Signed-off-by: Kang Wenjing <wenjing.kang@intel.com>

* Update test

Signed-off-by: Kang Wenjing <wenjing.kang@intel.com>

* Update test

Signed-off-by: Kang Wenjing <wenjing.kang@intel.com>

---------

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>
Signed-off-by: Kang Wenjing <wenjing.kang@intel.com>
Co-authored-by: FanJiangIntel <fan.jiang@intel.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Improved speed and memory usage of mean+std calculation (#1457)

* preexisting OpenCV version check added to `setup.py`, ran formatting pre-commit hooks on previous contribution. (#1424)

* testing upstream switch

* picked up on stale OpenCV `setup.py` issue #1041

* 🐞 Hotfix: Limit Gradio Version (#1458)

* Fix metadata path

* Ignore hidden directories in folder dataset

* Add check for mask_dir for segmentation tasks in Folder dataset

* Limit the gradio version to <4

* Fix/efficient ad normalize before every validation (#1441)

* Normalize anomaly maps before every validation

* Remove print statement

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Fix DRAEM (#1431)

* Fix beta in augmenter

* Add scheduler

* Change normalization to none

* Replace two lr schedulers with MultiStepLR

* Revert change to beta

* Disable early stopping default

* Format config

* Add opacity parameter beta to config

* Adding U-Flow method (#1415)

* Added uflow model

* Added documentation (README) for uflow model

* Added uflow to the list of available models, and main README updated

* Added missing images for the documentation

* Update src/anomalib/models/uflow/anomaly_map.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/uflow/anomaly_map.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/uflow/feature_extraction.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/uflow/torch_model.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Added uflow to the reference guide in docs

* Added uflow to the pre-merge tests

* removed the _step function, and merged the code with training_step

* added as a comment the values used in the paper

* re-factorized feature extractors to use the TimmFeatureExtractor class

* added annotations for some functions, where the flow graph is created

* updated readme to fix images loading

* Added link in the README to the original code for reproducing the results

* Removed unused kwargs

* Added docstrigs with args explanations to UFlow classes

* Added models in a github release, and linked here

* Passing all pre-commit checks

* Changed freia's AllInOneBlock by Anomalib's version, and converted the subnet contructor to a Class, in order to be pickable, that is needed to export the model to torch

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update README.md

* 📘 Announce anomalib v1 on the main `README.md` (#1542)

* Fix metadata path

* Ignore hidden directories in folder dataset

* Add check for mask_dir for segmentation tasks in Folder dataset

* Limit the gradio version to <4

* Announce anomalib v1 on readme

* Add the installation instructions and update the documentation link

* Fixed DSR (#1486)

* fixed DSR squeeze bug

* added comment

* Refactor/extensions custom dataset (#1562)

* Explanation how to use extension names in the config file

* Added information about extensions to the error message and control of the user input

* Easier to read code

* Replacing assert with raise

* 📚 Modify the PR template (#1611)

Update pull_request_template.md

* Fix result image URLs (#1510)

* Fix tests

* refactor path + fix issues + fix linting issues

* Migrate docs

* fix typing

* fix failing model tests

* Fix tests

* Address PR comments

* Fixed shape error, allowing arbitary image sizes for EfficientAD (#1537)

* Fixed shape error, allowing arbitrary image sizes. Replaced integer parsing by floor operation

* Replaced calculation by ceil operation. Solution of shape error is to round up and not down for the last upsample layer

* Add comment for ceil oepration

* Formatting with pre-commit hook

* Clean up badge

---------

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>
Signed-off-by: Kang Wenjing <wenjing.kang@intel.com>
Co-authored-by: Dick Ameln <dick.ameln@intel.com>
Co-authored-by: abc-125 <63813435+abc-125@users.noreply.github.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>
Co-authored-by: ggiret-thinkdeep <146845847+ggiret-thinkdeep@users.noreply.github.com>
Co-authored-by: Youho99 <gaylord.giret@viacesi.fr>
Co-authored-by: Philippe Carvalho <31983398+phcarval@users.noreply.github.com>
Co-authored-by: Wenjing Kang <wenjing.kang@intel.com>
Co-authored-by: FanJiangIntel <fan.jiang@intel.com>
Co-authored-by: belfner <belfner@belfner.com>
Co-authored-by: Abdulla Al Blooshi <76493346+abdullamatar@users.noreply.github.com>
Co-authored-by: Blaž Rolih <61357777+blaz-r@users.noreply.github.com>
Co-authored-by: Matías Tailanian <895687+mtailanian@users.noreply.github.com>
Co-authored-by: Jan Schlüter <github@jan-schlueter.de>
Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Christopher <48522299+holzweber@users.noreply.github.com>

* Update license headers

---------

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>
Signed-off-by: Kang Wenjing <wenjing.kang@intel.com>
Co-authored-by: Weilin Xu <mzweilin@gmail.com>
Co-authored-by: Samet <samet.akcay@intel.com>
Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Dick Ameln <dick.ameln@intel.com>
Co-authored-by: abc-125 <63813435+abc-125@users.noreply.github.com>
Co-authored-by: Harim Kang <harim.kang@intel.com>
Co-authored-by: Dick Ameln <amelndjd@gmail.com>
Co-authored-by: Blaž Rolih <61357777+blaz-r@users.noreply.github.com>
Co-authored-by: Blaz Rolih <blaz.rolih@gmail.com>
Co-authored-by: Adrian Boguszewski <adekboguszewski@gmail.com>
Co-authored-by: Willy Fitra Hendria <willyfitrahendria@gmail.com>
Co-authored-by: Samet Akcay <sakcay@Samets-MacBook-Pro.local>
Co-authored-by: Yunchu Lee <yunchu.lee@intel.com>
Co-authored-by: ggiret-thinkdeep <146845847+ggiret-thinkdeep@users.noreply.github.com>
Co-authored-by: Youho99 <gaylord.giret@viacesi.fr>
Co-authored-by: Philippe Carvalho <31983398+phcarval@users.noreply.github.com>
Co-authored-by: Wenjing Kang <wenjing.kang@intel.com>
Co-authored-by: FanJiangIntel <fan.jiang@intel.com>
Co-authored-by: belfner <belfner@belfner.com>
Co-authored-by: Abdulla Al Blooshi <76493346+abdullamatar@users.noreply.github.com>
Co-authored-by: Matías Tailanian <895687+mtailanian@users.noreply.github.com>
Co-authored-by: Jan Schlüter <github@jan-schlueter.de>
Co-authored-by: Christopher <48522299+holzweber@users.noreply.github.com>"
github.com/NVlabs/FasterViT,onnx_convert.py,2023-09-05T07:39:47Z,Remove onnxsim from exporter flow
github.com/NVlabs/FasterViT,onnx_convert.py,2023-09-04T16:10:40Z,"update onnx conversion script

Signed-off-by: ahatamizadeh <ahatamizadeh@nvidia.com>"
github.com/NVlabs/FasterViT,onnx_convert.py,2023-06-29T15:08:07Z,Initialize any-resolution FasterViT from ImageNet-pretrained weights
github.com/NVlabs/FasterViT,onnx_convert.py,2023-06-21T03:45:05Z,update onnx conversion script
github.com/NVlabs/FasterViT,onnx_convert.py,2023-06-21T01:39:22Z,"minor fixes

Signed-off-by: ahatamizadeh <ahatamizadeh@nvidia.com>"
github.com/NVlabs/FasterViT,onnx_convert.py,2023-06-19T07:32:15Z,"fix onnx_convert

Signed-off-by: ahatamizadeh <ahatamizadeh@nvidia.com>"
github.com/NVlabs/FasterViT,onnx_convert.py,2023-06-19T06:55:00Z,"add fastervit pip package

Signed-off-by: ahatamizadeh <ahatamizadeh@nvidia.com>"
github.com/NVlabs/FasterViT,onnx_convert.py,2023-06-09T22:53:06Z,"add fastervit code and models

Signed-off-by: ahatamizadeh <ahatamizadeh@nvidia.com>"
github.com/roatienza/Deep-Learning-Experiments,versions/2022/tools/python/accelerate_demo.py,2022-03-12T15:51:37Z,wandb and accel
github.com/roatienza/Deep-Learning-Experiments,versions/2022/tools/python/accelerate_demo.py,2022-03-11T05:44:45Z,accelerator demo
github.com/roatienza/Deep-Learning-Experiments,versions/2022/tools/python/accelerate_demo.py,2022-03-11T03:47:31Z,accelerate demo
github.com/RobustBench/robustbench,robustbench/data.py,2023-05-24T23:37:43Z,"Fix bug loading CIFAR corruptions

Loading CIFAR corruptions currently does not provide the type of corruptions (`ThreatModel.corruptions`), resulting in an error about unsupported operand type between a Path and dict. This resolves the issue."
github.com/RobustBench/robustbench,robustbench/data.py,2023-04-10T09:37:45Z,add Tian2022Deeper and Erichson2022NoisyMix_new; better support of 3DCC (+ correct default preprocessing for imagenet corruptions)
github.com/RobustBench/robustbench,robustbench/data.py,2023-04-09T10:32:13Z,better 3dcc eval: work in progress
github.com/RobustBench/robustbench,robustbench/data.py,2023-03-15T19:47:48Z,add models from Singh2023Revisiting
github.com/RobustBench/robustbench,robustbench/data.py,2022-11-28T10:31:49Z,Fix issue with preprocessing and ImageNet-3D
github.com/RobustBench/robustbench,robustbench/data.py,2022-10-27T09:32:43Z,WIP fix for #105
github.com/RobustBench/robustbench,robustbench/data.py,2022-07-30T21:51:34Z,throw error when too many images are requested
github.com/RobustBench/robustbench,robustbench/data.py,2022-04-30T16:44:18Z,ImageNet-3DCC
github.com/RobustBench/robustbench,robustbench/data.py,2022-02-24T14:09:33Z,add json file for Erichson2022NoisyMix (imagenet)
github.com/RobustBench/robustbench,robustbench/data.py,2022-02-03T11:23:26Z,Add possibility to pass Transform directly
github.com/RobustBench/robustbench,robustbench/data.py,2021-08-28T07:53:03Z,imagenet corruptions leaderboard
github.com/RobustBench/robustbench,robustbench/data.py,2021-08-27T10:15:19Z,add random seed in eval.py
github.com/RobustBench/robustbench,robustbench/data.py,2021-08-26T21:21:16Z,add imagenet linf models to model zoo (clean accuracies are verified)
github.com/RobustBench/robustbench,robustbench/data.py,2021-08-17T16:27:16Z,new loader imagenet
github.com/RobustBench/robustbench,robustbench/data.py,2021-08-01T13:30:31Z,add model specific preprocessing
github.com/RobustBench/robustbench,robustbench/data.py,2021-07-10T14:22:39Z,"add imagenet data loader, models definition and loader"
github.com/RobustBench/robustbench,robustbench/data.py,2021-04-08T08:30:07Z,Fix broken corruptions benchmark
github.com/RobustBench/robustbench,robustbench/data.py,2021-04-08T07:32:45Z,Add CIFAR-100-C download from Zenodo
github.com/RobustBench/robustbench,robustbench/data.py,2021-03-26T17:43:37Z,Re-format changed files
github.com/RobustBench/robustbench,robustbench/data.py,2021-03-26T17:18:36Z,Move from Google Drive to Zenodo for Corruptions Datasets
github.com/RobustBench/robustbench,robustbench/data.py,2021-02-19T15:42:54Z,Add inputs normalization for Hendrycks2020AugMix* nets only
github.com/RobustBench/robustbench,robustbench/data.py,2021-02-19T15:16:46Z,Add inputs normalization
github.com/RobustBench/robustbench,robustbench/data.py,2021-02-18T17:38:59Z,Remove n_examples limit in benchmark
github.com/RobustBench/robustbench,robustbench/data.py,2021-02-10T14:32:56Z,"Update CLI, fix corruptions dataset dir"
github.com/RobustBench/robustbench,robustbench/data.py,2021-02-10T14:02:23Z,Add benchmark function
github.com/RobustBench/robustbench,robustbench/data.py,2021-01-31T22:19:50Z,Add CIFAR-100 loader
github.com/RobustBench/robustbench,robustbench/data.py,2020-11-04T15:15:15Z,Configurable computing device
github.com/RobustBench/robustbench,robustbench/data.py,2020-10-15T20:40:50Z,replaced advbench to robustbench
github.com/sail-sg/Adan,CV/timm/train.py,2022-09-01T10:50:19Z,code submission
github.com/guochengqian/Magic123,midas/backbones/next_vit.py,2023-08-03T02:51:43Z,first commit
github.com/RobustBench/robustbench,robustbench/utils.py,2024-01-21T00:07:42Z,countinue fixing loading swin-t with newer timm version
github.com/RobustBench/robustbench,robustbench/utils.py,2024-01-20T23:48:08Z,fix loading swin-t with newer timm version
github.com/RobustBench/robustbench,robustbench/utils.py,2024-01-15T12:58:45Z,fix download from gdrive
github.com/RobustBench/robustbench,robustbench/utils.py,2023-09-08T12:43:15Z,"Merge pull request #154 from RobustBench/add_models_2

Add models from Peng2023Robust"
github.com/RobustBench/robustbench,robustbench/utils.py,2023-09-06T14:11:48Z,add imagenet model from Peng2023Robust
github.com/RobustBench/robustbench,robustbench/utils.py,2023-05-20T18:18:06Z,"Merge pull request #142 from RobustBench/add_models_2

Add models from Bai2023Improving"
github.com/RobustBench/robustbench,robustbench/utils.py,2023-05-18T14:18:49Z,add model info for Bai2023Improving
github.com/RobustBench/robustbench,robustbench/utils.py,2023-05-04T17:30:50Z,add models from Bai2023Improving
github.com/RobustBench/robustbench,robustbench/utils.py,2023-04-10T09:37:45Z,add Tian2022Deeper and Erichson2022NoisyMix_new; better support of 3DCC (+ correct default preprocessing for imagenet corruptions)
github.com/RobustBench/robustbench,robustbench/utils.py,2023-04-09T10:32:13Z,better 3dcc eval: work in progress
github.com/RobustBench/robustbench,robustbench/utils.py,2023-03-15T19:47:48Z,add models from Singh2023Revisiting
github.com/RobustBench/robustbench,robustbench/utils.py,2023-02-08T11:29:37Z,"add Huang2022Revisiting, Cui2020Learnable"
github.com/RobustBench/robustbench,robustbench/utils.py,2022-11-09T16:48:26Z,Fix #108
github.com/RobustBench/robustbench,robustbench/utils.py,2022-10-10T13:32:34Z,Fix issues with debenedetti2022light
github.com/RobustBench/robustbench,robustbench/utils.py,2022-09-27T12:03:21Z,Add Debenedetti2022Light and support for timm
github.com/RobustBench/robustbench,robustbench/utils.py,2022-02-17T12:34:33Z,consider external evaluations for sorting models in the readme
github.com/RobustBench/robustbench,robustbench/utils.py,2022-02-17T11:52:25Z,sort models including external evaluations
github.com/RobustBench/robustbench,robustbench/utils.py,2022-01-19T11:32:09Z,Remove need for `.cuda()` calls on ensembles
github.com/RobustBench/robustbench,robustbench/utils.py,2021-10-20T12:00:06Z,Diffenderfer2021 models added
github.com/RobustBench/robustbench,robustbench/utils.py,2021-08-28T11:24:41Z,merge imagenet branch to master
github.com/RobustBench/robustbench,robustbench/utils.py,2021-08-28T10:13:49Z,add new model Kireev2021Effectiveness_RLATAugMix
github.com/RobustBench/robustbench,robustbench/utils.py,2021-08-28T08:50:12Z,eval.py: change the default option to --to_disk=True
github.com/RobustBench/robustbench,robustbench/utils.py,2021-08-27T15:53:39Z,adapt util for latex tables to imagenet
github.com/RobustBench/robustbench,robustbench/utils.py,2021-08-27T10:18:11Z,change the default --to_disk to False and fix the ResNet-18 entry in the imagenet Linf leaderboard
github.com/RobustBench/robustbench,robustbench/utils.py,2021-08-27T10:15:19Z,add random seed in eval.py
github.com/RobustBench/robustbench,robustbench/utils.py,2021-08-26T21:21:16Z,add imagenet linf models to model zoo (clean accuracies are verified)
github.com/RobustBench/robustbench,robustbench/utils.py,2021-08-26T16:45:38Z,update util to generate latex entries
github.com/RobustBench/robustbench,robustbench/utils.py,2021-08-01T13:30:31Z,add model specific preprocessing
github.com/RobustBench/robustbench,robustbench/utils.py,2021-07-19T09:48:04Z,add new models from Augustin2020Adversarial
github.com/RobustBench/robustbench,robustbench/utils.py,2021-05-13T13:30:16Z,add GradAlign model
github.com/RobustBench/robustbench,robustbench/utils.py,2021-05-04T08:08:48Z,Fix Wu2020Adversarial
github.com/RobustBench/robustbench,robustbench/utils.py,2021-05-03T23:00:36Z,"Add new checkpoints to the model zoo

In particular, add:

- https://arxiv.org/abs/2011.11164
- https://arxiv.org/abs/2010.01278
- https://arxiv.org/abs/2003.09347

Also, fix Sitawarin2020Improving in CIFAR100, and Chen2020Efficient loading."
github.com/RobustBench/robustbench,robustbench/utils.py,2021-03-11T08:42:06Z,"Merge branch 'master' into cifar-100

# Conflicts:
#	README.md"
github.com/RobustBench/robustbench,robustbench/utils.py,2021-03-09T09:10:47Z,reduce the font for column names in the model zoo table
github.com/RobustBench/robustbench,robustbench/utils.py,2021-03-09T09:08:02Z,make the font for Model ID smaller in readme
github.com/RobustBench/robustbench,robustbench/utils.py,2021-03-09T08:56:31Z,update readme and add new models for strict=False loading
github.com/RobustBench/robustbench,robustbench/utils.py,2021-03-07T12:54:14Z,Add CIFAR100 models jsons
github.com/RobustBench/robustbench,robustbench/utils.py,2021-03-07T08:32:49Z,debug Kireev et al. models
github.com/RobustBench/robustbench,robustbench/utils.py,2021-02-24T18:29:13Z,fix bibtex style
github.com/RobustBench/robustbench,robustbench/utils.py,2021-02-24T17:57:59Z,add function to generate table
github.com/RobustBench/robustbench,robustbench/utils.py,2021-02-24T16:57:00Z,Fix `get_leaderboard_bibtex` to print entries
github.com/RobustBench/robustbench,robustbench/utils.py,2021-02-24T16:44:49Z,"Fix naming convention of AugMix models in the model zoo, add function to generate BibTeX entries"
github.com/RobustBench/robustbench,robustbench/utils.py,2021-02-19T15:42:54Z,Add inputs normalization for Hendrycks2020AugMix* nets only
github.com/RobustBench/robustbench,robustbench/utils.py,2021-02-19T11:54:40Z,Fix folders creation for saved data
github.com/RobustBench/robustbench,robustbench/utils.py,2021-02-17T11:46:16Z,Fix old fields names for robust accuracy
github.com/RobustBench/robustbench,robustbench/utils.py,2021-02-14T13:17:48Z,Fix mypy errors
github.com/RobustBench/robustbench,robustbench/utils.py,2021-02-14T13:16:10Z,Add docs for load_model
github.com/RobustBench/robustbench,robustbench/utils.py,2021-02-14T12:51:09Z,Fix issues with load_state_dict's `strict=True`
github.com/RobustBench/robustbench,robustbench/utils.py,2021-02-12T17:55:32Z,Remove unused aggregation functions for corruptions results
github.com/RobustBench/robustbench,robustbench/utils.py,2021-02-12T11:01:41Z,Make load_state_dict strict=True
github.com/RobustBench/robustbench,robustbench/utils.py,2021-02-12T09:38:05Z,Add backwards compatibility
github.com/RobustBench/robustbench,robustbench/utils.py,2021-02-10T14:32:56Z,"Update CLI, fix corruptions dataset dir"
github.com/RobustBench/robustbench,robustbench/utils.py,2021-02-10T14:14:51Z,Add possibility to save results on disk
github.com/RobustBench/robustbench,robustbench/utils.py,2021-02-10T14:02:23Z,Add benchmark function
github.com/RobustBench/robustbench,robustbench/utils.py,2021-02-07T16:20:14Z,Fix mypy issues
github.com/RobustBench/robustbench,robustbench/utils.py,2021-01-31T22:20:30Z,Fix missing exception type
github.com/RobustBench/robustbench,robustbench/utils.py,2021-01-24T17:57:01Z,Update list_available_models signature
github.com/RobustBench/robustbench,robustbench/utils.py,2021-01-24T15:37:53Z,Start refactoring models from norm to dataset + threat model
github.com/RobustBench/robustbench,robustbench/utils.py,2020-11-05T17:28:42Z,Added device argument to clean_accuracy
github.com/RobustBench/robustbench,robustbench/utils.py,2020-11-04T15:15:15Z,Configurable computing device
github.com/RobustBench/robustbench,robustbench/utils.py,2020-10-22T18:01:29Z,add models and .pt to model path
github.com/RobustBench/robustbench,robustbench/utils.py,2020-10-15T20:40:50Z,replaced advbench to robustbench
github.com/microsoft/LMOps,minillm/transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-11-16T12:47:19Z,upgrade transformers
github.com/microsoft/LMOps,minillm/transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-06-14T11:44:35Z,add minillm
github.com/declare-lab/tango,mustango/audioldm/clap/open_clip/timm_model.py,2023-11-18T05:15:59Z,Add Mustango
github.com/haoheliu/AudioLDM2,audioldm2/clap/open_clip/timm_model.py,2023-08-04T15:09:14Z,remove unused import
github.com/haoheliu/AudioLDM2,audioldm2/clap/open_clip/timm_model.py,2023-08-04T14:45:09Z,update
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2023-09-04T17:52:07Z,add cifar10 model from Peng2023Robust
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2023-08-22T11:22:08Z,add new model from Bai2023Improving
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2023-06-04T19:07:14Z,add models from Cui2023Decoupled
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2023-04-24T17:39:17Z,add model from Xu2023Exploring
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2023-02-21T13:40:37Z,add missing link
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2023-02-21T13:27:17Z,add models from Wang2023Better (1 missing)
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2023-02-08T12:01:21Z,update gdrive id
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2023-02-08T11:29:37Z,"add Huang2022Revisiting, Cui2020Learnable"
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2022-09-27T12:03:21Z,Add Debenedetti2022Light and support for timm
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2022-06-02T13:00:36Z,add models from Addepalli2022Efficient
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2022-04-04T13:23:23Z,Merge branch 'master' into add-models
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2022-04-04T13:16:40Z,add models from Jia2022LAS-AT
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2022-03-15T15:34:39Z,Pang2022Robustness models added
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2022-03-15T04:19:43Z,added updated results for Sehwag2021Proxy
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2022-02-14T13:14:08Z,add Kang2021Stable model
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2022-01-19T14:57:29Z,"Remove unused imports, add some comments"
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2022-01-19T14:42:23Z,Fix last model
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2022-01-19T11:32:09Z,Remove need for `.cuda()` calls on ensembles
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2022-01-13T11:01:39Z,changed definitions
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2022-01-13T10:02:05Z,Modas2021_PRIME models added
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-11-10T16:11:38Z,title change
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-11-10T15:56:36Z,Chen2021Low models added
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-11-04T19:06:12Z,put back standard model in linf dict in cifar10.py
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-11-02T16:39:29Z,add smaller models from Gowal2021Improving
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-10-30T17:12:02Z,small style edit
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-10-29T14:50:55Z,inner indent added
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-10-29T14:41:39Z,fix indentation
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-10-29T13:11:10Z,Merge branch 'master' into model_update
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-10-29T13:08:54Z,Dai2021 added
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-10-29T12:14:12Z,conflicts resolved?
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-10-29T12:06:17Z,names corrected
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-10-29T11:07:24Z,Addepalli2021OOAT models added
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-10-20T16:26:15Z,Merge branch 'RobustBench:master' into model_update
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-10-20T12:00:06Z,Diffenderfer2021 models added
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-10-19T16:15:18Z,add Gowal2021Improving model
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-10-19T12:49:24Z,separated model class
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-10-19T11:37:58Z,new model added
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-08-28T11:24:41Z,merge imagenet branch to master
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-08-28T10:13:49Z,add new model Kireev2021Effectiveness_RLATAugMix
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-08-28T08:41:49Z,unify jsons and include Lp models to corruption model dicts whenever they are evaluated there
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-08-28T07:53:03Z,imagenet corruptions leaderboard
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-08-26T09:17:32Z,align the model dicts more consistently
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-08-24T15:15:11Z,"add missing models, jsons and small fix in eval.py"
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-08-24T11:05:15Z,add models from Rade2021Helper
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-07-28T13:47:11Z,"add PreActResNet-18 from Rebuffi et al., 2021"
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-07-18T14:29:36Z,add links to checkpoints
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-07-18T14:04:42Z,add new models from Augustin2020Adversarial
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-06-18T13:43:34Z,"add models from Sridhar et al., 2021"
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-06-18T12:41:04Z,"add models from Sridhar et al., 2021"
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-05-19T12:52:24Z,add model for L2 with cutmix and extra data
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-05-14T17:11:28Z,add models Rebuffi2021Fixing
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-05-13T13:30:16Z,add GradAlign model
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-05-06T21:07:08Z,Fix issues with some models
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-05-06T09:07:20Z,Fix Gowal2020Uncovering (another one)
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-05-06T08:57:04Z,Fix Gowal2020Uncovering
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-05-06T07:48:45Z,Fix missing `lambda` keywords
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-05-06T07:17:47Z,Refactor models to `lambda`s whenever possible
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-05-04T10:37:17Z,Add https://arxiv.org/abs/2010.01736v1 too the model zoo
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-05-03T23:00:36Z,"Add new checkpoints to the model zoo

In particular, add:

- https://arxiv.org/abs/2011.11164
- https://arxiv.org/abs/2010.01278
- https://arxiv.org/abs/2003.09347

Also, fix Sitawarin2020Improving in CIFAR100, and Chen2020Efficient loading."
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-04-22T13:31:04Z,added lambda models + renamed keys
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-04-22T04:01:17Z,Added models from https://arxiv.org/abs/2104.09425
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-03-11T08:42:06Z,"Merge branch 'master' into cifar-100

# Conflicts:
#	README.md"
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-03-09T08:21:50Z,"rename augmix-related jsons, update footnotes, gauss100->augmix model"
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-03-07T11:59:51Z,"Add Linf-robust CIFAR-100 models to the Model Zoo.

In particular this commit adds:

- Gowal2020Uncovering
- Gowal2020Uncovering_extra
- Cui2020Learnable_34_20_LBGAT6
- Cui2020Learnable_34_10_LBGAT0
- Cui2020Learnable_34_10_LBGAT6
- Chen2020Efficient
- Wu2020Adversarial
- Sitawarin2020Improving
- Rice2020Overfitting"
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-03-07T08:32:49Z,debug Kireev et al. models
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-03-07T01:20:44Z,add Kireev2021Effectiveness models (but didnt debug yet)
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-02-24T16:44:49Z,"Fix naming convention of AugMix models in the model zoo, add function to generate BibTeX entries"
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-02-23T20:05:41Z,Add more Gowal2020Uncovering* models to the model zoo
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-02-19T18:31:59Z,Add Standard model results on CIFAR-10-C
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-02-19T15:42:54Z,Add inputs normalization for Hendrycks2020AugMix* nets only
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-02-17T10:50:14Z,Fix net naming convention in model zoo (2/2)
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-02-17T10:47:11Z,Fix net naming convention in model zoo
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-02-12T16:57:31Z,"Fix Gowal2020UncoveringNet, update Gowal2020Uncovering Linf models"
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-02-12T16:31:19Z,"Fix Gowal2020UncoveringNet, update Gowal2020Uncovering L2 models"
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-02-12T15:01:57Z,"Fix GowalUncoveringNet, by adding correct ResNet impl"
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-02-12T14:28:22Z,Fix GowalUncovering loading error
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-02-12T10:00:57Z,Fix missing ResNeXt
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-01-31T22:19:09Z,Gowal2020Uncovering L2
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-01-24T17:57:01Z,Update list_available_models signature
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar10.py,2021-01-24T15:37:53Z,Start refactoring models from norm to dataset + threat model
github.com/microsoft/LMOps,minillm/transformers/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-11-16T12:47:19Z,upgrade transformers
github.com/microsoft/LMOps,minillm/transformers/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-08-16T03:11:32Z,upgrade transformers
github.com/microsoft/LMOps,minillm/transformers/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-06-14T11:44:35Z,add minillm
github.com/deforum-art/sd-webui-deforum,scripts/deforum_helpers/src/midas/backbones/vit.py,2023-04-11T19:31:19Z,Introducing Zoe(Depth)
github.com/microsoft/LMOps,minillm/transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-11-16T12:47:19Z,upgrade transformers
github.com/microsoft/LMOps,minillm/transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-08-16T03:11:32Z,upgrade transformers
github.com/microsoft/LMOps,minillm/transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-06-14T11:44:35Z,add minillm
github.com/DLLXW/data-science-competition,tianchi/CVPR2021-PIC-Challenge/networks/net.py,2022-06-01T09:47:57Z,tianchi restore
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2023-06-05T18:02:52Z,add further model
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2023-06-04T19:07:14Z,add models from Cui2023Decoupled
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2023-05-18T14:18:49Z,add model info for Bai2023Improving
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2023-05-04T17:30:50Z,add models from Bai2023Improving
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2023-02-21T13:40:37Z,add missing link
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2023-02-21T13:27:17Z,add models from Wang2023Better (1 missing)
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2023-02-08T11:29:37Z,"add Huang2022Revisiting, Cui2020Learnable"
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2022-09-27T12:03:21Z,Add Debenedetti2022Light and support for timm
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2022-06-02T13:00:36Z,add models from Addepalli2022Efficient
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2022-04-04T13:23:23Z,Merge branch 'master' into add-models
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2022-04-04T13:16:40Z,add models from Jia2022LAS-AT
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2022-03-15T15:34:39Z,Pang2022Robustness models added
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2022-03-15T04:19:43Z,added updated results for Sehwag2021Proxy
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2022-01-19T11:32:09Z,Remove need for `.cuda()` calls on ensembles
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2022-01-13T11:01:39Z,changed definitions
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2022-01-13T10:02:05Z,Modas2021_PRIME models added
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-11-10T16:11:38Z,title change
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-11-10T15:56:36Z,Chen2021Low models added
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-10-30T17:12:02Z,small style edit
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-10-29T12:06:17Z,names corrected
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-10-29T11:07:24Z,Addepalli2021OOAT models added
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-10-20T12:00:06Z,Diffenderfer2021 models added
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-08-28T11:24:41Z,merge imagenet branch to master
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-08-28T07:53:03Z,imagenet corruptions leaderboard
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-08-26T09:17:32Z,align the model dicts more consistently
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-08-24T11:05:15Z,add models from Rade2021Helper
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-07-28T13:47:11Z,"add PreActResNet-18 from Rebuffi et al., 2021"
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-05-14T17:11:28Z,add models Rebuffi2021Fixing
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-05-07T09:36:45Z,Fix issue with Rice2020Overfitting CIFAR-100 Linf model
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-05-06T21:07:08Z,Fix issues with some models
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-05-06T07:48:45Z,Fix missing `lambda` keywords
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-05-06T07:17:47Z,Refactor models to `lambda`s whenever possible
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-05-03T23:00:36Z,"Add new checkpoints to the model zoo

In particular, add:

- https://arxiv.org/abs/2011.11164
- https://arxiv.org/abs/2010.01278
- https://arxiv.org/abs/2003.09347

Also, fix Sitawarin2020Improving in CIFAR100, and Chen2020Efficient loading."
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-05-03T16:03:28Z,"Merge pull request #13 from ymerkli/Cui2020_wideresnet_fix

Fix missing sub_block1 for cifar100 wideresnet models by Cui et. al"
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-05-03T15:48:37Z,Fix missing sub_block1 for cifar100 wideresnet models by Cui et. al
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-04-08T07:52:01Z,Add Hendrycks2020AugMix CIFAR-100-C models
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-03-07T14:59:35Z,"Add Linf CIFAR-100 Hendrycks2019Using

Fix also number of classes"
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-03-07T11:59:51Z,"Add Linf-robust CIFAR-100 models to the Model Zoo.

In particular this commit adds:

- Gowal2020Uncovering
- Gowal2020Uncovering_extra
- Cui2020Learnable_34_20_LBGAT6
- Cui2020Learnable_34_10_LBGAT0
- Cui2020Learnable_34_10_LBGAT6
- Chen2020Efficient
- Wu2020Adversarial
- Sitawarin2020Improving
- Rice2020Overfitting"
github.com/RobustBench/robustbench,robustbench/model_zoo/cifar100.py,2021-01-24T15:37:53Z,Start refactoring models from norm to dataset + threat model
github.com/RobustBench/robustbench,robustbench/model_zoo/imagenet.py,2023-09-08T12:43:15Z,"Merge pull request #154 from RobustBench/add_models_2

Add models from Peng2023Robust"
github.com/RobustBench/robustbench,robustbench/model_zoo/imagenet.py,2023-09-06T14:11:48Z,add imagenet model from Peng2023Robust
github.com/RobustBench/robustbench,robustbench/model_zoo/imagenet.py,2023-04-15T16:58:33Z,"Merge pull request #135 from RobustBench/improve-corruptions-add-new-models

Improve corruptions and add new models"
github.com/RobustBench/robustbench,robustbench/model_zoo/imagenet.py,2023-04-11T11:55:06Z,add models from Liu2023Comprehensive with bicubic interpolation in preprocessing
github.com/RobustBench/robustbench,robustbench/model_zoo/imagenet.py,2023-04-10T09:37:45Z,add Tian2022Deeper and Erichson2022NoisyMix_new; better support of 3DCC (+ correct default preprocessing for imagenet corruptions)
github.com/RobustBench/robustbench,robustbench/model_zoo/imagenet.py,2023-04-09T10:32:13Z,better 3dcc eval: work in progress
github.com/RobustBench/robustbench,robustbench/model_zoo/imagenet.py,2023-03-28T16:52:57Z,"update readme, put on hold models from Liu2023Comprehensive"
github.com/RobustBench/robustbench,robustbench/model_zoo/imagenet.py,2023-03-16T13:38:51Z,add models from Liu2023Comprehensive
github.com/RobustBench/robustbench,robustbench/model_zoo/imagenet.py,2023-03-15T19:47:48Z,add models from Singh2023Revisiting
github.com/RobustBench/robustbench,robustbench/model_zoo/imagenet.py,2022-09-27T12:03:21Z,Add Debenedetti2022Light and support for timm
github.com/RobustBench/robustbench,robustbench/model_zoo/imagenet.py,2021-08-28T09:03:59Z,shorten the IDs of the SIN models
github.com/RobustBench/robustbench,robustbench/model_zoo/imagenet.py,2021-08-28T08:41:49Z,unify jsons and include Lp models to corruption model dicts whenever they are evaluated there
github.com/RobustBench/robustbench,robustbench/model_zoo/imagenet.py,2021-08-28T07:53:03Z,imagenet corruptions leaderboard
github.com/RobustBench/robustbench,robustbench/model_zoo/imagenet.py,2021-08-26T21:21:16Z,add imagenet linf models to model zoo (clean accuracies are verified)
github.com/RobustBench/robustbench,robustbench/model_zoo/imagenet.py,2021-08-01T13:30:31Z,add model specific preprocessing
github.com/RobustBench/robustbench,robustbench/model_zoo/imagenet.py,2021-07-10T14:22:39Z,"add imagenet data loader, models definition and loader"
github.com/openvinotoolkit/anomalib,src/anomalib/models/components/feature_extractors/timm.py,2024-01-24T12:19:17Z,"🚀 V1 (#1663)

* Merge feature/lightning-version-upgrade to feature/custom-trainer (#1297)

Upgrade to Lightning 2.0.5 (#1221)

* Adapt code and configs to PL 2.0.5

* Pre-commit checks.

* Fix a function call.

* Fix function calls.

* pytorch_lightning -> lightning.pytorch

* Add lightning to requirements

---------

Co-authored-by: Weilin Xu <mzweilin@gmail.com>
Co-authored-by: Samet <samet.akcay@intel.com>

* Partially restore tests (#1298)

* Upgrade to Lightning 2.0.5 (#1221)

* Adapt code and configs to PL 2.0.5

* Pre-commit checks.

* Fix a function call.

* Fix function calls.

* pytorch_lightning -> lightning.pytorch

* Add lightning to requirements

---------

Co-authored-by: Samet <samet.akcay@intel.com>

* partially restore tests

* Address PR comments

---------

Co-authored-by: Weilin Xu <mzweilin@gmail.com>
Co-authored-by: Samet <samet.akcay@intel.com>
Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Remove future annotations (#1299)

* remove __future__

* Update changelog

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Refactor postprocessing (#1302)

* remove __future__

* Update changelog

* 🚚 Trainer -> AnomalibTrainer

* add post-processor

* Refactor callback

* Remove handler

* Address PR comments

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] refactor normalization callbacks (#1310)

* remove __future__

* Update changelog

* 🚚 Trainer -> AnomalibTrainer

* add post-processor

* Refactor callback

* Refactor normalization callback

* Match convention

* Refactor imports

* Address PR comments

* Fix path

* Refactor callbacks

* Fix module path

---------

* [Custom Trainer] Refactor thresholding (#1311)

* remove __future__

* Update changelog

* 🚚 Trainer -> AnomalibTrainer

* add post-processor

* Refactor callback

* Refactor normalization callback

* Refactor thresholding

* Match convention

* Refactor imports

* Address PR comments

* Fix path

* Refactor callbacks

* Fix module path

* Address PR comments

* Apply suggestions from code review

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* [Custom Trainer] Refactor Metrics (#1312)

* remove __future__

* Update changelog

* 🚚 Trainer -> AnomalibTrainer

* add post-processor

* Refactor callback

* Refactor normalization callback

* Refactor thresholding

* Refactor metrics configuration

* Match convention

* Refactor imports

* Address PR comments

* Fix path

* Refactor callbacks

* Fix module path

* Address PR comments

* Address PR comments

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Refactor visualization callback (#1313)

* remove __future__

* Update changelog

* 🚚 Trainer -> AnomalibTrainer

* add post-processor

* Refactor callback

* Refactor normalization callback

* Refactor thresholding

* Refactor metrics configuration

* Move visualizer callbacks into trainer

* Match convention

* Refactor imports

* Address PR comments

* Fix path

* Refactor callbacks

* Fix module path

* Address PR comments

* Remove comment

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Initial engine design (#1348)

* Initial engine design

* Address PR comments

* Circular import + trainer->engine

* Update src/anomalib/engine/engine.py

* revert import in __init__

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* [Custom Trainer] Partially fix tests (#1359)

* Partially fix test

* Address PR comments

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Add CLI support (#1381)

* Support trainer methods

* support yaml serialization

* add hpo command

* Add benchmark + train entrypoint

* Add export arguments

* Partially address PR comments

* Add export subcommands + refactor

* Address PR comments

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Partially restore tests (#1391)

* Fix tests

* Patch get experiment logger

* Sort imports

* Add stfpm config

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Add new ruff rules (#1390)

* Add rules to pyproject.toml file

* Only include padim and stfpm in tests

* Fix notebook tests

* Fix notebook tests

* Code quality/enable rules (#1394)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* Enable Ruff rules - Part III (#1397)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* Enable Ruff Rules - Part 4 (#1402)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* [Custom Trainer] Switch to manual optimization for ganomaly (#1404)

* implement manual optimizers for ganomaly

* cleanup

* Enable Ruff Rules - Part 5 (#1403)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* flake8-pie (`PIE`)

* flake8-raise (`RSE`)

* flake8-return (`RET`)

* flake8-self (`SLF`)

* flake8-simplify (`SIM`)

* flake8-unsused-arguments (`ARG`)

* Update src/anomalib/models/components/flow/all_in_one_block.py

Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* addressed pr comments

---------

Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* [Custom Trainer] Add import checks (#1393)

* Add checks

* Add checks for wandb

* move exception handling to method

* fix pre-commit issue

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Remove max epochs > 1 (#1400)

Remove max epochs>1 from default param list

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* [Custom Trainer] Add default values (#1395)

* Add checks

* Add default values to datasets + padim model

* update default values

* Remove merge artifact

* Change gt path

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Enable Ruff Rules - Part 6 (#1407)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* flake8-pie (`PIE`)

* flake8-raise (`RSE`)

* flake8-return (`RET`)

* flake8-self (`SLF`)

* flake8-simplify (`SIM`)

* flake8-unsused-arguments (`ARG`)

* flake8-use-pathlib (`PTH`)

* eradicate (`ERA`)

* pylint (`PL`)

* tryceratos (`TRY`), flynt (`FLY`), Perflint (`PERF`)

* NumPy-specific rules (`NPY`)

* Ruff-specific rules (`RUF`)

* Remove pylint ignore comments

* Fix tests

* Fix tests

* Enable Ruff Rules - Part 7 (#1408)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* flake8-pie (`PIE`)

* flake8-raise (`RSE`)

* flake8-return (`RET`)

* flake8-self (`SLF`)

* flake8-simplify (`SIM`)

* flake8-unsused-arguments (`ARG`)

* flake8-use-pathlib (`PTH`)

* eradicate (`ERA`)

* pylint (`PL`)

* tryceratos (`TRY`), flynt (`FLY`), Perflint (`PERF`)

* NumPy-specific rules (`NPY`)

* Ruff-specific rules (`RUF`)

* Remove pylint ignore comments

* Fix tests

* Fix tests

* mccabe (`C90`)

* pygrep-hooks (`PGH`)

* flake8-todos (`TD`)

* flake8-fixme (`FIX`)

* pandas-vet (`PD`)

* Fix random_split tests

* Fix pre-commit

* Fixed the logger test

* Fix the typos in todos

* Enable Ruff Rules - Part 8 (#1412)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* flake8-pie (`PIE`)

* flake8-raise (`RSE`)

* flake8-return (`RET`)

* flake8-self (`SLF`)

* flake8-simplify (`SIM`)

* flake8-unsused-arguments (`ARG`)

* flake8-use-pathlib (`PTH`)

* eradicate (`ERA`)

* pylint (`PL`)

* tryceratos (`TRY`), flynt (`FLY`), Perflint (`PERF`)

* NumPy-specific rules (`NPY`)

* Ruff-specific rules (`RUF`)

* Remove pylint ignore comments

* Fix tests

* Fix tests

* mccabe (`C90`)

* pygrep-hooks (`PGH`)

* flake8-todos (`TD`)

* flake8-fixme (`FIX`)

* pandas-vet (`PD`)

* ignore ANN101 ANN102 and ANN103

* Fix random_split tests

* Fix pre-commit

* ANN partly done

* Remove kwargs: Any

* flake8-annotations (`ANN`)

* Enabled tests

* Revert padim configs

* Enable Ruff Rules - Part 9 (#1419)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* flake8-pie (`PIE`)

* flake8-raise (`RSE`)

* flake8-return (`RET`)

* flake8-self (`SLF`)

* flake8-simplify (`SIM`)

* flake8-unsused-arguments (`ARG`)

* flake8-use-pathlib (`PTH`)

* eradicate (`ERA`)

* pylint (`PL`)

* tryceratos (`TRY`), flynt (`FLY`), Perflint (`PERF`)

* NumPy-specific rules (`NPY`)

* Ruff-specific rules (`RUF`)

* Remove pylint ignore comments

* Fix tests

* Fix tests

* mccabe (`C90`)

* pygrep-hooks (`PGH`)

* flake8-todos (`TD`)

* flake8-fixme (`FIX`)

* pandas-vet (`PD`)

* ignore ANN101 ANN102 and ANN103

* Fix random_split tests

* Fix pre-commit

* ANN partly done

* Remove kwargs: Any

* flake8-annotations (`ANN`)

* Enabled tests

* Revert padim configs

* Add auto fixes

* Fix docstrings

* Update src/anomalib/utils/metrics/binning.py

Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* Update src/anomalib/models/dfkde/lightning_model.py

Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* Update src/anomalib/models/rkde/feature_extractor.py

Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* Fixed pre-commit

---------

Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* Merge main into feature/custom_trainer (#1420)

* Address tiler issues (#1411)

* fix tiler

* deprecate random tile locations

* restore random tiling in tile method

* check tiling section in config

* disable tiling for ganomalu

* pad -> padding

* Refactor Reverse Distillation to match official code (#1389)

* Non-mandatory early stopping

* Added conv4 and bn4 to OCBE

* Loss as in the official code (flattened arrays)

* Added comment on how to use torchvision model as an encoder to reproduce results in the paper

* Remove early stop from config, change default anomaly_map_mode to add

* pre-commit fix

* Updated results

* Update src/anomalib/models/reverse_distillation/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/reverse_distillation/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/reverse_distillation/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Remove early_stopping

* Update src/anomalib/models/reverse_distillation/lightning_model.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Easier to read code

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

---------

Co-authored-by: Dick Ameln <dick.ameln@intel.com>
Co-authored-by: abc-125 <63813435+abc-125@users.noreply.github.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>
Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Enable Ruff Rules - Part 10 (#1423)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* flake8-pie (`PIE`)

* flake8-raise (`RSE`)

* flake8-return (`RET`)

* flake8-self (`SLF`)

* flake8-simplify (`SIM`)

* flake8-unsused-arguments (`ARG`)

* flake8-use-pathlib (`PTH`)

* eradicate (`ERA`)

* pylint (`PL`)

* tryceratos (`TRY`), flynt (`FLY`), Perflint (`PERF`)

* NumPy-specific rules (`NPY`)

* Ruff-specific rules (`RUF`)

* Remove pylint ignore comments

* Fix tests

* Fix tests

* mccabe (`C90`)

* pygrep-hooks (`PGH`)

* flake8-todos (`TD`)

* flake8-fixme (`FIX`)

* pandas-vet (`PD`)

* ignore ANN101 ANN102 and ANN103

* Fix random_split tests

* Fix pre-commit

* ANN partly done

* Remove kwargs: Any

* flake8-annotations (`ANN`)

* Enabled tests

* Revert padim configs

* Add auto fixes

* Fix docstrings

* Enabled ""PLW2901"",  # `for` loop variable `row` overwritten by assignment target

* Enable Ruff Rules - Part 11 (#1425)

* pyflakes

* pycodestyle

* pep8-naming (`N`)

* pyupgrade (`UP`)

* flake8-bandit (`S`)

* Enabled UP, ANN, S, BLE, FBT, B

* Fix typo

* Revert F1AdaptiveThreshold parent classes

* Fix some of the tests

* ignore boolean-positional-value-in-call (FBT003)

* Addressed pr comments

* Remove duplicated lines

* flake8-builtins (`A`) and flake8-commas (`COM`)

* flake8-comprehensions (`C4`)

* flake8-datatimez (`DTZ`), flake8-debugger (`T10`), flake8-errmsg (`EM`)

* flake8-pie (`PIE`)

* flake8-raise (`RSE`)

* flake8-return (`RET`)

* flake8-self (`SLF`)

* flake8-simplify (`SIM`)

* flake8-unsused-arguments (`ARG`)

* flake8-use-pathlib (`PTH`)

* eradicate (`ERA`)

* pylint (`PL`)

* tryceratos (`TRY`), flynt (`FLY`), Perflint (`PERF`)

* NumPy-specific rules (`NPY`)

* Ruff-specific rules (`RUF`)

* Remove pylint ignore comments

* Fix tests

* Fix tests

* mccabe (`C90`)

* pygrep-hooks (`PGH`)

* flake8-todos (`TD`)

* flake8-fixme (`FIX`)

* pandas-vet (`PD`)

* ignore ANN101 ANN102 and ANN103

* Fix random_split tests

* Fix pre-commit

* ANN partly done

* Remove kwargs: Any

* flake8-annotations (`ANN`)

* Enabled tests

* Revert padim configs

* Add auto fixes

* Fix docstrings

* Enabled ""PLW2901"",  # `for` loop variable `row` overwritten by assignment target

* Add google style to pydocstyle

* Remove dashed line from Returns

* Remove dashed line from Args

* Remove dashed line from Example and Raises

* Removed left-over dashed lines

* Cleanup pyproject.toml file

* [Custom Trainer] Add a verbose help output structure to the CLI (#1396)

* Add Verbosity Help-Formatter class

* Add Help-Formatter unit-tests

* Fix some strings

* Fix pre-commit ruff stuff

* Fix help_formatter's pre-commit

* Add new configs (#1418)

* Add new configs

* Add draem config

* Fix docstring

* Update src/anomalib/models/cflow/lightning_model.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Linting

* Remove --- from docstrings

* Remove any from return type

* Fix linting issues from feature/custom_trainer

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Add CLI Tests (#1426)

* Add new configs

* Add draem config

* Stash cli tests

* Stash cli tests with minor changes

* Stash changes

* Fix reverse distillation

* Fix EfficientAD

* Match ai_vad params to config params

* Fix ucsd and ai_vad configs

* Uncomment validation step

* Refactor directory structure

* Rename method

* use uscd for aivad

* fix ucsd path + modify model checkpoint callback for tests

* fix dfkde config

* Restructure tests + fix normalization test

* Revert file

* add v1 to tox

* Skip testing ai_vad

* Increase train and test size

* use mvtec dataset

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Restructure test directories. (#1438)

* Restructured the test directories

* Fixed typo

* Fix imports

* Fix config path in export tests

* Replace black with ruff formatter (#1439)

* [Custom Trainer] Refactor export (#1440)

* Refactor export

* Fix entrypoint tests

* remove match statements

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Add ruff checks to tests (#1455)

* Fix tests + add ruff check to tests

* Limit gradio version

* Path->str

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Add dummy image dataset generator helper class (#1444)

* Created tests/v1 directory

* update license year

* Add beantech generator

* Refactor mvtec-ad and beantech

* Add visa dataset generator

* Add DummyImageGenerator

* Use DummyImageGenerator in dummy mvtec dataset generator

* Use DummyImageGenerator in dummy mvtec dataset generator

* Use DummyImageGenerator in dummy mvtec3d dataset generator

* Restructured the test directories

* Fixed typo

* Fix imports

* Fix config path in export tests

* Add kolektor dataset

* add ucsdped generator

* Fix tests

* Revert conftest.py

* add method for generating avenue dataset

* Revert conftest.py

* add method for generating shanghaitech dataset

* swap order of typing for better parsing of normalization type

* cleanup

* Dynamically create DataFormat enum

* Add examples to docstring

* address pr comments and rename dataset.py to data.py

* Fix pre-commit issues

---------

Co-authored-by: Dick Ameln <dick.ameln@intel.com>

* Remove configurable parameters (#1453)

* Refactor export

* Fix entrypoint tests

* remove match statements

* Fix tests + remove get_configurable_params + fix hpo,benchmarking

* Path->str

* Update src/anomalib/models/__init__.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/utils/sweep/config.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update tools/inference/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update tools/inference/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* str->Path

* str->Path

* Fix model checkpoint path

* typing + path + test order

* Update src/anomalib/utils/sweep/config.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Mark tests as xfail

* Fix notebook

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Dick Ameln <amelndjd@gmail.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* [v1] - Tests: Add datamodule tests. (#1456)

* Created tests/v1 directory

* update license year

* Add beantech generator

* Refactor mvtec-ad and beantech

* Add visa dataset generator

* Add DummyImageGenerator

* Use DummyImageGenerator in dummy mvtec dataset generator

* Use DummyImageGenerator in dummy mvtec dataset generator

* Use DummyImageGenerator in dummy mvtec3d dataset generator

* Restructured the test directories

* Fixed typo

* Fix imports

* Fix config path in export tests

* Add kolektor dataset

* add ucsdped generator

* Fix tests

* Revert conftest.py

* add method for generating avenue dataset

* Revert conftest.py

* add method for generating shanghaitech dataset

* swap order of typing for better parsing of normalization type

* cleanup

* create the data tests files

* Dynamically create DataFormat enum

* Add examples to docstring

* add conftest.py

* address pr comments and rename dataset.py to data.py

* add some changes

* Add test_datasets to the integration tests

* Change order

* Added datamodule tests

* Format ruff

* Address pre-commit issues

* Fix video tests

* Add the rest of the datamodule tests

---------

Co-authored-by: Dick Ameln <dick.ameln@intel.com>

* [Custom Trainer] Add train subcommand (#1465)

Add train subcommand

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Refactor `Tensor` annotation to `torch.Tensor` (#1477)

* Modify Tensor to torch.Tensor

* list[Tensor] to list[torch.Tensor]

* TODO: Fix formatting issues

* torch_all to torch.all

* Remove redundant import

* Apply ruff format

* Fix the tests

* Refactor tests Part 1 (#1473)

* Refactor CLI tests

* Select a random model

* Fix test for all the models

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Add API tests Part 2 (#1474)

* Partially migrate unit tests Part 3 (#1480)

* Refactor CLI tests

* Add api tests

* Select a random model

* Fix test for all the models

* Fix API tests

* refactor pre-post processing + get model ckpt from fixture

* Add tests for custom transforms

* Address PR comments

* Refactor ckpt_path fixture

* Update conftest.py

* Update __init__.py

* Update __init__.py

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Reorg Part I: Data (#1483)

* Update Anomalib data with the new structure

* Update dataset imports and remove unused imports

* ruff format in engine.py

* Move TaskType to utils/types

* Revert TaskType import from anomalib

* Revert tox.ini

* Refactor imports and fix import errors

* Fix import errors and update type annotations

* Fix imports in jupyter notebooks

* Refactor import statements in test_visualizer.py

* Reorg Part II: Remove `pre_processor` and `post_processor` subpackages (#1485)

* Update Anomalib data with the new structure

* Update dataset imports and remove unused imports

* ruff format in engine.py

* Move TaskType to utils/types

* Revert TaskType import from anomalib

* Revert tox.ini

* Refactor imports and fix import errors

* Fix import errors and update type annotations

* Fix imports in jupyter notebooks

* Remove pre-processor subpackage from anomalib

* Remove unused imports and update import paths

* Refactor import statements in test_visualizer.py

* Remove unused code and deprecate Denormalize and
ToNumpy classes

* Remove empty code cell

* Add a description why input image is read from path

* Fix bug in superimpose

* Migrate deploy tests Part 4 (#1481)

* Refactor CLI tests

* Add api tests

* Select a random model

* Fix test for all the models

* Fix API tests

* refactor pre-post processing + get model ckpt from fixture

* Add tests for custom transforms

* Migrate deploy tests

* trained_padim_path->ckpt_path

* Split normalization line

* Fix normalization class path

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Migrate model components unit tests Part 5 (#1482)

* Refactor CLI tests

* Add api tests

* Select a random model

* Fix test for all the models

* Fix API tests

* refactor pre-post processing + get model ckpt from fixture

* Add tests for custom transforms

* Migrate deploy tests

* Migrate model component tests

* Migrate visualizer callback + cli tests

* Fix lightning entrypoint test

* trained_padim_path->ckpt_path

* Add todo

* Fix TaskType import

* Apply suggestions from code review

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Reorg Part III: Move the main anomalib components from `anomalib.utils` to `anomalib` (#1487)

* Update Anomalib data with the new structure

* Update dataset imports and remove unused imports

* ruff format in engine.py

* Move TaskType to utils/types

* Revert TaskType import from anomalib

* Revert tox.ini

* Refactor imports and fix import errors

* Fix import errors and update type annotations

* Fix imports in jupyter notebooks

* Remove pre-processor subpackage from anomalib

* Remove unused imports and update import paths

* Refactor import statements in test_visualizer.py

* Move callbacks from utils under anomalib

* Fix import statements in benchmarking and CLI
modules

* Move CLI under anomalib

* Add benchmark to pipelines

* Move hpo to pipelines

* Move sweep to pipelines

* Move loggers to anomalib

* Move metrics to anomalib

* Move callbacks from utils to test/utils

* Move config to anomalib.utils

* Fix the metric imports

* Remove unused code and deprecate Denormalize and
ToNumpy classes

* Remove empty code cell

* Add a description why input image is read from path

* Fix bug in superimpose

* Move anomalib.utils.config.config to anomalib.utils.config

* Fix config import

* Merge feature/custom_trainer

* Migrate tools test Part 6 (#1488)

* Refactor CLI tests

* Add api tests

* Select a random model

* Fix test for all the models

* Fix API tests

* refactor pre-post processing + get model ckpt from fixture

* Add tests for custom transforms

* Migrate deploy tests

* Migrate model component tests

* Migrate visualizer callback + cli tests

* Fix lightning entrypoint test

* trained_padim_path->ckpt_path

* Migrate metrics tests

* Migrate tools + remove nightly

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* 🚜 Refactor padim and patchcore models (#1300)

* Fix metadata path

* Ignore hidden directories in folder dataset

* Add check for mask_dir for segmentation tasks in Folder dataset

* add is_fitted

* self.model._is_fitted to self.model.is_fitted

* Format anomaly module

* Remove on_save_checkpoint

* Refactor padim

* Add __repr__ to anomaly score threshold

* Revert patchcore config

* Add memory bank modules for anomaly detection

* Add explanation to MemoryBankTorchModule docstring.

* Update memory bank module imports and fix typo in
Padim model

* Rename Dynamic Buffer Module to Memory Bank
Module in docstring.

* Revert ""Add explanation to MemoryBankTorchModule docstring.""

This reverts commit 44c991450f7c78eee2b0ceb0e7c855c3893a0801.

* Refactor memory bank modules based on Dick's suggestion

* Fix model attribute assignment in lightning models

* Add MemoryBankMixin to anomaly detection models

* revert padim and patchcore

* Reorder inheritance in anomaly detection models

---------

Co-authored-by: Ashwin Vaidya <ashwin.vaidya@intel.com>

* Migrate unit tests Part 7 (#1490)

* Refactor CLI tests

* Add api tests

* Select a random model

* Fix test for all the models

* Fix API tests

* refactor pre-post processing + get model ckpt from fixture

* Add tests for custom transforms

* Migrate deploy tests

* Migrate model component tests

* Migrate visualizer callback + cli tests

* Fix lightning entrypoint test

* trained_padim_path->ckpt_path

* Migrate metrics tests

* Migrate tools + remove nightly

* Increase coverage

* Migrate remaining tests

* Fix imports

* Fix import

* Update tests/unit/deploy/test_inferencer.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update test_get_logger.py

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Fix circular import in cdf normalizer (#1494)

* fix circular import in cdf normalizer

* fix pre-commit

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* 🛠️ Refactor: Split models to image and video (#1493)

* Move AiVad to anomalib.video

* Move cfa to models.image

* Add Ganomaly model to image models

* Add Fastflow model to image models

* Add EfficientAd anomaly detection model to image
models

* Move dfm, dfkde and draem

* Add CS-Flow model implementation for image-based
defect detection

* Add cflow to image models

* Add padim to image models

* Add patchcore to image models

* Add Reverse distillation to image models.

* Add rkde to image models

* Add stfpm to image models.

* Add image models for handling image datasets in
anomalib

* Update copyright year in model files

* Update import statement for Fastflow model

* Update image and video model documentation

* Update src/anomalib/models/video/README.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Update clip_length_in_frames parameter in
AvenueDataset and Avenue classes

* Remove folder references

* Fix a typo in readme

* Fix shape of image in batch

* Update clip_length_in_frames parameter

---------

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* v1: Update the readme file (#1503)

* Fix metadata path

* Ignore hidden directories in folder dataset

* Add check for mask_dir for segmentation tasks in Folder dataset

* Replace docs

* Add each inferencing scripts as a details section

* update readme

* Add training

* modify getting started

* Make getting started a subsection

* tmp

* Added inference section

* Refactor Lightning inference code

* Update entry point in setup.py

* Add training api example to readme

* Update training command in README

* Fix bug in login functionality

* Update HPO and Logging Documentation

* refactor getting started section

* Update HPO and benchmarking commands

* Update the image

* Update README.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Update README.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Remove getting started section

* Update README.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Update README.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Address the reviewer comments

---------

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Extend Engine Tests (#1509)

* Add validate + predict

* Add train

* Add export tests + refactor export cli command

* Fix tests

* Fix jupyternotebook

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* v1: Create the new documentation via `sphinx-design` and `myst` (#1518)

* removed docs

* Created the new docs

* Finished get started

* Remove jupyter notebook from docs

* Add mvtec to data

* Add reference guide

* Add section for each image datasets

* Add base data modules and datasets

* v1 - 📝 Update and Enhance Docstrings (#1532)

* removed docs

* Created the new docs

* Finished get started

* Remove jupyter notebook from docs

* Add mvtec to data

* Add reference guide

* initial commit

* Remove subrocess from btech

* Remove unused import and commented out code

* Add section for each image datasets

* Add base data modules and datasets

* Refactor dataset classes and add docstrings

* Add initial draft for backbone docs

* Update the docstring in folder_3d

* Update mvtec 3d docstring

* Added feature extractor tutorial

* Add a readme file to the docs

* Update folder data docstring

* Update kolektor docstrings

* Update kolektor docstring

* Update mvtec docstring

* Update visa docstrings

* Update avenue docstring

* Update cfa docstring

* Update cflow docstring

* Update csflow docstring

* Update csflow docstring

* Update dfkde docstrings

* Update dfm docstring

* Update draem docstring

* Update efficient ad docstring

* Update ganomaly docstring

* Update padim and patchcore docstrings

* Update reverse distillation docstring

* update rkde docstring

* update stfpm docstring

* Update ai-vad docstring

* Update feature extractors

* add docstring to sparse random projection

* Update dimensionality reduction components

* Exclude prompt from copying

* Normalizing flow update

* Add pro

* Add feature extractor docs

* update aupr

* Update aupr

* Update aupro

* Update auroc

* Update docs/source/markdown/guides/how_to/models/feature_extractors.md

* Update f1 and manual thresholds

* add minmax

* add optimal f1

* update utils

* update comet

* add tensorboard

* update wandb

* Add callbacks

* Update deploy docstrings

* Fix pre-commit on Blasz changes

* Change the requirement file in readthedocs config file

* Partially address pr comments

* Fix the model to padim for the cli integration tests

---------

Co-authored-by: Blaž Rolih <61357777+blaz-r@users.noreply.github.com>
Co-authored-by: Blaz Rolih <blaz.rolih@gmail.com>

* Fix AI-VAD issues (#1524)

* partially fix empty bbox issue

* allow empty region detections

* add torch implementation of gmm (WIP)

* make knn mem bank persistent

* set val_split_mode to same_as_test as default to enforce deterministicness

* add unit tests and docstrings to gmm

* improve typing of knn estimator

* remove todo

* update buffer name

* fix minor mistakes in gmm implementation

* remove unnecessary tensor conversion

* fix visualization when predicting with video model

* add __init__.py to components.cluster

* check for empty bboxes in feature extractor

* reduce default batch size

* cast deep features to float

* fix device issue

* add unit tests for feature extractors

* add license header

* disable random model selection in integration tests

* typing and docstrings

* add test case for non-convergence warning

* 📝  v1 - Docs: Create a dedicated section for each model. (#1540)

* Initial commit for model components

* FIx the grid in model components

* Add image models

* Add video models

* Fix titles and do some cleanup

* reduce the sphinx version as it fails the readthedocs builds

* Fix examples for reading transforms from albumentations Compose object and deserializing from a yaml file

* Update __init__.py

* OpenVINO NNCF updates (#1534)

* Update versions of openvino and nncf

* All export functions return the model path

* Change default OV device to AUTO

* Minor changes on openvino API

* Fix pre-commit issues

* Restored onnx dependency

* Added OV export tests

* Drop export tests

* Rename path var

* Renamed test paths

* [Docs] Add average score to the FastFlow's performance results tables (#1587)

Add average score in the tables of performance results

* Update the paper title in CS-FLOW and CFLOW readme (#1579)

* Fix csflow name in readme

* Update cflow name in readme

* v1 - [Refactor] Reflect the changes in #1562 into v1 (#1595)

Reflect the changes in #1562 into v1

* ✏️ Refactor `ExportMode` to `ExportType` (#1594)

* Update export_mode to export_type

* Fix typo typel -> model

* Revert the python version in the notebook

* 📚 v1 - Modify the PR template (#1596)

* Modify the PR template

* Update pull_request_template.md

* added emojis to the checklist

* [Bug] v1: Fix default input normalization method (#1583)

Fix default input normalization method

* Modify `Engine.predict` (#1514)

* Add validate + predict

* Add train

* Add export tests + refactor export cli command

* Fix tests

* Fix jupyternotebook

* Update engine.predict + expand tests

* Fix lightning entrypoint test

* Address PR comments

* Use only Padim

* Fix commands

* Move padim to common args

* Address 1st PR comment

* Address PR comments

* Fix aivad tests

* Fix missing docstring

* Rename config to args

* Add missing ckpt_path warning in predict

* Remove ckpt_path as required parameter

* Add tests for image path in predict

* Fix image path in predict

* Address PR comments

* Fix missing checkpoint path

* Fix fastflow precommit issue

* Fix tests

* Fix test

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Fix issue with incorrect image save location (#1515)

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Upgrade gradio version to 4.x (#1608)

* upgrade gradio version to 4.x

* refactor variable names

* refactor

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* ✍ InferenceDataset->PredictDataset (#1544)

* ✍ InferenceDataset->PredictDataset

* update predict dataset references

* update predict dataset references

* update predict dataset references

* update predict dataset references

* update predict dataset references

* update notebook

---------

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* `FeatureExtractor` -> `TimmFeatureExtractor` (#1543)

Deprecate FeatureExtractor

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Add `LearningType` and refactor enums (#1598)

* add LearningType and move enums to separate module

* add enum definitions

* move shared enums to root init

* place version above enums

* 📘 Add custom data tutorial (#1571)

* Add custom data tutorial

* Add the custom data training instructions

* Address PR comments

* Start with a classification data

* Release hazelnut toy dataset and refer to the link here.

* Update docs/source/markdown/guides/how_to/data/custom_data.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Update docs/source/markdown/guides/how_to/data/custom_data.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Update docs/source/markdown/guides/how_to/data/custom_data.md

Co-authored-by: Dick Ameln <amelndjd@gmail.com>

* Remove no-val-test section from tutorials

* Address PR comments

---------

Co-authored-by: Dick Ameln <amelndjd@gmail.com>
Co-authored-by: Samet Akcay <sakcay@Samets-MacBook-Pro.local>

* Add URL verification for downloading dataset (#1620)

* add url path verification for dataset downloading module

* specify node version to pre-commit-config

* fix import errors on the notebooks

* 🐞 v1 - Fix training with mps accelerator (#1618)

* Convert mask to float32 in AnomalibDataset

* Convert the tensor to cpu before convrting to numpy

* replace np.float32 with np.single

* Update Engine docstrings (#1549)

Update docstrings

Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>

* Fixed shape error, allowing arbitary image sizes for EfficientAD

* Revert the previous commit

* Extend supported models in TimmFeatureExtractor (#1443)

Extend Timm feature extractor for v1.0

* 🔒 v1 - Address security issues (#1637)

* Address path traversal issues 1-3

* address traversal path 6

* Address traverse path 8

* modify the comment to make it more descriptive

* 🐞 Fix mps float64 tensor conversion issue (#1644)

Fix leftover

* 🐞 Fix metadata_path arg to metadata in OpenVINO inferencer (#1648)

Fix metadata_path arg to metadata in OpenVINO inferencer

* 🔒 Address path traversal issues (#1643)

* Address path traversal issues 1-3

* address traversal path 6

* Address traverse path 8

* modify the comment to make it more descriptive

* Update get_image_filename function to enhance the input security

* fix example

* Fix incorrect default value assignment

* Refactor project_path fixture to create temporary directory in the root directory of the project

* Update .gitignore file to include test-related files and directories

* Refactor get_image_filenames_from_dir to filter out non-image files

* Add test case for path outside base directory

* Add examples to get_filenames

* Address PR comments.

* Renamed the tmp dir

* 🔒 Add `SECURITY.md` file (#1655)

* Add SECURITY.md file

* Add security item to the type of changes in the pull request template.

* Update pr template

* replace the security emoji

* 🚀 Add zero-/few-shot model support and WinCLIP model implementation (#1575)

* add clip normalization

* initial commit for winclip

* add cosine similarity computation

* add multiscale score computation

* simplify mask generation

* add few-shot extension (unvalidated)

* refactor

* cleanup

* add todo

* formatting

* minor refactor

* add comment

* expose optimal F1 metric

* some cleanup

* add ln_after_pool logic

* remove final_ln_after_pool

* update module docstring and remove comments

* add typing and docstrings to torch model

* cleanup lightning model

* hardcode backbone

* n_shot -> k_shot

* add temperature as constant

* minor bugfix

* add typing and docstrings to utils

* set class name dynamically

* replace inf values in harmonic aggregation

* run validate before test

* set default class name to None

* formatting

* remove config

* comments

* minor bugfix

* Revert ""expose optimal F1 metric""

This reverts commit e8e1ead9601d76c743af3678f26b1eb0e06d38fb.

* more descriptive assert message

* expose scales as configurable parameter and hardcode pretrained as constant

* add readme

* add images for readme

* update docstrings

* update license headers

* ruff

* add openclip as requirement

* skip model tests for winclip

* fix visualizer test

* add example in docstring

* fix typo in function name

* typing

* imports

* docstrings

* check if model has trainer attribute

* remove pylint ignore statement

* typing

* docstring

* improve tensor shape handling

* refactor and rename class_scores function

* add docstring example

* commenting

* Update src/anomalib/models/image/winclip/torch_model.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/image/winclip/torch_model.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/image/winclip/torch_model.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* formatting

* docstrings

* docstrings

* comment

* typing

* multiscale -> multi_scale

* add winclip to docs

* add few_shot_source parameter

* use PredictDataset in WinCLIP implementation

* add learning type to winclip lightning model

* add custom model checkpoint callback to save at validation end

* remove trainer arguments from winclip model

* prune state dict for smaller model file

* add learning type logic to engine.train

* pass full path to model checkpoint

* remove training step

* enable integration tests for winclip

* fix typo

* index masks at 0

* formatting

* simplify make_masks

* validate inputs in make_masks

* add unit tests for winclip utils

* add default class_name to prompt ensemble

* add unit tests for winclip prompt ensemble

* add base class for normalization callback

* add _should_run_validation check

* add engine.model property

* use custom modelcheckpoint in tests

* update name in todos

* fix predict tests

* skip export tests for winclip

* fix mistake in model retrieval from trainer

* add model checks

* fix checks

* simplify model check

* add todo for winclip export

* add todo

* add bufferlist mixin

* update bufferlist docstring

* add setup method and register buffers

* import torch model in root of winclip module

* add unit tests for bufferlist mixin

* add unit tests for torch model

* fix transform and update docstring

* disable strict loading in export

* initialize embeddings as tensors

* add test to check if erors are raised

* add todo

* enable winclip export test

* remove device references in torch model

* restore frozen weights in load_state_dict

* make embedding collection methods private

* move state dict handling to winclip from base

* fix typo

* make generate_masks private

* increase onnx opset version

* remove future import

* update docstring

* Update src/anomalib/callbacks/normalization/__init__.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/callbacks/normalization/cdf_normalization.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/callbacks/normalization/min_max_normalization.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/engine/engine.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* typing in docstrings

* Update src/anomalib/engine/engine.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/engine/engine.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/engine/engine.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/engine/engine.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* use exception instead of assert

* update license header

* docstrings

* bufferlist -> buffer_list

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* WinCLIP attribution (#1662)

give credit to related works

* 🔀 Merge main to v1 (#1652)

* Address tiler issues (#1411)

* fix tiler

* deprecate random tile locations

* restore random tiling in tile method

* check tiling section in config

* disable tiling for ganomalu

* pad -> padding

* Refactor Reverse Distillation to match official code (#1389)

* Non-mandatory early stopping

* Added conv4 and bn4 to OCBE

* Loss as in the official code (flattened arrays)

* Added comment on how to use torchvision model as an encoder to reproduce results in the paper

* Remove early stop from config, change default anomaly_map_mode to add

* pre-commit fix

* Updated results

* Update src/anomalib/models/reverse_distillation/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/reverse_distillation/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/reverse_distillation/README.md

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Remove early_stopping

* Update src/anomalib/models/reverse_distillation/lightning_model.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Easier to read code

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Patch for the WinError183 on the OpenVino export mode (#1386)

* Fix WinError183 (Windows Error)

* Add commentary of the change

---------

Co-authored-by: Youho99 <gaylord.giret@viacesi.fr>

* Add DSR model (#1142)

* added license, init.py and draft readme

* added draft DSR files

* minor comment update

* Implemented dsr model + comments

* added dsr discrete model

* added defect generation in torch model + dsr to list of existing methods in init.py

* fixed torch model, started implementing lightning model, implemented anomaly generator

* added loss file for DSR

* Added loss, improved lightning module

* Finished up global implementation of DSR second phase

* minor fixes

* Bugfixes

* Fixed DSR loss calculation

* on_training_start -> on_train_start

* pre-commit run

* updated DSR documentation

* reset config file

* added automatic pretraining weight download

* testing pretrained weights. fixed embedding size in upsampling module and image recon module, to be fixed in original branch

* successful testing on pretrained dsr weights

* checked test quality with pretrained weights, fixed anomaly score calculation

* training is functional

* Fixed training procedure

* test still working

* working upsampling module training and testing

* fixed minor bugs

* updated documentation

* added tests and doc

* adapted learning schedule to steps

* Update src/anomalib/models/dsr/anomaly_generator.py

Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* Apply suggestions from code review

Co-authored-by: Samet Akcay <samet.akcay@intel.com>
Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* refactored outputs into dicts

* remove super() args

* changed downloading weights from anomalib releases + minor fixes

* pre commit hooks + minor fixes

* removed configurable ckpt path refs + default iteration nb from paper

* cleaned up dsr.rst and turned exceptions into RuntimeErrors

* Added upsampling ratio parameter to set third training phase epochs

* Added batched evalaution + minor code simplification

* pre commit hooks

* squeeze output image score tensor

* readded new path check in efficient ad

* fixed double step count with manual optimization

* fixed trailing whitespace

* Fix black issues

* Apply suggestions from code review

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* review suggestions

* updated architecture image links

* Address mypy

* changed output types for dsr model

* readded dict outputs, adapted to TorchInferencer

* fixed error in output dict

* removed default imagenet norm

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>
Co-authored-by: Ashwin Vaidya <ashwinnitinvaidya@gmail.com>

* Fix unexpected key pixel_metrics.AUPRO.fpr_limit (#1055)

* fix unexpected key pixel_metrics.AUPRO.fpr_limit

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>

* load AUPRO before create_metric_collection

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>

* code refine

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>

* fix comment

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>

* fix

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>

* Support test

Signed-off-by: Kang Wenjing <wenjing.kang@intel.com>

* Update test

Signed-off-by: Kang Wenjing <wenjing.kang@intel.com>

* Update test

Signed-off-by: Kang Wenjing <wenjing.kang@intel.com>

---------

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>
Signed-off-by: Kang Wenjing <wenjing.kang@intel.com>
Co-authored-by: FanJiangIntel <fan.jiang@intel.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Improved speed and memory usage of mean+std calculation (#1457)

* preexisting OpenCV version check added to `setup.py`, ran formatting pre-commit hooks on previous contribution. (#1424)

* testing upstream switch

* picked up on stale OpenCV `setup.py` issue #1041

* 🐞 Hotfix: Limit Gradio Version (#1458)

* Fix metadata path

* Ignore hidden directories in folder dataset

* Add check for mask_dir for segmentation tasks in Folder dataset

* Limit the gradio version to <4

* Fix/efficient ad normalize before every validation (#1441)

* Normalize anomaly maps before every validation

* Remove print statement

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Fix DRAEM (#1431)

* Fix beta in augmenter

* Add scheduler

* Change normalization to none

* Replace two lr schedulers with MultiStepLR

* Revert change to beta

* Disable early stopping default

* Format config

* Add opacity parameter beta to config

* Adding U-Flow method (#1415)

* Added uflow model

* Added documentation (README) for uflow model

* Added uflow to the list of available models, and main README updated

* Added missing images for the documentation

* Update src/anomalib/models/uflow/anomaly_map.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/uflow/anomaly_map.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/uflow/feature_extraction.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update src/anomalib/models/uflow/torch_model.py

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Added uflow to the reference guide in docs

* Added uflow to the pre-merge tests

* removed the _step function, and merged the code with training_step

* added as a comment the values used in the paper

* re-factorized feature extractors to use the TimmFeatureExtractor class

* added annotations for some functions, where the flow graph is created

* updated readme to fix images loading

* Added link in the README to the original code for reproducing the results

* Removed unused kwargs

* Added docstrigs with args explanations to UFlow classes

* Added models in a github release, and linked here

* Passing all pre-commit checks

* Changed freia's AllInOneBlock by Anomalib's version, and converted the subnet contructor to a Class, in order to be pickable, that is needed to export the model to torch

---------

Co-authored-by: Samet Akcay <samet.akcay@intel.com>

* Update README.md

* 📘 Announce anomalib v1 on the main `README.md` (#1542)

* Fix metadata path

* Ignore hidden directories in folder dataset

* Add check for mask_dir for segmentation tasks in Folder dataset

* Limit the gradio version to <4

* Announce anomalib v1 on readme

* Add the installation instructions and update the documentation link

* Fixed DSR (#1486)

* fixed DSR squeeze bug

* added comment

* Refactor/extensions custom dataset (#1562)

* Explanation how to use extension names in the config file

* Added information about extensions to the error message and control of the user input

* Easier to read code

* Replacing assert with raise

* 📚 Modify the PR template (#1611)

Update pull_request_template.md

* Fix result image URLs (#1510)

* Fix tests

* refactor path + fix issues + fix linting issues

* Migrate docs

* fix typing

* fix failing model tests

* Fix tests

* Address PR comments

* Fixed shape error, allowing arbitary image sizes for EfficientAD (#1537)

* Fixed shape error, allowing arbitrary image sizes. Replaced integer parsing by floor operation

* Replaced calculation by ceil operation. Solution of shape error is to round up and not down for the last upsample layer

* Add comment for ceil oepration

* Formatting with pre-commit hook

* Clean up badge

---------

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>
Signed-off-by: Kang Wenjing <wenjing.kang@intel.com>
Co-authored-by: Dick Ameln <dick.ameln@intel.com>
Co-authored-by: abc-125 <63813435+abc-125@users.noreply.github.com>
Co-authored-by: Samet Akcay <samet.akcay@intel.com>
Co-authored-by: ggiret-thinkdeep <146845847+ggiret-thinkdeep@users.noreply.github.com>
Co-authored-by: Youho99 <gaylord.giret@viacesi.fr>
Co-authored-by: Philippe Carvalho <31983398+phcarval@users.noreply.github.com>
Co-authored-by: Wenjing Kang <wenjing.kang@intel.com>
Co-authored-by: FanJiangIntel <fan.jiang@intel.com>
Co-authored-by: belfner <belfner@belfner.com>
Co-authored-by: Abdulla Al Blooshi <76493346+abdullamatar@users.noreply.github.com>
Co-authored-by: Blaž Rolih <61357777+blaz-r@users.noreply.github.com>
Co-authored-by: Matías Tailanian <895687+mtailanian@users.noreply.github.com>
Co-authored-by: Jan Schlüter <github@jan-schlueter.de>
Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Christopher <48522299+holzweber@users.noreply.github.com>

* Update license headers

---------

Signed-off-by: FanJiangIntel <fan.jiang@intel.com>
Signed-off-by: Kang Wenjing <wenjing.kang@intel.com>
Co-authored-by: Weilin Xu <mzweilin@gmail.com>
Co-authored-by: Samet <samet.akcay@intel.com>
Co-authored-by: Ashwin Vaidya <ashwinitinvaidya@gmail.com>
Co-authored-by: Dick Ameln <dick.ameln@intel.com>
Co-authored-by: abc-125 <63813435+abc-125@users.noreply.github.com>
Co-authored-by: Harim Kang <harim.kang@intel.com>
Co-authored-by: Dick Ameln <amelndjd@gmail.com>
Co-authored-by: Blaž Rolih <61357777+blaz-r@users.noreply.github.com>
Co-authored-by: Blaz Rolih <blaz.rolih@gmail.com>
Co-authored-by: Adrian Boguszewski <adekboguszewski@gmail.com>
Co-authored-by: Willy Fitra Hendria <willyfitrahendria@gmail.com>
Co-authored-by: Samet Akcay <sakcay@Samets-MacBook-Pro.local>
Co-authored-by: Yunchu Lee <yunchu.lee@intel.com>
Co-authored-by: ggiret-thinkdeep <146845847+ggiret-thinkdeep@users.noreply.github.com>
Co-authored-by: Youho99 <gaylord.giret@viacesi.fr>
Co-authored-by: Philippe Carvalho <31983398+phcarval@users.noreply.github.com>
Co-authored-by: Wenjing Kang <wenjing.kang@intel.com>
Co-authored-by: FanJiangIntel <fan.jiang@intel.com>
Co-authored-by: belfner <belfner@belfner.com>
Co-authored-by: Abdulla Al Blooshi <76493346+abdullamatar@users.noreply.github.com>
Co-authored-by: Matías Tailanian <895687+mtailanian@users.noreply.github.com>
Co-authored-by: Jan Schlüter <github@jan-schlueter.de>
Co-authored-by: Christopher <48522299+holzweber@users.noreply.github.com>"
github.com/openvinotoolkit/anomalib,src/anomalib/models/components/feature_extractors/timm.py,2023-09-20T14:39:46Z,Add support to backbone URI in config. (#1343)
github.com/openvinotoolkit/anomalib,src/anomalib/models/components/feature_extractors/timm.py,2023-03-09T08:11:52Z,"Switch to src layout (#921)

* Moved anomalib to src

* Modified setup.py to provide the right package path

* Update dev requirements

* Update pyproject.toml file with coverage settings

* Update tox.ini"
github.com/RaymondWang987/NVDS,dpt/vit.py,2023-07-21T10:10:32Z,Add files via upload
github.com/gsgen3d/gsgen,utils/dpt.py,2023-09-28T15:52:33Z,initial commit
github.com/microsoft/LMOps,minillm/transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-11-16T12:47:19Z,upgrade transformers
github.com/microsoft/LMOps,minillm/transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-06-14T11:44:35Z,add minillm
github.com/microsoft/LMOps,minillm/transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-11-16T12:47:19Z,upgrade transformers
github.com/microsoft/LMOps,minillm/transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-06-14T11:44:35Z,add minillm
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/ahiq_arch.py,2023-10-09T16:42:27Z,docs: :memo: update docs
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/ahiq_arch.py,2023-10-09T11:55:23Z,docs: :memo: add docs with copilot
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/ahiq_arch.py,2023-08-25T11:56:54Z,refactor: :recycle: update results of maniqa
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/ahiq_arch.py,2023-08-06T15:59:56Z,feat: :children_crossing: improve dataset api
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/ahiq_arch.py,2023-04-21T11:24:21Z,fix: :bug: fix gradient backward of ahiq
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/ahiq_arch.py,2022-09-01T11:41:59Z,"feat: Add MANIQA, AHIQ pretrained weights

add more pretrained models

 improve training pipeline

 add more
datasets"
github.com/IDEA-Research/detrex,detrex/modeling/backbone/timm_backbone.py,2022-09-27T03:27:32Z,"Refine code format (#80)

* refine format

* refine format

* refine docs links

Co-authored-by: ntianhe ren <rentianhe@dgx061.scc.idea>"
github.com/IDEA-Research/detrex,detrex/modeling/backbone/timm_backbone.py,2022-09-22T03:13:31Z,"Clean redundant code and refine README (#74)

* clean redundant code and refine readme

* refine README

Co-authored-by: ntianhe ren <rentianhe@dgx061.scc.idea>"
github.com/IDEA-Research/detrex,detrex/modeling/backbone/timm_backbone.py,2022-09-21T09:36:36Z,add get_rank
github.com/IDEA-Research/detrex,detrex/modeling/backbone/timm_backbone.py,2022-09-19T05:55:21Z,"Add using-backbone and FAQs docs (#67)

* add using backbone docs

* refine README

* add more settings

* fix timm backbone bugs and add dino timm backbone example

* add timm backbone docs

Co-authored-by: ntianhe ren <rentianhe@dgx061.scc.idea>"
github.com/IDEA-Research/detrex,detrex/modeling/backbone/timm_backbone.py,2022-08-30T05:15:19Z,"Add modeling docs (#33)

* refine docs

* refine docs

* refine docs

* add matcher docs

* add neck docs

* refine channel mapper docs

Co-authored-by: ntianhe ren <rentianhe@dgx061.scc.idea>"
github.com/IDEA-Research/detrex,detrex/modeling/backbone/timm_backbone.py,2022-08-29T13:15:27Z,"Rename ideadet to detrex (#32)

* rename ideadet to detrex

* rename ideadet to detrex

* rename ideadet params to detrex

Co-authored-by: ntianhe ren <rentianhe@dgx061.scc.idea>"
github.com/autonomousvision/stylegan-xl,training/loss.py,2022-04-26T04:24:03Z,Update loss.py
github.com/autonomousvision/stylegan-xl,training/loss.py,2022-04-25T06:52:13Z,restructure normalization
github.com/autonomousvision/stylegan-xl,training/loss.py,2022-04-01T12:00:53Z,fixed typo. added minimal env
github.com/autonomousvision/stylegan-xl,training/loss.py,2022-03-31T17:19:35Z,release
github.com/deforum-art/sd-webui-deforum,scripts/deforum_helpers/src/midas/backbones/beit.py,2023-09-03T13:19:59Z,Invoke either drop_path1 or drop_path – enables compatibility with more versions of timm (tested with 0.4.12 and 0.9.7)
github.com/deforum-art/sd-webui-deforum,scripts/deforum_helpers/src/midas/backbones/beit.py,2023-09-03T12:39:33Z,"Fix ""Block' object has no attribute 'drop_path'"" with newer timm libraries by invoking drop_path1. Mutate script list when using controlnet so that other scripts (e.g. seed.py) do not interfere when they have no place running alongside Deforum."
github.com/deforum-art/sd-webui-deforum,scripts/deforum_helpers/src/midas/backbones/beit.py,2023-05-11T14:12:02Z,"Revert ""add torch2 and xformers opts to midas""

This reverts commit 9e1393261c2f788536c89b57aa7f55090d0bb610."
github.com/deforum-art/sd-webui-deforum,scripts/deforum_helpers/src/midas/backbones/beit.py,2023-05-09T19:04:13Z,"add torch2 and xformers opts to midas

3d mode goes brrr...."
github.com/deforum-art/sd-webui-deforum,scripts/deforum_helpers/src/midas/backbones/beit.py,2023-04-11T19:31:19Z,Introducing Zoe(Depth)
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/image_classification/utils.py,2022-07-09T04:50:22Z,Add more data augmentation options for Unsupervised Domain Adaptation for Image Classification
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/image_classification/utils.py,2022-02-10T12:25:34Z,support domain label for  DA classification
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/image_classification/utils.py,2022-02-09T12:47:50Z,reorganize api structure
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/image_classification/utils.py,2021-10-18T01:56:17Z,fix bug and update docs
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/image_classification/utils.py,2021-10-01T07:00:14Z,hyper parameters for digits
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/image_classification/utils.py,2021-09-26T08:41:36Z,update authors
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/image_classification/utils.py,2021-09-22T19:04:25Z,add file header comments
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/image_classification/utils.py,2021-09-21T18:29:55Z,update domain adaptation classification; add digits to classification
github.com/kyegomez/swarms,swarms/models/timm.py,2024-02-21T01:01:28Z,[CLEANUP OPERATION]
github.com/kyegomez/swarms,swarms/models/timm.py,2024-01-19T17:22:26Z,[FEATS][UltralyticsModel] [TimmModel]
github.com/kyegomez/swarms,swarms/models/timm.py,2024-01-19T17:03:39Z,[BUFG][TimmModel]
github.com/kyegomez/swarms,swarms/models/timm.py,2024-01-19T16:41:17Z,[TimmModel]
github.com/kyegomez/swarms,swarms/models/timm.py,2023-12-05T19:52:49Z,"Revert ""pydantic bump fix for #249 """
github.com/kyegomez/swarms,swarms/models/timm.py,2023-12-03T22:19:22Z,pydantic bump
github.com/kyegomez/swarms,swarms/models/timm.py,2023-11-29T19:48:52Z,[CODE QUALITY]
github.com/kyegomez/swarms,swarms/models/timm.py,2023-11-11T22:36:37Z,"CLEANUP: swarms.agents, removed unused files

Former-commit-id: 07bcd22eef84de5d9157910366aee4547d68d509"
github.com/kyegomez/swarms,swarms/models/timm.py,2023-11-09T21:49:12Z,"dockerfile running


Former-commit-id: 991979dfc6feb88f3152f49d6de0ac4cfbdcbc38"
github.com/kyegomez/swarms,swarms/models/timm.py,2023-11-08T22:44:31Z,"yapf code quality


Former-commit-id: 2e7905db461fe5116023aa34a4b5affdd3a6cbf9"
github.com/kyegomez/swarms,swarms/models/timm.py,2023-11-08T19:52:53Z,"fuyu + zephyr fixes


Former-commit-id: 9aa40842a63ca72b8229c9481b2dc6f24fec4abc"
github.com/autonomousvision/stylegan-xl,run_inversion.py,2022-06-10T10:46:26Z,added inversion + PTI
github.com/thuml/Transfer-Learning-Library,examples/domain_generalization/re_identification/utils.py,2022-02-14T07:07:04Z,update code & docs for dg/reid
github.com/thuml/Transfer-Learning-Library,examples/domain_generalization/re_identification/utils.py,2022-02-09T12:47:50Z,reorganize api structure
github.com/thuml/Transfer-Learning-Library,examples/domain_generalization/re_identification/utils.py,2021-09-26T08:41:36Z,update authors
github.com/thuml/Transfer-Learning-Library,examples/domain_generalization/re_identification/utils.py,2021-09-21T18:31:13Z,rename examples directory
github.com/thygate/stable-diffusion-webui-depthmap-script,dmidas/backbones/vit.py,2023-06-27T20:33:58Z,"Move bundled code from the scripts folder

Please see https://github.com/vladmandic/automatic/issues/1335#issuecomment-1579429779

Huh, this was not that hard after all. Fingers crossed, nothing broke."
github.com/deforum-art/sd-webui-deforum,scripts/deforum_helpers/src/midas/backbones/swin.py,2023-04-11T19:31:19Z,Introducing Zoe(Depth)
github.com/microsoft/LMOps,minillm/transformers/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-11-16T12:47:19Z,upgrade transformers
github.com/microsoft/LMOps,minillm/transformers/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-06-14T11:44:35Z,add minillm
github.com/salesforce/UniControl,annotator/midas/midas/vit.py,2023-05-22T21:03:53Z,docs
github.com/salesforce/UniControl,annotator/midas/midas/vit.py,2023-05-21T00:45:14Z,first commit
github.com/microsoft/LMOps,minillm/transformers/src/transformers/models/timm_backbone/modeling_timm_backbone.py,2023-11-16T12:47:19Z,upgrade transformers
github.com/microsoft/LMOps,minillm/transformers/src/transformers/models/timm_backbone/modeling_timm_backbone.py,2023-08-16T03:11:32Z,upgrade transformers
github.com/datvuthanh/HybridNets,backbone.py,2022-10-11T07:58:20Z,Update backbone.py
github.com/datvuthanh/HybridNets,backbone.py,2022-10-01T10:06:07Z,add custom dataset support & onnx export
github.com/datvuthanh/HybridNets,backbone.py,2022-08-01T03:16:42Z,idk
github.com/datvuthanh/HybridNets,backbone.py,2022-06-24T04:13:43Z,add segmentation multilabel support
github.com/datvuthanh/HybridNets,backbone.py,2022-06-22T06:30:40Z,fix #38
github.com/datvuthanh/HybridNets,backbone.py,2022-04-22T21:15:59Z,#25 add backbone switching to command-line argument
github.com/datvuthanh/HybridNets,backbone.py,2022-03-14T13:48:32Z,clean code
github.com/datvuthanh/HybridNets,backbone.py,2022-02-09T22:23:23Z,"Fix segmentation head + efficientnet_pytorch

1) Fix segmentation head channel from 32 -> 64
2) Fix upsample layer parameter from segmentation head from 8 -> 4
3) Fix Encoder from timm to efficientnet_pytorch
4) Fix forward HybridNets"
github.com/datvuthanh/HybridNets,backbone.py,2022-02-04T12:08:44Z,requirements.txt by pipreqs
github.com/datvuthanh/HybridNets,backbone.py,2022-02-04T11:11:16Z,rename
github.com/datvuthanh/HybridNets,backbone.py,2022-02-04T10:42:00Z,clean code
github.com/datvuthanh/HybridNets,backbone.py,2022-02-03T20:32:46Z,Move folder
github.com/amazon-science/patchcore-inspection,src/patchcore/backbones.py,2022-05-05T15:32:52Z,Initial code commit for GitHub release
github.com/microsoft/LMOps,minillm/transformers/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-11-16T12:47:19Z,upgrade transformers
github.com/microsoft/LMOps,minillm/transformers/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-06-14T11:44:35Z,add minillm
github.com/caoyunkang/Segment-Any-Anomaly,SAA/modelinet.py,2023-05-27T13:56:04Z,SAA+
github.com/deforum-art/sd-webui-deforum,scripts/deforum_helpers/src/clipseg/models/vitseg.py,2023-01-15T15:18:59Z,"upload clipseg directly to src

as the current webui's transformers version (4.19) doesn't include it"
github.com/thygate/stable-diffusion-webui-depthmap-script,dmidas/backbones/beit.py,2023-09-09T18:11:21Z,Better timm compatibility fix
github.com/thygate/stable-diffusion-webui-depthmap-script,dmidas/backbones/beit.py,2023-08-29T07:26:46Z,"Fix timm incompatibility

Backports https://github.com/isl-org/MiDaS/pull/234
Fixes #319
Fixes #323"
github.com/thygate/stable-diffusion-webui-depthmap-script,dmidas/backbones/beit.py,2023-06-27T20:33:58Z,"Move bundled code from the scripts folder

Please see https://github.com/vladmandic/automatic/issues/1335#issuecomment-1579429779

Huh, this was not that hard after all. Fingers crossed, nothing broke."
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2021-12-11T20:29:20Z,"Develop (#296)

* refactor workflows

* refactor SEs att

* formatter action

* formatter action

* formatter action

* formatter action

* formatter action

* reformatted ✨

* formatter action

* Attention refactor (#284)

* se

* fixed se models

* reformatted ✨

* tests for se models

Co-authored-by: FrancescoSaverioZuppichini <FrancescoSaverioZuppichini@users.noreply.github.com>

* Feature/#285 pretrained (#287)

* pretrained weights refactor + logger

* reformatted ✨

* runners

* minor changes

* minor changes

* minor changes

* minor changes

* better tests

* fixtures

* minor changes

Co-authored-by: FrancescoSaverioZuppichini <FrancescoSaverioZuppichini@users.noreply.github.com>

* Feature/refactor (#295)

* types

* types

* types

* broken images

* general refactor

- swith to torchvision StocasticDepth\n- more blocks in nn.blocks\n- full model list in hf store

* raise python version to 3.8

* minor changes

* hf token in action

* hf token in action

* refactor

* refactor

* hf storage models

now uses the hidden api to get the model names

* minor changes

* minor changes

* minor changes

* minor changes

* minor changes

Co-authored-by: nektos/act <nektos/act@users.noreply.github.com>
Co-authored-by: FrancescoSaverioZuppichini <FrancescoSaverioZuppichini@users.noreply.github.com>"
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2021-12-11T20:13:51Z,"Revert ""Feature/refactor (#288)"" (#294)

This reverts commit 814d28de3186978c308a54f624f524d3e7fd7752."
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2021-12-11T20:12:26Z,"Feature/refactor (#288)

* refactor workflows

* refactor SEs att

* formatter action

* formatter action

* formatter action

* formatter action

* formatter action

* reformatted ✨

* formatter action

* Attention refactor (#284)

* se

* fixed se models

* reformatted ✨

* tests for se models

Co-authored-by: FrancescoSaverioZuppichini <FrancescoSaverioZuppichini@users.noreply.github.com>

* Feature/#285 pretrained (#287)

* pretrained weights refactor + logger

* reformatted ✨

* runners

* minor changes

* minor changes

* minor changes

* minor changes

* better tests

* fixtures

* minor changes

Co-authored-by: FrancescoSaverioZuppichini <FrancescoSaverioZuppichini@users.noreply.github.com>

* types

* types

* types

* broken images

* general refactor

- swith to torchvision StocasticDepth\n- more blocks in nn.blocks\n- full model list in hf store

* raise python version to 3.8

* minor changes

* hf token in action

* hf token in action

* refactor

* refactor

* hf storage models

now uses the hidden api to get the model names

* minor changes

* minor changes

* minor changes

* minor changes

* minor changes

Co-authored-by: nektos/act <nektos/act@users.noreply.github.com>
Co-authored-by: FrancescoSaverioZuppichini <FrancescoSaverioZuppichini@users.noreply.github.com>"
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2021-05-01T19:04:17Z,"storages API

Now PretrainedWeightsProvider takes an Storage instance allowing to share the same API across different storages (e.g. Local of Hugging Face)"
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2021-04-28T07:17:47Z,weights and benchmark
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2021-04-24T10:41:23Z,models
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2021-04-21T09:02:31Z,"fixed weights provider

- added tests"
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2021-04-10T15:44:28Z,minor changes
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2021-04-09T18:54:32Z,minor changes
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2021-04-09T18:51:37Z,added hf hub
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2021-02-18T19:16:13Z,done
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2021-02-15T11:52:53Z,removed unused
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2021-02-13T07:53:49Z,minor changes
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2021-01-23T15:43:34Z,tests
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2021-01-23T11:02:21Z,deit done
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2021-01-05T16:05:12Z,table updated
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2021-01-05T15:18:01Z,ViT done
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2020-12-20T15:58:53Z,doce
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2020-12-18T13:18:24Z,table + README
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2020-12-18T12:23:26Z,"gitflow-feature-stash: core-refactor

moved glasses.models out of glasses.nn"
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2020-11-19T19:47:45Z,minor changes
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2020-11-14T19:35:05Z,"unet + segmentation models

All encoders now subclass Encoder allowing smooth integration with segmentation models"
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2020-11-06T09:40:08Z,efficienet net lite
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2020-11-03T09:06:43Z,changed sintax
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2020-11-01T20:05:53Z,minor changes
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2020-10-31T16:51:34Z,eca + stem
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2020-10-23T19:23:26Z,fixed images
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2020-10-22T19:43:55Z,pretrained weights
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2020-10-21T19:18:41Z,pretrained apis
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2020-10-17T07:28:01Z,minor changes
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2020-10-16T09:07:43Z,make aws public readable
github.com/FrancescoSaverioZuppichini/glasses,transfer_weights.py,2020-10-16T07:21:00Z,transfer_weights done
github.com/microsoft/robustlearn,RiFT/model.py,2023-08-18T05:30:27Z,add LICENSE
github.com/microsoft/robustlearn,RiFT/model.py,2023-08-18T03:26:33Z,add RiFT
github.com/salesforce/UniControl,ldm/modules/midas/midas/vit.py,2023-05-22T21:03:53Z,docs
github.com/salesforce/UniControl,ldm/modules/midas/midas/vit.py,2023-05-21T00:45:14Z,first commit
github.com/deforum-art/sd-webui-deforum,scripts/deforum_helpers/src/midas/backbones/levit.py,2023-04-11T19:31:19Z,Introducing Zoe(Depth)
github.com/HelixNGC7293/DeforumStableDiffusionLocal,deforum-stable-diffusion/src/midas/vit.py,2022-12-03T20:56:35Z,V0.6 Txt batch function added
github.com/zyddnys/manga-image-translator,manga_translator/inpainting/ldm/modules/midas/midas/vit.py,2023-03-19T23:54:15Z,add stable diffusion inpainting
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/nima_arch.py,2023-12-20T17:21:56Z,feat: :construction_worker: add nima-koniq and nima-spaq
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/nima_arch.py,2023-08-06T15:59:56Z,feat: :children_crossing: improve dataset api
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/nima_arch.py,2023-08-06T10:37:42Z,feat: :triangular_flag_on_post: add topiq and download meta info automatically
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/nima_arch.py,2022-11-20T10:44:52Z,feat: update benchmark results
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/nima_arch.py,2022-11-18T13:26:57Z,docs: update benchmark setting
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/nima_arch.py,2022-07-27T11:39:53Z,"Fix nima arch, Use epoch in lr scheduler"
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/nima_arch.py,2022-03-19T12:56:42Z,Change default stride=27 for pieapp
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/nima_arch.py,2022-03-05T15:45:23Z,Add NIMA pretrained model.
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/nima_arch.py,2022-02-18T06:16:00Z,Clean some codes.
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/nima_arch.py,2022-02-17T14:05:52Z,Format code for the rest metrics
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/nima_arch.py,2022-02-13T07:59:53Z,Add MUSIQ
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/nima_arch.py,2022-02-08T13:45:27Z,Add hypernet.
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/nima_arch.py,2022-02-07T13:54:22Z,Add NIMA model.
github.com/Adamdad/DeRy,simlarity/utils.py,2022-12-07T08:13:04Z,"from compare_functions import (cca_torch, cka_linear_torch, cka_rbf_torch, lr_torch)"
github.com/Adamdad/DeRy,simlarity/utils.py,2022-12-07T08:12:32Z,"from compare_functions import (cca_torch, cka_linear, cka_linear_torch,
                               cka_rbf, cka_rbf_torch, lr_torch)"
github.com/Adamdad/DeRy,simlarity/utils.py,2022-05-26T05:46:12Z,fp16 = dict(loss_scale=512.0)
github.com/Adamdad/DeRy,simlarity/utils.py,2022-05-26T04:11:56Z,first submit
github.com/deforum-art/sd-webui-deforum,scripts/deforum_helpers/src/midas/backbones/swin2.py,2023-04-11T19:31:19Z,Introducing Zoe(Depth)
github.com/Algolzw/daclip-uir,da-clip/src/open_clip/timm_model.py,2023-10-07T09:22:47Z,update readme
github.com/Shilin-LU/TF-ICON,ldm/modules/midas/midas/vit.py,2023-07-23T03:55:16Z,first commit
github.com/daveredrum/Text2Tex,models/ControlNet/annotator/midas/midas/vit.py,2023-08-10T15:46:29Z,Release codebase & Update README
github.com/zhyever/PatchFusion,ControlNet/annotator/midas/midas/vit.py,2023-12-12T17:29:52Z,initial release
github.com/thygate/stable-diffusion-webui-depthmap-script,dmidas/backbones/swin.py,2023-06-27T20:33:58Z,"Move bundled code from the scripts folder

Please see https://github.com/vladmandic/automatic/issues/1335#issuecomment-1579429779

Huh, this was not that hard after all. Fingers crossed, nothing broke."
github.com/ShihaoZhaoZSH/Uni-ControlNet,annotator/midas/midas/vit.py,2023-05-25T08:26:02Z,test code
github.com/HighCWu/ControlLoRA,annotator/midas/midas/vit.py,2023-02-18T09:22:57Z,init commit
github.com/AnyLoc/AnyLoc,dino_extractor.py,2023-08-02T17:09:32Z,Created first (public) release
github.com/salesforce/ULIP,models/ULIP_models.py,2023-03-15T05:45:01Z,"[ULIP release][Version 1.1] Added support for pointnext, pointbert, pointmlp. Released pre-trained checkpoints for zero-shot classification."
github.com/salesforce/ULIP,models/ULIP_models.py,2023-03-07T04:20:32Z,"[ULIP release][Version 1.0] Provide pre-train code for pointnet2(ssg) with zero-shot classification evaluation, provide a sample template to pre-train customized 3D backbone, provide used datasets."
github.com/Alibaba-MIIL/ImageNet21K,visualize_detector.py,2021-07-30T05:53:18Z,fall11 tree
github.com/Alibaba-MIIL/ImageNet21K,visualize_detector.py,2021-05-27T12:04:14Z,imagenet21k_miil_tree
github.com/Alibaba-MIIL/ImageNet21K,visualize_detector.py,2021-05-20T06:54:46Z,added Mixer-B-16 model
github.com/Alibaba-MIIL/ImageNet21K,visualize_detector.py,2021-05-20T06:25:47Z,t1
github.com/ashawkey/nerf2mesh,depth_tools/dpt.py,2023-03-03T11:08:16Z,init
github.com/opendilab/LMDrive,LAVIS/lavis/models/clip_models/model.py,2023-12-13T08:53:56Z,first commit
github.com/ThereforeGames/unprompted,lib_unprompted/simswap/pg_modules/projector.py,2023-10-11T07:24:36Z,v10.0.0
github.com/daveredrum/Text2Tex,models/ControlNet/ldm/modules/midas/midas/vit.py,2023-08-10T15:46:29Z,Release codebase & Update README
github.com/autonomousvision/carla_garage,team_code/aim.py,2023-06-17T17:37:33Z,Added inference code.
github.com/vikhyat/moondream,moondream/vision_encoder.py,2024-03-06T23:40:06Z,batch inference support
github.com/vikhyat/moondream,moondream/vision_encoder.py,2024-02-07T02:53:21Z,release new model weights
github.com/vikhyat/moondream,moondream/vision_encoder.py,2024-01-30T23:45:51Z,"stop using torch.jit.script for the vision encoder

the interface is a little awkward right now, will be fixed shortly"
github.com/vikhyat/moondream,moondream/vision_encoder.py,2024-01-30T05:50:18Z,simplify resize/cropping in the vision encoder
github.com/vikhyat/moondream,moondream/vision_encoder.py,2024-01-30T05:45:03Z,detect and use appropriate device/dtype
github.com/vikhyat/moondream,moondream/vision_encoder.py,2024-01-29T09:39:59Z,Refactor gradio_demo.py and vision_encoder.py
github.com/vikhyat/moondream,moondream/vision_encoder.py,2024-01-29T07:16:25Z,Refactor text_model.py and vision_encoder.py
github.com/vikhyat/moondream,moondream/vision_encoder.py,2024-01-25T12:32:48Z,add cuda support
github.com/vikhyat/moondream,moondream/vision_encoder.py,2024-01-20T20:36:59Z,release moondream1
github.com/vikhyat/moondream,moondream/vision_encoder.py,2023-12-29T22:49:04Z,simple text generation interface
github.com/vikhyat/moondream,moondream/vision_encoder.py,2023-12-29T08:21:39Z,add vision encoder
github.com/vislearn/ControlNet-XS,annotator/midas/midas/vit.py,2023-09-22T17:14:13Z,Fill repo with life
github.com/lhoyer/MIC,cls/examples/utils.py,2022-12-04T10:16:26Z,Init repo
github.com/autonomousvision/carla_garage,team_code/transfuser.py,2023-06-17T17:37:33Z,Added inference code.
github.com/zhyever/PatchFusion,ControlNet/ldm/modules/midas/midas/vit.py,2023-12-12T17:29:52Z,initial release
github.com/autonomousvision/carla_garage,team_code/bev_encoder.py,2023-06-17T17:37:33Z,Added inference code.
github.com/vislearn/ControlNet-XS,ldm/modules/midas/midas/vit.py,2023-09-22T17:14:13Z,Fill repo with life
github.com/thuml/Transfer-Learning-Library,examples/domain_generalization/image_classification/utils.py,2022-02-14T04:18:51Z,remove dglib
github.com/thuml/Transfer-Learning-Library,examples/domain_generalization/image_classification/utils.py,2022-02-14T03:34:14Z,remove wilds in domain generalization
github.com/thuml/Transfer-Learning-Library,examples/domain_generalization/image_classification/utils.py,2022-02-09T12:47:50Z,reorganize api structure
github.com/thuml/Transfer-Learning-Library,examples/domain_generalization/image_classification/utils.py,2021-09-26T08:41:36Z,update authors
github.com/thuml/Transfer-Learning-Library,examples/domain_generalization/image_classification/utils.py,2021-09-21T18:31:13Z,rename examples directory
github.com/Boese0601/MagicDance,model_lib/ControlNet/ldm/modules/midas/midas/vit.py,2024-02-16T00:57:28Z,train/test
github.com/YuxinWenRick/hard-prompts-made-easy,open_clip/timm_model.py,2023-02-07T17:13:46Z,init commit
github.com/Westlake-AI/openmixup,openmixup/models/backbones/timm_backbone.py,2022-03-25T16:00:04Z,v0.1.3 code refactoring
github.com/Westlake-AI/openmixup,openmixup/models/backbones/timm_backbone.py,2022-02-13T14:54:25Z,ViTs
github.com/microsoft/LMOps,minillm/transformers/src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-06-14T11:44:35Z,add minillm
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/topiq_arch.py,2024-01-25T05:45:41Z,fix: :bug: fix topiq_nr-face multiple inference error
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/topiq_arch.py,2024-01-05T08:13:31Z,feat: :technologist: add default align&crop for topiq_nr-face metric
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/topiq_arch.py,2023-10-09T06:31:33Z,"feat: :triangular_flag_on_post: add datasets PIQ2023, GFIQA and metric `topiq_nr-face`."
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/topiq_arch.py,2023-09-26T12:33:55Z,refactor: :alien: make compatibel with latest timm
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/topiq_arch.py,2023-08-08T04:08:18Z,feat: update arxiv link for topiq
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/topiq_arch.py,2023-08-06T15:59:56Z,feat: :children_crossing: improve dataset api
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/topiq_arch.py,2023-08-06T10:37:42Z,feat: :triangular_flag_on_post: add topiq and download meta info automatically
github.com/Picsart-AI-Research/PAIR-Diffusion,ldm/modules/midas/midas/vit.py,2023-04-09T19:56:14Z,inference code release
github.com/openvinotoolkit/training_extensions,src/otx/algorithms/common/adapters/mmcv/models/backbones/efficientnetv2.py,2023-11-08T06:19:06Z,"Unify logger usage (#2612)

* unify logger

* align with pre-commit

* unify anomaly logger to otx

* change logger file path

* align with pre-commit

* change logger file path in missing file

* configure logger after ConfigManager is initialized

* configure logger when ConfigManager instance is initialized

* update unit test code

* move config_logger to each cli file

* align with pre-commit

* change part still using mmcv logger"
github.com/openvinotoolkit/training_extensions,src/otx/algorithms/common/adapters/mmcv/models/backbones/efficientnetv2.py,2023-09-08T05:04:28Z,"Remove mpa legacy (#2486)

* Remove MPA

* Remove mpa

* Fix unit tests

* Remove MPA in tests"
github.com/openvinotoolkit/training_extensions,src/otx/algorithms/common/adapters/mmcv/models/backbones/efficientnetv2.py,2023-07-04T02:43:22Z,"Updated to use pytest for all testing execpt unittest (#2286)

* updated to use pytest for all testing execpt unittest

* change the project layout to src-layout

* removed use_develop = true configuration to the tox testenv to test with package installation"
github.com/IDEA-CCNL/Fengshenbang-LM,fengshen/examples/finetune_taiyi_stable_diffusion/evaluate_model.py,2022-11-29T03:47:02Z,fix some bug
github.com/IDEA-CCNL/Fengshenbang-LM,fengshen/examples/finetune_taiyi_stable_diffusion/evaluate_model.py,2022-11-29T03:46:02Z,fix some bug
github.com/IDEA-CCNL/Fengshenbang-LM,fengshen/examples/finetune_taiyi_stable_diffusion/evaluate_model.py,2022-11-17T07:32:19Z,fixed
github.com/IDEA-CCNL/Fengshenbang-LM,fengshen/examples/finetune_taiyi_stable_diffusion/evaluate_model.py,2022-11-17T07:26:56Z,add stable diffusion evaluater
github.com/ActiveVisionLab/nope-nerf,DPT/dpt/vit.py,2023-04-13T11:53:12Z,release
github.com/Zhendong-Wang/Prompt-Diffusion,annotator/midas/midas/vit.py,2023-05-01T00:43:50Z,initial commit
github.com/sail-sg/EditAnything,ldm/modules/midas/midas/vit.py,2023-04-09T09:29:32Z,Init commit
github.com/NVlabs/GCVit,onnx_convert.py,2022-09-11T02:34:58Z,"add dynamic shape onnx converter

Signed-off-by: ahatamizadeh <ahatamizadeh@nvidia.com>"
github.com/NVlabs/GCVit,onnx_convert.py,2022-08-20T02:48:45Z,"add onnx scripts

Signed-off-by: ahatamizadeh <ahatamizadeh@nvidia.com>"
github.com/mbanani/lgssl,hubconf.py,2023-04-03T19:50:49Z,Update hubconf.py to add all released model checkpoints.
github.com/mbanani/lgssl,hubconf.py,2023-02-24T01:10:43Z,first commit
github.com/thygate/stable-diffusion-webui-depthmap-script,dmidas/backbones/levit.py,2023-06-27T20:33:58Z,"Move bundled code from the scripts folder

Please see https://github.com/vladmandic/automatic/issues/1335#issuecomment-1579429779

Huh, this was not that hard after all. Fingers crossed, nothing broke."
github.com/salesforce/CodeRL,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-08-22T11:40:57Z,add transformers with code udpate of t5 model
github.com/Zhendong-Wang/Prompt-Diffusion,ldm/modules/midas/midas/vit.py,2023-05-01T00:43:50Z,initial commit
github.com/rehg-lab/RAVE,annotator/midas/midas/vit.py,2023-12-08T02:09:31Z,Initial commit
github.com/thygate/stable-diffusion-webui-depthmap-script,dmidas/backbones/swin2.py,2023-06-27T20:33:58Z,"Move bundled code from the scripts folder

Please see https://github.com/vladmandic/automatic/issues/1335#issuecomment-1579429779

Huh, this was not that hard after all. Fingers crossed, nothing broke."
github.com/haoheliu/AudioLDM,audioldm/clap/open_clip/timm_model.py,2023-04-10T07:22:45Z,use audiocaps and musiccaps to finetune current AudioLDM. Add three more checkpoints. Two checkpoints are finetuned with audio-text pairs. Another checkpoint use a larger model size than audioldm-s.
github.com/haoheliu/AudioLDM,audioldm/clap/open_clip/timm_model.py,2023-01-30T00:05:12Z,first commit
github.com/salesforce/CodeRL,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-08-22T11:40:57Z,add transformers with code udpate of t5 model
github.com/salesforce/CodeRL,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-08-22T11:40:57Z,add transformers with code udpate of t5 model
github.com/opendilab/LMDrive,LAVIS/lavis/models/clip_models/timm_model.py,2023-12-13T08:53:56Z,first commit
github.com/KovenYu/WonderJourney,midas_module/midas/backbones/vit.py,2024-02-11T05:51:07Z,init
github.com/timojl/clipseg,models/vitseg.py,2021-11-22T14:37:35Z,init
github.com/Megvii-BaseDetection/cvpods,cvpods/analyser/visualize_erf.py,2023-03-10T10:05:26Z,"chore(analyser): add angular update (#101)

* chore(analyser): add angular update"
github.com/Megvii-BaseDetection/cvpods,cvpods/analyser/visualize_erf.py,2023-03-08T06:47:29Z,"feat(anaylser): add weight analysis visualization code (#102)

feat(anaylser): add weight analysis visualization code"
github.com/Megvii-BaseDetection/cvpods,cvpods/analyser/visualize_erf.py,2023-03-06T10:28:23Z,"feat(analyser): add ERF visualization tool (#100)

 feat(analyser): add ERF visualization tool"
github.com/deforum-art/deforum-stable-diffusion,src/ldm/modules/midas/midas/vit.py,2022-11-24T02:51:19Z,update ldm
github.com/AMAAI-Lab/mustango,audioldm/clap/open_clip/timm_model.py,2023-11-15T00:09:37Z,upload: audioldm
github.com/wayveai/mile,mile/models/mile.py,2022-10-17T19:08:59Z,Initial commit
github.com/deforum-art/sd-webui-deforum,scripts/deforum_helpers/src/midas/backbones/next_vit.py,2023-04-11T19:31:19Z,Introducing Zoe(Depth)
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/partial_domain_adaptation/utils.py,2022-02-09T12:47:50Z,reorganize api structure
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/partial_domain_adaptation/utils.py,2021-09-21T18:31:13Z,rename examples directory
github.com/KovenYu/WonderJourney,midas_module/midas/backbones/beit.py,2024-02-11T05:51:07Z,init
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/openset_domain_adaptation/utils.py,2022-02-09T12:47:50Z,reorganize api structure
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/openset_domain_adaptation/utils.py,2021-10-18T01:56:17Z,fix bug and update docs
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/openset_domain_adaptation/utils.py,2021-09-21T18:31:13Z,rename examples directory
github.com/DLLXW/data-science-competition,tianchi/2022CVPR-petBiometricChalenge/model_siamese.py,2022-06-01T09:47:57Z,tianchi restore
github.com/KovenYu/WonderJourney,midas_module/midas/backbones/swin.py,2024-02-11T05:51:07Z,init
github.com/DLLXW/data-science-competition,tianchi/2022CVPR-petBiometricChalenge/model_triplet.py,2022-06-01T09:47:57Z,tianchi restore
github.com/Boese0601/MagicDance,model_lib/ControlNet/annotator/midas/midas/backbones/vit.py,2024-02-16T00:57:28Z,train/test
github.com/baaivision/Uni3D,models/uni3d.py,2023-10-19T14:13:46Z,Initial commit
github.com/opendilab/LMDrive,LAVIS/lavis/common/annotator/midas/midas/vit.py,2023-12-13T08:53:56Z,first commit
github.com/AILab-CVC/SEED-Bench,lavis/models/clip_models/model.py,2023-07-28T09:29:04Z,initial commit
github.com/nianticlabs/simplerecon,experiment_modules/depth_model.py,2022-12-31T13:25:10Z,"Fixed intrinsics, flip augmentation, and projection."
github.com/nianticlabs/simplerecon,experiment_modules/depth_model.py,2022-09-20T16:59:12Z,Refactor naming fix for cost_volume.py and more comments to make transforms clearer.
github.com/nianticlabs/simplerecon,experiment_modules/depth_model.py,2022-09-01T03:29:04Z,Hello World!
github.com/Boese0601/MagicDance,model_lib/ControlNet/annotator/midas/midas/backbones/beit.py,2024-02-16T00:57:28Z,train/test
github.com/KovenYu/WonderJourney,midas_module/midas/backbones/levit.py,2024-02-11T05:51:07Z,init
github.com/KovenYu/WonderJourney,midas_module/midas/backbones/swin2.py,2024-02-11T05:51:07Z,init
github.com/Boese0601/MagicDance,model_lib/ControlNet/annotator/midas/midas/backbones/swin.py,2024-02-16T00:57:28Z,train/test
github.com/Algolzw/daclip-uir,universal-image-restoration/open_clip/timm_model.py,2023-10-02T11:44:56Z,add uir code
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/maniqa_arch.py,2023-11-28T10:52:40Z,Fix maniqa hyperparameter error
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/maniqa_arch.py,2023-10-09T16:42:27Z,docs: :memo: update docs
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/maniqa_arch.py,2023-10-09T11:55:23Z,docs: :memo: add docs with copilot
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/maniqa_arch.py,2023-08-06T15:59:56Z,feat: :children_crossing: improve dataset api
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/maniqa_arch.py,2023-04-03T08:06:43Z,"feat: :memo: add maniqa-koniq, kadid"
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/maniqa_arch.py,2022-12-21T14:41:36Z,feat: add clipiqa (improved version) and clipiqa+
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/maniqa_arch.py,2022-09-01T11:41:59Z,"feat: Add MANIQA, AHIQ pretrained weights

add more pretrained models

 improve training pipeline

 add more
datasets"
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/maniqa_arch.py,2022-06-15T07:39:54Z,Add codes of MANIQA
github.com/Boese0601/MagicDance,model_lib/ControlNet/annotator/midas/midas/backbones/levit.py,2024-02-16T00:57:28Z,train/test
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/wilds_image_classification/utils.py,2022-07-14T06:35:10Z,Remove unnecessary log outputs
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/wilds_image_classification/utils.py,2022-07-10T03:34:39Z,Add implementation of FixMatch for Unsupervised Domain Adaptation for WILDS (Image Classification)
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/wilds_image_classification/utils.py,2022-07-08T02:57:10Z,Fix Typos
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/wilds_image_classification/utils.py,2022-02-11T04:09:02Z,add CDAN/DANN/JAN/MDD to wilds; support distributed for DANN/CDAN
github.com/thuml/Transfer-Learning-Library,examples/domain_adaptation/wilds_image_classification/utils.py,2022-02-11T02:33:53Z,fix bugs; add wilds
github.com/wayveai/mile,mile/models/common.py,2022-10-17T19:08:59Z,Initial commit
github.com/Boese0601/MagicDance,model_lib/ControlNet/annotator/midas/midas/backbones/swin2.py,2024-02-16T00:57:28Z,train/test
github.com/Visual-Attention-Network/SegNeXt,mmseg/models/backbones/timm_backbone.py,2022-09-15T03:22:11Z,first commit
github.com/lightforever/mlcomp,mlcomp/contrib/model/timm.py,2020-02-23T11:29:18Z,last changes
github.com/lightforever/mlcomp,mlcomp/contrib/model/timm.py,2020-02-13T06:40:19Z,duration fix
github.com/WangLibo1995/GeoSeg,geoseg/models/MANet.py,2022-05-21T10:24:31Z,version 1.0
github.com/opendilab/InterFuser,interfuser/tests/test_models.py,2022-11-14T17:55:16Z,update
github.com/UMass-Foundation-Model/3D-LLM,three_steps_3d_feature/second_step/lavis/models/clip_models/model.py,2023-08-28T20:40:17Z,format with black
github.com/UMass-Foundation-Model/3D-LLM,three_steps_3d_feature/second_step/lavis/models/clip_models/model.py,2023-07-24T22:31:18Z,features
github.com/GitGyun/visual_token_matching,model/dpt/vit.py,2023-02-21T06:12:29Z,added training codes
github.com/thuml/Transfer-Learning-Library,examples/semi_supervised_learning/image_classification/utils.py,2022-07-09T04:53:22Z,remove unnecessary imports
github.com/thuml/Transfer-Learning-Library,examples/semi_supervised_learning/image_classification/utils.py,2022-06-30T08:49:56Z,Update FlexMatch
github.com/thuml/Transfer-Learning-Library,examples/semi_supervised_learning/image_classification/utils.py,2022-05-08T04:03:45Z,Noisy Student for semi-supervised learning
github.com/thuml/Transfer-Learning-Library,examples/semi_supervised_learning/image_classification/utils.py,2022-05-01T09:29:47Z,Fix dataset loading bug
github.com/thuml/Transfer-Learning-Library,examples/semi_supervised_learning/image_classification/utils.py,2022-02-19T05:49:04Z,Update dataset pre-process for semi-supervised classification
github.com/thuml/Transfer-Learning-Library,examples/semi_supervised_learning/image_classification/utils.py,2022-02-19T03:20:51Z,Updated the way to construct labeled split in semi-supervised learning
github.com/thuml/Transfer-Learning-Library,examples/semi_supervised_learning/image_classification/utils.py,2022-02-15T13:53:59Z,Mean Teacher for semi-supervised classification
github.com/thuml/Transfer-Learning-Library,examples/semi_supervised_learning/image_classification/utils.py,2022-02-15T11:42:11Z,ERM for semi-supervised classification
github.com/HarborYuan/ovsam,ext/open_clip/timm_model.py,2024-01-07T08:52:19Z,add sam2clip
github.com/autonomousvision/projected-gan,pg_modules/projector.py,2021-11-30T12:21:54Z,release
github.com/autonomousvision/stylegan-xl,feature_networks/vit.py,2022-03-31T17:19:35Z,release
github.com/LAION-AI/CLAP,src/laion_clap/clap_module/timm_model.py,2023-02-27T21:12:54Z,update four ckpts
github.com/facebookresearch/MetaCLIP,src/open_clip/timm_model.py,2023-10-02T07:27:51Z,Initial commit
github.com/lxtGH/OMG-Seg,ext/open_clip/timm_model.py,2024-01-18T17:03:47Z,update
github.com/AILab-CVC/SEED,SEED_Tokenizer/lavis/models/clip_models/model.py,2024-02-24T04:23:21Z,Upload training code
github.com/gangweiX/IGEV,IGEV-MVS/core/extractor.py,2023-03-20T11:52:04Z,Add files via upload
github.com/alibaba/EasyCV,easycv/models/backbones/pytorch_image_models_wrapper.py,2023-02-14T06:02:12Z,"support multi-row first_order_params (#282)

* support multi-row first_order_params"
github.com/alibaba/EasyCV,easycv/models/backbones/pytorch_image_models_wrapper.py,2022-09-19T08:07:04Z,"add error code (#146)

* add error code"
github.com/alibaba/EasyCV,easycv/models/backbones/pytorch_image_models_wrapper.py,2022-09-17T03:21:47Z,"fix DeiTIII cr bug (#196)

* fixbug_DeiTIII and rename vit_transfomer_dynamic.py to vit_transformer_dynamic.py"
github.com/alibaba/EasyCV,easycv/models/backbones/pytorch_image_models_wrapper.py,2022-06-16T06:46:47Z,Swint_cifar config bugfix (#95)
github.com/alibaba/EasyCV,easycv/models/backbones/pytorch_image_models_wrapper.py,2022-06-13T02:29:41Z,remove useless import and optimize imports (#84)
github.com/alibaba/EasyCV,easycv/models/backbones/pytorch_image_models_wrapper.py,2022-06-10T04:28:37Z,"bugfix_timm_init_weights (#85)

* bugfix_timm_init_weights"
github.com/alibaba/EasyCV,easycv/models/backbones/pytorch_image_models_wrapper.py,2022-06-06T04:03:05Z,"bugfix_swintiny (#79)

1. add easycv_model default_path
2. bugfix pretrained"
github.com/alibaba/EasyCV,easycv/models/backbones/pytorch_image_models_wrapper.py,2022-06-01T03:01:29Z,"Expand cls model zoo (#55)

1. expand cls model zoo
2. uniform load_pretrained"
github.com/alibaba/EasyCV,easycv/models/backbones/pytorch_image_models_wrapper.py,2022-04-22T07:22:43Z,remove all imports in easycv.utils.__init__ (#21)
github.com/alibaba/EasyCV,easycv/models/backbones/pytorch_image_models_wrapper.py,2022-04-02T12:01:06Z,initial commit
github.com/nupurkmr9/vision-aided-gan,vision_aided_loss/cvmodel.py,2022-09-03T07:31:14Z,Update cvmodel.py
github.com/nupurkmr9/vision-aided-gan,vision_aided_loss/cvmodel.py,2022-05-04T21:13:28Z,vision_aided_loss as independent module
github.com/KIMGEONUNG/BigColor,colorize_real.py,2022-07-11T03:39:39Z,update: trivial
github.com/thygate/stable-diffusion-webui-depthmap-script,dmidas/backbones/next_vit.py,2023-06-27T20:33:58Z,"Move bundled code from the scripts folder

Please see https://github.com/vladmandic/automatic/issues/1335#issuecomment-1579429779

Huh, this was not that hard after all. Fingers crossed, nothing broke."
github.com/ThereforeGames/unprompted,lib_unprompted/stable_diffusion/clipseg/models/vitseg.py,2023-01-24T07:45:24Z,v5.2.0
github.com/xingyi-li/3d-cinemagraphy,third_party/DPT/dpt/vit.py,2023-06-07T03:22:07Z,Add files via upload
github.com/lllyasviel/ControlNet-v1-1-nightly,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/vit.py,2023-03-14T17:45:51Z,i
github.com/WangLibo1995/GeoSeg,geoseg/models/ABCNet.py,2023-10-06T13:42:41Z,Update ABCNet.py
github.com/WangLibo1995/GeoSeg,geoseg/models/ABCNet.py,2022-12-07T05:55:21Z,Update ABCNet.py
github.com/WangLibo1995/GeoSeg,geoseg/models/ABCNet.py,2022-06-16T12:10:32Z,updated
github.com/WangLibo1995/GeoSeg,geoseg/models/ABCNet.py,2022-05-21T10:24:31Z,version 1.0
github.com/kaleido-lab/dolphin,modules/annotator/midas/midas/vit.py,2023-05-03T14:06:32Z,init
github.com/rese1f/StableVideo,annotator/midas/midas/vit.py,2023-02-19T12:46:00Z,i
github.com/haoheliu/versatile_audio_super_resolution,audiosr/clap/open_clip/timm_model.py,2023-09-06T20:00:50Z,update
github.com/lllyasviel/ControlNet-v1-1-nightly,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/beit.py,2023-03-14T17:45:51Z,i
github.com/XPixelGroup/DiffBIR,ldm/modules/midas/midas/vit.py,2023-08-28T16:27:07Z,first commit
github.com/lllyasviel/ControlNet-v1-1-nightly,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin.py,2023-03-14T17:45:51Z,i
github.com/lllyasviel/ControlNet-v1-1-nightly,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/levit.py,2023-03-14T17:45:51Z,i
github.com/lllyasviel/ControlNet-v1-1-nightly,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin2.py,2023-03-14T17:45:51Z,i
github.com/huggingface/optimum-intel,optimum/intel/openvino/modeling_timm.py,2024-02-15T16:02:17Z,"Enable OpenVINO export of loaded model (#557)

* Enable OpenVINO export of loaded model

* fix import

* add tests

* install optimum from source

* format

* add test

* fix test

* fix format

* update example script

* improve comment

* fix

* add test for LCMs

* format

* add back test

* fix

* add librany name to load model

* fix openvino export for model with input names  mismatch

* fix format

* fix sentence transformers export

* add test for sentence transformers
* fix export

* check tests"
github.com/huggingface/optimum-intel,optimum/intel/openvino/modeling_timm.py,2023-11-30T14:17:13Z,Fix compatibility with timm latest release (#482)
github.com/huggingface/optimum-intel,optimum/intel/openvino/modeling_timm.py,2023-09-29T10:38:10Z,"Fix openvino main export (#439)

* fix main export

* format

* add auto model loading to test

* format

* rename"
github.com/huggingface/optimum-intel,optimum/intel/openvino/modeling_timm.py,2023-08-28T07:42:24Z,"Remove timm from being a hard dependency  (#414)

* Fix ov timm model loading

* increase tolerance

* change timm from hard to soft dependency

* add missing import"
github.com/huggingface/optimum-intel,optimum/intel/openvino/modeling_timm.py,2023-08-23T14:50:58Z,"Timm Models integration to Optimum-intel (#404)

* Relevant file changes

* Added test for timm

* Fixed Style

* Added style changes

* Reduces abstractions

* Fixed styles

* Added Feature & text for Timm model saving

* Added Timm to dependency

* Added Image Processor source reference

* Fixed Divergence in modeling_diffusion.py

* Fixed divergence in modeling_diffusion.py

* Adde Timm example  to docs

* Fixed style"
github.com/Boese0601/MagicDance,model_lib/ControlNet/annotator/midas/midas/backbones/next_vit.py,2024-02-16T00:57:28Z,train/test
github.com/yu-takagi/StableDiffusionReconstruction,codes/diffusion_sd2/stablediffusion/ldm/modules/midas/midas/vit.py,2023-06-21T03:17:34Z,code release
github.com/ThereforeGames/unprompted,lib_unprompted/stable_diffusion/pez_open_clip/timm_model.py,2023-02-13T05:44:46Z,v7.5.0
github.com/AILab-CVC/SEED,SEED_Tokenizer/lavis/models/eva_clip/timm_model.py,2024-02-24T04:23:21Z,Upload training code
github.com/lllyasviel/ControlNet-v1-1-nightly,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/next_vit.py,2023-03-14T17:45:51Z,i
github.com/AILab-CVC/SEED-Bench,lavis/models/clip_models/timm_model.py,2023-07-28T09:29:04Z,initial commit
github.com/microsoft/i-Code,i-Code-V3/core/models/encoders/clap_modules/open_clip/timm_model.py,2023-07-09T01:32:16Z,restructure
github.com/Adamdad/DeRy,mmcls_addon/models/backbones/dery.py,2022-12-07T09:05:54Z,"from mmcls.models.builder import BACKBONES, build_backbone"
github.com/Adamdad/DeRy,mmcls_addon/models/backbones/dery.py,2022-11-23T17:36:54Z,MODEL_BLOCKS
github.com/hustvl/TopFormer,mmseg/models/backbones/timm_backbone.py,2021-12-09T05:07:46Z,init
github.com/pytorch/TensorRT,tests/modules/hub.py,2023-09-09T01:38:27Z,"WAR: Disabling ViT tests until exporting with py311 is fixed

More info:

https://github.com/huggingface/pytorch-image-models/issues/1946

Signed-off-by: Naren Dasan <naren@narendasan.com>
Signed-off-by: Naren Dasan <narens@nvidia.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-10-10T20:25:02Z,"chore: minor fixes

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-08-12T23:47:37Z,"[FX] remove op_lowering_disallow_list and format revert (#1261)

* sync to fb master

* reverse _compile.py change

* comment line length to use default

* update nightly pytorch to 0810

* black formatting

* update"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-08-09T18:47:30Z,"chore: linting the branch

Signed-off-by: Naren Dasan <naren@narendasan.com>
Signed-off-by: Naren Dasan <narens@nvidia.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-08-09T02:59:03Z,"chore: Apply linting and introduce precommit hooks to auto run repo
linting

Signed-off-by: Naren Dasan <naren@narendasan.com>
Signed-off-by: Naren Dasan <narens@nvidia.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-07-26T18:45:00Z,"chore: Update generateRandomTensors uses

Signed-off-by: Naren Dasan <naren@narendasan.com>
Signed-off-by: Naren Dasan <narens@nvidia.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-07-26T08:25:33Z,"tests: Fix tests

Signed-off-by: Naren Dasan <naren@narendasan.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-07-26T08:25:33Z,"feat: support for grouped inputs

Signed-off-by: Naren Dasan <naren@narendasan.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-07-22T19:05:09Z,"refactor: Rigging python tests in pytest for CI and Nox

Signed-off-by: Naren Dasan <naren@narendasan.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-07-12T00:20:15Z,"fix: fix the model name typo error

Signed-off-by: Bo Wang <bowa@nvidia.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-06-22T14:25:52Z,"chore: Minor fix in hub.py model name

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-06-22T14:24:33Z,"chore: add misplaced no eval scripted loop fallback model

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-06-16T20:42:11Z,"tests: add test for inplace op in if block

Signed-off-by: Bo Wang <bowa@nvidia.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-05-11T22:26:45Z,"chore: Applying lint

Signed-off-by: Anurag Dixit <a.dixit91@gmail.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-05-10T20:48:31Z,"fix: Moved BERT module setup to custom_models

Signed-off-by: Anurag Dixit <a.dixit91@gmail.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-05-10T02:14:04Z,"refactor: Segregated custom model from pre-trained models

Signed-off-by: Anurag Dixit <a.dixit91@gmail.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-05-10T02:14:04Z,"chore: Applying lint

Signed-off-by: Anurag Dixit <a.dixit91@gmail.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-05-10T02:14:04Z,"refactor: Run trace or script of model only if version mismatches or file doesn't exists

Signed-off-by: Anurag Dixit <a.dixit91@gmail.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-05-10T02:14:04Z,"feat: Added manifest to track the downloaded files

Signed-off-by: Anurag Dixit <a.dixit91@gmail.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-05-10T02:14:04Z,"feat: Optimize hub.py download

Signed-off-by: Anurag Dixit <a.dixit91@gmail.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-04-05T02:13:14Z,"refactor: apply linting

Signed-off-by: Naren Dasan <naren@narendasan.com>
Signed-off-by: Naren Dasan <narens@nvidia.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-04-05T01:16:11Z,"feat(//tests): Adding BERT to the test suite

Signed-off-by: Naren Dasan <naren@narendasan.com>
Signed-off-by: Naren Dasan <narens@nvidia.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2022-04-04T22:44:41Z,"chore: Add BERT to the model set

Signed-off-by: Naren Dasan <naren@narendasan.com>
Signed-off-by: Naren Dasan <narens@nvidia.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2021-09-17T01:00:37Z,"Add tests

Signed-off-by: Arvind Sridhar <arvindsridhar@berkeley.edu>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2021-08-20T05:45:15Z,"Merge pull request #582 from NVIDIA/jetpack_4.6

feat(jetson): Support for Jetpack 4.6"
github.com/pytorch/TensorRT,tests/modules/hub.py,2021-08-20T05:23:27Z,"refactor: apply linting

Signed-off-by: Naren Dasan <naren@narendasan.com>
Signed-off-by: Naren Dasan <narens@nvidia.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2021-08-20T05:24:16Z,"Add tests

Signed-off-by: Arvind Sridhar <arvindsridhar@berkeley.edu>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2021-08-17T23:28:21Z,"feat(jetson): Support for Jetpack 4.6

This commit adds support for Jetpack 4.6. Users should now add the
--platforms flag to bazel compilation to target the jetpack version

e.g. `bazel build //:libtrtorch --platforms //toolchains:jetpack_4.6`

By default setup.py now expects Jetpack 4.6. To override add the
`--jetpack-version 4.5` flag

Signed-off-by: Naren Dasan <naren@narendasan.com>
Signed-off-by: Naren Dasan <narens@nvidia.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2021-07-28T16:04:13Z,"refactor: apply linting

Signed-off-by: Naren Dasan <naren@narendasan.com>
Signed-off-by: Naren Dasan <narens@nvidia.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2021-07-26T18:18:35Z,"fix: Fix testcases using old InputRange API

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2021-07-21T05:49:44Z,"fix: Bug fixes, code refactor and rebase with master

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2021-06-30T19:46:03Z,"chore: Add efficientnet b0 and VIT to testsuite

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2021-06-28T22:52:13Z,"chore: Add efficientNet to testsuite

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2021-05-15T00:56:19Z,"test: add test suite for conditionals

Signed-off-by: Bo Wang <wangbo1995ee@163.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2021-03-12T02:45:05Z,"fix(aten::linear): Fixes new issues in 1.8 that cause script based
models to fail while trace models work. Seems to be down to the fact
that the two create different graphs and script was having issues with
aten::linear

Signed-off-by: Naren Dasan <naren@narendasan.com>
Signed-off-by: Naren Dasan <narens@nvidia.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2020-12-12T01:49:05Z,"Pytorch 1.7.1 update

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2020-11-21T21:00:53Z,"Pytorch 1.7 update API changes

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>

Linter fixes

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>

Conv operator signature fix

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>

Add deprecated conv matching for traced models

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>

Update library versions and requirements

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>

Add utility function for conv

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>

Update hub model version

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2020-10-31T00:14:57Z,"refactor(//core): Refactor C++ files with new linter tool

Signed-off-by: Naren Dasan <naren@narendasan.com>
Signed-off-by: Naren Dasan <narens@nvidia.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2020-07-14T04:36:27Z,"test(serialization): Changes the serialization test to cover both
dynamic (plugin) and static, uses a pooling based model instead of
interpolate since that is handled by TensorRT now

Signed-off-by: Naren Dasan <naren@narendasan.com>
Signed-off-by: Naren Dasan <narens@nvidia.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2020-06-19T01:21:57Z,"test(): added interpolate model for engine serialization testing
Signed-off-by: Abhiram Iyer <abhirami@nvidia.com>

Signed-off-by: Abhiram Iyer <abhi.iyer.ai@gmail.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2020-05-31T02:11:02Z,"refactor(//tests/modules/hub): Code style fixes

Signed-off-by: Naren Dasan <naren@narendasan.com>
Signed-off-by: Naren Dasan <narens@nvidia.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2020-05-20T22:44:06Z,"feat(aten::view): Adds support for ATen view also fixes some tests

Signed-off-by: Naren Dasan <naren@narendasan.com>
Signed-off-by: Naren Dasan <narens@nvidia.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2020-05-01T04:30:52Z,"feat(//core/lowering): New freeze model pass and new exception
elimination pass

Signed-off-by: Naren Dasan <naren@narendasan.com>
Signed-off-by: Naren Dasan <narens@nvidia.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2020-04-29T01:05:18Z,"refactor: Upgrading to LibTorch 1.5.0 (CUDA 10.2, cuDNN 7.6.5, TensorRT
7.0.0)

- Closes #42
- Issue #1 is back, unknown root cause, will follow up with the PyTorch
Team
- Closes #14: The default build now requires users to grab the tarballs
from the NVIDIA website to support hermetic builds, may look at some
methods to smooth this out later. The old method is still available
- New operators need to be implemented to support MobileNet in 1.5.0
(blocks merge into master)

Signed-off-by: Naren Dasan <naren@narendasan.com>
Signed-off-by: Naren Dasan <narens@nvidia.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2020-03-31T19:21:08Z,"fix(//tests/modules): Remove lenet test and rename generated
mobilenet_v2 module in hub.py

Signed-off-by: Naren Dasan <naren@narendasan.com>
Signed-off-by: Naren Dasan <narens@nvidia.com>"
github.com/pytorch/TensorRT,tests/modules/hub.py,2020-03-18T03:53:44Z,"refactor(//tests/models): renaming models tests to modules
- Adds a README for the module tests
- Removes an unecessary script
- Adds the multiple engines test to the test suite

Signed-off-by: Naren Dasan <naren@narendasan.com>
Signed-off-by: Naren Dasan <narens@nvidia.com>"
github.com/motional/nuplan-devkit,nuplan/planning/training/modeling/models/raster_model.py,2022-06-13T06:53:30Z,Update devkit v0.2 (#50)
github.com/motional/nuplan-devkit,nuplan/planning/training/modeling/models/raster_model.py,2021-12-10T10:46:09Z,"Initial commit (#2)

Co-authored-by: Holger Caesar <holger.caesar@motional.com>"
github.com/autonomousvision/stylegan-t,networks/discriminator.py,2023-04-07T08:58:12Z,release
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/hypernet_arch.py,2023-10-09T16:42:27Z,docs: :memo: update docs
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/hypernet_arch.py,2023-10-09T11:55:23Z,docs: :memo: add docs with copilot
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/hypernet_arch.py,2023-08-06T15:59:56Z,feat: :children_crossing: improve dataset api
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/hypernet_arch.py,2023-04-01T06:47:12Z,refactor: :coffin: clean unused import
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/hypernet_arch.py,2023-03-25T15:14:37Z,docs: :memo: update hyperiqa
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/hypernet_arch.py,2023-03-25T14:47:54Z,feat: :memo: add hyperiqa model trained on koniq10k.
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/hypernet_arch.py,2022-03-19T12:56:42Z,Change default stride=27 for pieapp
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/hypernet_arch.py,2022-03-14T13:06:09Z,"Remove lambda trans in data,"
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/hypernet_arch.py,2022-02-17T11:29:59Z,Format some metric code
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/hypernet_arch.py,2022-02-09T12:08:27Z,Add cnniqa and WaDIQaM
github.com/chaofengc/IQA-PyTorch,pyiqa/archs/hypernet_arch.py,2022-02-08T13:45:27Z,Add hypernet.
github.com/pytorch/TensorRT,tests/py/ts/models/test_models.py,2023-09-29T23:03:39Z,fix: Issue in TS dimension-squeeze utility (#2336)
github.com/pytorch/TensorRT,tests/py/ts/models/test_models.py,2023-07-20T17:16:27Z,"feat: Dynamo refactor (#2104)

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>
Co-authored-by: gs-olive <113141689+gs-olive@users.noreply.github.com>"
github.com/pytorch/TensorRT,tests/py/dynamo/models/test_models.py,2023-09-18T18:39:40Z,"feat: Transition export workflows to use torch._export APIs  (#2195)

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>
Co-authored-by: gs-olive <113141689+gs-olive@users.noreply.github.com>"
github.com/pytorch/TensorRT,tests/py/dynamo/models/test_models.py,2023-08-17T19:06:10Z,"feat: Add `_to_copy`, `operator.get` and `clone` ATen converters (#2161)"
github.com/pytorch/TensorRT,tests/py/dynamo/models/test_models.py,2023-07-25T18:15:58Z,"Combination: 16 commits with aten improvements

refactor: Moving elementwise and unary core to impl

Signed-off-by: Naren Dasan <naren@narendasan.com>

	new file:   ../converters/impl/unary/base.py

Moving elementwise core to impl - rsqrt (FX Converter Refactor [9/N]) <Target: converter_reorg_elementwise> (#1905)

Converter reorg fmod

Converter reorg and rsub

Rsub error fixes and linting error fixed

Rsub test case to include different inputs

Converter reorg batch norm

batch norm error fix and linting issue error fix

layer_norm converter

Layer norm linting correction

ops file correction

fixing lint

Acc_ops layer_norm correction

Converter reorg and softmax operation

softmax linting error fix

Converter reorg and gelu

Linting error

Converter reorg and squeeze operator

Correcting squeeze operator implementation, linting error and acc squeeze test

Adding the condition to convert dim to int and removing the comment

Converter reorg and select operation

select operation correction and linting changes

converter reorg and slice

converter reorg slice op

Correcting linting error and slice changes

Correcting the slice operation

converter reorg and matmul

Matmul issue fixes and lint error check

moving matmul to individual file

Converter reorg and where operator

adding where aten op

aten::where correction and linting error changes

aten::unsqueeze impl refactor

Signed-off-by: Boris Fomitchev <bfomitchev@nvidia.com>

Moved clamp to impl

Signed-off-by: Boris Fomitchev <bfomitchev@nvidia.com>

fixed method name

Signed-off-by: Boris Fomitchev <bfomitchev@nvidia.com>

fix: Add automatic type promotion for FX ops

- Implement functionality to cast tensors to alternative types
- Add functionality to elementwise ops to promote types and perform
necessary casts
- Address issues in FX ops where mixed-precision computations can
cause errors
- Add test cases to validate fix

Revert all changes to py/torch_tensorrt/fx

Revert ""fix: Add automatic type promotion for FX ops""

This reverts commit f1f371663b222e58ec15c335080365f4b2a44a40.

Revert ""Moved clamp to impl""

This reverts commit df401dd95ba8f6bbe5777e7c36086b30d1eeea26.

Revert ""aten::unsqueeze impl refactor""

This reverts commit b4247358540e353ab1d81252a0000a2131d68528.

Revert ""Converter reorg and where operator""

This reverts commit b4da15e9af5e4b92fe2ee76ed6fd71696452bd3b.

Revert ""converter reorg and matmul""

This reverts commit 7551eeecfd3c7679cbed048f910bed2e792910c8.

Revert ""converter reorg and slice""

This reverts commit 9bbdc9ecf6c8fd04b915dc40567bc67d13c86d38.

Revert ""Converter reorg and select operation""

This reverts commit fb70253c1372020c55812f4b22df5f64eb59018a.

Revert ""Converter reorg and squeeze operator""

This reverts commit 294545c6361b79656f74f742a84abd6b9b1f1d24.

Revert ""Converter reorg and gelu""

This reverts commit 37d11682092d64f1f250581944faddd7c36de176.

Revert ""Converter reorg and softmax operation""

This reverts commit 1ba6d139d100b7cc1ba7c95400047ab993e97ce2.

Revert ""layer_norm converter""

This reverts commit e0b34b1c35be30e145c2bc484da661c43c23cf9b.

Revert ""Converter reorg batch norm""

This reverts commit 59354e5416ee14ca3145b28b389be2ffae2c1821.

Revert ""Converter reorg and rsub""

This reverts commit db15d2704f7b12ff4fcee4a267b42bc7c5d37bf6.

Revert ""Converter reorg fmod""

This reverts commit ce3fa67655cc0924dc2b046aad8b583c90e283ae.

Revert ""Moving elementwise core to impl - rsqrt (FX Converter Refactor [9/N]) <Target: converter_reorg_elementwise> (#1905)""

This reverts commit 7158ca54bd1827e5e0de68107cf19a20238c36f6.

Revert ""refactor: Moving elementwise and unary core to impl""

This reverts commit 45e43ca7ccd6ae8fa3d67b124a2a453989d2de47.

fix: Replay all FX changes in Dynamo

- Add multiple fixes to make FX changes appear in Dynamo directory,
using Dynamo registry
- All converters with open PRs are linked and shown
- Update references, imports, code, merges, rebases accordingly
- Add new test cases to Dynamo for converters

Temporarily removing rsub pending fix

Fixing clamp to not use Torch

Signed-off-by: Boris Fomitchev <bfomitchev@nvidia.com>

Fixing select to not use torch

fix: Reorganize folders in latest implementation

- Update test references and imports accordingly

Embedding operator in dynamo

reciprocal lowering pass

fix: Fix for Dynamic Shape Tests + Input class

feat: Add permute operation implementation

chore: Move converter registry, update imports"
github.com/pytorch/TensorRT,tests/py/dynamo/models/test_models.py,2023-07-20T17:16:27Z,"feat: Dynamo refactor (#2104)

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>
Co-authored-by: gs-olive <113141689+gs-olive@users.noreply.github.com>"
github.com/pytorch/TensorRT,tests/py/ts/api/test_embed_engines.py,2023-07-20T17:16:27Z,"feat: Dynamo refactor (#2104)

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>
Co-authored-by: gs-olive <113141689+gs-olive@users.noreply.github.com>"
github.com/facebookresearch/DistDepth,dpt_networks/vit.py,2022-05-29T02:52:12Z,update VA eval
github.com/rese1f/StableVideo,ldm/modules/midas/midas/vit.py,2023-02-19T12:46:00Z,i
github.com/pytorch/TensorRT,tests/py/dynamo/models/test_models_export.py,2023-10-02T23:14:18Z,"feat: Implement Dynamic shapes + fallback support for export path (#2271)

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>
Co-authored-by: gs-olive <113141689+gs-olive@users.noreply.github.com>"
github.com/pytorch/TensorRT,tests/py/dynamo/models/test_models_export.py,2023-09-18T18:39:40Z,"feat: Transition export workflows to use torch._export APIs  (#2195)

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>
Co-authored-by: gs-olive <113141689+gs-olive@users.noreply.github.com>"
github.com/pytorch/TensorRT,tests/py/dynamo/models/test_models_export.py,2023-07-20T17:16:27Z,"feat: Dynamo refactor (#2104)

Signed-off-by: Dheeraj Peri <peri.dheeraj@gmail.com>
Co-authored-by: gs-olive <113141689+gs-olive@users.noreply.github.com>"
github.com/Audio-AGI/AudioSep,models/CLAP/open_clip/timm_model.py,2023-10-11T21:13:51Z,training code & checkpoint release
github.com/UMass-Foundation-Model/3D-LLM,three_steps_3d_feature/second_step/lavis/models/clip_models/timm_model.py,2023-08-28T20:40:17Z,format with black
github.com/UMass-Foundation-Model/3D-LLM,three_steps_3d_feature/second_step/lavis/models/clip_models/timm_model.py,2023-07-24T22:31:18Z,features
github.com/openvinotoolkit/nncf,tests/torch/models_hub_test/test_timm.py,2024-01-26T06:17:26Z,"Happy new copyright year!🎉🎉🎉 (#2429)

### Changes

Copyright year is incremented

### Reason for changes

2024 year has come to us

### Tests

There were enough tests in 2023"
github.com/openvinotoolkit/nncf,tests/torch/models_hub_test/test_timm.py,2023-11-29T05:27:30Z,"Add model-hub tests to check wrap_model  (#2275)

### Changes

- Add models_hub_tests to check `wrap_model`, like
https://github.com/openvinotoolkit/openvino/tree/master/tests/model_hub_tests/torch_tests
- Add `Model Hub` github action to manual run 

### Related tickets

124852

### Tests

tests/torch/models_hub_test"
github.com/shenyunhang/APE,ape/modeling/text/eva02_clip/timm_model.py,2023-12-05T02:34:21Z,This is the 1st commit
github.com/OpenBMB/OmniLMM,omnilmm/model/omnilmm.py,2024-02-29T05:40:17Z,clean unused logs
github.com/OpenBMB/OmniLMM,omnilmm/model/omnilmm.py,2024-02-01T06:45:00Z,First commit
github.com/KovenYu/WonderJourney,midas_module/midas/backbones/next_vit.py,2024-02-11T05:51:07Z,init
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2024-02-29T15:06:48Z,"Adds MPNet to NormalizedConfig and ORTConfigManager (#1471)

Adds mpnet to ORTConfigManager and NormalizedConfigManager

Co-authored-by: fxmarty <9808326+fxmarty@users.noreply.github.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2024-02-28T16:33:04Z,"Whisper ONNX audio-classification (#1727)

* support whisper onnx audio-classification

* fix tests

* remove unnecessary method"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2024-02-27T14:27:26Z,"Fix starcoder ORT integration (#1722)

* fix starcoder ort

* fix pix2struct as well"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2024-02-26T09:44:18Z,"Gemma ONNX export & ORT support (#1714)

* gemma onnx export

* fix tests

* fix model

* fix"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2024-02-06T10:20:35Z,"ORTModelForFeatureExtraction always exports as transformers models (#1684)

fix"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2024-01-30T10:08:32Z,"Reactivate BART Onnx Export (#1666)

* Reactivate BART Onnx Export

* Update tests/onnxruntime/test_modeling.py

* Update tests/onnxruntime/test_modeling.py

* Bart Reactivation - fxmarty review

---------

Co-authored-by: fxmarty <9808326+fxmarty@users.noreply.github.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2024-01-26T10:18:56Z,"BF16 support in the ONNX export (#1654)

export work, ort does not"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2024-01-26T09:03:30Z,"Support IO Binding for ORTModelForCTC  (#1629)

* io binding for ortmodelforctc

* io binding for ortmodelforctc

* Remove ""to ONNX"" from info message when exporting model (#1627)

* ortmodelforctc iobinding test

* made sure use_io_binding is False due to line 318 in modeling_ort.py

---------

Co-authored-by: Ubuntu <tranceformer@tranceformer.m35het0djx5ejl3pyvcqpe3bfg.ax.internal.cloudapp.net>
Co-authored-by: Helena Kloosterman <helena.kloosterman@intel.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2024-01-09T10:19:58Z,"Modify model id for test (#1628)

* Modify model id for test

* add comment

* update comment"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2024-01-08T12:49:51Z,"Add Timm support in ORTModelForImageClassification (#1578)

* add timm support

* add timm inf

* updated file

* added tests

* formatted

* added _export method

* improved code

* add deprecation comment

* update tests

* update tests

* fix test erros

* update test list

* update test req

* update test req

* added abstract method"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-12-05T11:13:27Z,Add `convnextv2` onnx export (#1560)
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-11-24T15:28:13Z,"Add AMD GPU support (#1546)

* add amd gpu tests

* add docs

* add docs

* add docs

* Add ORT trainer docs and dockerfile

* addressed comments

* addressed comments

* addressed comments

* added pytorch installation step

* update test

* update

---------

Co-authored-by: Mohit Sharma <mohit@huggingface.co>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-11-03T17:42:24Z,"Deprecate ORTDecoder (#1511)

* Deprecate ORTDecoder

* add depreciation warning

* fix style

* fix style

* format"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-10-18T11:47:12Z,"ONNX: TROCR KV cache support (#1456)

* trocr kv cache export

* fix ort trocr with kv cache

* fix merge"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-10-18T10:00:24Z,"SpeechT5 ONNX support (#1404)

* wip

* wip bis

* nit

* nit^2

* working export

* working with-past version

* add test

* add doc

* working merged onnx

* fix dropout with training=True export

* test fix

* fix custom models

* some cleaning

* merge mess

* address review comments

* fix tests"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-10-18T08:55:22Z,"Add ONNX and ORT support for Falcon (#1391)

* add onnx and ort falcon

* add back ort support

* hopefully working ort inference

* address review

* style

* remove diff in base.py"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-10-17T08:58:20Z,Remove ARCH_MODEL_MAP from tests (#1458)
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-10-17T08:46:16Z,"Disable bart onnx export for text-classification and question-answering (#1457)

* disable bart onnx export for text-classification and question-answering

* add details"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-10-16T14:28:17Z,"Fix perceiver tests and dummy inputs for ONNX (#1449)

Co-authored-by: bas <bas.krahmer@talentflyxpert.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-10-16T09:20:39Z,"Enable ONNX export decoder only without need to merge (#1257)

* ONNX export decoder model refactorization

* fix IO bindings

* format

* enable mpt support

* format

* add trust remote code

* fix test

* format

* fix quantization

* add test

* format

* fix optimization

* fix compatibility with legacy models

* fix style

* add export to main_export

* add legacy to ONNX export


* patch model to fix causal lm generation

* add no post process

* remove bloom caching

* fix dynamic axis for position ids

* fix external data

* add model patcher

* format

* fix bart model patcher

* fix model patcher for opt models

* fix format

* add test

* format

* fix ort docker

* add test

* fix bart model patcher

* raise when unsupported model

* add cached file

* add position warning

* fixes

* enable post process after export to remove tied weights

* comment

* remove test

* fix test

* modify model

* remove deprecated use_merged in test

* Add mistral model patcher

* add slow test

* add workflow"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-10-09T08:52:34Z,"Add Mistral models ONNX export support (#1425)

* Add ONNX export Mistral models support

* add test

* format

* fix format

* fix key _config

* tmp install transformers from source for tests

* change model id

* fix after #1432 merged

* fix

* format

* fix"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-09-21T17:55:33Z,Fix ORT execution provider test for onnxruntime v1.16.0 (#1406)
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-09-18T11:46:33Z,"Add position ids in ONNX export and ORT (#1381)

* add position_ids support

* fix iobinding

* add position_ids

Co-authored-by: Kunal Vaishnavi <kvaishnavi@microsoft.com>
Co-authored-by: ""Feng, Jiqing"" <jiqing.feng@intel.com>

* remove outdated comment

* backward compatibility

* tests wip

* tests are fine

* fix tests

* test fix bis

* update on review

---------

Co-authored-by: Kunal Vaishnavi <kvaishnavi@microsoft.com>
Co-authored-by: ""Feng, Jiqing"" <jiqing.feng@intel.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-09-07T12:19:32Z,"Add text2text-generation-with-past test for encoder-decoder model (#1338)

* add model

* fix tests

* remove comments

* remove extra func"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-09-04T15:49:20Z,"Donut iobinding (#1209)

* added utility to compute encoder_sequence_length

* style

* added vit's encoder known output shapes

* revised encoder output sequence formulas

* added donut tests

* style

* corrected swin formula

* added io tests

* add donut to tasks manager

* added tiny donut to exporters tests"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-09-01T10:41:27Z,"Add encoder-decoder model export and inference (#851)

* add encoder decoder model

* update tests

* update docs and tests

* fixed tests

* update tests

* update tests

* update tests

* update tests

* update tests

* update tests

* Update tests/onnxruntime/test_modeling.py

Co-authored-by: fxmarty <9808326+fxmarty@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: fxmarty <9808326+fxmarty@users.noreply.github.com>

* udpate testt

* change seq2seq-lm to text-generation

* fix task

* fic tests

---------

Co-authored-by: Mohit Sharma <mohit@huggingface.co>
Co-authored-by: fxmarty <9808326+fxmarty@users.noreply.github.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-08-31T16:09:14Z,"Add MPT onnx and ORT support (#1161)

* support MPT onnx generate dummy inputs

* onnx config for MPT

* add mpt test

* fix conflict

* add mpt test"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-08-23T16:04:14Z,"Pix2Struct onnxruntime support (#1296)

* add onnxruntime support for pix2struct

* Fix for Pix2Struct ORT

* Fix from_pretrained for pix2struct

* test

* test

* huggingface(#1288)

* Update optimum/onnxruntime/modeling_seq2seq.py

Co-authored-by: fxmarty <9808326+fxmarty@users.noreply.github.com>

* Update optimum/onnxruntime/modeling_seq2seq.py

Co-authored-by: fxmarty <9808326+fxmarty@users.noreply.github.com>

* Update optimum/onnxruntime/modeling_seq2seq.py

Co-authored-by: fxmarty <9808326+fxmarty@users.noreply.github.com>

* update modeling_seq2seq.py

* update modeling_seq2seq.py

* working ort inference pix2struct

* add documentation

* fix doc

---------

Co-authored-by: ARK <ark@Oblivion.local>
Co-authored-by: fxmarty <9808326+fxmarty@users.noreply.github.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-08-23T10:03:05Z,"More fixes following transformers 4.32 release (#1311)

* more fixes

* nit

* remove duplicate test

* nit bis"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-08-01T12:15:55Z,"Add ONNX / ONNXRuntime support for StarCoder (#1042)

* add gpt-bigcode

* add bigcode specific dummy generator

* normalize config

* test past key value flattened

* revert past key value separation

* fix

* add test to exporter

* add ort modeling support

* add modeling test

* fix bloom

* fix typo

---------

Co-authored-by: JingyaHuang <jingya@huggingface.co>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-07-20T11:12:23Z,"Fix vision encoder decoder that may not cache cross-attention (#1210)

* fix vision encoder decoder

* add test"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-07-19T15:24:30Z,"Fix ORT test for unknown architecture for task (#1212)

* fix

* fix style

* git old test"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-06-30T07:59:44Z,"Add img2img and inpaint stable diffusion ORT pipelines (#1121)

* add img2img pipeline

* fix style

* fix import

* fix style

* add diffusers extra

* fix num_inference_steps

* add test

* add test for diffusers pipeline loading compatibility

* Modify config to keep the resulting model compatible with diffusers pipelines

* fix style

* add inpaint pipeline

* add test

* fix style

* remove redudant test

* add tests

* fix style

* add tests

* save config

* add subcomponent config saving

* set VAE scaling factor in pipeline

* move ORTModelTestMixin

* add latent output type

* fix dosctrings format

* fix style

* update ORTModelTestMixin

* fix callbacks and add test"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-06-27T06:18:39Z,"Enable use_io_binding = True on CPU (#1087)

* Enable use_io_binding = True on CPU

* Enable use_io_binding = True on CPU

* Exclude io_binding.synchronize_inputs for cpu

* Update warning message

* fix

* simplify

* fix tests

* fix test

* fix tests for good

---------

Co-authored-by: Félix Marty <9808326+fxmarty@users.noreply.github.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-05-26T07:57:56Z,"Remove deprecated argument from tests and examples (#1072)

* Remove deprecated argument from tests and examples

* fix style"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-04-17T09:03:29Z,"Add llama onnx export & onnxruntime support (#975)

* Add config for Llama

* Register Llama in tasks

* Add llama and it's corresponding tiny-random model from hf into tests

* Add tests for modeling and exporters

* Add entry for a Llama

* Add llama into supported normalized configs

* Add optimization support for llama

* Change tiny-llama source to trl-internal-testing

* Change tiny-llama source to trl-internal-testing

* can I push?

* fix tests

* fix task map

---------

Co-authored-by: Chernenko Ruslan <ractyfree@gmail.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-04-12T12:01:11Z,"Allow to use a custom class in TasksManager & use canonical tasks names (#967)

* fix task names

* add test

* fix fill-mask

* fix test

* fix fill mask and vision2seq

* fix

* add test

* fix feature extraction

* fix audio ctc

* add warning

* update comment

* fix bug

* fix tests and comments

* nit

* fix test"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-03-31T14:00:35Z,"Support merged seq2seq models in ORTModel (#930)

* wip

* first version

* add constants

* wip

* wip

* fix shapes

* fix tests

* fix more tests

* fix broken longt5

* fix again longt5

* fix bugs and add tests

* fix a few tests

* fix more tests

* slight bug

* slight bug

* fix iobinding

* fix on suggestion

* Update optimum/onnxruntime/base.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* typo

* trigger workflow

* fix tests again

* simplify save_pretrained

* fix type hint on suggestion

* simplification

* fix regex

* fix from pretrained

* typo

* style on merge

* fix

* fix

* Update optimum/onnxruntime/base.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* Update optimum/onnxruntime/base.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* fix on suggestion

---------

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-03-30T13:36:56Z,"Ensure backward compatibility of ORTModel (#933)

* fix

* Update optimum/onnxruntime/base.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

---------

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-03-28T15:35:53Z,"Fix decoder ONNX model loading from the Hub (#929)

fix load from hub onnx"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-03-24T18:25:25Z,"Fix ORTModel MRO for whisper (#919)

* fix whisper mro

* typo

* add tests

* Update optimum/onnxruntime/modeling_seq2seq.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* Update optimum/exporters/onnx/__main__.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* fix test

---------

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-03-06T09:36:31Z,"Remove iobinding ORTModelForCTC (#840)

* remove tests

* Update optimum/onnxruntime/modeling_ort.py

Co-authored-by: fxmarty <9808326+fxmarty@users.noreply.github.com>

* fix style

---------

Co-authored-by: fxmarty <9808326+fxmarty@users.noreply.github.com>
Co-authored-by: Mohit Sharma <mohit@huggingface.co>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-03-01T21:38:08Z,"Add stable diffusion onnx runtime pipeline (#786)

* Add ONNX Runtime stable diffusion pipeline

* Fix config saving and loading

* Fix style

* Fix normalized config

* Add test

* Fix style

* Add test

* Add documentation

* Fix documentation

* Add tests

* Add diffusion model subfolder name

* Clean documentation

* Fix docstrings

* Modify image documentation

* update following reviews

* fix style

* fix imports

* add missing import

* add dummy objects for import when dependency not available

* set ORT_SUPPORTED_TASKS to empty dictionnary if ort not available

* fix test model loading

* Fix decoder model saving method"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-03-01T15:48:22Z,"Keep intermediary models for ONNX causal-lm (#834)

* save all models in ortmodelforcausallm

* fix

* docbuilder does not seem to support softlinks in titles"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-03-01T11:33:50Z,"Update tests (#826)

* add tests

* update test

---------

Co-authored-by: Mohit Sharma <mohit@huggingface.co>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-02-28T14:49:53Z,"Fix pipeline task dropping arguments bug (#828)

* test

* fix

* shorter workflow

* fix task bug

* fix yml"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-02-27T15:42:18Z,"Fix optimum pipeline initialization (#824)

* fix whisper pipeline issue

* fix feature extraction

* typo

* fix test"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-02-24T17:02:03Z,"Add ORTModelXXX for audio (#774)

* add ctc and sequence classification model

* add xvector

* add audio frame classification

* update docstring documentation

* updated docs

* add audio classification test

* update models

* update models

* add audio classification test

* add audio classification test

* add audio classification test

* fixed tests

* fix tests

* updatte model

* rebase

* update test

* fix test

* fixed tests

* update docs

* fix code docstring

* update docs

* add numpy tests

* add error for iobinding

* update docs

* update docs

---------

Co-authored-by: Mohit Sharma <mohit@huggingface.co>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-02-24T10:46:52Z,"Fix GPU tests (#814)

fix gpu tests"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-02-21T10:43:33Z,"ORTOptimizer support ORTModelForCausalLM (#794)

* in progress

* test utils

* remove bigbird v2

* support optimization for causallm

* better test

* fix

* fix

* remove prints"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-02-20T17:23:21Z,"Use a stateful ordered_input_names in ORTModel (#796)

* stateful ordered inputs

* typo

* change atol

* fix"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-02-20T17:11:31Z,"Support IO Binding for merged decoder (#797)

* support IO Binding for merged decoder

* fix test

* Update optimum/onnxruntime/base.py"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-02-20T17:10:11Z,"Temporarily disable segformer TensorRT test (#799)

fix gpu test"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-02-20T10:16:43Z,"Accept numpy.ndarray as input and output to ORTModel (#790)

* accept numpy as input and ouput to ORTModel

* docstring

* fix examples

* fix test

* fix type hint

* Update tests/onnxruntime/test_modeling.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* Update optimum/onnxruntime/modeling_ort.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* Update tests/onnxruntime/test_modeling.py

Co-authored-by: regisss <15324346+regisss@users.noreply.github.com>

* Update tests/onnxruntime/test_modeling.py

Co-authored-by: regisss <15324346+regisss@users.noreply.github.com>

* Update tests/onnxruntime/test_modeling.py

Co-authored-by: regisss <15324346+regisss@users.noreply.github.com>

* Update tests/onnxruntime/test_modeling.py

Co-authored-by: regisss <15324346+regisss@users.noreply.github.com>

* Update tests/onnxruntime/test_modeling.py

Co-authored-by: regisss <15324346+regisss@users.noreply.github.com>

* Update tests/onnxruntime/test_modeling.py

Co-authored-by: regisss <15324346+regisss@users.noreply.github.com>

* Update tests/onnxruntime/test_modeling.py

Co-authored-by: regisss <15324346+regisss@users.noreply.github.com>

* Update tests/onnxruntime/test_modeling.py

Co-authored-by: regisss <15324346+regisss@users.noreply.github.com>

* Update tests/onnxruntime/test_modeling.py

Co-authored-by: regisss <15324346+regisss@users.noreply.github.com>

* Update tests/onnxruntime/test_modeling.py

Co-authored-by: regisss <15324346+regisss@users.noreply.github.com>

* remove unnecessary print

* fix test

---------

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>
Co-authored-by: regisss <15324346+regisss@users.noreply.github.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-02-20T09:46:01Z,"Remove BigBird ONNX support (#778)

* remove bigbird onnx support

* precise

* comment out

* fix test

* Update optimum/exporters/tasks.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* fix

---------

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-02-15T15:14:17Z,"Enable inference with a merged decoder in `ORTModelForCausalLM` (#647)

* Add save option

* Add test for saving

* Fix test path

* Allow str path for merging

* Add Path and remove merged names

* Finish adapting ORTModelDecoder

* Prepare extra inputs

* do not store merged in place

* Support I/O binding for merged

* Extend to multiple patterns

* Add test for inference

* Fix test

* update test

* Remove prints

* add back missing method

* fix mess

* fix post merge

* none defaut

* fix

* fix errors

* remove nonsense tests

* fix doc

* ongoing

* debug

* fix style

* fix post merge

* hopefully working!

* add tests

* rename

* add constants

* fix test

* fix names

* ort support

* wip

* fix

* fix

* tests for merged

* stype

* fix

* fix merge errors

* fix tests

* fix test

* remove irrelevant test

* Update optimum/exporters/onnx/__main__.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* Update optimum/exporters/onnx/base.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* Update optimum/exporters/onnx/config.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* Update optimum/exporters/onnx/config.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* Update optimum/exporters/onnx/config.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* Update optimum/exporters/onnx/config.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* Update optimum/exporters/onnx/config.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* Update optimum/onnxruntime/modeling_decoder.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* Update tests/exporters/onnx/test_exporters_onnx_cli.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* fix on suggestions

* fix import of dummyinputgenerators

* skip unwanted tests

* fix diffusion model

* fix tests

* Update optimum/commands/export/onnx.py

Co-authored-by: Jingya HUANG <44135271+JingyaHuang@users.noreply.github.com>

* Update optimum/onnxruntime/modeling_decoder.py

Co-authored-by: Jingya HUANG <44135271+JingyaHuang@users.noreply.github.com>

* fix last tests

* Update optimum/onnx/graph_transformations.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* Update optimum/onnx/graph_transformations.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* Update optimum/onnx/graph_transformations.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* Update optimum/onnx/graph_transformations.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* Update optimum/onnxruntime/modeling_decoder.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* fix signature and docstrings

* add error message if post process fails

* tiny fix

* last fixes

* typo

---------

Co-authored-by: Félix Marty <9808326+fxmarty@users.noreply.github.com>
Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-02-14T17:12:09Z,"Fix flaky ONNX Runtime generation test with past key value reuse (#765)

* fix flaky

* fix test

* fix tests

* run the timing test on the slow test only"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-02-09T13:12:19Z,Update quality tooling for formatting (#760)
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-02-09T07:17:32Z,"Fix GPU tests (#758)

fix tests"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-02-09T07:17:14Z,"Fix ONNX Runtime cache usage for decoders, add relevant tests (#756)

* fix onnxruntime cache usage

* fix num beams

* fix test"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-02-07T11:26:04Z,"Add gpt-neo-x support (#745)

* add gpt-neo-x configs

* fixes

* name fix"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-02-07T09:38:31Z,"Add ORTModelForVision2Seq for VisionEncoderDecoder models inference (#742)

* add ORTModelForVision2Seq

* removed unwanted comments

* updated docstring

* added tests

* added trocr to tests

* added docstring example

* remove deit

* updated default

* udpate doc

* update doc

* update cond"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-01-31T15:59:34Z,"Add TensorrtExecutionProvider modeling tests (#722)

* add tests

* style

* style

* rollback small change"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-01-31T14:00:09Z,"Nystromformer ONNX export (#728)

* Added Nystromformer model support

* Additional test cases for Nystromformer

* Update optimum/onnxruntime/utils.py

Co-authored-by: fxmarty <9808326+fxmarty@users.noreply.github.com>

* Update docs/source/exporters/onnx/package_reference/configuration.mdx

Co-authored-by: fxmarty <9808326+fxmarty@users.noreply.github.com>

* Added Nystromformer model support

* Additional test cases for Nystromformer

* Update optimum/onnxruntime/utils.py

Co-authored-by: fxmarty <9808326+fxmarty@users.noreply.github.com>

* Update docs/source/exporters/onnx/package_reference/configuration.mdx

Co-authored-by: fxmarty <9808326+fxmarty@users.noreply.github.com>

* Chnaged nystromformer models in test to from UW to hf-internal-testing/tiny-random-NystromformerModel

* Ran make style

* Alphabetical sequence change

---------

Co-authored-by: William Roe <whroe@uwe.nsa.gov>
Co-authored-by: fxmarty <9808326+fxmarty@users.noreply.github.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-01-30T18:53:47Z,"Add ORTModelForMaskedLM class (#729)

* Add ORTModelForMaskedLM class

* update docstring

* Add to doc

* Add test

* Fix mask_token in test"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-01-26T11:31:28Z,"`onnxruntime/modeling_ort.py` refactor, part 1 (#698)

* Removed uneeded inits

* Make prepare_io_binding generic

* Trigger CI

* ORTEncoder working

* Seems to partially work with seq2seq

* 80% working

* Small cleaning

* Fix small issues

* Fix BART issue and add number of inputs / outputs check

* NormalizedConfig now uses attribute_map

* Other fixes

* Small fixes

* Multiple choice and tests fix

* Fix vision

* Fix T5 and other seq2seq models

* Support former past_key_values format

* Fix issues

* Will add this in another PR

* Fix Whisper axis names

* Styling

* Fix exporters

* Apply some of the suggestions

* Apply the rest of the suggestions

* Apply Jingya's suggestion

* Remove alternative for normalized config

* Remove alternative for normalized config"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-01-25T16:12:28Z,"Fix GPU tests (#724)

* fix tests

* remove redundant arg

* fix failing tests"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-01-18T19:36:04Z,"Support trust remote code option in ONNX export and ONNX Runtime integration (#702)

* add trust remote

* support trust remote code

* add kwargs as from_pretrained in modeling_base may pass unnecessary args

* add trust remote code in seq2seq

* use nlp model because transformers main is broken"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-01-16T12:50:49Z,"Test more architectures in ORTModel (#675)

* test all architectures for ortmodel

* add docstring

* fix test

* avoid reexporting models to onnx

* fix tests

* fix test

* pass perceiver test

* Update optimum/exporters/tasks.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* Update tests/onnxruntime/test_modeling.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* fix typing import

* add bloom, blenderbot, blenderbot-small test

* fix test

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-01-13T15:16:29Z,"Add test for missing execution providers error messages (#659)

* add test for missing providers errors

* style

* add load_model file for testing

* remove prinst

* remove file"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2023-01-02T12:41:49Z,"Fix provider options when several providers are passed (#653)

* fix provider options when several providers are passed

* add test"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-12-22T12:43:14Z,"Handling ONNX models with external data (#586)

* attempt at fixing saving onnx model with external data

* styling

* fix: `cache_dir` wasn't used when loading from transformers

* separate onnx_cache_dir argument from model's cache_dir

* we can now load large ONNX models by specifying external's data directory

* Fix saving external data for large models (seq2seq)

* fix saving external data for all ORT models

* make style

* typing

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* apply suggestions

* make style

* apply suggestion

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* export onnx models to separate subfolders when multiple models

* this should get us correct file_names but not correct subfolder!!

* export_models is only used for multiple submodels

* we can now load seq2seq model from local dir (multiple submodels)

* fix save_pretrained

* * `infer_onnx_filename` now returns a path
* refactor `_from_pretrained`

* try saving to single file

* didn't work, reverting ""try saving to single file""

This reverts commit 0fdfd873ca6b55db1083365f69f783a7d9d4be49.

* add test for seq2seq model with external data

* quick fix

* try saving to a single file again

* Revert ""quick fix""

This reverts commit 89e64eda59a2b0790087a354e65a468e4d51bee6.

* quick fix test

* save external data in a single file

* save_pretrained now moves model instead of copying from temp directory

* Revert ""save_pretrained now moves model instead of copying from temp directory""

This reverts commit b315f8566591c1acecae1f90652660ff5ac0169f.

* add push to hub test

* add FORCE_ONNX_EXTERNAL_DATA env and faster test to push to hub

* quick fix

* we can now save and load large seq2seq models to hub + added test

* we no longer save to subfolders, as we use a singla file for external data

* make style

* apply same fixes to `modeling_decoder.py`

* apply same fixes to `modeling_ort.py`

* add tests

* fix auth token in tests

* add **kwargs to all `_save_pretrained`

* quick fix

* make style

* try reducing memory footprint when exporting onnx

* replace large seq2seq model with small on to make tests pass

* fix merge

* we no longer export models to subfolders. instead we regroup external data in a single data file

* util from last commit

* empty commit

* fix import

* add onnx utils

* fix import2

* better tests

* parameterized and skip order

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>
Co-authored-by: Felix Marty <9808326+fxmarty@users.noreply.github.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-12-20T16:44:52Z,"Fix ORT GPU test (#624)

Fix test"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-12-16T08:41:06Z,"Add the ORTModelForSemanticSegmentation class (#539)

* Initial commit for ORTModelForImageSegmentation

* Example name and io binding output size fix

* Refactor to ORTModelForSemanticSegmentation

* IOBindingHelper for io_binding in ORTModelForSemanticSegmentation

* Black and isort formatting

* Apply various suggestions from code review

Co-authored-by: Jingya HUANG <44135271+JingyaHuang@users.noreply.github.com>

* Alphanumeric order in modeling_ort init

* Fixing docstring model name and removing comments

* Fixing tests and add import

* Black formatting and fixed unmatched quote

* Removing export_feature class attribute

* Fixing test model name

* Adding 'image-segmentation' task to optimum/pipelines and fixing tests

Co-authored-by: Jingya HUANG <44135271+JingyaHuang@users.noreply.github.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-12-13T17:20:40Z,add fix (#585)
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-12-13T09:14:51Z,"More robust tests for ORTModel using decoders and use_cache=True (#576)

* more robust tests for ORTModel using decoders and use_cache=True

* keep tuple

* Update optimum/utils/testing_utils.py

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>

* add test name everywhere when using grid_parameters

* nit

* nit doc

* nit in method signatures

Co-authored-by: Michael Benayoun <mickbenayoun@gmail.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-12-06T17:57:42Z,"Add IO binding support for custom ORTModel (#447)

* Add IO binding for ORTModelForCustomTasks

* Add test

* Fix test model

* Force inputs to be contiguous

* Fix docstring

* Nits"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-12-06T09:13:11Z,"Optimum ONNX Runtime API improvement (#515)

* ORTQuantizer saves model config when possible

* Fix docstring

* ORTModel can load any name for the ONNX model

* Use regex now

* Almost ready

* modeling_ort

* test

* Works for ORTModel

* Fixed bugs

* remove pdb

* Remove unnecessary attribute

* ORTDecoderModel ready

* Fix issue

* Make style

* fix issues

* Rebase and style

* Fix

* Fix issues

* Apply suggestions

Co-authored-by: Michael Benayoun <michael@huggingface.co>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-11-28T12:34:19Z,"ORTModel uses optimum.exporters.onnx (#490)

* ORTModel uses optimum.exporters.onnx

* Refactoring

* Temp

* Almost ready

* Started fixing modeling_seq2seq.py

* Fix

* Fix

* Fix

* Improved TasksManager.determine_framework

* Fix failing tests

* Fix subfolder failing test

* Update docstring and abstract class

* Add suggestion

* Applied modification to modeling_decoder.py

* Applied suggestions

* Applied suggestions"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-11-25T11:14:27Z,"Enable past_key_values for ORTModelForCausalLM  (#326)

* Add model with a causal language modeling head ONNX Runtime inference

* Modify onnx config for consistency with transformers onnx

* Refactoring and debuged

* Add IOBinding

* Remove useless

* Delete previous and update doc

* Add test for with_past

* Further clean-up

* Fix causal modeling test

* Oups fixed in wrong places

* Add use_io_binding to docstring

* Makes ORTModelDecoder parameters explicit

* Remove  unused kwargs

* Makes ORTModelDecoder parameters explicit

* Add decoder filename as default value

* Fix test

* Fix test

* Fix docstring

Co-authored-by: JingyaHuang <huang_jingya@outlook.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-11-25T09:55:48Z,"Fix ORTModelForSeq2SeqLM test (#455)

* fix test

* fix test

* fix"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-11-17T17:36:19Z,Fix whisper device for gpu test (#486)
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-11-15T12:25:41Z,"Add support ORT whisper (#420)

* added support onnxruntime whisper

* Updated decoder export model

* Updated docstring

* updated tests for whisper

* add whisper onnx configs

* Added Whisper model to exporters

* added whisper to exporters
* Removed reduntant code
* Added io binding for ORTModelForSpeechSeq2Seq

* Removed unused imports

* Added tests for exporters and iobinding

* Removed redundant line

* Updated input generator and config

* Updatedtests

* added sample audio input

* Removed redundant code to fix test

* Updated iobinding

* Fix tests"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-11-10T13:55:52Z,"Fix IOBinding population error when batch_size>1 (#461)

* Force contiguous tensors

* Fix test"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-11-10T09:22:05Z,"Fix IOBinding bugs (#454)

* fix bugs

* comments"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-11-09T11:30:14Z,fix index (#453)
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-11-04T11:16:31Z,"Add Model loading from subfolders similar to transformers (#443)

* add load from subfolder

* add loading from subfolder

* add load config from top level

* add log message"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-11-02T21:14:28Z,"Add IOBinding support to ONNX Runtime module  (#421)

* Create IOBinding helper and Type helper

* Apply IOBinding helper to causallm model

* Complete comment

* Fix use_io_binding value define bug

* np to numpy

* Replace asserts with error raise

* Add io binding return type

* Add is_onnxruntime_training_available in utils

* Apply io binding to encoders

* Also for custom tasks

* Improve use_io_binding args

* Apply io binding for seq2seq

* seq2seq io binding bug fix

* remove zip when outputs are fixed

* Check cupy availability

* Move io binding preparation to causal model

* move io binding preparation for other ort models

* Move io binding to ort seq2seq model

* Bind output tensors directly for causal lm

* Remove useless in IO helper

* Direct binding for multi-choice/im-cls/custom

* Direct binding for all other ort models

* Remove IO binding for ORTModelForCustomModels

* IO binding added for seq2seq model

* Revert dependencies for anothet PR

* Add IO binding tests for Encoder/Decoder

* Add config for passing seq2seq modeling tests

* Improve seq2seq buffer size

* Add test for seq2seq

* Add tests for generation

* Add warning for TensorRT

* Test: allclose -> equal"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-10-21T09:45:52Z,"Support specific device id for ORTModel (#427)

* support gpu id

* doc

* simplify code, add test

* skip test

* fix decorator

* simplify code

* fix

* fix gpu count in tests

* disable parity test temporarily, tracked shuffle issue in datasets"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-09-27T13:49:34Z,"Add possibility to pass `provider_options` to `ORTModel.from_pretrained()` (#401)

* add provider option

* style and tests"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-09-19T11:25:21Z,"Add InferenceSession options and Provider to ORTModel (#271)

* added onnxruntime session options

added execution provider and inference session options to ortmodle

fix test

better format

seq2seq

fix bug

* post rebase

* named args

* trigger tests

* cleanup post rebase

* fix force download

* remove possibility to give a list for provider argument"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-08-24T10:12:11Z,Do not force download by default in ORTModel (#356)
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-08-24T08:20:16Z,"Add ONNX Runtime inference for models with multiple choice classification head (#358)

* Add multiple choice ort model

* Add tests"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-08-08T19:45:44Z,Allow string device input for OrtModel.to(device) (#337)
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-08-03T09:22:44Z,"Add ORTModel support for custom tasks (#303)

* Update ort nightly docker

* Refactoring ort models(except for clm)

* Refactoring clm

* Merge with main

* Change inputs name for clarity

* another try

* Update ort nightly docker

* Refactoring ort models(except for clm)

* Refactoring clm

* Change inputs name for clarity

* another try

* Revert and create a class for custom models

* Add example for custom task

* Fix doc

* Fix docstring

* Add to import

* Merge with main

* Fix key name

* Refactoring ort models(except for clm)

* Refactoring clm

* Change inputs name for clarity

* another try

* Refactoring ort models(except for clm)

* another try

* Revert and create a class for custom models

* Add example for custom task

* Fix doc

* Fix docstring

* Add to import

* Fix key name

* Add test

* Fix test

* Nits

* Remove unused import

* Refactoring ort models(except for clm)

* Refactoring clm

* Change inputs name for clarity

* another try

* Refactoring ort models(except for clm)

* another try

* Revert and create a class for custom models

* Add example for custom task

* Fix doc

* Fix docstring

* Add to import

* Fix key name

* Refactoring ort models(except for clm)

* Refactoring clm

* Change inputs name for clarity

* another try

* Refactoring ort models(except for clm)

* Refactoring clm

* Change inputs name for clarity

* another try

* Revert and create a class for custom models

* Add example for custom task

* Fix docstring

* Merge with main

* Fix key name

* Add test

* Fix test

* Remove unused import

* Fix style

* remove duplicated

* Merge with main"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-08-01T09:36:36Z,"OnnxRuntime tests refactor to make them faster (#315)

* Stop downloading for optimization test, and test on a lot less examples for the modeling tests

* Fuse some tests

* Add gc collect

* Change camembert and roberta model name

* Change the way model architectures are fed to the tests

* Fix test on Windows

* Use multiprocessing for onnxruntime tests

* Update github action step name

* Update github actions to use macos-latest

* Made test_optimization lighter

* Fix multiple workers for pytest

* Make test_pipeline_model_is_none for Seq2Seq faster

* Trigger CI

* Fix test_pipeline_model_is_none

* Change any to all"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-07-27T08:39:59Z,"Enable possibility to not use past_key_values (#241)

* Enable possibility to not have past_key_values as inputs

* Fix decoder with past saving

* Add tests

* Fix test

* Fix docstring

* Adapt documentation

* Fix comment

Co-authored-by: regisss <15324346+regisss@users.noreply.github.com>

* Fix comment

Co-authored-by: regisss <15324346+regisss@users.noreply.github.com>

* Fix comment

Co-authored-by: regisss <15324346+regisss@users.noreply.github.com>

* Rename variable use_past_key_values to use_cache to keep consistency with transformers

* Add copyright

Co-authored-by: regisss <15324346+regisss@users.noreply.github.com>"
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-07-18T16:40:06Z,Fix bug about accessing model.config when model is None in pipeline (#301)
github.com/huggingface/optimum,tests/onnxruntime/test_modeling.py,2022-06-29T12:51:10Z,"Improve onnxruntime optimization and quantization tests (#181)

* Clean ONNX Runtime tests

* Add count of quantized matmul in onnxruntime tests

* Fix style

* test

* Test for memory allocation issue

* Fix style

* Clean onnxruntime tests

* Fix style

* Add missing import

* Fix incorrect variable name

* Test for memory allocation issue

* Fix ort inputs type for windows workflow"
github.com/KyanChen/RSPrompter,mmpretrain/models/backbones/timm_backbone.py,2023-11-26T10:48:15Z,mmpretrain
github.com/AILab-CVC/SEED,SEED_Tokenizer/lavis/models/clip_models/timm_model.py,2024-02-24T04:23:21Z,Upload training code
github.com/THUDM/SwissArmyTransformer,examples/cait/config/cait_config.py,2022-02-23T09:13:11Z,support CaiT
github.com/Alibaba-MIIL/ImageNet21K,src_files/models/utils/factory.py,2021-08-05T15:08:15Z,train_single_label_from_scratch
github.com/Alibaba-MIIL/ImageNet21K,src_files/models/utils/factory.py,2021-05-20T06:25:47Z,t1
github.com/abhishekkrthakur/tez,examples/image/dogs_vs_cats.py,2022-07-07T13:10:14Z,use device.type
github.com/abhishekkrthakur/tez,examples/image/dogs_vs_cats.py,2022-03-24T15:23:19Z,ultramnist
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2024-02-09T06:56:57Z,Fixed bugs in randomaug.py
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2024-02-09T06:54:25Z,change to not use DP as default
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2024-02-09T06:51:40Z,"the default was trained without randaug.

changed to train with randaug as default"
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2023-07-17T14:15:39Z,#24 apply
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2022-06-23T00:44:24Z,Update train_cifar10.py
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2022-06-23T00:41:04Z,Merge branch 'main' into refactor
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2022-06-23T00:39:12Z,"tweak a bunch of default training settings.
now amp, randomaug, epoch=200 is default. these are nessesary for training vit"
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2022-06-16T07:24:04Z,mod train script for multi-gpu
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2022-06-16T07:15:22Z,add mlpmixer train
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2022-05-16T00:08:32Z,add simpleViT
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2022-03-13T05:06:35Z,add swin
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2022-03-12T12:26:50Z,fix bugs
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2022-03-12T12:23:30Z,add cait trainsettings
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2022-03-12T12:19:13Z,add vit-small and cait
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2022-03-12T12:10:38Z,"fix bugs, add dimhead parameter"
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2022-03-12T12:05:38Z,change vit to new version
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2022-03-08T01:38:07Z,"add imsize configs, but need to change ViT to get it working"
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2021-10-09T02:15:14Z,add randomaug
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2021-10-08T11:40:37Z,make kernel size configurable
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2021-10-08T11:26:51Z,add ConvMixer from paper
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2021-07-02T07:33:49Z,add timm pretrained training
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2020-10-28T04:18:29Z,update results!
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2020-10-28T02:12:06Z,add results
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2020-10-28T02:03:58Z,add results
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2020-10-28T01:52:52Z,add logging
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2020-10-28T01:22:32Z,Add ViT and training scripts
github.com/kentaroy47/vision-transformers-cifar10,train_cifar10.py,2020-10-28T01:02:46Z,init
github.com/lllyasviel/stable-diffusion-webui-forge,extensions-builtin/forge_legacy_preprocessors/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/vit.py,2024-01-28T23:31:49Z,"Cnet (#20)

* ini

* i

* i

* i

* i

* i

* i

* Update preprocessor_normalbae.py

* i

* i

* i

* i

* Update README.md

* i

* Update preprocessor_depth.py

* Update shared.py

* Update devices.py

* i

* i

* i

* i

* i

* i

* Update README.md

* i

* Update README.md

* i

* Update annotator_path.py

* i

* i

* Update preprocessor_meta.py"
github.com/lllyasviel/stable-diffusion-webui-forge,extensions-builtin/forge_legacy_preprocessors/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/beit.py,2024-01-29T17:28:38Z,fix many problems
github.com/lllyasviel/stable-diffusion-webui-forge,extensions-builtin/forge_legacy_preprocessors/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/beit.py,2024-01-28T23:31:49Z,"Cnet (#20)

* ini

* i

* i

* i

* i

* i

* i

* Update preprocessor_normalbae.py

* i

* i

* i

* i

* Update README.md

* i

* Update preprocessor_depth.py

* Update shared.py

* Update devices.py

* i

* i

* i

* i

* i

* i

* Update README.md

* i

* Update README.md

* i

* Update annotator_path.py

* i

* i

* Update preprocessor_meta.py"
github.com/huggingface/huggingface_hub,contrib/timm/test_timm.py,2023-02-17T09:43:38Z,"Fix contrib CI for timm (#1346)

* Fix timm CI

* update gh ci for contrib"
github.com/huggingface/huggingface_hub,contrib/timm/test_timm.py,2022-11-28T15:55:25Z,"[RFC] Contrib test suite + tests for timm and sentence_transformers (#1200)

* First draft for a contrib test suite + test for timm contrib

* run only Python 3.8

* remove commented code

* Run contrib tests in separate environments

* fix ci

* fix ci again

* and now ?

* stupid me

* this time ?

* Refactor how to run contrib tests locally

* add tests for sentence_transformers

* amke style

* Update contrib/README.md

Co-authored-by: Omar Sanseviero <osanseviero@gmail.com>

* ADapt timm tests

* Include feedback form osanseviero

* script to check contrib list is accurate

* Use [testing] requirements as contrib common dependencies

* add check_contrib_list in github workflow

* code qualiry

Co-authored-by: Omar Sanseviero <osanseviero@gmail.com>"
github.com/lllyasviel/stable-diffusion-webui-forge,extensions-builtin/forge_legacy_preprocessors/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin.py,2024-01-28T23:31:49Z,"Cnet (#20)

* ini

* i

* i

* i

* i

* i

* i

* Update preprocessor_normalbae.py

* i

* i

* i

* i

* Update README.md

* i

* Update preprocessor_depth.py

* Update shared.py

* Update devices.py

* i

* i

* i

* i

* i

* i

* Update README.md

* i

* Update README.md

* i

* Update annotator_path.py

* i

* i

* Update preprocessor_meta.py"
github.com/wenquanlu/HandRefiner,ldm/modules/midas/midas/vit.py,2023-12-29T12:40:21Z,first code commit
github.com/lllyasviel/stable-diffusion-webui-forge,extensions-builtin/forge_legacy_preprocessors/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/levit.py,2024-01-28T23:31:49Z,"Cnet (#20)

* ini

* i

* i

* i

* i

* i

* i

* Update preprocessor_normalbae.py

* i

* i

* i

* i

* Update README.md

* i

* Update preprocessor_depth.py

* Update shared.py

* Update devices.py

* i

* i

* i

* i

* i

* i

* Update README.md

* i

* Update README.md

* i

* Update annotator_path.py

* i

* i

* Update preprocessor_meta.py"
github.com/v-iashin/video_features,models/timm/extract_timm.py,2024-01-25T20:55:04Z,"Improved Timm models (#109) (#118)

* [minimal working example] HuggingFace hub models now supported (#109)
* Add gitignore
* Add support for TIMM image feature extractors
* docs
* renamed imagenet labels and added in21k labels
* extract_frames(hf): loading pretr weights now;
* extract_frames(hf): implemented show pred for timm models
* utils: test for model_name (should be specified)
* hf.yaml: rm model_name default; style fix
* extract_frames: a note with assumption
* renamed hf to timm
* timm.md: init
* conda_env, install_conda: upd for timm
* test_timm: test timm models
* extract_frames: not all hf models have 'tag'
* rename extract_frames.py to extract_timm.py
* README, index: added timm models

---------

Co-authored-by: Bruno Korbar <bjuncek@gmail.com>"
github.com/lllyasviel/stable-diffusion-webui-forge,extensions-builtin/forge_legacy_preprocessors/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin2.py,2024-01-28T23:31:49Z,"Cnet (#20)

* ini

* i

* i

* i

* i

* i

* i

* Update preprocessor_normalbae.py

* i

* i

* i

* i

* Update README.md

* i

* Update preprocessor_depth.py

* Update shared.py

* Update devices.py

* i

* i

* i

* i

* i

* i

* Update README.md

* i

* Update README.md

* i

* Update annotator_path.py

* i

* i

* Update preprocessor_meta.py"
github.com/IDEA-Research/DWPose,ControlNet-v1-1-nightly/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/vit.py,2023-07-28T02:39:55Z,open code controlnet
github.com/abhishekkrthakur/tez,examples/image/sorghum_fgvc9.py,2022-07-07T13:10:14Z,use device.type
github.com/abhishekkrthakur/tez,examples/image/sorghum_fgvc9.py,2022-04-15T17:08:32Z,bump version
github.com/ThereforeGames/unprompted,lib_unprompted/stable_diffusion/controlnet/annotator/midas/midas/vit.py,2023-02-13T05:44:46Z,v7.5.0
github.com/Megvii-BaseDetection/cvpods,cvpods/modeling/backbone/timm_backbone.py,2023-03-10T10:05:26Z,"chore(analyser): add angular update (#101)

* chore(analyser): add angular update"
github.com/Megvii-BaseDetection/cvpods,cvpods/modeling/backbone/timm_backbone.py,2021-11-12T10:44:12Z,feat(modeling): update code
github.com/lllyasviel/stable-diffusion-webui-forge,extensions-builtin/forge_legacy_preprocessors/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/next_vit.py,2024-01-28T23:31:49Z,"Cnet (#20)

* ini

* i

* i

* i

* i

* i

* i

* Update preprocessor_normalbae.py

* i

* i

* i

* i

* Update README.md

* i

* Update preprocessor_depth.py

* Update shared.py

* Update devices.py

* i

* i

* i

* i

* i

* i

* Update README.md

* i

* Update README.md

* i

* Update annotator_path.py

* i

* i

* Update preprocessor_meta.py"
github.com/IDEA-Research/DWPose,ControlNet-v1-1-nightly/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/beit.py,2023-07-28T02:39:55Z,open code controlnet
github.com/IDEA-Research/DWPose,ControlNet-v1-1-nightly/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin.py,2023-07-28T02:39:55Z,open code controlnet
github.com/pytorch/benchmark,torchbenchmark/util/framework/timm/model_factory.py,2023-10-10T17:53:23Z,"Simplify the multiple batches design by removing the ""train_dynamic"" test

Summary: Let user control the multiple batch test by simply specifying the `--num-batch` command.

Reviewed By: Bucero

Differential Revision: D50092718

fbshipit-source-id: 15d0e3d85e98982697caf92b2f5242e2cba97711"
github.com/pytorch/benchmark,torchbenchmark/util/framework/timm/model_factory.py,2023-09-22T20:00:33Z,"Add interface to support multiple batches (#1914)

Summary:
The interface `self.gen_input_iter()` returns an input generator which yields the next batch of available input.

We support dynamic shapes on 3 categories of models:
- huggingface (hf_*): we randomize the bucket_len of the input data
- timm: we randomize the batch_size of the input data
- torchvision: we randomize the batch_size of the input data

This PR also introduces a new type of train test, `train_dynamic`, to run the train test with a list of batches. By default, we will run 10 batches of inputs returned from the generator.

Pull Request resolved: https://github.com/pytorch/benchmark/pull/1914

Reviewed By: davidberard98

Differential Revision: D49504281

Pulled By: xuzhao9

fbshipit-source-id: 322015ff85725869fe8573dc709a04796332dfed"
github.com/pytorch/benchmark,torchbenchmark/util/framework/timm/model_factory.py,2023-09-20T16:21:22Z,"Rename the `enable_fp16_half()` function to `enable_fp16` (#1900)

Summary:
We are renaming `enable_fp16_half()` to `enable_fp16()` because the amp fp16 is now named `enable_amp_fp16()`. This makes the naming of dargs-related functions cleaner.

It also implements the enable_fp16, enable_bf16, and enable_channels_last in a cleaner by utilizing the common `inputs_cast` function.

Pull Request resolved: https://github.com/pytorch/benchmark/pull/1900

Reviewed By: davidberard98

Differential Revision: D49418225

Pulled By: xuzhao9

fbshipit-source-id: 3e5e3c3af06dbc6e06a6a4a2dabcbf775dc45cec"
github.com/pytorch/benchmark,torchbenchmark/util/framework/timm/model_factory.py,2023-07-26T16:59:32Z,"Remove jit from the framework code (#1787)

Summary:
Jit(torchscript) is now in archive mode and there is no need that we add it to the explicit options.

Jit(torchscript) is still supported with the extra args option `--backend torchsript`.

Fixes https://github.com/pytorch/benchmark/issues/1777

Pull Request resolved: https://github.com/pytorch/benchmark/pull/1787

Reviewed By: msaroufim

Differential Revision: D47774649

Pulled By: xuzhao9

fbshipit-source-id: 7eb25e54d016da9a49b93c514cc302f6d8d4573c"
github.com/pytorch/benchmark,torchbenchmark/util/framework/timm/model_factory.py,2023-04-24T15:50:28Z,"Enable amp support (BFloat16) in CPU (#1516)

Summary:
This PR is to add amp support in CPU in TorchBench, which contributes to https://github.com/pytorch/benchmark/issues/1293.

To be compatible with current amp implementation, we add 3 options in `--precision`:
`--precision bf16`: use `enable_bf16` to convert model and inputs to bf16
`--precision amp_bf16`: use `torch.cpu.amp.autocast(dtype=torch.bfloat16)` (can extend to cuda bf16 when ready)
`--precision amp_fp16`: use `torch.cuda.amp.autocast(dtype=torch.float16)` (can extend to cpu fp16 when ready)

`--precision amp`: use torch.autocast(device), same as --amp

### Performance

Test in Copper Lake machine.

$ python run.py alexnet -d cpu -m eager -t eval --precision fp32
Running eval method from alexnet on cpu in eager mode with input batch size 128 and precision fp32.
CPU Total Wall Time:  92.600 milliseconds
CPU Peak Memory:                1.1299 GB

$ python run.py alexnet -d cpu -m eager -t eval --precision bf16
Running eval method from alexnet on cpu in eager mode with input batch size 128 and precision bf16.
CPU Total Wall Time:  56.580 milliseconds
CPU Peak Memory:                0.6934 GB

$ python run.py alexnet -d cpu -m eager -t eval --precision amp_bf16
Running eval method from alexnet on cpu in eager mode with input batch size 128 and precision amp_bf16.
CPU Total Wall Time:  71.385 milliseconds
CPU Peak Memory:                0.9922 GB

$ python run.py alexnet -d cpu -m eager -t train --precision fp32
Running train method from alexnet on cpu in eager mode with input batch size 128 and precision fp32.
CPU Total Wall Time: 306.164 milliseconds
CPU Peak Memory:                2.0977 GB

$ python run.py alexnet -d cpu -m eager -t train --precision bf16
Running train method from alexnet on cpu in eager mode with input batch size 128 and precision bf16.
CPU Total Wall Time: 180.958 milliseconds
CPU Peak Memory:                1.2686 GB

$ python run.py alexnet -d cpu -m eager -t train --precision amp_bf16
Running train method from alexnet on cpu in eager mode with input batch size 128 and precision amp_bf16.
CPU Total Wall Time: 233.332 milliseconds
CPU Peak Memory:                2.0117 GB

Pull Request resolved: https://github.com/pytorch/benchmark/pull/1516

Reviewed By: aaronenyeshi

Differential Revision: D44883144

Pulled By: xuzhao9

fbshipit-source-id: 75251f9eec128b3a1dbca39540193b89059ec183"
github.com/pytorch/benchmark,torchbenchmark/util/framework/timm/model_factory.py,2023-04-14T20:30:31Z,"Add get_optimizer and set_optimizer to BenchmarkModel API (#1457)

Summary:
non ghstack version of https://github.com/pytorch/benchmark/issues/1452

Pull Request resolved: https://github.com/pytorch/benchmark/pull/1457

Reviewed By: xuzhao9

Differential Revision: D43859895

Pulled By: janeyx99

fbshipit-source-id: e180c66cf392c06dfa5423b1ac9f2b116a49ef6d"
github.com/pytorch/benchmark,torchbenchmark/util/framework/timm/model_factory.py,2023-02-23T18:49:55Z,"Use the correct batch size for timm ViT to improve stableness (#1419)

Summary:
Use the correct batch size for ViT models train.

Upstream batch size: 32 (https://github.com/rwightman/pytorch-image-models/blob/main/train.py#L131)

BS=8, variation 17%: https://github.com/pytorch/benchmark/actions/runs/4147202172

BS=32, variation 0.9%: https://github.com/pytorch/benchmark/actions/runs/4205506091

Pull Request resolved: https://github.com/pytorch/benchmark/pull/1419

Reviewed By: aaronenyeshi, davidberard98

Differential Revision: D43410850

Pulled By: xuzhao9

fbshipit-source-id: c041982ded0dff8aac222e29d8ec9b16f03b161b"
github.com/pytorch/benchmark,torchbenchmark/util/framework/timm/model_factory.py,2022-12-14T20:05:07Z,"Set cudnn.benchmark in timm and vision models to True by default (#1343)

Summary:
The upstream of [timm framework](https://github.com/rwightman/pytorch-image-models/blob/e7da205345dcf770ee4bedd62d06fad7a1458904/train.py#L372) has set `torch.backends.cudnn.benchmark` to True by default. It's better to keep it the same as the upstream.

The vision framework doesn't have an upstream repo, and it is supposed to use fixed input sizes each time in TorchBench. So it's better to enable cudnn.benchmark too.

Pull Request resolved: https://github.com/pytorch/benchmark/pull/1343

Reviewed By: davidberard98

Differential Revision: D42037886

Pulled By: xuzhao9

fbshipit-source-id: b5a3c513319d4e26f143f769412c552e37ac243a"
github.com/pytorch/benchmark,torchbenchmark/util/framework/timm/model_factory.py,2022-09-09T19:22:51Z,"Remove the use of niter in the model code (#1171)

Summary:
To get more consistent results with torchdynamo's benchmark script, let's completely deprecate the niter argument.

Pull Request resolved: https://github.com/pytorch/benchmark/pull/1171

Reviewed By: wconstab

Differential Revision: D39391995

Pulled By: xuzhao9

fbshipit-source-id: 7317efc6e422f65540a52a8421eccd075d4d02fb"
github.com/pytorch/benchmark,torchbenchmark/util/framework/timm/model_factory.py,2022-07-08T21:27:42Z,"Remove optimized_for_inference (#1012)

Summary:
Now we are enabling ofi for jit inference by default (https://github.com/pytorch/benchmark/blob/main/torchbenchmark/util/backends/jit.py#L4), so remove optimized_for_inference in metadata.

Pull Request resolved: https://github.com/pytorch/benchmark/pull/1012

Reviewed By: aaronenyeshi

Differential Revision: D37702454

Pulled By: xuzhao9

fbshipit-source-id: 92b347ff50a8be28cd4d4e65e58a360540a6c428"
github.com/pytorch/benchmark,torchbenchmark/util/framework/timm/model_factory.py,2022-05-24T01:08:26Z,"Add amp+train support and channels_last support to timm models (#900)

Summary:
This PR adds amp precision support to timm train tests.
It also adds channels-last option to both train and eval tests.

Pull Request resolved: https://github.com/pytorch/benchmark/pull/900

Test Plan:
```
$ python run.py timm_nfnet -t train -d cuda --precision amp
Running train method from timm_nfnet on cuda in eager mode.
GPU Time:            256.267 milliseconds
CPU Total Wall Time: 256.305 milliseconds
```

```
$ python run.py timm_nfnet -t train -d cuda --precision amp --channels-last
Running train method from timm_nfnet on cuda in eager mode.
GPU Time:            234.359 milliseconds
CPU Total Wall Time: 234.450 milliseconds
```

Reviewed By: erichan1

Differential Revision: D36380817

Pulled By: xuzhao9

fbshipit-source-id: c3ab231a7fde7211e484de72e24059b64b5fd3c4"
github.com/pytorch/benchmark,torchbenchmark/util/framework/timm/model_factory.py,2022-04-04T18:36:27Z,"Improve the `run_sweep.py` script to support precision attribute (#844)

Summary:
Rename the `fp16` option to `precision`, providing 3 options: `fp32`, `fp16`, `amp`. It also adds the `precision` attribute to the result of `run_sweep.py`.

Renaming the option to `precision` makes it easier to support other precisions in the future, such as `bfloat16`.

Pull Request resolved: https://github.com/pytorch/benchmark/pull/844

Reviewed By: frank-wei

Differential Revision: D35296731

Pulled By: xuzhao9

fbshipit-source-id: 109dfa2a1f3becaf7a0b4105d91c36fedfe128be"
github.com/pytorch/benchmark,torchbenchmark/util/framework/timm/model_factory.py,2022-03-29T17:46:05Z,"Adding the model input iterators. (#806)

Summary:
This PR adds a new interface, `gen_inputs(self) -> Tuple[Generator, Optional[int]]`. The first element is an iterator of the input data, and the second element is the size of the iterator. If the iterator is infinite, the second value is set to None.

Currently, only implement this on `timm` and `torchvision` models. Both of them use randomly generated inputs, therefore the second value is set to None in both cases.

Pull Request resolved: https://github.com/pytorch/benchmark/pull/806

Reviewed By: shunting314

Differential Revision: D35155417

Pulled By: xuzhao9

fbshipit-source-id: 5e60223279b09ed4336996f7292741be96070bdd"
github.com/pytorch/benchmark,torchbenchmark/util/framework/timm/model_factory.py,2022-03-17T03:49:29Z,"Enable fp16 half on timm models (#802)

Summary:
This PR enables fp16 (half) by default on `timm` models.

Now all torchvision, huggingface, and timm models support fp16 on CUDA inference by default.

Pull Request resolved: https://github.com/pytorch/benchmark/pull/802

Reviewed By: dzhulgakov

Differential Revision: D34912949

Pulled By: xuzhao9

fbshipit-source-id: 74f31db8cfb3df430380e77b9ff28eae75d1a89a"
github.com/pytorch/benchmark,torchbenchmark/util/framework/timm/model_factory.py,2022-02-28T19:28:22Z,"Cleanup the benchmarking code for timm models (#772)

Summary:
This PR cleans up the timm model code to use the same code entry point (`model_factory.py`), making it easier to make changes or add experimental features.

It also cleans up the code related to setting up random seeds, so that all models share the same code path as part of initialization.

Pull Request resolved: https://github.com/pytorch/benchmark/pull/772

Reviewed By: erichan1

Differential Revision: D34524605

Pulled By: xuzhao9

fbshipit-source-id: d8445ef0c5c66e9404616aeb67dc033ac27974b1"
github.com/IDEA-Research/DWPose,ControlNet-v1-1-nightly/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/levit.py,2023-07-28T02:39:55Z,open code controlnet
github.com/IDEA-Research/DWPose,ControlNet-v1-1-nightly/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin2.py,2023-07-28T02:39:55Z,open code controlnet
github.com/ThereforeGames/unprompted,lib_unprompted/stable_diffusion/controlnet/ldm/modules/midas/midas/vit.py,2023-02-13T05:44:46Z,v7.5.0
github.com/XiangLi1999/Diffusion-LM,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-06-06T22:38:39Z,first commit
github.com/zideliu/StyleDrop-PyTorch,open_clip/timm_model.py,2023-07-04T03:10:02Z,first commit
github.com/alibaba/EasyNLP,examples/diffusion_video_stylizer/annotator/midas/midas/vit.py,2023-04-14T11:30:53Z,add DiffusionVideoStylizer to examples
github.com/XiandaGuo/OpenStereo,openstereo/modeling/backbone/CoEx.py,2023-04-06T11:44:12Z,update coex
github.com/RobustBench/robustbench,robustbench/model_zoo/architectures/convstem_models.py,2023-03-16T13:38:51Z,add models from Liu2023Comprehensive
github.com/RobustBench/robustbench,robustbench/model_zoo/architectures/convstem_models.py,2023-03-15T19:47:48Z,add models from Singh2023Revisiting
github.com/IDEA-Research/DWPose,ControlNet-v1-1-nightly/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/next_vit.py,2023-07-28T02:39:55Z,open code controlnet
github.com/rlawjdghek/StableVITON,ldm/modules/midas/midas/vit.py,2024-02-29T04:51:12Z,add training code
github.com/Jiawei-Yang/FreeNeRF,DietNeRF-pytorch/dietnerf/run_nerf.py,2023-05-21T06:32:00Z,update dietnerf codebase
github.com/Jiawei-Yang/FreeNeRF,DietNeRF-pytorch/dietnerf/run_nerf.py,2023-04-05T23:48:31Z,init DietNeRF raw codebase
github.com/abhishekkrthakur/tez,examples/image/flower_inference.py,2022-03-24T15:23:19Z,ultramnist
github.com/BloodAxe/pytorch-toolbelt,pytorch_toolbelt/modules/encoders/timm/common.py,2022-12-25T18:37:31Z,Black
github.com/BloodAxe/pytorch-toolbelt,pytorch_toolbelt/modules/encoders/timm/common.py,2022-12-24T17:37:05Z,Pass kwargs in GenericTimmEncoder down to model factory method
github.com/BloodAxe/pytorch-toolbelt,pytorch_toolbelt/modules/encoders/timm/common.py,2022-01-16T17:35:09Z,Improve tracing support for encoders & decoders
github.com/BloodAxe/pytorch-toolbelt,pytorch_toolbelt/modules/encoders/timm/common.py,2021-11-16T11:45:52Z,Refactor GenericTimmEncoder to reflect API changes in timm
github.com/BloodAxe/pytorch-toolbelt,pytorch_toolbelt/modules/encoders/timm/common.py,2021-11-16T11:09:08Z,Added pretrained argument to GenericTimmEncoder
github.com/BloodAxe/pytorch-toolbelt,pytorch_toolbelt/modules/encoders/timm/common.py,2021-08-11T19:42:01Z,Fix Flake8
github.com/BloodAxe/pytorch-toolbelt,pytorch_toolbelt/modules/encoders/timm/common.py,2021-08-11T18:23:53Z,Bump up timm version to 0.4.12
github.com/BloodAxe/pytorch-toolbelt,pytorch_toolbelt/modules/encoders/timm/common.py,2021-05-23T18:28:15Z,Move import timm inside the class c'tor
github.com/BloodAxe/pytorch-toolbelt,pytorch_toolbelt/modules/encoders/timm/common.py,2021-05-23T18:13:55Z,Fix reference to efficientnetv2_s in timm==0.4.9
github.com/BloodAxe/pytorch-toolbelt,pytorch_toolbelt/modules/encoders/timm/common.py,2021-03-17T22:23:43Z,Refactor timm encoders
github.com/jxbbb/ADAPT,src/layers/bert/modeling_bert.py,2023-03-17T08:29:02Z,add bert attention visualization code
github.com/jxbbb/ADAPT,src/layers/bert/modeling_bert.py,2022-08-27T14:44:35Z,add code for multi-modal training
github.com/jxbbb/ADAPT,src/layers/bert/modeling_bert.py,2022-08-14T07:26:05Z,add decoder for two caption
github.com/jxbbb/ADAPT,src/layers/bert/modeling_bert.py,2022-08-08T04:05:40Z,code
github.com/stanford-crfm/helm,src/helm/benchmark/metrics/image_generation/watermark/watermark_detector.py,2023-12-21T00:23:10Z,Holistic Evaluation of Text-to-Image Models (HEIM) (#1939)
github.com/MarSaKi/VLN-BEVBert,precompute_features/grid_mp3d_imagenet.py,2023-08-24T11:24:54Z,grid feature processing
github.com/gangweiX/CGI-Stereo,models/CGI_Stereo.py,2023-03-05T13:32:33Z,Add files via upload
github.com/UCSC-VLAA/CLIPA,clipa_torch/open_clip/timm_model.py,2023-05-11T23:50:27Z,first commit
github.com/zhenxingjian/Partial_Distance_Correlation,Partial_Distance_Correlation/VGG.py,2022-07-12T04:41:42Z,To use pretrained model without training
github.com/YuliangXiu/ICON,lib/pare/pare/models/backbone/hrnet_legacy.py,2023-01-05T09:20:07Z,replace pymeshlab dependency with open3d
github.com/YuliangXiu/ICON,lib/pare/pare/models/backbone/hrnet_legacy.py,2022-09-10T01:30:54Z,yapf .py reformat & fix rot_6d bug
github.com/YuliangXiu/ICON,lib/pare/pare/models/backbone/hrnet_legacy.py,2022-02-08T01:02:59Z,inference done
github.com/XiangLi1999/Diffusion-LM,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-06-06T22:38:39Z,first commit
github.com/XiangLi1999/Diffusion-LM,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-06-06T22:38:39Z,first commit
github.com/OpenDriveLab/Birds-eye-view-Perception,waymo_playground/projects/mmdet3d_plugin/models/backbones/timm_backbone.py,2022-10-11T02:25:36Z,update
github.com/DonaldRR/SimpleNet,backbones.py,2023-03-24T04:22:47Z,first commit
github.com/openvinotoolkit/nncf,tests/post_training/pipelines/image_classification_timm.py,2024-03-01T17:01:40Z,"Fix conformance & e2e tests (#2540)

### Changes

- Changed `CPU_THREADS_NUM` to `INFERENCE_NUM_THREADS`;
- Renamed `accuracy_checker.py` to `ac_wrapper.py` due to import issues;

### Reason for changes

- Bugfix;

### Related tickets

- 132634

(cherry picked from commit 52b2bac645c35742d27ea1ab3ca161ad57de8ade)

### Tests

- post_training_quantization/309 - passed
- e2e_onnx_model_zoo/612- running"
github.com/openvinotoolkit/nncf,tests/post_training/pipelines/image_classification_timm.py,2024-02-02T15:59:56Z,"Conformance test for weight compression (#2425)

### Changes

Added tests for accuracy and duration of weight compression on
tiny-llama-1B

### Reason for changes

catch bugs with accuracy (e.g. difference after changing rounding -
https://github.com/openvinotoolkit/nncf/pull/2420) and with duration of
weight compression

### Related tickets

130630

### Tests

- [x] local run of weight compression conformance tests
- [x] PTQ conformance tests in CI (build 273)
- [x] CI scripts should be adopted for a new location of reference.yaml
- [x] html generation should accept new names in the table.

Total execution time for tests w/ or w/o FP32 option is ~20/~40 minutes.
Model download takes extra 20 minutes, but with caching models on share
https://github.com/openvinotoolkit/nncf/pull/2427
the download won't happen.


![image](https://github.com/openvinotoolkit/nncf/assets/4014476/0e1402a7-8a89-492a-91a3-66ce8de84f82)"
github.com/openvinotoolkit/nncf,tests/post_training/pipelines/image_classification_timm.py,2024-01-26T06:17:26Z,"Happy new copyright year!🎉🎉🎉 (#2429)

### Changes

Copyright year is incremented

### Reason for changes

2024 year has come to us

### Tests

There were enough tests in 2023"
github.com/openvinotoolkit/nncf,tests/post_training/pipelines/image_classification_timm.py,2024-01-12T16:18:17Z,"Use ov.convert_model (#2372)

### Changes

Use `openvino.convert_model` instead of
`openvino.tools.mo.convert_model`"
github.com/openvinotoolkit/nncf,tests/post_training/pipelines/image_classification_timm.py,2023-12-29T15:01:47Z,"Use transforms from timm (#2345)

### Changes

Use transformers from timm.

### Reason for changes

Use incorrect transformers to validate models from timm.

### Related tickets

128005

### Tests

tests/post_training/test_quantize_conformance.py"
github.com/openvinotoolkit/nncf,tests/post_training/pipelines/image_classification_timm.py,2023-11-21T14:20:16Z,"Add additional arguments for test_quantize_conformance.py (#2256)

### Changes

Additional arguments:
  - `--fp32` to run validation of not quantized model
  - `--cuda` to run CUDA_TORCH backend
  - `--subset-size=N` to force subset_size of calibration dataset
- `--benchmark` to collect throughput statistics, add `FPS` column to
result.csv
  - `--extra-columns` to add additional columns to reports.csv:
    - `Stat. collection time` - time of statistic collection
    - `Bias correction time` - time of bias correction
    - `Validation time` - time of validation
 
Add limit to status length.
Use nncf.common.logging.track_progress.
Dump `stdout.log` and `stderr.log` to model output directory. 
Update `pandas` version to 2.0.3"
github.com/openvinotoolkit/nncf,tests/post_training/pipelines/image_classification_timm.py,2023-11-17T12:33:58Z,"Update Torch to ONNX export in conformance  (#2269)

### Changes

Do constant folding while exporting to ONNX from Torch

### Reason for changes

Conformance test regressgion of ONNX after updating torch to 2.1
Model graphs are updated and contain BatchNorm. Therefore bias locates
no more as Conv attribute but in BatchNorm layer. It leads to not
applying FBC and BC algorithms to these biases.

### Related tickets

125203

### Tests

N/A"
github.com/openvinotoolkit/nncf,tests/post_training/pipelines/image_classification_timm.py,2023-11-02T14:03:38Z,"Switch PyTorch PTQ to common implementation (#2227)

### Changes

- Switch `nncf.quantize` to post training implementation for PT backend
- Removed OLD_TORCH backend from test_quantize_conformance.py
- Add support of dict as output of calibration dataset

### Related tickets

119910

---------

Co-authored-by: Daniil Lyakhov <daniil.lyakhov@intel.com>"
github.com/openvinotoolkit/nncf,tests/post_training/pipelines/image_classification_timm.py,2023-09-19T13:57:45Z,"Use convert_model in tests (#2102)

### Changes

Use mo.convert_model instead of converting via onnx in tests.

- Update __version__ to 2.6.0, mo.convert_model contains check
`nncf.__version__ >= 2.6.0`
- Add dump fp32 models
- Disable POT backend for `inception_resnet_v2, levit_128, vgg11` in
test_quantize_conformance.py (120012)
- Update metrics of test_quantize_conformance.py

| Model | 2023.0.1 | 2023.1.0 | Diff |

|-----------------------------------------------------|------------|------------|---------|
| timm/efficientnet_b0_backend_OLD_TORCH | 0.74976 | 0.75538 | 0.0056 |
| timm/efficientnet_b0_BC_backend_POT | 0.76878 | 0.76872 | -0.0001 |
| timm/levit_128_backend_ONNX | 0.73082 | 0.73184 | 0.0010 |
| timm/mobilenetv2_050_backend_POT | 0.64234 | 0.64362 | 0.0013 |
| timm/mobilenetv2_050_BC_backend_POT | 0.64376 | 0.6431 | -0.0007 |
| timm/mobilenetv3_small_050_backend_POT | 0.27062 | 0.54104 | 0.2704 |
| timm/swin_base_patch4_window7_224_backend_OLD_TORCH | 0.79586 |
0.81376 | 0.0179 |
| timm/swin_base_patch4_window7_224_backend_TORCH | 0.78026 | 0.80696 |
0.0267 |


### Reason for changes

New api in openvino to convert PT models

### Related tickets

117885"
github.com/openvinotoolkit/nncf,tests/post_training/pipelines/image_classification_timm.py,2023-07-06T13:53:50Z,"New test_quantize_conformance for HF (#1922)

### Changes

- Add conformance tests for bert-base-uncased fro HF ( without
validation)
- rework conformance tests:
   - `result.csv` rows splited by backends.
- `results.csv` contains `metric name`, `metric value`, `quantization
time` and `memory used in quantitation`.
- each quantization pipeline by model/backends runs in separately
test_case to have possible parallel on ci, and get more detailed pytest
report.
- Fail test by check with reference metric (atol=0.001, for some model
metrics can be little difference)
- Shows the improvement of the metrics in the status column and
highlights green in result.html


### Related tickets
110630, 111488"
github.com/abhishekkrthakur/tez,examples/image/digit_recognizer.py,2022-07-08T07:22:27Z,fix load
github.com/abhishekkrthakur/tez,examples/image/digit_recognizer.py,2022-07-07T13:10:14Z,use device.type
github.com/abhishekkrthakur/tez,examples/image/digit_recognizer.py,2022-07-07T12:20:29Z,predict fix
github.com/abhishekkrthakur/tez,examples/image/digit_recognizer.py,2022-07-07T11:20:32Z,further improvements
github.com/abhishekkrthakur/tez,examples/image/digit_recognizer.py,2022-07-06T11:20:48Z,improvements
github.com/abhishekkrthakur/tez,examples/image/digit_recognizer.py,2022-04-15T17:08:32Z,bump version
github.com/abhishekkrthakur/tez,examples/image/digit_recognizer.py,2022-03-25T18:16:44Z,fix examples
github.com/abhishekkrthakur/tez,examples/image/digit_recognizer.py,2022-03-25T15:42:04Z,bump version
github.com/abhishekkrthakur/tez,examples/image/digit_recognizer.py,2022-03-25T14:57:05Z,digit recognizer example
github.com/gangweiX/IGEV,IGEV-Stereo/core/extractor.py,2023-03-12T12:19:58Z,Initial Commit.
github.com/painebenjamin/app.enfugue.ai,src/python/enfugue/diffusion/support/depth/midas/vit.py,2023-09-26T00:53:31Z,"add local copy of midas detector and avoid downloading, standardize loading of support models"
github.com/AnyLoc/AnyLoc,MixVPR/models/backbones/swin.py,2023-08-02T17:09:32Z,Created first (public) release
github.com/THUDM/SwissArmyTransformer,examples/vit/config/vit_base_config.py,2023-05-23T06:39:15Z,adapt vit to new version
github.com/THUDM/SwissArmyTransformer,examples/vit/config/vit_base_config.py,2022-02-14T03:45:09Z,use mixin for final_forward
github.com/datvuthanh/HybridNets,encoders/timm_universal.py,2022-02-09T22:24:32Z,Add files via upload
github.com/datvuthanh/HybridNets,encoders/timm_universal.py,2022-02-04T10:42:00Z,clean code
github.com/datvuthanh/HybridNets,encoders/timm_universal.py,2022-02-03T20:32:46Z,Move folder
github.com/longyuewangdcu/Chinese-Llama-2,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-07-24T08:30:29Z,add transformer we used
github.com/nupurkmr9/vision-aided-gan,stylegan2/vision_module/cvmodel.py,2022-09-09T02:37:31Z,Update cvmodel.py
github.com/nupurkmr9/vision-aided-gan,stylegan2/vision_module/cvmodel.py,2022-09-03T07:31:44Z,Update cvmodel.py
github.com/nupurkmr9/vision-aided-gan,stylegan2/vision_module/cvmodel.py,2022-09-03T07:30:18Z,Update cvmodel.py
github.com/nupurkmr9/vision-aided-gan,stylegan2/vision_module/cvmodel.py,2022-05-04T21:13:28Z,vision_aided_loss as independent module
github.com/longyuewangdcu/Chinese-Llama-2,transformers/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-07-24T08:30:29Z,add transformer we used
github.com/analokmaus/kuma_utils,examples/Train_CNN_distributed.py,2024-02-10T10:38:21Z,v0.2.0 / Integration of TensorboardLogger into TorchLogger / Automated hyperparameter tuning for lightgbm/xgboost.cv()
github.com/analokmaus/kuma_utils,examples/Train_CNN_distributed.py,2024-02-09T08:13:12Z,new kuma_utils! / add poetry local installation / integrate wandb / etc.
github.com/longyuewangdcu/Chinese-Llama-2,transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-07-24T08:30:29Z,add transformer we used
github.com/WangLibo1995/GeoSeg,geoseg/models/UNetFormer.py,2022-06-25T08:45:07Z,version 2.0
github.com/abhishekkrthakur/tez,examples/image/wheat_efficientdet.py,2022-04-02T12:02:29Z,validate on batches
github.com/datvuthanh/HybridNets,encoders/timm_mobilenetv3.py,2022-02-09T22:24:32Z,Add files via upload
github.com/datvuthanh/HybridNets,encoders/timm_mobilenetv3.py,2022-02-04T10:42:00Z,clean code
github.com/datvuthanh/HybridNets,encoders/timm_mobilenetv3.py,2022-02-03T20:32:46Z,Move folder
github.com/longyuewangdcu/Chinese-Llama-2,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-07-24T08:30:29Z,add transformer we used
github.com/longyuewangdcu/Chinese-Llama-2,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-07-24T08:30:29Z,add transformer we used
github.com/Anything-of-anything/Anything-3D,AnyObject3D/src/3DFuse/ldm/modules/midas/midas/vit.py,2023-06-09T10:09:44Z,[feats] release basic code for AnyObject3D
github.com/KU-CVLAB/3DFuse,ldm/modules/midas/midas/vit.py,2023-03-29T07:56:00Z,first commit
github.com/huggingface/api-inference-community,docker_images/timm/app/pipelines/image_classification.py,2023-02-10T10:27:28Z,"Update very old timm version, add support for current hub integration. (#192)

* Update very old timm version, add support for current hub integration, labels, etc.

* Errant print

* Blacked it

* isorted"
github.com/huggingface/api-inference-community,docker_images/timm/app/pipelines/image_classification.py,2022-03-16T10:53:41Z,MNT move api-inference-community to root of the repo
github.com/longyuewangdcu/Chinese-Llama-2,transformers/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-07-24T08:30:29Z,add transformer we used
github.com/kerrj/lerf,lerf/data/utils/dino_extractor.py,2023-06-15T07:16:43Z,small fixes
github.com/kerrj/lerf,lerf/data/utils/dino_extractor.py,2023-04-04T16:34:46Z,init commit
github.com/HelixNGC7293/DeforumStableDiffusionLocal,deforum-stable-diffusion/src/ldm/modules/midas/midas/vit.py,2023-01-13T00:16:51Z,Add support for v0.7
github.com/THUDM/SwissArmyTransformer,examples/deit/config/deit_tiny_config.py,2022-02-14T13:18:34Z,support DeiT
github.com/facebookresearch/ov-seg,open_clip_training/src/open_clip/timm_model.py,2023-05-28T21:50:35Z,init open_clip_training
github.com/THUDM/SwissArmyTransformer,examples/deit/config/deit_base_config.py,2022-02-14T13:18:34Z,support DeiT
github.com/longyuewangdcu/Chinese-Llama-2,transformers/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-07-24T08:30:29Z,add transformer we used
github.com/Zhendong-Wang/Diffusion-GAN,diffusion-projected-gan/pg_modules/projector.py,2022-07-05T15:32:24Z,Update README.md
github.com/Zhendong-Wang/Diffusion-GAN,diffusion-projected-gan/pg_modules/projector.py,2022-06-16T00:27:25Z,Initial Commit
github.com/27182812/ChatGLM-LLaMA-chinese-insturct,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-03-28T03:36:48Z,add llama
github.com/zhenxingjian/Partial_Distance_Correlation,Partial_Distance_Correlation/resnet.py,2022-07-12T04:41:42Z,To use pretrained model without training
github.com/abhishekkrthakur/tez,examples/image/flower_classification.py,2022-07-07T13:10:14Z,use device.type
github.com/abhishekkrthakur/tez,examples/image/flower_classification.py,2022-04-02T12:02:29Z,validate on batches
github.com/abhishekkrthakur/tez,examples/image/flower_classification.py,2022-03-24T15:23:19Z,ultramnist
github.com/THUDM/SwissArmyTransformer,examples/deit/config/deit_small_config.py,2022-02-14T13:18:34Z,support DeiT
github.com/27182812/ChatGLM-LLaMA-chinese-insturct,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-03-28T03:36:48Z,add llama
github.com/Adamdad/DeRy,mmcls_addon/models/backbones/timm_backbone.py,2023-04-15T12:21:35Z,TIMMBackbone
github.com/27182812/ChatGLM-LLaMA-chinese-insturct,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-03-28T03:36:48Z,add llama
github.com/longyuewangdcu/Chinese-Llama-2,transformers/src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-07-24T08:30:29Z,add transformer we used
github.com/sail-sg/BindDiffusion,ldm/modules/midas/midas/vit.py,2023-05-15T10:13:05Z,update
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-07-31T21:00:38Z,allow causal-lm-sanity as a task
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-07-29T00:50:22Z,add sanity check for last-token acc
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-02-09T00:29:30Z,Minor fixes
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-01-22T02:01:48Z,BERT WIP
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-01-21T22:55:02Z,GPT State
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-01-21T22:08:52Z,Improvements on GPT
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-01-21T20:31:54Z,Generalize to GPT
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-01-21T05:36:05Z,april into attacks
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-01-17T01:13:08Z,minor cleanup
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-01-14T16:42:58Z,Fix vocab
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-01-13T23:56:01Z,trafo variations
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-01-12T23:08:28Z,include gpt2-type models
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-01-12T18:24:45Z,minor fixes
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-01-12T14:29:02Z,COLA data
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-01-11T18:59:13Z,optimize pretraining choices
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-01-08T18:53:03Z,minor fixes
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-01-06T23:17:37Z,Fixed language interfaces
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-01-06T17:54:36Z,work with arbitrary embeddings
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-01-06T15:27:22Z,Simplify huggingface interface
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-01-04T14:51:58Z,linear text model for sanity checks
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-01-03T14:39:57Z,script loss functions
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2022-01-03T12:18:56Z,open up all of huggingface
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-12-23T01:18:35Z,text models
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-12-21T02:25:53Z,Rework notebooks for changed interface
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-12-20T22:59:25Z,Change query interface
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-12-09T18:49:09Z,update format
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-11-30T23:54:09Z,misc. fixes
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-11-27T00:29:32Z,Improved docs
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-11-08T19:02:28Z,Local update
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-11-08T18:46:39Z,Update reg
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-10-21T00:04:40Z,updated notebooks and fix for sparseImprint
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-10-04T17:10:21Z,fix repo
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-10-03T18:47:33Z,Ugh... jupyter notebooks
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-10-03T18:34:41Z,adding bunch of stuff I shoulda added before...
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-09-30T00:42:27Z,WIP pathing
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-09-27T22:45:55Z,pathnet merge?
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-09-27T17:25:50Z,misc.
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-09-24T19:56:59Z,adding pathnets (needs debugging)
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-09-23T17:48:58Z,smaller test convnet
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-09-20T23:37:25Z,Layer ratio matching
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-09-16T22:22:30Z,Merge remote-tracking branch 'origin/liam' into main
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-09-16T20:28:58Z,Implement a semi-functional R-GAP
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-09-15T06:40:20Z,adding imprint attack
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-09-10T20:42:00Z,Implement a variety of use cases
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-09-10T00:23:35Z,misc fixes
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-09-08T21:03:08Z,More moco and semi-supervised models
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-09-07T14:47:58Z,A bunch of CIFAR models
github.com/JonasGeiping/breaching,breaching/cases/models/model_preparation.py,2021-09-05T23:34:54Z,"First draft for optimization-based attack and user, server, attacker set"
github.com/apple/axlearn,axlearn/vision/mobilenets_test.py,2023-08-02T15:02:09Z,"add EfficientNetV2 implementation (#14)

* add EfficientNetV2 implementation

* downscale RCNN and RetinaNet tests to use ResNet-18

* revert changes to RCNN and RetinaNet tests

* mark EfficientNet forward pass reference tests as high_cpu and add TODO to revisit

* set V1 as default EfficientNet version"
github.com/apple/axlearn,axlearn/vision/mobilenets_test.py,2023-07-17T17:18:56Z,Add licenses.
github.com/apple/axlearn,axlearn/vision/mobilenets_test.py,2023-07-17T17:15:46Z,Initial commit.
github.com/Ainimal/Aini_Modules,wama_modules/thirdparty_lib/SMP_qubvel/encoders/timm_universal.py,2022-11-07T09:24:32Z,add
github.com/cg-py/GeoCode,geocode/geocode_model_resnet.py,2024-01-21T20:13:50Z,Comparison to Huang et al.
github.com/27182812/ChatGLM-LLaMA-chinese-insturct,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-03-28T03:36:48Z,add llama
github.com/27182812/ChatGLM-LLaMA-chinese-insturct,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-03-28T03:36:48Z,add llama
github.com/zhenxingjian/Partial_Distance_Correlation,Partial_Distance_Correlation/densenet.py,2022-07-12T04:41:42Z,To use pretrained model without training
github.com/microsoft/Cream,TinyViT/tests/test_models.py,2023-03-12T02:38:49Z,"[TinyViT] Align with timm (#155)

* [TinyViT] align with timm

* bug fixed

* [TinyViT] unit-test for models"
github.com/lartpang/ZoomNet,methods/zoomnet/zoomnet.py,2022-03-04T13:48:05Z,Add the model and configuration file for SOD.
github.com/lartpang/ZoomNet,methods/zoomnet/zoomnet.py,2022-03-04T03:39:04Z,Initialize the repository.
github.com/linghu8812/tensorrt_inference,project/Swin-Transformer/inference.py,2022-07-23T07:04:13Z,reorgnize inference codes
github.com/Ainimal/Aini_Modules,wama_modules/thirdparty_lib/SMP_qubvel/encoders/timm_mobilenetv3.py,2022-11-07T09:24:32Z,add
github.com/27182812/ChatGLM-LLaMA-chinese-insturct,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-03-28T03:36:48Z,add llama
github.com/zhvng/open-musiclm,open_musiclm/laion_clap/clap_module/timm_model.py,2023-03-08T07:42:51Z,add laion clap
github.com/zhenxingjian/Partial_Distance_Correlation,Partial_Distance_Correlation/ViT_model.py,2022-07-12T04:41:42Z,To use pretrained model without training
github.com/drinkingcoder/FlowFormer-Official,core/FlowFormer/encoders.py,2022-07-26T06:12:06Z,model&code
github.com/610265158/Peppa_Pig_Face_Landmark,TRAIN/face_landmark/lib/core/model/face_model.py,2022-12-27T04:38:10Z,reconstructed codes
github.com/linghu8812/tensorrt_inference,project/Swin-Transformer/export_onnx.py,2022-07-23T07:04:13Z,reorgnize inference codes
github.com/27182812/ChatGLM-LLaMA-chinese-insturct,src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-03-28T03:36:48Z,add llama
github.com/painebenjamin/app.enfugue.ai,src/python/enfugue/diffusion/support/upscale/ccsr/ldm/modules/midas/midas/vit.py,2024-01-27T07:29:15Z,"add ccsr, fix hotshot motion attn"
github.com/Boese0601/MagicDance,model_lib/ControlNet/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/vit.py,2024-02-16T00:57:28Z,train/test
github.com/610265158/Peppa_Pig_Face_Landmark,TRAIN/face_landmark/lib/core/base_trainer/model.py,2023-05-04T11:03:06Z,fix typo
github.com/610265158/Peppa_Pig_Face_Landmark,TRAIN/face_landmark/lib/core/base_trainer/model.py,2023-05-04T07:00:03Z,fix bug
github.com/610265158/Peppa_Pig_Face_Landmark,TRAIN/face_landmark/lib/core/base_trainer/model.py,2023-05-04T02:23:32Z,fix
github.com/610265158/Peppa_Pig_Face_Landmark,TRAIN/face_landmark/lib/core/base_trainer/model.py,2023-05-03T05:55:45Z,fix merge confilict
github.com/610265158/Peppa_Pig_Face_Landmark,TRAIN/face_landmark/lib/core/base_trainer/model.py,2023-05-03T05:50:54Z, fix merge
github.com/610265158/Peppa_Pig_Face_Landmark,TRAIN/face_landmark/lib/core/base_trainer/model.py,2023-05-03T05:16:51Z, baseline 0.4037
github.com/610265158/Peppa_Pig_Face_Landmark,TRAIN/face_landmark/lib/core/base_trainer/model.py,2023-04-29T14:26:16Z,4.06 nme on WFLW model
github.com/610265158/Peppa_Pig_Face_Landmark,TRAIN/face_landmark/lib/core/base_trainer/model.py,2023-04-27T11:51:01Z,fix - loss
github.com/610265158/Peppa_Pig_Face_Landmark,TRAIN/face_landmark/lib/core/base_trainer/model.py,2023-04-27T11:43:38Z,fix
github.com/610265158/Peppa_Pig_Face_Landmark,TRAIN/face_landmark/lib/core/base_trainer/model.py,2023-04-27T11:27:14Z,fix model bug
github.com/610265158/Peppa_Pig_Face_Landmark,TRAIN/face_landmark/lib/core/base_trainer/model.py,2023-04-27T09:04:35Z, hm
github.com/610265158/Peppa_Pig_Face_Landmark,TRAIN/face_landmark/lib/core/base_trainer/model.py,2023-01-12T11:30:39Z,fix model
github.com/610265158/Peppa_Pig_Face_Landmark,TRAIN/face_landmark/lib/core/base_trainer/model.py,2023-01-11T13:40:07Z,fix hm loss bug
github.com/610265158/Peppa_Pig_Face_Landmark,TRAIN/face_landmark/lib/core/base_trainer/model.py,2023-01-10T01:01:13Z,release 1.0
github.com/610265158/Peppa_Pig_Face_Landmark,TRAIN/face_landmark/lib/core/base_trainer/model.py,2023-01-05T09:58:52Z,update model
github.com/610265158/Peppa_Pig_Face_Landmark,TRAIN/face_landmark/lib/core/base_trainer/model.py,2023-01-03T01:05:24Z,add distall
github.com/610265158/Peppa_Pig_Face_Landmark,TRAIN/face_landmark/lib/core/base_trainer/model.py,2022-12-30T14:02:04Z,fix dateiter
github.com/610265158/Peppa_Pig_Face_Landmark,TRAIN/face_landmark/lib/core/base_trainer/model.py,2022-12-27T04:38:10Z,reconstructed codes
github.com/Boese0601/MagicDance,model_lib/ControlNet/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/beit.py,2024-02-16T00:57:28Z,train/test
github.com/Boese0601/MagicDance,model_lib/ControlNet/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin.py,2024-02-16T00:57:28Z,train/test
github.com/shansongliu/M2UGen,Evaluation/Models/CoDi/core/models/encoders/clap_modules/open_clip/timm_model.py,2023-12-19T12:17:36Z,Add CoDi Evaluation
github.com/FudanVI/FudanOCR,text-focused-Transformers/mmseg/models/backbones/timm_backbone.py,2023-09-03T02:56:57Z,upload code
github.com/Boese0601/MagicDance,model_lib/ControlNet/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/levit.py,2024-02-16T00:57:28Z,train/test
github.com/Boese0601/MagicDance,model_lib/ControlNet/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin2.py,2024-02-16T00:57:28Z,train/test
github.com/vlmaps/vlmaps,vlmaps/lseg/modules/models/lseg_vit.py,2023-11-02T22:50:27Z,major refactor
github.com/Boese0601/MagicDance,model_lib/ControlNet/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/next_vit.py,2024-02-16T00:57:28Z,train/test
github.com/Baiyuetribe/ncnn-models,image_classification/cait/models/convert.py,2022-05-25T16:34:27Z,add cait 🤔
github.com/jiayev/GPT4V-Image-Captioner,moondream/vision_encoder.py,2024-02-08T07:12:42Z,Fix api bugs
github.com/jiayev/GPT4V-Image-Captioner,moondream/vision_encoder.py,2024-02-06T09:07:57Z,Update moondream model
github.com/notmahi/dobb-e,imitation-in-homes/models/encoders/timm_encoders.py,2023-11-28T02:44:28Z,Public release
github.com/openvinotoolkit/nncf,tests/torch/experimental/replace_custom_modules/test_replace_timm_custom_modules.py,2024-01-26T06:17:26Z,"Happy new copyright year!🎉🎉🎉 (#2429)

### Changes

Copyright year is incremented

### Reason for changes

2024 year has come to us

### Tests

There were enough tests in 2023"
github.com/openvinotoolkit/nncf,tests/torch/experimental/replace_custom_modules/test_replace_timm_custom_modules.py,2023-06-07T06:10:44Z,"[Style] Enable pylint for each python file in repo (#1799)

### Changes

* Added missed requirements to Makefile
* Files for pylint now are searching by rules: if file is in a directory
with name==backend or file name started with backend - it's checked by
backend pytlint
Common files are all `.py` files that weren't chosen by any known
backend

---------

Co-authored-by: Alexander Dokuchaev <alexander.dokuchaev@intel.com>"
github.com/openvinotoolkit/nncf,tests/torch/experimental/replace_custom_modules/test_replace_timm_custom_modules.py,2023-06-01T08:49:40Z,"Update versions of packages in requirements for post_training tests (#1850)

### Changes

- Update `timm` to 0.9.2
- Set `torch` to `1.13.1`
- Add tests for `replace_timm_custom_modules_with_torch_native`


### Related tickets

111127

TODO: 
- [x] Update metrics (build 50)

| model_name | new 'FP32 top 1' | old  'FP32 top 1' |
|---|---|---|
| darknet53 | 0.79858 | 0.7645 |
| dla34 | 0.74416 | 0.68424 |
| dpn68 | 0.75964 | 0.71478 |
| efficientnet_b0 | 0.77292 | 0.72912 |
| efficientnet_lite0 | 0.7496 | 0.69878 |
| hrnet_w18 | 0.77504 | 0.70656 |
| inception_resnet_v2 | 0.80102 | 0.78894 |
| mobilenetv2_050 | 0.64568 | 0.59498 |
| mobilenetv3_small_050 | 0.56338 | 0.51764 |
| regnetx_002 | 0.67826 | 0.63078 |
| resnest14d | 0.74862 | 0.70102 |
| resnet18 | 0.70104 | 0.62734 |
| tf_inception_v3 | 0.77728 | 0.75948 |
| vgg11 | 0.68344 | 0.61246 |
| wide_resnet50_2 | 0.81414 | 0.7664 |
| xception | 0.78506 | 0.77522 |"
github.com/XiandaGuo/OpenStereo,openstereo/modeling/models/igev/extractor.py,2023-09-04T14:59:21Z,fix igev
github.com/XiandaGuo/OpenStereo,openstereo/modeling/models/igev/extractor.py,2023-07-24T02:57:57Z,igev
github.com/facebookresearch/VLPart,vlpart/modeling/meta_arch/parser_net_mixer.py,2023-05-19T00:10:27Z,init commit
github.com/notmahi/dobb-e,imitation-in-homes/models/encoders/torch_encoders.py,2023-11-28T02:44:28Z,Public release
github.com/AnyLoc/AnyLoc,MixVPR/models/backbones/efficientnet.py,2023-08-02T17:09:32Z,Created first (public) release
github.com/NVIDIA-AI-IOT/nanosam,nanosam/models/timm_image_encoder.py,2023-09-07T00:14:37Z,add license
github.com/NVIDIA-AI-IOT/nanosam,nanosam/models/timm_image_encoder.py,2023-09-06T20:16:04Z,add efficient net
github.com/NVIDIA-AI-IOT/nanosam,nanosam/models/timm_image_encoder.py,2023-09-06T18:13:58Z,add model registry
github.com/apple/axlearn,axlearn/vision/image_classification_test.py,2023-10-05T22:49:56Z,"Add content hinting for summary logging (#98)

* Add content hinting for summary logging

* update"
github.com/apple/axlearn,axlearn/vision/image_classification_test.py,2023-08-02T15:02:09Z,"add EfficientNetV2 implementation (#14)

* add EfficientNetV2 implementation

* downscale RCNN and RetinaNet tests to use ResNet-18

* revert changes to RCNN and RetinaNet tests

* mark EfficientNet forward pass reference tests as high_cpu and add TODO to revisit

* set V1 as default EfficientNet version"
github.com/apple/axlearn,axlearn/vision/image_classification_test.py,2023-07-17T17:18:56Z,Add licenses.
github.com/apple/axlearn,axlearn/vision/image_classification_test.py,2023-07-17T17:15:46Z,Initial commit.
github.com/zhenxingjian/Partial_Distance_Correlation,Partial_Distance_Correlation/ViT_model_train.py,2022-07-12T04:57:11Z,Train the model with removing resnet from ViT
github.com/autonomousvision/stylegan-xl,feature_networks/pretrained_builder.py,2022-03-31T19:11:36Z,Update pretrained_builder.py
github.com/autonomousvision/stylegan-xl,feature_networks/pretrained_builder.py,2022-03-31T18:29:57Z,Update pretrained_builder.py
github.com/autonomousvision/stylegan-xl,feature_networks/pretrained_builder.py,2022-03-31T17:19:35Z,release
github.com/Baiyuetribe/ncnn-models,image_classification/res2net/models/convert.py,2022-05-26T12:01:53Z,add res2net
github.com/SHI-Labs/Prompt-Free-Diffusion,lib/model_zoo/controlnet_annotator/midas/midas/vit.py,2023-05-25T07:51:33Z,first commit
github.com/notmahi/dobb-e,imitation-in-homes/models/encoders/baseline_enc/utils.py,2023-11-28T02:44:28Z,Public release
github.com/kyegomez/swarms,tests/models/test_timm_model.py,2024-02-21T01:01:28Z,[CLEANUP OPERATION]
github.com/kyegomez/swarms,tests/models/test_timm_model.py,2024-01-30T01:48:06Z,[BUFG]
github.com/kyegomez/swarms,tests/models/test_timm_model.py,2023-11-29T19:48:52Z,[CODE QUALITY]
github.com/kyegomez/swarms,tests/models/test_timm_model.py,2023-11-24T15:21:16Z,renamed tests to allow for pytest autodiscovery
github.com/NVlabs/EmerNeRF,third_party/feature_extractor.py,2023-11-06T03:07:10Z,init commit
github.com/27182812/ChatGLM-LLaMA-chinese-insturct,src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-03-28T03:36:48Z,add llama
github.com/Baiyuetribe/ncnn-models,image_classification/res2next50/models/convert.py,2022-05-26T12:17:47Z,add res2next50
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2024-02-22T14:47:51Z,"Fix compatibility for latest transformers release (#570)

* fix compatibility for latest transformers release

* update setup

* update setup

* fix test input size

* fix prepare generation for llama models"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2024-02-15T16:02:17Z,"Enable OpenVINO export of loaded model (#557)

* Enable OpenVINO export of loaded model

* fix import

* add tests

* install optimum from source

* format

* add test

* fix test

* fix format

* update example script

* improve comment

* fix

* add test for LCMs

* format

* add back test

* fix

* add librany name to load model

* fix openvino export for model with input names  mismatch

* fix format

* fix sentence transformers export

* add test for sentence transformers
* fix export

* check tests"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2024-01-26T13:37:38Z,"Fix OVCasualLM model inference without generate (#532)

* fix OVCasualLM model inference without generate

* add test case"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2024-01-23T10:29:00Z,"Enable automatic CACHE_DIR for GPU inference only (#520)

* Enable automatic CACHE_DIR for GPU inference only

* Use parent_model._device in OVEncoder and OVDecoder"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2024-01-23T10:27:09Z,"Add test for _print_compiled_model_properties (#528)

* Add test for _print_compiled_model_properties

* Reset OPENVINO_LOG_LEVEL only if it was set"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2024-01-16T14:23:41Z,Fix loading Timm models with ov_config (#517)
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2024-01-16T13:00:02Z,"Add OPenVINO stateful model support (#493)

* Allow loading of stateful models (no patching yet)

* Stateful models support

* Fix forward for chatglm

* Passing stateful as a dedicated parameter

* Fixed possibly misaligned types in ShapeOf Concat sub-expression

* Fixed critical typo in infer_request invocation

* Apply bettertransfomer when model is converted in stateful mode

* Correct default value handling for stateful flag

* Apply bettertransformer under try-except to avoid crashes when model is not supported

* Added --stateful option in optimum-cli

* Raise if too old version of opevino is used ans stateful=True

* Fix openvino version check to be compatible with openvino-nightly

* Fix for bloom family

* Allow loading of stateful models (no patching yet)

* Stateful models support

* Fix forward for chatglm

* Passing stateful as a dedicated parameter

* Fixed possibly misaligned types in ShapeOf Concat sub-expression

* Fixed critical typo in infer_request invocation

* Apply bettertransfomer when model is converted in stateful mode

* Correct default value handling for stateful flag

* Apply bettertransformer under try-except to avoid crashes when model is not supported

* Added --stateful option in optimum-cli

* Raise if too old version of opevino is used ans stateful=True

* Fix openvino version check to be compatible with openvino-nightly

* Fix for bloom family

* Fix general code style and appliy renaming suggestions

* fix version checking if openvino not in site-packages

* use reset_stateif available

* remove input patch in bettertransformer apply

* add tests

* add type hints and update doc strings

* added more tests

* Fixed outdated signature of InferRequest wrapper to fix one of the quantizer tests.

* Switch to stateful model by default

* Allow loading of stateful models (no patching yet)

* Stateful models support

* Fix forward for chatglm

* Passing stateful as a dedicated parameter

* Fixed possibly misaligned types in ShapeOf Concat sub-expression

* Apply bettertransfomer when model is converted in stateful mode

* Correct default value handling for stateful flag

* Apply bettertransformer under try-except to avoid crashes when model is not supported

* Added --stateful option in optimum-cli

* Raise if too old version of opevino is used ans stateful=True

* Fix openvino version check to be compatible with openvino-nightly

* Fix for bloom family

* Fix general code style and appliy renaming suggestions

* fix version checking if openvino not in site-packages

* use reset_stateif available

* remove input patch in bettertransformer apply

* add tests

* add type hints and update doc strings

* added more tests

* Fixed outdated signature of InferRequest wrapper to fix one of the quantizer tests.

* Stateful models support

* Fix forward for chatglm

* Passing stateful as a dedicated parameter

* Apply bettertransfomer when model is converted in stateful mode

* Raise if too old version of opevino is used ans stateful=True

* Fix openvino version check to be compatible with openvino-nightly

* Fix for bloom family

* fix test and add beam_idx attribute

* apply review comments

* stateful by default fixes

* less agressive stateful

* ensure that task support stateful

* remove debug print

* Apply suggestions from code review

Co-authored-by: Sergey Lyalin <sergey.lyalin@intel.com>

* Apply suggestions from code review

Co-authored-by: Helena Kloosterman <helena.kloosterman@intel.com>

* update requirements and warning messages

* Apply suggestions from code review

Co-authored-by: Ella Charlaix <80481427+echarlaix@users.noreply.github.com>

* fix cli export

* Update optimum/exporters/openvino/__main__.py

Co-authored-by: Ella Charlaix <80481427+echarlaix@users.noreply.github.com>

---------

Co-authored-by: Sergey Lyalin <sergey.lyalin@intel.com>
Co-authored-by: Helena Kloosterman <helena.kloosterman@intel.com>
Co-authored-by: Ella Charlaix <80481427+echarlaix@users.noreply.github.com>"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2024-01-10T10:30:21Z,"Add f32 precision for compare-with-transformers tests (#508)

* f32 precision for compare-with-transformers tests

Allow these tests to pass locally on devices where inference is run by default in FP16 (GPU) or BF16 (latest Xeon).

* Add F32_CONFIG constant for modeling tests

* Replace get_version with is_openvino_version"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2024-01-08T13:04:45Z,Disable marian test until openvino next release (#504)
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-12-14T13:54:19Z,"Add support whisper for openvino (#470)

* add support whisper for openvino

* add test

* fix tests

* restrict transformers version for now...

* allow to run on GPU

* apply review comments

* fix compatibility with transformers 4.36

* fix generate

* apply comments

* fix pix2struct"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-11-06T22:31:46Z,"Fix compatibility for optimum v1.14.0 (#460)

* Enable openvino inference for gpt big code models

* fix

* format

* fix input names

* Fix export optimum modifications"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-10-31T16:57:43Z,"Do not automatically cache models in temp dirs (#462)

* Do not automatically cache models in temp dirs

* Fix for Python 3.8

Path.is_relative_to() was added in Python 3.9

* Disable speedup test for CausalLM with pkv

Speedup is small on the Github Actions runner hardware so this test regularly
fails even with a speedup threshold of only 1.1

* Copy ov_config for seq2seq models"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-10-23T20:40:16Z,"Enable openvino inference for GPTBigCode (#459)

* Enable openvino inference for gpt big code models

* format

* fix input names"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-10-20T16:03:24Z,allow optionally fill attention mask in forward (#457)
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-10-13T10:13:52Z,"support export and inference pix2struct model with openvino (#450)

* [OV] support pix2struct model

* add tests

* Apply suggestions from code review

* Apply suggestions from code review

Co-authored-by: Ella Charlaix <80481427+echarlaix@users.noreply.github.com>

* add missed imports and disabling quantization

---------

Co-authored-by: Ella Charlaix <80481427+echarlaix@users.noreply.github.com>"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-10-04T11:53:10Z,"Add fp16 and int8 to OpenVINO models and export CLI (#443)

* Add int8 and fp16 to OV export CLI

* format

* add tests

* update description

* fix

* format

* add int8 compression to ovmodel

* format

* add test"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-09-28T11:51:22Z,"Fix openvino decoder model without cache (#438)

* Fix openvino decoder model without cache

* format

* add test for use_cache=False

* format

* modify model for tests"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-09-25T09:03:47Z,"Fix for AUTO:device; add device to compile info msg (#434)

Also remove _SUPPORTED_DEVICES since they are not used"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-09-21T13:40:12Z,fix OVModelForCausalLM for auto device (#433)
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-09-19T10:22:15Z,"OV migrate model export on pytorch frontend (#397)

* switch on pytorch frontend

* fixes for seq2seq

* wip

* cleanup

* fix style

* revert changes not related to pr

* clear ts registry:

* remove ov dev from deps

* update tests

* return serialize back

* switch on pytorch frontend

* fixes for seq2seq

* wip

* cleanup

* fix style

* revert changes not related to pr

* clear ts registry:

* remove ov dev from deps

* return serialize back

* Added weights compression

* Changed NNCF version to develop

* resolve dictionary as input

* fix llama export in quantization flow

* rebase with fixes

* update prerelease package

* fix onnx name issues

* experiments with tests

* better workaround for nncf patch torch ops and apply review comments

* remove flag from_onnx

* refactoring

* docstrings and typehints

* small fixes

* add docstring to main_export

* fix timm models

* fix circular imports

* update ov version

* revert excluding deberta

* update nncf on package

---------

Co-authored-by: Alexander <kozzzloff@list.ru>"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-09-08T10:14:48Z,"add MPT support (#425)

* add MPT support

* remove deprecated class after optimum v1.13

* set version optimum

* patch model during export

* update optimum latest compatible version"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-09-05T14:10:05Z,Add OpenVINO llama test (#419)
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-08-24T15:17:38Z,"Fix timm ov model (#413)

* Fix ov timm model loading

* increase tolerance"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-08-23T14:50:58Z,"Timm Models integration to Optimum-intel (#404)

* Relevant file changes

* Added test for timm

* Fixed Style

* Added style changes

* Reduces abstractions

* Fixed styles

* Added Feature & text for Timm model saving

* Added Timm to dependency

* Added Image Processor source reference

* Fixed Divergence in modeling_diffusion.py

* Fixed divergence in modeling_diffusion.py

* Adde Timm example  to docs

* Fixed style"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-08-02T16:10:29Z,"Add more audio tasks for OpenVINO inference (#396)

* Add more audio tasks for OpenVINO inference

* Fix style

* Add reference docs for new audio tasks

* Add reference link to top of OpenVINO inference docs

* Allow import from optimum.intel directly

* Add relative link to reference docs

* Add more imports to optimum.intel

* Use optimum.intel imports in test"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-08-02T14:53:03Z,Tiny test updates (#398)
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-07-25T12:18:16Z,"Add stable diffusion XL OpenVINO export and inference (#377)

* Add stable diffusion XL OpenVINO export and inference

* fix invisible-watermark version

* add num_images_per_prompt

* add utils_tests

* Add default value for architecture parameters when missing

* fix style

* fix config saving step

* add documentation"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-06-15T15:37:19Z,Add openvino tests  (#353)
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-06-15T01:15:46Z,"Fix inference for causal lm models (#351)

* fix inference

* add tests

* raise error when architecture not validated

* fix style"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-06-09T16:59:28Z,"Fix OV model for BLOOM architecture (#340)

* Fix OpenVINO model BLOOM

* Fix llama architecture

* fix style"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-06-09T15:41:02Z,"small improvements in diffusion pipeline for openvino (#342)

* small improvements in diffusion pipeline

* fix typo, add test, add workaround for torch 2.0.1 onnx export

* fix type detection and formatting

* use is_torch_version from utils"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-05-05T07:41:19Z,"Set height and width by default for static models (#308)

* Set height and width by defaulf for static models

* fix warning"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-04-20T12:07:11Z,"Enable TorchScript export, loading and inference for causal lm models (#283)

* add original example

* add jit model for generation

* enable generation

* add requirements and README

* enable caching

* move modeling to ipex subpackage

* fix import

* rename model class

* Update code and move modeling.py to utils folder. (#290)

* Update code and move modeling.py to utils folder.

* move modeling.py to generation folder

* Fixed typo

* Update code for support instance of fx model to TracedModelForCausalLM

* Update code

* Fixed typo

* Update readme

* Add generation for bloom models (#295)

* add bloom generation

* Fix generation

* refactorization

* set back input ids to prepare_inputs

* Add tests

* fix dates

* remove unecessary list comprehension

* remove unecessary list comprehension

* rename class

* fix dependencies

* fix dependency

---------

Co-authored-by: Cheng, Penghui <penghui.cheng@intel.com>"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-04-18T10:22:26Z,"openvino causal langage model refactorization (#287)

* openvino causal langage model refactorization

* log ignore warning message when unused parameters given during reshaping operation"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-04-17T09:46:13Z,"Add `.to()` to OVBaseModel (#284)

* Add `.to()` to OVBaseModel

Fixes `.to()` not working for OVModelForCausalLM

* Moved .to() to OVBaseDecoderModel

* Update optimum/intel/openvino/modeling_decoder.py

Co-authored-by: Ella Charlaix <80481427+echarlaix@users.noreply.github.com>

---------

Co-authored-by: Ella Charlaix <80481427+echarlaix@users.noreply.github.com>"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-04-13T10:12:34Z,fix test (#282)
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-04-13T07:49:28Z,"Raise error when loading model with incorrect use_cache value (#277)

* add test

* raise error when loading model with incorrect  value

* fix style

* fix

* Update optimum/intel/openvino/modeling_decoder.py

Co-authored-by: Helena Kloosterman <helena.kloosterman@intel.com>

---------

Co-authored-by: Helena Kloosterman <helena.kloosterman@intel.com>"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-04-12T13:24:13Z,"Enable past key values (#274)

* Add possibility to leverage past_key_values for decoder models

* remove legacy logits output

* add use_cache false to test

* fix onnx export

* fix style

* fix past_key_values shape

* add tests

* add docstrings

* fix style

* fix documentation

* Fix openvino inference for bloom architecture

* reshape past key values to match requirements of bloom architecture"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-04-06T08:05:37Z,Update formatting (#271)
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-03-22T14:30:29Z,"Disable scheduler, tokenizer, feature extractor loading when provided (#245)

* Disable scheduler, tokenizer, feature extractor loading when given

* add test

* fix style

* fix documentation

* reduce generated number of images"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-03-17T18:16:04Z,"Fix openvino fp16 conversion for seq2seq models (#238)

* Fix openvino fp16 conversion for seq2seq models

* fix style"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-03-14T13:33:34Z,"Add VAE encoder openvino export (#224)

* Add VAE encoder export

* add test"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-03-02T17:16:34Z,Update documentation (#211)
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-03-02T14:06:34Z,"Add stable diffusion OpenVINO pipeline (#195)

* Add stable diffusion OpenVINO pipeline

* Fix style

* Add tests

* add diffusers import utils

* add test

* fix style

* Enable model caching

* Fix optimum version requirements"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-02-24T15:22:28Z,Enable numpy arrays for openvino model inputs (#201)
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-02-24T14:08:52Z,Add audio classification pipeline test for openvino models (#202)
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-02-08T09:18:34Z,"Fix past key values usage (#187)

* fix past key values usage

* Update optimum/intel/openvino/modeling_seq2seq.py

Co-authored-by: Ella Charlaix <80481427+echarlaix@users.noreply.github.com>

---------

Co-authored-by: Ella Charlaix <80481427+echarlaix@users.noreply.github.com>"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-02-07T11:09:18Z,"Standardize OpenVINO inference and quantization with INC and ORT  (#185)

* Enable to set lowercase string device

* Rename task attribute to match INC and ONNX Runtime quantization

* Fix style

* Set feature attribute for documentation until next release

* Add example

* Fix documentation

* Temporarily add onnxruntime dependancy required by optimum exporters"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-01-30T09:51:15Z,"Add openvino runtime support for audio classification (#166)

* Add audio classification openvino runtime support

* Increase tolerance

* Fix example

* Modify model

* Fix documentation code snippet"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-01-03T17:12:10Z,"Fix  OpenVINO export of large models (#153)

* Fix export of large models

* Add openvino model loading and saving test

* Replace documentation example with t5 architecture"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2023-01-03T13:23:32Z,"Adapt OVModel for optimum v1.6 (#135)

* Adapt for optimum recent changes

* Adapt for recent changes

* Use original onnx export

* Add diffusers extra

* Add test

* test for documentation

* set use_cache to False if external files

* Add warning

* Rename class name

* Refactorization

* Add optimum exporters export for seq2seq models

* Set use_cache to False by default

* Update openvino required version

* Adapt onnx export of seq2seq models

* Fix onnx export

* Fix pkv output names for decoder with past

* Add optimum export

* Fix style"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2022-12-15T15:23:31Z,Remove deprecated datasets load_metric (#134)
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2022-11-21T13:37:03Z,"Add OVModel options for model compilation (#108)

* Add model compilation when instantiating an OVModel

* Add parameter to disable compilation when instantiating an OVModel

* Add compile method

* Add compilation documentation example

* Decrease INC acurracy tolerance"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2022-11-04T08:37:55Z,Modify OVModel device attribute (#94)
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2022-10-19T17:13:03Z,"Add OVModelForCausalLM (#76)

* Add OVModelForCausalLM

* Update optimum/intel/openvino/modeling.py

Co-authored-by: Ella Charlaix <80481427+echarlaix@users.noreply.github.com>

* Update example sentence for GPT2 model

Co-authored-by: Ella Charlaix <80481427+echarlaix@users.noreply.github.com>"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2022-09-23T14:46:50Z,Add option to use cache fo seq2seq models (#49)
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2022-09-20T15:25:58Z,Add fp16 support (#45)
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2022-09-16T12:18:10Z,"Add OVModel static shapes (#41)

* Add OVModel static shapes

* Add devices

* Add docstrings

* Add warning

* Change variable name for clarity

* Remove devices verification

* Create inference request during first inference

* Add image width and height parameters for model reshaping

* Enable model caching"
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2022-09-09T13:04:48Z,Add OpenVINO inference test (#38)
github.com/huggingface/optimum-intel,tests/openvino/test_modeling.py,2022-09-09T11:27:54Z,"Add OpenVINO inference (#21)

* Add OVModel for OpenVINO Runtime inference

* Add openvino package in setup

* Add test

* Change name workflow

* Add documentation

* Add openvino inference for image classification models

* Add openvino inference for feature extraction models

* Fix typo

* Add Seq2seq inference

* Add openvino inference for models with masked language modeling head

* Remove gpu support

* Add OpenVINO documentation

* Add docstrings

* Fix style

* Modify default ov file names

* Add verification input names

* Fix style

* Minor change

* Update docstrings

* Add import"
github.com/lartpang/ZoomNet,methods/classic_methods/MINet.py,2022-03-04T03:39:04Z,Initialize the repository.
github.com/Baiyuetribe/ncnn-models,image_classification/mobilenet_v3/models/convert.py,2022-05-26T11:46:36Z,add mobilenet_v3
github.com/Baiyuetribe/ncnn-models,image_classification/efficientnet/models/convert.py,2022-05-25T16:10:55Z,add efficientnet_b0
github.com/johnmarktaylor91/torchlens,tests/test_validation_and_visuals.py,2023-10-12T19:43:31Z,Fixed edge case of models where the buffer gets rewritten during the forward pass.
github.com/johnmarktaylor91/torchlens,tests/test_validation_and_visuals.py,2023-10-06T17:32:30Z,"Added some additional models to test suite (LSTM, RNN, stable diffusion)"
github.com/johnmarktaylor91/torchlens,tests/test_validation_and_visuals.py,2023-10-03T20:43:10Z,Small fix with scalar parameters.
github.com/johnmarktaylor91/torchlens,tests/test_validation_and_visuals.py,2023-09-09T21:35:42Z,Fixed a bug with decorating some of the PyTorch functions.
github.com/johnmarktaylor91/torchlens,tests/test_validation_and_visuals.py,2023-09-04T13:25:56Z,Fixed a bug with supplying a function to apply to saved activations.
github.com/johnmarktaylor91/torchlens,tests/test_validation_and_visuals.py,2023-09-03T19:41:48Z,Removed long test
github.com/johnmarktaylor91/torchlens,tests/test_validation_and_visuals.py,2023-09-03T19:17:28Z,Applied black code formatting.
github.com/johnmarktaylor91/torchlens,tests/test_validation_and_visuals.py,2023-09-03T18:20:29Z,Cleaned up the repo.
github.com/johnmarktaylor91/torchlens,tests/test_validation_and_visuals.py,2023-09-02T14:41:02Z,"Cleaned up tests, added floating point tolerance when checking for equality (since there's sometimes imprecision)."
github.com/johnmarktaylor91/torchlens,tests/test_validation_and_visuals.py,2023-09-01T12:27:55Z,Fixed visualization of hidden buffer layers.
github.com/johnmarktaylor91/torchlens,tests/test_validation_and_visuals.py,2023-09-01T11:23:31Z,Fixed more validation logic and some tests.
github.com/johnmarktaylor91/torchlens,tests/test_validation_and_visuals.py,2023-08-31T23:44:29Z,Fixed more validation logic and some tests.
github.com/johnmarktaylor91/torchlens,tests/test_validation_and_visuals.py,2023-08-31T22:28:21Z,Fixed some of the validation logic.
github.com/johnmarktaylor91/torchlens,tests/test_validation_and_visuals.py,2023-08-31T16:57:03Z,Fixed validation of the getitem function--now each relevant version of the tensor is saved.
github.com/johnmarktaylor91/torchlens,tests/test_validation_and_visuals.py,2023-08-31T12:14:00Z,Added some tests.
github.com/johnmarktaylor91/torchlens,tests/test_validation_and_visuals.py,2023-08-30T22:19:39Z,Fixed bug with modules that return list of tensors.
github.com/johnmarktaylor91/torchlens,tests/test_validation_and_visuals.py,2023-08-18T17:32:00Z,Added a few more tests.
github.com/johnmarktaylor91/torchlens,tests/test_validation_and_visuals.py,2023-08-17T01:11:24Z,Added tests for Torchvision main models. Next do the rest of the torchvision models.
github.com/johnmarktaylor91/torchlens,tests/test_validation_and_visuals.py,2023-08-16T22:39:16Z,Passed all tests except known edge cases.
github.com/johnmarktaylor91/torchlens,tests/test_validation_and_visuals.py,2023-08-16T15:10:03Z,Finished implementing all the current custom model tests.
github.com/johnmarktaylor91/torchlens,tests/test_validation_and_visuals.py,2023-08-14T00:34:08Z,Fixed some of the visuals for the rolled graph.
github.com/lartpang/ZoomNet,methods/classic_methods/HDFNet.py,2022-03-04T03:39:04Z,Initialize the repository.
github.com/TencentARC/AnimeSR,scripts/metrics/MANIQA/models/model_attentionIQA2.py,2023-01-05T09:24:18Z,integrate MANIQA into this repo
github.com/rehg-lab/RAVE,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/vit.py,2023-12-08T02:09:31Z,Initial commit
github.com/rehg-lab/RAVE,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/beit.py,2023-12-08T02:09:31Z,Initial commit
github.com/rehg-lab/RAVE,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin.py,2023-12-08T02:09:31Z,Initial commit
github.com/rehg-lab/RAVE,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/levit.py,2023-12-08T02:09:31Z,Initial commit
github.com/rehg-lab/RAVE,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin2.py,2023-12-08T02:09:31Z,Initial commit
github.com/rehg-lab/RAVE,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/next_vit.py,2023-12-08T02:09:31Z,Initial commit
github.com/magic-research/Dataset_Quantization,pytorch_image_models/tests/test_utils.py,2023-08-19T08:56:16Z,init
github.com/magic-research/Dataset_Quantization,pytorch_image_models/tests/test_models.py,2023-08-19T08:56:16Z,init
github.com/wusize/CLIPSelf,src/open_clip/timm_model.py,2023-09-30T07:14:45Z,'init'
github.com/wusize/CLIPSelf,src/open_clip/eva_clip/timm_model.py,2023-09-30T07:14:45Z,'init'
github.com/hysts/pytorch_mpiigaze_demo,ptgaze/models/__init__.py,2021-07-23T19:17:47Z,Refactor
github.com/hysts/pytorch_mpiigaze_demo,ptgaze/models/__init__.py,2021-07-23T16:46:04Z,Update
github.com/hysts/pytorch_mpiigaze_demo,ptgaze/models/__init__.py,2021-07-23T16:40:41Z,Add ETH-XGaze
github.com/hysts/pytorch_mpiigaze_demo,ptgaze/models/__init__.py,2021-07-23T13:48:30Z,isort
github.com/hysts/pytorch_mpiigaze_demo,ptgaze/models/__init__.py,2020-03-20T13:28:52Z,Initial commit
github.com/PKU-YuanGroup/LanguageBind,open_clip/timm_model.py,2023-10-02T13:38:54Z,first commit
github.com/LeapLabTHU/Agent-Attention,downstream/segmentation/mmseg/models/backbones/timm_backbone.py,2023-12-12T02:11:36Z,init
github.com/ma-xu/Context-Cluster,cluster_visualize.py,2023-03-20T07:12:46Z,"update visualization codes, examples, and checkpoints"
github.com/ThereforeGames/txt2mask,repositories/clipseg/models/vitseg.py,2022-09-17T22:40:39Z,Initial release
github.com/TingtingLiao/TADA,lib/dpt.py,2023-10-18T16:20:07Z,release code
github.com/smly/kaggle-book-gokui,chapter3/train.py,2023-03-03T07:46:34Z,test dataにTTAがかかってなかったのを修正
github.com/smly/kaggle-book-gokui,chapter3/train.py,2023-01-31T02:00:31Z,使われてなかったimport削除
github.com/smly/kaggle-book-gokui,chapter3/train.py,2023-01-31T01:59:59Z,章と節が混ざってたのを修正
github.com/smly/kaggle-book-gokui,chapter3/train.py,2023-01-26T19:33:29Z,Initial import
github.com/smly/kaggle-book-gokui,chapter4/model.py,2023-01-26T19:33:29Z,Initial import
github.com/smly/kaggle-book-gokui,chapter4/02_baseline_benchmark.py,2023-01-26T19:33:29Z,Initial import
github.com/smly/kaggle-book-gokui,chapter4/01_baseline_off-the-shelf_gem.py,2023-01-26T19:33:29Z,Initial import
github.com/zhangzjn/EMO,down-stream-tasks/mmsegmentation/mmseg/models/backbones/timm_backbone.py,2023-04-04T06:45:34Z,update the source code for train and test
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-12-21T18:07:02Z,Documentation updates
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-12-19T22:33:45Z,"Expand group-level reduction support for arbitrary functions

- Reducing tile-level predictions into slide- and patient-level predictions can now be done using arbitrary callable functions, by passing a callable function (e.g. lambda) to the argument `reduce_method`. Additional supported functions now also include 'median', 'sum', 'min', and 'max'."
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-12-15T15:03:48Z,"Bug fixes

- Fix bug with GPU stain augmentation in PyTorch (ValueError: Stain augmentation (n) requires a stain normalizer, which was not provided)
- Fix ""AssertionError: Input tensor must be float"" for some PyTorch models deployed in Studio
- Fix edge case where there is 1 tile in a slide
- Fix bug in Studio in instances where there are no tiles in a slide (e.g. a JPEG image smaller than the tile size)"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-11-16T19:34:39Z,"Add experimental support for multi-GPU inference during feature extraction

- Use by setting `num_gpus` in `Project.generate_feature_bags()`
- Works in both pytorch and tensorflow"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-11-16T18:25:25Z,Tensorflow feature extractors now accept `device` argument
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-10-30T03:57:52Z,"Add strong supervision dev notes

- Various other fixes & updates to support strongly supervised training"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-10-30T00:04:34Z,"Doc updates: Tutorial 7 & 8

- Add Tutorial 7: Training with custom augmentations
- Add Tutorial 8: Multiple-instance learning
- Improve description of feature ""bags"" in MIL docs section
- Specify that nested ROIs are rendered as holes
- Include ROI labels information in slide processing section of docs
- Add ROI labeling in Studio docs"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-10-27T14:35:53Z,"Use tile-level labels in a PyTorch dataloader

- `Dataset.torch()` supports tile-level labels in the form of a pandas dataframe. The dataframe is expected to be indexed by `{slide}-{loc_x}-{loc_y}` and have a column named ""label"".
- Support training with tile-level labels, by directly instancing a `sf.model.Trainer` and providing a pandas DataFrame to the `labels` argument, in the same format listed above. Only support single outcomes (multiple categories, or single continuous outcome).
- Various bug fixes"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-10-10T21:04:20Z,Add experimental support for protobuf 4 (PyTorch only)
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-09-27T14:59:54Z,Merge branch 'master' into dev
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-09-14T15:46:04Z,Neptun logging fix [pytorch]
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-09-13T22:22:26Z,Update torch.py
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-09-13T13:08:41Z,"Fix unexpected keyword argument ""save_checkpoints"" [#309]"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-09-13T13:08:06Z,"Fix unexpected keyword argument ""save_checkpoints"" [#309]"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-07-21T17:59:07Z,"Add `SimCLR_Features` interface

- Add new `simclr` feature extractor that can be used with `sf.model.build_feature_extractor()`. This extends additional functionality to SimCLR feature generators.
- Add arbitrary input transform support for Tensorflow dataset pipelines with `Dataset.tensorflow(transform=...)`
- Remove SimCLR-specific logic from `sf.DatasetFeatures`, as SimCLR feature generators now inherit `BaseFeatureExtractor` and the same API can be used.

Fixes

Update SimCLR submodule git commit

Bug fix

Centralization of slide feature calculation [pytorch]

Add/improve slide feature extraction in Tensorflow & SimCLR"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-07-19T16:37:29Z,"Log feature extraction when exporting features for MIL

`Project.generate_feature_bags()` and `sf.DatasetFeatures.to_torch()` will now both log feature extraction keyword arguments to `bags_config.json` in the feature extraction target directory. This JSON file includes the keys 'extractor', 'normalizer', and 'num_features', each describing the feature extraction. The 'extractor' property is a dictionary with keys 'class' and 'kwargs', which can be used to rebuild the feature extractor."
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-06-06T14:42:33Z,Fix support for PyTorch < 1.12
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-05-25T16:31:04Z,Fix PyTorch mixed precision training
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-04-26T20:08:28Z,"Better CPU core detection in linux

- All functions which detect the number of CPU cores now use `sf.util.num_cpu()` instead of `os.cpu_count()`. This will first check available cores with `os.sched_getaffinity(0)`, which reflects available CPU cores with OS-level scheduling. If this fails (e.g. on Window and macOS systems), it will default to `os.cpu_count()`."
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-04-23T16:50:31Z,Disable autocast mixed precision on MacOS MPS devices
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-04-22T19:56:33Z,Improve PyTorch device compatibility
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-04-19T01:12:26Z,Optimize PyTorch training with channels-last memory format
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-04-18T22:40:38Z,"Fix 'input tensor too large' with PyTorch GPU normalizers

- Fix 'input tensor too large' error when using PyTorch GPU accelerated normalizers. Fix is applied by capping the batch size for normalization at 32."
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-04-18T21:51:46Z,Remove `device` argument for `sf.io.torch.interleave()`
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-04-13T23:32:00Z,Update docstrings
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-04-11T21:57:37Z,Fix `AttributeError: module 'slideflow.norm' has no attribute 'torch'` [#246]
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-04-09T06:04:09Z,"Update documentation (2.0), bug fixes

- In docs, change `slideflow_studio` link to `studio`
- Add missing studio.html docs
- Update docstrings for MIL submodule
- Show error popup if Studio extension fails to load."
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-04-05T00:49:18Z,Bug fixes
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-04-04T20:57:29Z,Studio optimizations for predictions & heatmaps
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-04-03T05:29:04Z,"Fixes; expand `Features` interface

- Add preliminary support for UQ-enabled PyTorch models with Features interface
- Support multi-outcome models in Features interface (logits from multiple outcomes are concatenated for heatmaps)
- Change default model load method to 'weights'
- Fix generating predictions from saved CPH models
- Improvements in Studio model predictions display
- Various fixes for PyTorch models in Studio"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-03-26T18:13:35Z,Bug fixes
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-03-26T15:10:17Z,Delay `pretrainedmodels` import
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-03-25T04:55:19Z,"Documentation updates: Saliency

- Add Saliency Maps section in the documentation
- Other minor documentation updates
- Rename `Dataset.get_tfrecord_by_location()` to `.read_tfrecord_by_location()`
- Rename `sf.io.get_tfrecord_by_location()` to `.read_tfrecord_by_location()`"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-03-24T06:21:51Z,"Raspberry Pi Compatibility Updates

- Fix sigint pickle error on RPi
- Fix PyTorch model loading without GPU
- Fix PyTorch normalizers running in Workbench
- Fix loading TFLite models in Workbench
- Further decrease memory utilization in `low_memory` mode in Workbench (disables multiprocessing during heatmap calculation, sets batch size to 4)"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-03-12T23:52:49Z,Enable stain augmentation for PyTorch
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-03-10T21:28:40Z,"Normalizer update

- Numpy Reinhard normalizers updated, to match RGB-LAB conversion with the Tensorflow/PyTorch backend versions, instead of using the default cv2 conversion. This reduces artifacts and provides greater insight into the normalization, and improves consistency between backends.
- Normalizer context does not use brightness standardization
- When setting a normalizer context, brightness standardization percentil calculation ignores  white masks.
- Add support for GPU acceleration for PyTorch Reinhard and Macenko normalizers. GPU normalization cannot be done within a PyTorch dataloader, so the normalizers have a new `.preprocess()` function that accepts a batch of images, normalizes, and standardizes. The workflow to normalize on GPU would then be:
  - Get a Dataloader with dataset.torch(standardize=False, normalize=False)
  - On an image batch, preprocess with normalizer.preprocess()
  - These steps are automatically performed for all functions in Slideflow that use dataloaders, if the stain normalizer device is 'gpu' (default for Reinhard)
  - Clear documentation will need to be provided for this new functionality"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-03-02T16:48:35Z,Fix bug where softmax was being applied to PyTorch linear models with `sf.model.Features`
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-03-02T07:29:50Z,Torch backend bug fix when training without validation
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-03-01T21:17:56Z,"Add support for GradCam saliency; bug fixes; small features

- Fix bugs when calculating saliency maps in PyTorch backend
- Add `backend` argument to `sf.norm.autoselect()`
- Add `.auroc_ci()` and `.auroc_pval()` methods to `sf.stats.metrics.ClassifierMetrics` for calculating confidence intervals and p-values (via DeLong's method)"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-02-24T18:31:23Z,Cleanup progress bars on KeyboardInterrupt
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-02-09T20:34:27Z,Add docstring to new feature extraction infrastructure.
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-02-09T19:52:19Z,"Add CTransPath feature extractor.

- New infrastructure for custom feature extractors, which inherit `sf.model.BaseFeatureExtractor`. Can be supplied to `sf.DatasetFeatures`
- CTransPath implemented as custom feature extractor, available from `sf.model.get_feature_extractor('ctranspath')"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-02-07T03:56:49Z,"Version 1.5.0-beta1 development update (#225)

Numerous updates to support cell segmentation, self-supervised learning, and deep ensembles."
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2023-01-25T15:53:43Z,"Manual cv and load custom objects (#218)

K-fold bug fix; load model with custom Tensorflow objects.

- Fix bug where manually specified k-fold assignments were not being properly read from an annotations file.
- Add ability to specify `custom_objects` to a Tensorflow `Trainer`, to allow for loading models with custom architectures and losses.

Co-authored-by: James <jamesmdolezal@gmail.com>"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-12-01T04:38:32Z,"cuCIM support (#205)

- Add support for cuCIM backend, which is now used by default.
- The current backend can be checked with `sf.slide_backend()`
- Reorganizes VIPS slide reading into `sf.slide.backends.vips`, and cuCIM into `sf.slide.backends.cucim`
- Fix futurewarning for Pandas (numeric_only)
- Slideflow header reports active slide backend
- Decreased memory utilization of using `from_wsi` during training by sharing memory pools
- Add `cucim` to setup.py
- Update tensorflow_probability version in setup.py
- Update README with cuCIM instructions"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-11-29T17:35:10Z,"Custom loss (#204)

Add custom loss support for both Tensorflow/Keras and PyTorch.

Co-authored-by: Luís Fernando <47440930+lfbsdev@users.noreply.github.com>"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-11-29T14:17:46Z,"Test suite fixes; add `requests` to dependencies

- Improvements in Tensorflow version checking for test suite (allows tensorflow 1.X installations without raising an error)
- Add `requests` package to requirements"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-10-28T03:28:38Z,Proper pretraining handling for `timm` models
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-10-27T22:46:33Z,"Support for training `timm` models

- Train a model from the PyTorch `timm` package by specifying a valid timm model with the prefix `'timm_'`"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-10-27T21:09:52Z,Fix pretrain argument for PyTorch backend
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-10-06T15:27:50Z,"Simplify pools for Heatmaps; improve documentation

- `Features` interface (which `Heatmap` uses) no longer has separate multiprocessing/multithreading pool logic, instead using the logic in the `WSI.build_generator()` function, by passing the arguments `num_processes` and `num_threads`.
- Improves Heatmap docstring to clarify role of `num_threads` and `num_processes` arguments."
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-10-05T13:20:24Z,Bug fix for heatmaps [PyTorch]
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-10-05T13:05:13Z,Fix PyTorch bug (unrecognized argument `load_method`)
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-09-09T22:38:36Z,"Support for pooling features / activations

- `sf.model.Features` now accepts an optional `pooling` argument for pooling layers with 3D activations. Options include `'max'`, `'avg'`, or manually specifying a pooling optional (Keras layer or Torch functional tensor op)
- Optional pooling argument supported by `DatasetFeatures` interface"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-09-05T21:00:07Z,"Bespoke QC filtering, manual pool to WSI prediction from `Features` interface

- Remove deprecated `sf.io.tensorflow.update_tfrecord_dir()` and `.update_tfrecord()` (use `.transform_tfrecord()` instead)
- More efficient running loss during Tensorflow evaluation to avoid overflow errors
- Clearer error message when ResourceExhausted error occurs in Tensorflow backend
- WSI prediction from `Features()` supports manually specifying a pool to use
- Early support for bespoke QC methods with `WSI._apply_qc()`"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-09-01T17:11:07Z,"Fixes for `Features` interface [PyTorch]

- PyTorch intermediate model layers can now be accessed with dot syntax in `sf.Features` (e.g. `'classifier.0'`)
- Fix for training Inception models in PyTorch backend (disables auxillary classifier and raises warning)
- Fix for `sf.Features` in PyTorch backend for some models when `include_top=False`
- `Project.generate_features_for_clam()` moves model to GPU when generating predictions in PyTorch backend
- New unit tests for models, which verifies that all architectures are built correctly (with and without `include_top`) and can successfully be loaded into `sf.Features`."
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-08-31T03:44:01Z,New option  for loading TF models
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-08-30T14:55:53Z,"Training with `from_wsi` in PyTorch backend

- Also includes typing updates
- Removed `Path` as a custom type (paths now use type `str`)"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-08-23T19:22:29Z,"Decreased memory requirements for Heatmaps

- Switches from default Pool to default ThreadPool"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-08-22T04:00:05Z,Workbench: better model params window
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-08-21T06:38:10Z,"Support for loading both TF and Torch models in Workbench

- New `sf.util.model_backend()` detects a model's backend (TF vs torch)
- Efficiency improvements"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-08-21T05:05:44Z,"PyTorch backend fixes

- Adds `device` argument to `sf.Heatmap`, for PyTorch backend
- Core bug fix: PyTorch heatmaps were not displayed correctly as the displayed logits were pre-softmax
- Workbench fixes for PyTorch backend"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-08-21T01:01:22Z,"Fixes & efficiency improvements

- Bug fixes for pytorch backend (Heatmap, test suite)
- More efficient tile processing during whole-slide predictions/heatmaps for PNG-trained models"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-08-18T19:25:13Z,"Asynchronous heatmap & performance improvements

- Heatmaps can now be generated asynchronously by setting `Heatmap(generate=False)` then manually calling `Heatmap.generate(asynchronous=True)`. The latter will return the grid (updated asynchronously with predictions) and the heatmap thread.
- Performance improvements for heatmap generation, with multiprocessing pools and vectorized normalizers."
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-08-18T14:51:54Z,Fix PyTorch models saving without `.zip` extension.
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-08-11T18:50:44Z,Error checks for mismatched img_format for evaluate() and train()
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-08-04T01:26:58Z,"Disable Tensorfloat-32 by default

- TF32 can be enabled with `allow_tf32` to any function which also accepts the argument `mixed_precision`"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-07-27T15:49:36Z,"Train from WSI without extracting tfrecords (WIP)

- Rename `sf.stats.eval_from_dataset` -> `.eval_dataset()`
- Rename `sf.stats.predict_from_dataset` -> `.predict_dataset()`
- The `sf.io.tensorflow.interleave()` function allows interleaving of WSI tensorflow datasets, without intermediate extraction to TFRecords. the first argument was renamed from `tfrecords` to `paths`. WSIs undergo background filtering with Otsu's thresholding only (no grayspace filtering). Dataset balancing/clipping not supported.
- Make `sf.model.tensorflow.eval_from_model()` public, as with `...torch.eval_from_model()`, and `.predict_from_model()` for both backends
- Overhaul of Tensorflow evaluate/predict metrics functions with removal of unused arguments (e.g. pred_args) and removal of redundant code.
- Tensorflow training no long instantiates multiple redundant validation datasets, and now instead only uses one validation dataset.
- Multiprocessing/pickling support for sf.WSI
- New argument `lazy_iter` to WSI/TMA build_generator, where tile extraction is processed to the Pool only in batches to prevent high memory usage when multiple slides are extracting tiles simultaneously.
- New `sf.WSI.tensorflow()` function which returns a Tensorflow Dataset from the WSI generator.
- New `Dataset.slide_manifest()` function estimates number of non-background tiles among slides in the dataset."
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-07-25T01:29:23Z,`rich` logs
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-07-24T23:54:29Z,Make some progress bars non-transient when logging_level=INFO
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-07-24T23:02:58Z,"Switch progress bars to `rich.progress`

- Remove `sf.util.ProgressBar`
- Remove Spinner from test utility"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-07-22T05:10:37Z,"Normalizer Overhaul 2 (Optimizations, Native implementations) (#178)

## Optimized Macenko stain normalizer
- Optimized numpy implementation is 3 times faster than previous
- New Tensorflow-native implementation of Macenko algorithm up to 300 times faster

## Removed SPAMS requirement
- The Vahadane normalizer has both a sci-kit learn (`vahadane_sklearn` and SPAMS `vahadane_spams`) implementation available. The Sklearn implementation is slightly faster. To reduce dependency requirements, the sklearn algorithm will be used by default if the method is set to `vahadane`. The SPAMS implementation can still be accessed via `vahadane_spams`.

## New stain normalizer presets
- Stain normalizers can be fit to hand-crafted presets available in `sf.norm.utils.fit_presets`. 
- Each normalizer defaults to using the `'v1'` preset, which is equivalent to having the normalizer fit to the tile stored at `sf.norm.norm_tile.jpg`.
- The `'v2'` preset are improved, hand-crafted presets which will become default in version 1.3.
- To set a normalizer to a preset, simply pass the preset name to either `normalizer_source` when accessed via a hyperparameter (or `sf.norm.autoselect()`). Alternatively, the normalizer can be manually fit to a preset by calling `StainNormalizer.fit('v2')`.

## New stain normalizer functions
- `StainNormalizer.set_fit()` sets the normalizer fit by keyword arguments (e.g. `target_stain_matrix=...`)
- `StainNormalizer.get_fit()` returns the normalizer fit as a dictionary
- Removed `StainNormalizer.batch_to_batch()` as this function was redundant with `.tf_to_tf()`

## Other
- Docstring updates throughout
- Significant expansion of documentation for Stain normalization with performance benchmarks"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-07-18T04:47:46Z,"Tile extraction & slide report updates (#177)

- SlideReports now include grayspace/whitespace fraction for each extracted image, in the DataFrame `SlideReport.locations`
- `include_loc` argument removed from `.extract_tiles()` functions, as location information is now always included in the returned dict
- Performance improvements in ROI calculations and slide verification
- Previously, `.extract_tiles()` returned an `ExtractionReport` summarizing what tiles were extracted. Thus report is saved as a PDF in the tile extraction directory. The returned report, however, only summarized tile extraction of the last dataset source. If multiple dataset sources had tiles extracted, on the last source was reflected in this report. Now, for simplicity, this function returns a Dict mapping slide paths to `SlideReport` for each slide, including slides from all dataset sources."
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-07-15T22:48:44Z,"Fix for normalizer fit not saving with PyTorch

- Fix for bug where normalizer fit was not being saved to a model's `params.json` file.
- Add `reinhard_fast` normalization to all functional training tests
- Improve normalization fit log message
- Add sf.model.torch.load() function for easier loading of PyTorch models"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-07-15T20:22:04Z,Bug fix for `Features()` in Pytorch backend
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-07-15T02:57:37Z,PyTorch 1.12 compatibility update
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-07-14T21:12:40Z,"Update Documentation (1.2.0) (#176)

- Update docs for 1.2.0, including saliency & GANs documentation
- Cleaner test output if CPLEX/bonmin not installed
- Update dependencies & dockerfiles"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-07-08T14:50:05Z,"Support calculating features from Imagnet models

- Features (layer activations) can now be generated from Imagenet-pretrained (rather than only Slideflow-trained) models, by passing a loaded Tensorflow/Keras or Torch model to `DatasetFeatures` (rather than the path to a saved model).
`Project.generate_features_for_clam()` now accepts the name of an architecture to the `model` argument, so features can be calculated from a pretrained (but not Slideflow-trained and saved) model. If providing a model architecture name rather than the path to a saved model, a Dataset must be explicitly passed to `dataset`. E.g.: `Project.generate_features_for_clam(model='xception', dataset=...)`
- Improved CLAM error function when there are insufficient tiles per slide (min_tiles=8)"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-07-04T19:35:27Z,"Metrics overhaul & bug fixes (#172)

**Metrics overhaul**
- Overhaul `stats.py` metrics functions to reduce redundancy when calculating metrics at tile-level or group-level.
- `save_predictions` can now be a string to specify save format (csv/feather/parquet). By default, will save in parquet format.
- `predict()` functions will now save tile, slide, and patient-level predictions.
- Remove `histogram` argument and functionality from evaluation.
- Move backend-specific model prediction functions from `stats.py` into `sf.model.tensorflow_utils` and `sf.model.torch_utils`
- Reorganize `stats.py` into a submodule

**Bug fixes**
- Fix bug where accuracy is always reported as 0 for single categorical models (tensorflow only) [SLID-59]
- Fix multiprocessing logging [SLID-23]
- Fix bug where test_preview would sometimes hang [SLID-62]

**Other changes**
- Improve error reporting for improperly formatted dataframes when attempting to calculate metrics
- Remove the `predict_on_axes` argument to `Project.generate_mosaic()`
- Suppress ""0 density"" warning when creating jointplot
- Speed up stats tests
- `Heatmap` typing updates and fixes
- Update docstrings and typing
- Update requirements to permit pyvips >= 2.2
- Update requirements to cap torch & tensorflow at max versions [SLID-58]
- Add L2 regularization for PyTorch backend [SLID-5]
- Version increase to 1.2.0-dev3"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-06-22T21:42:34Z,"Fix #165 (#168)

Fix bug where models were not being saved if early stopping was triggered."
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-06-17T04:40:44Z,"Overhaul metrics predictions (`sf.stats`) (#164)

The previous implementation of evaluation metrics calculations used a somewhat confusing series of numpy arrays, which impaired code readability and hampered performance when making predictions on datasets of millions of images.

This greatly simplifies metrics calculations by converting tile-level predictions into a pandas DataFrame, rather than using various numpy arrays for data storage. Comparisons, group-level reductions, and all calculations are now vectorized. This results in a 10-fold speed improvement with decreased memory footprint when calculating metrics on datasets tens of millions of images in size. It also makes it easier to implement alternative slide/patient-level reduction strategies.

A new argument `reduce_method` for `P.train()` and `P.evaluate()` is included to allow the user to customize how tile-level predictions are reduced to slide- and patient-level predictions. `reduce_method='average'` (default) will continue the currently default behavior of calculating slide/patient-level predictions by averaging tile-level predictions. `reduce_method='proportion'` offers the option of calculating slide/patient-level predictions by proportion of tiles predicted to be each category.

Additionally, this fixes several related changes:
- Add unit tests for metrics calculations
- Fix bug where logging level was fixed to WARNING after running unit tests
- Remove `sf.stats.permute_importance` function (and
related functions), and the `permutation_importance` importance
argument to `Project.evaluate()`
- Fix asserts in slide unit tests
- Increase version to 1.2.0-dev1"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-05-23T01:02:52Z,"Bug fix for validate_on_batch == 0 in pytorch backend

- Fixes training bug when validate_on_batch is set to 0 in the pytorch backend
- Updates gitignore
- Increases dev version to 1.1.4-dev1"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-05-05T13:37:49Z,Sorted imports
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-04-30T03:00:43Z,"Fixes metrics for linear outcomes

- Also fixes progress bar formatting during tile extraction
- Also condenses repeated if not `isinstance(x, list) ...` checks into `sf.util.as_list(...)`"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-04-27T05:28:42Z,"Type hints, function deprecation warnings

- Added type hints throughout
- Deprecates` Dataset.split_patients_list()`
- Added `Dataset.thumbnails()`, deprecated `Project.generate_thumbnails()`
- Deprecated `Dataset.training_validation_split()`, use `.train_val_split()`
- Added `auto_dataset` function decorator for Project functions; preparation for future removal of `filters` and `filter_blank` arguments in Project functions (instead, pass a filtered `Dataset` object)
- Deprecated `Project.generate_tfrecord_heatmap()`. Instead, do `Dataset.tfrecord_heatmap()`
- Refactored PyTorch training loop within `Trainer`. Functionality remains identical, with cleaner organization and reduced code redundancy.
- All tests passed"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-04-22T19:56:23Z,"Training logs image format (png/jpg); bug fixes

- New `Dataset.img_format` property which verifies all tfrecords have the same image format, returning the image format
- Datasets will raise `MismatchedImageFormatsError` if mismatched image formats are found in tfrecords
- Model training now saves `img_format` property in `params.json`
- Slide-level prediction (via heatmaps) now extracts tiles using the same image format (PNG or JPG) as the trained model
- Fixes bug where eval and predictions were being saved in models directory,
not eval directory
- Unified sf.io.detect_tfrecord_format() between backends; no longer imports torch/tensorflow
- The first argument of sf.io.detect_tfrecord_format() now returns a list of features, rather than a dictionary
- Fixed Documentation typo (on Troublshooting; set environmental variable to SF_LOGGING_LEVEL=10)"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-04-15T17:28:05Z,"UQ [PyTorch] & include_top [PyTorch]

- Added UQ support for PyTorch backend (Fixes #147)
- Added support for setting include_top with PyTorch backend"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-04-15T13:09:28Z,Bug fix
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-04-15T04:35:08Z,"Enabled manual early stopping

- Added new early_stop method `'manual'` with `manual_early_stop_epoch` and `manual_early_stop_batch` parameters"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-04-15T01:02:13Z,"Finished PEP8 refactor, bug fix

- FInished PEP8 refactoring
- Fixed bug where slide-level input features were not being used in Tensorflow backend
- All tests passed"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-04-14T02:55:43Z,"Additional formatting-only refactoring

- Generally PEP8 compliant, apart from line length (120 for tensorflow and torch specific submodules, 80 for all else)"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-04-13T17:47:27Z,"PEP8 (-lite) refactoring

- PEP8 refactoring (still WIP)
- Removed -g GPU selection option in run_project.py
- Removed GPU selection option in sf.Project
- Replaced outcome_label_headers -> outcome
- Refactored colors from sf.util -> sf.util.colors
- Removed Project.extract_tiles_from_tfrecords(). Instead, call Dataset.extract_tiles_from_tfrecords()
- `Project.generate_mosaic_from_annotations()` argument `activations_cache` -> `cache`
- sf.model.get_hp_from_batch_file() -> sf.model.read_hp_sweep()
- `P.train_clam()` argument `validation_slides` renamed `val_slides`
- New Dataset.harmonize_labels() for easier matching of categorical labels
- Refactored slide-level input
- sf.stats.predictions_to_dataframe -> pred_to_df
- removed Heatmap.display()
- removed fastim
- Dataset.labels(`assigned_labels=`) -> `assign=`
- Dataset.tfrecord_report() `normalizer` argument now requires `slideflow.norm.StainNormalizer` rather than a string
- Fixed incorrect StainNormalizer inheritance
- Dataset.training_validation_split -> train_val_split
- Documentation correction (project.add_dataset() -> add_source())
- Refactored test/__init__.py (PEP8)
- Refactored slide/__init__.py (PEP8)"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-04-10T00:46:57Z,"Refactored to remove broad ""except:"" statements"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-04-08T12:42:46Z,"Requirements update

- Updates requirements.txt, removed numpy<1.21 requirement
- Makes multi_gpu default False for PyTorch backend"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-04-08T04:19:45Z,"Condenses tensorflow logging into project_utils

- Includes pytorch heatmap bugfix"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-04-07T20:16:41Z,"UncertaintyInterface fixes

- Fixes mosaic & activations for UQ models
- Fixes heatmaps for UQ models
- New SlideMap function label_by_uncertainty()"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-04-07T00:28:11Z,"Bug fixes [tests passed]

- Fixes pytorch predict()
- Fixes pytorch features generation
- Fixes normalizer testing for Tensorflow backend
- TODO: Implement/fix UncertaintyInterface/Mosaic/Heatmaps for UQ models"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-04-06T19:22:23Z,"Fixes & warning

- Raises backend error if attempting to use UQ with PyTorch backend (under development)
- Warnings"
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-04-06T15:24:24Z,Fixed issues with most recent error refactoring
github.com/jamesdolezal/slideflow,slideflow/model/torch.py,2022-04-06T15:06:45Z,"Errors overhaul

- Errors now implemented in submodule slideflow.errors with proper inheritance"
github.com/jolibrain/joliGEN,models/modules/projected_d/projector.py,2024-01-10T13:24:47Z,chore: accomodating timm siglip vitb16 256
github.com/jolibrain/joliGEN,models/modules/projected_d/projector.py,2023-11-24T13:23:58Z,fix: not force reloading dinov2 models
github.com/jolibrain/joliGEN,models/modules/projected_d/projector.py,2023-11-13T14:09:01Z,feat(ml): SigLIP based projected discriminators
github.com/jolibrain/joliGEN,models/modules/projected_d/projector.py,2023-11-09T17:41:52Z,feat(ml): dinov2 discriminator with registers
github.com/jolibrain/joliGEN,models/modules/projected_d/projector.py,2023-10-25T05:35:38Z,feat(ml): DinoV2 feature-based projected discriminator
github.com/jolibrain/joliGEN,models/modules/projected_d/projector.py,2023-09-18T07:51:53Z,feat(ml): ViT-14L as projected discriminator
github.com/jolibrain/joliGEN,models/modules/projected_d/projector.py,2023-07-05T19:10:47Z,feat: depth model as projector
github.com/jolibrain/joliGEN,models/modules/projected_d/projector.py,2022-12-29T10:25:04Z,chore: builder for segformer to remove mmcv
github.com/jolibrain/joliGEN,models/modules/projected_d/projector.py,2022-11-08T08:56:24Z,"feat(ml): diffusion-based augmentation for D, 2206.02262"
github.com/jolibrain/joliGEN,models/modules/projected_d/projector.py,2022-06-08T14:16:42Z,feat: allow ViT custom resolution at D projector init
github.com/jolibrain/joliGEN,models/modules/projected_d/projector.py,2022-06-03T13:18:57Z,feat: multiple D support
github.com/jolibrain/joliGEN,models/modules/projected_d/projector.py,2022-05-06T14:18:14Z,feat: temporal discriminator
github.com/jolibrain/joliGEN,models/modules/projected_d/projector.py,2022-04-08T15:00:49Z,feat: auto download segformer weights
github.com/jolibrain/joliGEN,models/modules/projected_d/projector.py,2022-04-08T14:37:49Z,fix: segformer G and segformer feature extractor
github.com/jolibrain/joliGEN,models/modules/projected_d/projector.py,2022-04-07T14:28:11Z,fix: get_feats feature extractor for projected D
github.com/jolibrain/joliGEN,models/modules/projected_d/projector.py,2022-03-29T10:34:42Z,refactor: code formatting using black
github.com/jolibrain/joliGEN,models/modules/projected_d/projector.py,2022-03-25T09:56:22Z,feat: timm models as feature extractor for projected D
github.com/jolibrain/joliGEN,models/modules/projected_d/projector.py,2022-03-15T15:58:31Z,feat: load segformer torchscript weights
github.com/jolibrain/joliGEN,models/modules/projected_d/projector.py,2022-03-10T15:11:49Z,feat: pretrained segformer backbone (mit) as feature extractor for projected D
github.com/jolibrain/joliGEN,models/modules/projected_d/projector.py,2021-12-16T19:54:45Z,feat: projected discriminator
github.com/microsoft/SwinBERT,src/layers/bert/modeling_bert.py,2022-05-04T21:47:21Z,init release
github.com/huggingface/controlnet_aux,src/controlnet_aux/midas/midas/vit.py,2023-03-08T04:26:03Z,"[Feat] add midas, canny"
github.com/huggingface/controlnet_aux,src/controlnet_aux/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/vit.py,2023-04-16T04:59:51Z,Add ZoeDetector
github.com/huggingface/controlnet_aux,src/controlnet_aux/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/beit.py,2023-04-16T04:59:51Z,Add ZoeDetector
github.com/huggingface/controlnet_aux,src/controlnet_aux/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin.py,2023-04-16T04:59:51Z,Add ZoeDetector
github.com/huggingface/controlnet_aux,src/controlnet_aux/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/levit.py,2023-04-16T04:59:51Z,Add ZoeDetector
github.com/huggingface/controlnet_aux,src/controlnet_aux/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin2.py,2023-04-16T04:59:51Z,Add ZoeDetector
github.com/huggingface/controlnet_aux,src/controlnet_aux/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/next_vit.py,2023-04-16T04:59:51Z,Add ZoeDetector
github.com/Zeju1997/oft,oft-control/ldm/modules/midas/midas/vit.py,2023-06-21T15:21:33Z,update
github.com/lishiqianhugh/IPHYRE,agents/fusion_models.py,2023-11-30T09:58:22Z,Initial upload
github.com/NVIDIA/tao_pytorch_backend,nvidia_tao_pytorch/cv/odise/modeling/backbone/timm_backbone.py,2023-12-05T22:13:46Z,TAO 5.2 Release - PyTorch
github.com/real-stanford/universal_manipulation_interface,diffusion_policy/model/vision/timm_obs_encoder.py,2024-02-16T10:14:54Z,init
github.com/real-stanford/universal_manipulation_interface,diffusion_policy/model/vision/transformer_obs_encoder.py,2024-02-16T10:14:54Z,init
github.com/analysiscenter/batchflow,batchflow/models/torch/modules/loaders.py,2022-06-03T10:14:32Z,Add documentation and simplify modules
github.com/analysiscenter/batchflow,batchflow/models/torch/modules/loaders.py,2022-06-03T10:14:32Z,Updates
github.com/analysiscenter/batchflow,batchflow/models/torch/modules/loaders.py,2022-06-03T10:14:32Z,Refactor Torch model
github.com/zhu-xlab/PFST,rsiseg/models/backbones/timm_backbone.py,2023-10-20T14:32:52Z,first commit
github.com/mshukor/VLPCook,recipe1m/models/networks/image_networks/networks.py,2023-03-10T10:28:31Z,init
github.com/see--/kuzushiji-recognition,models.py,2019-10-15T07:19:47Z,First commit
github.com/chunhuizhang/bilibili_vlogs,pretrained/swin/demo.py,2022-06-19T01:20:25Z,daily update
github.com/chunhuizhang/bilibili_vlogs,pretrained/swin/demo.py,2022-06-04T00:54:13Z,0604
github.com/chunhuizhang/bilibili_vlogs,pretrained/swin/demo.py,2022-06-04T00:53:06Z,0604
github.com/chunhuizhang/bilibili_vlogs,pretrained/swin/demo.py,2022-06-04T00:48:54Z,0604
github.com/chunhuizhang/bilibili_vlogs,learn_torch/utils/hook.py,2022-06-23T15:11:56Z,pytorch hook
github.com/chunhuizhang/bilibili_vlogs,cv/pretrained/features.py,2022-06-23T15:11:56Z,pytorch hook
github.com/chunhuizhang/bilibili_vlogs,learn_torch/utils/vgg_hook.py,2022-07-24T12:25:48Z,wordpiece
github.com/shanice-l/gdrnpp_bop2022,core/utils/timm_utils.py,2022-10-15T08:44:08Z,code for release
github.com/MrYxJ/calculate-flops.pytorch,calflops/estimate.py,2023-09-03T10:22:32Z,update support for hf online calculate
github.com/MrYxJ/calculate-flops.pytorch,calflops/__pycache__/estimate.py,2023-09-05T10:04:48Z,update calculate_flops_hf
github.com/samuelyu2002/PACS,experiments/late_fusion/ast/src/models/ast_models.py,2022-03-22T02:48:45Z,updated readmes
github.com/sgoldt/dist_inc_comp,dist_inc_comp.py,2022-11-16T16:59:36Z,Preparing code for publication
github.com/sgoldt/dist_inc_comp,dist_inc_comp.py,2022-11-16T16:45:40Z,Preparing code for publication
github.com/sgoldt/dist_inc_comp,dist_inc_comp.py,2022-09-28T06:40:41Z,Added visual transformer
github.com/sgoldt/dist_inc_comp,dist_inc_comp.py,2022-09-27T16:47:35Z,"Checkpointing weights, DenseNet"
github.com/sgoldt/dist_inc_comp,dist_inc_comp.py,2022-09-07T16:58:57Z,"Added CIFAR100, coarse-grained data sets"
github.com/sgoldt/dist_inc_comp,dist_inc_comp.py,2022-09-06T14:21:41Z,"Initial commit, after cifar10 experiments with twolayer, convnet, resnet18"
github.com/thu-ml/controlvideo,annotator/midas/midas/vit.py,2023-06-09T17:50:24Z,controlvideo
github.com/sun-hailong/LAMDA-PILOT,backbone/vpt.py,2023-09-11T09:21:55Z,change code style
github.com/sun-hailong/LAMDA-PILOT,utils/inc_net.py,2024-01-19T05:28:22Z,Add RanPAC
github.com/sun-hailong/LAMDA-PILOT,utils/inc_net.py,2023-10-16T14:45:31Z,Fix DualPrompt backbone import
github.com/sun-hailong/LAMDA-PILOT,utils/inc_net.py,2023-09-11T09:21:55Z,change code style
github.com/sun-hailong/LAMDA-PILOT,utils/inc_net.py,2023-09-09T02:55:52Z,fix some bugs and add json files
github.com/sun-hailong/LAMDA-PILOT,utils/inc_net.py,2023-09-03T11:47:40Z,first commit
github.com/sun-hailong/LAMDA-PILOT,backbone/vision_transformer_adapter.py,2023-09-11T09:21:55Z,change code style
github.com/SakurajimaMaiii/TSD,code/network/img_network.py,2023-05-21T04:50:09Z,cvpr2023_first_commit
github.com/vaishwarya96/Hierarchy-image-retrieval,models/efficientnet.py,2023-06-06T09:00:30Z,Adding codes
github.com/facebookresearch/stable_signature,src/ldm/modules/midas/midas/vit.py,2023-10-06T16:46:45Z,Initial commit
github.com/BrainCog-X/Brain-Cog,examples/Perception_and_Learning/NeuEvo/main.py,2023-10-10T02:38:59Z,Renamed to NeuEvo
github.com/BrainCog-X/Brain-Cog,examples/Perception_and_Learning/img_cls/bp/main.py,2023-07-21T14:24:52Z,Update main.py
github.com/BrainCog-X/Brain-Cog,examples/Perception_and_Learning/img_cls/bp/main.py,2023-07-21T09:20:18Z,add shd example
github.com/BrainCog-X/Brain-Cog,examples/Perception_and_Learning/img_cls/bp/main.py,2023-05-25T12:59:05Z,add burstLIFNode
github.com/BrainCog-X/Brain-Cog,examples/Perception_and_Learning/img_cls/bp/main.py,2023-01-30T14:34:05Z,"Use the tonic master branch, to avoid the problem of broken dataset download links,

Fix the following issues:
DVS dataset download link failed to work.

and add the following features:
Support for the UCF101DVS dataset;
Support for HMDBDVS dataset;
Support for TETLoss;
Support for tensorboard;

Due to dependency changes of tonic, the following features have been removed:
Support for NCARS dataset."
github.com/BrainCog-X/Brain-Cog,examples/Perception_and_Learning/img_cls/bp/main.py,2022-11-03T03:40:50Z,support es-imagenet
github.com/BrainCog-X/Brain-Cog,examples/Perception_and_Learning/img_cls/bp/main.py,2022-08-29T08:19:28Z,add resbet19 && fix bugs in tdBN
github.com/BrainCog-X/Brain-Cog,examples/Perception_and_Learning/img_cls/bp/main.py,2022-08-29T07:00:15Z,"remove warm-up by ANN in training scripts
 && add VGG_SNN in model_zoo"
github.com/BrainCog-X/Brain-Cog,examples/Perception_and_Learning/img_cls/bp/main.py,2022-07-20T14:53:00Z,BrainCog -> braincog
github.com/BrainCog-X/Brain-Cog,examples/Perception_and_Learning/img_cls/bp/main.py,2022-07-17T06:44:19Z,main init
github.com/BrainCog-X/Brain-Cog,examples/Perception_and_Learning/img_cls/bp/main_simplified.py,2022-08-29T07:00:15Z,"remove warm-up by ANN in training scripts
 && add VGG_SNN in model_zoo"
github.com/BrainCog-X/Brain-Cog,examples/Perception_and_Learning/img_cls/bp/main_simplified.py,2022-07-27T12:43:08Z,add citation in readme file in glsnn
github.com/BrainCog-X/Brain-Cog,examples/Perception_and_Learning/img_cls/bp/main_simplified.py,2022-07-20T14:53:00Z,BrainCog -> braincog
github.com/BrainCog-X/Brain-Cog,examples/Perception_and_Learning/img_cls/bp/main_simplified.py,2022-07-17T06:44:19Z,main init
github.com/BrainCog-X/Brain-Cog,examples/Perception_and_Learning/img_cls/transfer_for_dvs/main.py,2023-04-19T07:38:15Z,update transfer_for_dvs
github.com/BrainCog-X/Brain-Cog,examples/Perception_and_Learning/img_cls/transfer_for_dvs/main_transfer.py,2023-04-19T07:38:15Z,update transfer_for_dvs
github.com/BrainCog-X/Brain-Cog,examples/Perception_and_Learning/img_cls/transfer_for_dvs/GradCAM_visualization.py,2023-04-19T07:38:15Z,update transfer_for_dvs
github.com/BrainCog-X/Brain-Cog,examples/Perception_and_Learning/img_cls/transfer_for_dvs/main_visual_losslandscape.py,2023-04-19T07:38:15Z,update transfer_for_dvs
github.com/Sygil-Dev/muse-maskgit-pytorch,muse_maskgit_pytorch/vqgan_vae.py,2023-07-12T21:42:54Z,"[pre-commit.ci] auto fixes from pre-commit.com hooks

for more information, see https://pre-commit.ci"
github.com/Sygil-Dev/muse-maskgit-pytorch,muse_maskgit_pytorch/vqgan_vae.py,2023-07-12T21:41:46Z,"Added support for both 3 and 4 channels images.
This change makes it possible to use both RGB and RGBA images effectively making the VAE and the Maskgit capable of generating transparency."
github.com/Sygil-Dev/muse-maskgit-pytorch,muse_maskgit_pytorch/vqgan_vae.py,2023-06-16T11:47:05Z,"Changed the pretrained ""pretrained=True"" to be ""weights=torchvision.models.VGG16_Weights.DEFAULT"" so it is compatible with latest version of torchvision and also so we always get the latest version of the weights."
github.com/Sygil-Dev/muse-maskgit-pytorch,muse_maskgit_pytorch/vqgan_vae.py,2023-06-12T12:40:16Z,run pre-commit on everything
github.com/Sygil-Dev/muse-maskgit-pytorch,muse_maskgit_pytorch/vqgan_vae.py,2023-06-11T14:06:02Z,Removed unused imports.
github.com/Sygil-Dev/muse-maskgit-pytorch,muse_maskgit_pytorch/vqgan_vae.py,2023-06-08T05:17:52Z,update to project dir and add option for ReLU loss
github.com/Sygil-Dev/muse-maskgit-pytorch,muse_maskgit_pytorch/vqgan_vae.py,2023-05-02T06:59:52Z,whitespace
github.com/Sygil-Dev/muse-maskgit-pytorch,muse_maskgit_pytorch/vqgan_vae.py,2023-05-02T04:26:28Z,vqgan_vae: more typechecking and cleanup
github.com/Sygil-Dev/muse-maskgit-pytorch,muse_maskgit_pytorch/vqgan_vae.py,2023-04-30T07:00:12Z,closer to running properly on TPU?
github.com/Sygil-Dev/muse-maskgit-pytorch,muse_maskgit_pytorch/vqgan_vae.py,2023-04-29T07:45:11Z,fix potential errors loading on different devices such as TPU's
github.com/Sygil-Dev/muse-maskgit-pytorch,muse_maskgit_pytorch/vqgan_vae.py,2023-03-19T15:25:53Z,Cleaned up some scripts and started making vaes
github.com/Sygil-Dev/muse-maskgit-pytorch,muse_maskgit_pytorch/vqgan_vae.py,2023-03-13T03:53:22Z,Reformatting
github.com/Sygil-Dev/muse-maskgit-pytorch,muse_maskgit_pytorch/vqgan_vae.py,2023-03-13T03:52:13Z,Fixing preprocessing error+adding temporary cifar vqvae
github.com/Sygil-Dev/muse-maskgit-pytorch,muse_maskgit_pytorch/vqgan_vae.py,2023-03-01T05:06:51Z,Supporting multiple validation+fixed bug of no validation
github.com/Sygil-Dev/muse-maskgit-pytorch,muse_maskgit_pytorch/vqgan_vae.py,2023-02-27T16:10:08Z,Added lr schedulers
github.com/Sygil-Dev/muse-maskgit-pytorch,muse_maskgit_pytorch/vqgan_vae.py,2023-01-09T18:51:02Z,lazily instantiate vgg for vqgan-vae
github.com/Sygil-Dev/muse-maskgit-pytorch,muse_maskgit_pytorch/vqgan_vae.py,2023-01-06T21:09:20Z,rename to muse-maskgit-pytorch as muse-pytorch already taken
github.com/ygtxr1997/ReliableSwap,modules/layers/simswap/pg_modules/projector.py,2023-07-02T05:01:38Z,add: code released!
github.com/ygtxr1997/ReliableSwap,modules/third_party/simswap/pg_modules/projector.py,2023-07-02T05:01:38Z,add: code released!
github.com/openfoodfacts/openfoodfacts-ai,logo-ann/benchmarks/embedding_models_benchmark/main.py,2022-12-02T15:14:13Z,doc: adding ANN benchmarks
github.com/Booooooooooo/CRI,run_ds_offset_centroids_stage_inversion.py,2023-02-10T06:03:33Z,code
github.com/Booooooooooo/CRI,run_color_offset_centroids_stage_inversion.py,2023-02-10T06:03:33Z,code
github.com/Booooooooooo/CRI,run_inpaint_offset_centroids_stage_inversion.py,2023-02-10T06:03:33Z,code
github.com/curt-tigges/query2label,q2l_labeller/models/timm_backbone.py,2022-07-01T21:53:41Z,Added linters and reorganized file structure
github.com/curt-tigges/query2label,q2l_labeller/models/timm_backbone.py,2022-06-23T16:12:35Z,Split notebooks into separate .py module files and added TIMM module for flexible backbone replacement
github.com/mzhaoshuai/RLCF,retrieval/lavis/models/clip_models/model.py,2024-01-17T13:39:35Z,first commit
github.com/mzhaoshuai/RLCF,retrieval/lavis/models/clip_models/timm_model.py,2024-01-17T13:39:35Z,first commit
github.com/VCIP-RGBD/DFormer,mmseg/models/backbones/timm_backbone.py,2023-09-11T07:57:38Z,upload_code
github.com/chenhanch/DFGC-2022-1st-place,network/models.py,2022-06-21T09:13:37Z,first commit
github.com/hturki/suds,scripts/extract_dino_features.py,2023-03-26T18:07:04Z,Initial release
github.com/deeptibhegde/CLIP-goes-3D,models/SLIP/models.py,2023-04-07T21:24:29Z,models
github.com/deeptibhegde/CLIP-goes-3D,models/SLIP/models.py,2023-03-21T03:58:08Z,Add files via upload
github.com/deeptibhegde/CLIP-goes-3D,models/SLIP/models.py,2023-03-21T03:33:12Z,Delete models/SLIP directory
github.com/deeptibhegde/CLIP-goes-3D,models/SLIP/models.py,2023-03-21T03:09:48Z,Add files via upload
github.com/deeptibhegde/CLIP-goes-3D,models/SLIP/main_linear.py,2023-03-21T03:58:08Z,Add files via upload
github.com/deeptibhegde/CLIP-goes-3D,models/SLIP/main_linear.py,2023-03-21T03:33:12Z,Delete models/SLIP directory
github.com/deeptibhegde/CLIP-goes-3D,models/SLIP/main_linear.py,2023-03-21T03:09:48Z,Add files via upload
github.com/deeptibhegde/CLIP-goes-3D,models/SLIP/pytorch-image-models/tests/test_utils.py,2023-04-07T20:45:34Z,models
github.com/deeptibhegde/CLIP-goes-3D,models/SLIP/pytorch-image-models/tests/test_models.py,2023-04-07T20:45:34Z,models
github.com/SamsungLabs/FineControlNet,annotator/midas/midas/vit.py,2024-02-06T22:29:40Z,initial commit
github.com/SamsungLabs/FineControlNet,ldm/modules/midas/midas/vit.py,2024-02-06T22:29:40Z,initial commit
github.com/SamsungLabs/FineControlNet,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/vit.py,2024-02-06T22:29:40Z,initial commit
github.com/SamsungLabs/FineControlNet,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/beit.py,2024-02-06T22:29:40Z,initial commit
github.com/SamsungLabs/FineControlNet,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin.py,2024-02-06T22:29:40Z,initial commit
github.com/SamsungLabs/FineControlNet,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/levit.py,2024-02-06T22:29:40Z,initial commit
github.com/SamsungLabs/FineControlNet,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin2.py,2024-02-06T22:29:40Z,initial commit
github.com/SamsungLabs/FineControlNet,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/next_vit.py,2024-02-06T22:29:40Z,initial commit
github.com/chaoyi-wu/Finetune_LLAMA,Python_Package/transformers-main/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-03-21T01:56:17Z,combine_with_newest_huggingface
github.com/chaoyi-wu/Finetune_LLAMA,Python_Package/transformers-main/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-03-21T01:56:17Z,combine_with_newest_huggingface
github.com/chaoyi-wu/Finetune_LLAMA,Python_Package/transformers-main/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-03-21T01:56:17Z,combine_with_newest_huggingface
github.com/chaoyi-wu/Finetune_LLAMA,Python_Package/transformers-main/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-03-21T01:56:17Z,combine_with_newest_huggingface
github.com/chaoyi-wu/Finetune_LLAMA,Python_Package/transformers-main/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-03-21T01:56:17Z,combine_with_newest_huggingface
github.com/chaoyi-wu/Finetune_LLAMA,Python_Package/transformers-main/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-03-21T01:56:17Z,combine_with_newest_huggingface
github.com/chaoyi-wu/Finetune_LLAMA,Python_Package/transformers-main/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-03-21T01:56:17Z,combine_with_newest_huggingface
github.com/chaoyi-wu/Finetune_LLAMA,Python_Package/transformers-main/src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-03-21T01:56:17Z,combine_with_newest_huggingface
github.com/xushilin1/RAP-SAM,ext/open_clip/timm_model.py,2024-01-09T13:40:59Z,first commit
github.com/staghado/vit.cpp,scripts/benchmark.py,2023-11-28T13:03:17Z,isort & black for scripts/benchmark.py
github.com/staghado/vit.cpp,scripts/benchmark.py,2023-11-27T23:01:48Z,Update readme & scripts to benchmark pytorch & vit
github.com/staghado/vit.cpp,convert-pth-to-ggml.py,2023-11-30T20:01:49Z,Correct typo introduced by black in GGML_MAGIC
github.com/staghado/vit.cpp,convert-pth-to-ggml.py,2023-11-27T19:04:37Z,"Add bench script, update README & improve convert"
github.com/staghado/vit.cpp,convert-pth-to-ggml.py,2023-11-24T13:45:48Z,Blackify and update file header
github.com/staghado/vit.cpp,convert-pth-to-ggml.py,2023-11-21T19:52:27Z,chnage file extension to .gguf for clarity
github.com/staghado/vit.cpp,convert-pth-to-ggml.py,2023-11-20T21:03:59Z,print all the available pretrained weights in timm
github.com/staghado/vit.cpp,convert-pth-to-ggml.py,2023-11-20T16:18:38Z,add option to display some available models names
github.com/staghado/vit.cpp,convert-pth-to-ggml.py,2023-11-20T14:24:42Z,rectify file comment
github.com/staghado/vit.cpp,convert-pth-to-ggml.py,2023-11-20T14:00:58Z,modify conversion script and add class labels
github.com/staghado/vit.cpp,convert-pth-to-ggml.py,2023-11-16T17:16:59Z,convert pos_embed and cls_token to f32
github.com/staghado/vit.cpp,convert-pth-to-ggml.py,2023-11-10T16:57:53Z,"remove intermediate_size, patch_size and img_size from .bin"
github.com/staghado/vit.cpp,convert-pth-to-ggml.py,2023-11-09T22:40:14Z,remove intermediate size from binary
github.com/staghado/vit.cpp,convert-pth-to-ggml.py,2023-11-04T21:14:01Z,add a conversion file to convert pytorch weights into ggml compatible file
github.com/staghado/vit.cpp,extensions/vitstr.cpp/convert-pth-to-ggml.py,2024-02-03T22:03:42Z,[VITSTR] Add extension of vit for text recognition
github.com/ML-GSAI/Revisiting-Dis-vs-Gen-Classifiers,main_extract_features.py,2023-02-05T04:57:52Z,Add files via upload
github.com/kgarg8/FullTextKP,transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-10-10T23:14:30Z,Add code
github.com/kgarg8/FullTextKP,transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-10-10T23:14:30Z,Add code
github.com/fudan-zvg/GSS,mmseg/models/backbones/timm_backbone.py,2023-03-19T05:34:58Z,[cjq clean] cleaen all code
github.com/JamesQFreeman/LoRA-ViT,lora.py,2023-11-15T06:32:15Z,add examples
github.com/JamesQFreeman/LoRA-ViT,lora.py,2023-03-30T02:48:02Z,update
github.com/JamesQFreeman/LoRA-ViT,lora.py,2023-03-28T08:15:34Z,only save lora
github.com/JamesQFreeman/LoRA-ViT,lora.py,2023-03-27T06:10:46Z,update 3D for MRNet
github.com/JamesQFreeman/LoRA-ViT,lora.py,2023-03-22T07:21:14Z,fix bugs
github.com/JamesQFreeman/LoRA-ViT,lora.py,2023-03-17T10:33:01Z,auto dim
github.com/JamesQFreeman/LoRA-ViT,lora.py,2023-03-15T17:11:34Z,Now we support timm
github.com/JamesQFreeman/LoRA-ViT,lora.py,2023-03-06T17:03:39Z,training performance comparison in jupyter
github.com/JamesQFreeman/LoRA-ViT,lora.py,2023-02-28T17:42:21Z,bug fixed
github.com/JamesQFreeman/LoRA-ViT,lora.py,2023-02-28T10:22:06Z,bug fixed and update the lora class to support multilayer lora
github.com/JamesQFreeman/LoRA-ViT,lora.py,2023-02-28T07:43:48Z,updated the save and load and readme
github.com/JamesQFreeman/LoRA-ViT,lora.py,2023-02-27T15:11:21Z,add save and load
github.com/JamesQFreeman/LoRA-ViT,lora.py,2023-02-23T14:12:03Z,add training
github.com/JamesQFreeman/LoRA-ViT,lora.py,2023-02-23T12:04:45Z,updated the readme
github.com/JamesQFreeman/LoRA-ViT,lora.py,2023-02-23T11:52:10Z,it can run now (with some random input)
github.com/JamesQFreeman/LoRA-ViT,lora.py,2023-02-23T10:56:01Z,lora embedded
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-04-06T09:15:08Z,add extract_backbone function
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-03-25T07:33:31Z,support mimic-cxr
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-03-24T18:49:11Z,fix bugs
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-03-24T18:13:02Z,support chexpert
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-03-17T12:16:06Z,correct choice of weight
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-03-17T12:10:29Z,enable adapter experiment on nih
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-03-17T11:36:57Z,add adapter in train.py
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-03-17T09:00:35Z,modify dead line
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-03-17T07:57:34Z,"Merge branch 'main' of github.com:zhaozh10/LoRA-ViT into main

Conflicts:
	train.py"
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-03-17T06:48:30Z,update weightInfo
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-03-16T15:36:13Z,load timm weight
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-03-13T07:39:01Z,correct resnet implementation
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-03-13T06:31:49Z,enable resnet implementation
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-03-10T05:54:50Z,update logging
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-03-08T16:34:47Z,update train/val/test
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-03-08T15:04:37Z,updatae slurm_train
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-03-08T13:38:47Z,update dataparallel
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-03-08T12:32:07Z,update NIH X-ray
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-03-03T06:53:22Z,fix bugs
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-03-02T11:56:20Z,fix bugs
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-03-02T11:09:00Z,fix bugs
github.com/JamesQFreeman/LoRA-ViT,train.py,2023-02-23T14:12:03Z,add training
github.com/JamesQFreeman/LoRA-ViT,adapter.py,2023-03-17T11:34:39Z,correct implementation example
github.com/JamesQFreeman/LoRA-ViT,adapter.py,2023-03-17T10:33:47Z,add adapter
github.com/JamesQFreeman/LoRA-ViT,train_3D.py,2023-03-27T06:10:46Z,update 3D for MRNet
github.com/JamesQFreeman/LoRA-ViT,train_timm.py,2023-04-19T05:50:42Z,control data num
github.com/JamesQFreeman/LoRA-ViT,train_timm.py,2023-03-28T08:15:34Z,only save lora
github.com/JamesQFreeman/LoRA-ViT,train_timm.py,2023-03-27T08:17:47Z,fix full & linear
github.com/JamesQFreeman/LoRA-ViT,train_timm.py,2023-03-22T07:21:14Z,fix bugs
github.com/JamesQFreeman/LoRA-ViT,train_timm.py,2023-03-18T07:15:14Z,add adapter
github.com/JamesQFreeman/LoRA-ViT,train_timm.py,2023-03-17T09:00:35Z,modify dead line
github.com/JamesQFreeman/LoRA-ViT,train_timm.py,2023-03-17T08:57:52Z,update ViT model list
github.com/JamesQFreeman/LoRA-ViT,train_timm.py,2023-03-16T12:55:16Z,timm-vit
github.com/carefree0910/carefree-learn,cflearn/api/cv/third_party/midas/core/vit.py,2023-11-13T12:15:41Z,✨Introduced back `third_party`
github.com/carefree0910/carefree-learn,cflearn/api/cv/third_party/midas/core/vit.py,2023-11-09T04:40:16Z,"💥♻️🗑️🚧Refactored the code base

Currently only (part of) the `sd` stuffs are kept."
github.com/carefree0910/carefree-learn,cflearn/api/cv/third_party/midas/core/vit.py,2023-02-27T13:46:24Z,🐛🚧Fixed some compatible issues
github.com/carefree0910/carefree-learn,cflearn/api/cv/third_party/midas/core/vit.py,2023-02-27T02:45:03Z,✨🚧Introduced `midas`
github.com/ntunlp/kmlm,k-mlm/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-10-10T10:27:28Z,init code
github.com/ntunlp/kmlm,k-mlm/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-10-10T10:27:28Z,init code
github.com/Sonata165/ControllableLyricTranslation,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-07-10T17:47:40Z,Initial commit
github.com/Sonata165/ControllableLyricTranslation,transformers/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-07-10T17:47:40Z,Initial commit
github.com/Sonata165/ControllableLyricTranslation,transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-07-10T17:47:40Z,Initial commit
github.com/Sonata165/ControllableLyricTranslation,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-07-10T17:47:40Z,Initial commit
github.com/Sonata165/ControllableLyricTranslation,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-07-10T17:47:40Z,Initial commit
github.com/Sonata165/ControllableLyricTranslation,transformers/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-07-10T17:47:40Z,Initial commit
github.com/compphoto/IntrinsicCompositing,intrinsic_compositing/albedo/model/MiDaS/midas/vit.py,2024-01-03T21:46:10Z,adding code for interface to run
github.com/morningmoni/CiteSum,transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-05-09T20:57:51Z,init
github.com/morningmoni/CiteSum,transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-05-09T20:57:51Z,init
github.com/lianqing11/MonoJSG,software/mmseg/mmseg/models/backbones/timm_backbone.py,2022-10-10T02:10:37Z,first init
github.com/TaoYang225/AD-DROP,ner/self_transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-09-25T05:52:47Z,upload code
github.com/TaoYang225/AD-DROP,ner/self_transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-09-25T05:52:47Z,upload code
github.com/TaoYang225/AD-DROP,translation/self_transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-09-25T05:52:47Z,upload code
github.com/TaoYang225/AD-DROP,translation/self_transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-09-25T05:52:47Z,upload code
github.com/Muzammal-Naseer/IPViT,utils.py,2021-08-06T11:23:05Z,update to suit new timm models
github.com/Muzammal-Naseer/IPViT,utils.py,2021-08-04T09:55:36Z,read regnety from timm
github.com/Muzammal-Naseer/IPViT,utils.py,2021-06-08T11:22:35Z,additional occlusion strategies
github.com/Muzammal-Naseer/IPViT,utils.py,2021-06-07T14:43:16Z,evaluation for occlusion / shuffle operations
github.com/Muzammal-Naseer/IPViT,utils.py,2021-05-30T12:35:56Z,updates for off-the-shelf classification experiments
github.com/Muzammal-Naseer/IPViT,utils.py,2021-05-30T11:25:05Z,updates for shape models: replicating table-4 and figure-7
github.com/vvictoryuki/FreeDoM,CN/annotator/midas/midas/vit.py,2023-08-16T16:09:59Z,add new codes
github.com/vvictoryuki/FreeDoM,CN/ldm/modules/midas/midas/vit.py,2023-08-16T16:09:59Z,add new codes
github.com/autonomousvision/plant,training/Perception/transfuser.py,2022-12-02T17:20:55Z,add Perception PlanT + minor fixes
github.com/YehLi/ImageNetModel,classification/main.py,2022-07-06T16:01:16Z,add classification
github.com/drinkingcoder/NeuralMarker,core/encoders.py,2022-10-19T04:05:11Z,update evaluation
github.com/drinkingcoder/NeuralMarker,core/encoders.py,2022-10-18T06:40:52Z,training code
github.com/alaamaalouf/FollowAnything,DINO/dino_feature_extractor.py,2023-08-01T14:07:08Z,DINO
github.com/jankrepl/mildlyoverfitted,github_adventures/dino/train.py,2021-06-25T11:31:45Z,Add dino
github.com/jankrepl/mildlyoverfitted,github_adventures/vision_transformer/verify.py,2021-03-05T17:45:54Z,Add Vision Transformer
github.com/amaralibey/MixVPR,models/backbones/swin.py,2023-02-07T22:25:43Z,First major update
github.com/amaralibey/MixVPR,models/backbones/efficientnet.py,2023-02-07T22:25:43Z,First major update
github.com/FMInference/H2O,h2o_flexgen/benchmark/third_party/transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-06-18T09:46:29Z,add h2o in flexgen
github.com/FMInference/H2O,h2o_flexgen/benchmark/third_party/transformers/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-06-18T09:46:29Z,add h2o in flexgen
github.com/FMInference/H2O,h2o_flexgen/benchmark/third_party/transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-06-18T09:46:29Z,add h2o in flexgen
github.com/FMInference/H2O,h2o_flexgen/benchmark/third_party/transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-06-18T09:46:29Z,add h2o in flexgen
github.com/FMInference/H2O,h2o_flexgen/benchmark/third_party/transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-06-18T09:46:29Z,add h2o in flexgen
github.com/FMInference/H2O,h2o_flexgen/benchmark/third_party/transformers/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-06-18T09:46:29Z,add h2o in flexgen
github.com/FMInference/H2O,h2o_flexgen/benchmark/third_party/transformers/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-06-18T09:46:29Z,add h2o in flexgen
github.com/HIT-SIRS/SMLFR,SemanticSegmentation/mmseg/models/backbones/timm_backbone.py,2023-09-27T07:25:06Z,add file
github.com/jianlong-yuan/UniNeXt,MMSegmentation/mmseg/models/backbones/timm_backbone.py,2023-03-15T12:09:12Z,init
github.com/bytedance/AvatarVerse,controlnet/ldm/modules/midas/midas/vit.py,2024-01-03T12:36:03Z,init commit
github.com/gangweiX/Fast-ACVNet,models/Fast_ACV.py,2022-12-03T12:34:19Z,Add files via upload
github.com/gangweiX/Fast-ACVNet,models/Fast_ACV_plus.py,2022-12-03T12:34:19Z,Add files via upload
github.com/gangweiX/Fast-ACVNet,models/Fast_ACV_plus.py,2022-12-03T12:33:27Z,Delete models directory
github.com/gangweiX/Fast-ACVNet,models/Fast_ACV_plus.py,2022-11-24T13:33:16Z,Add files via upload
github.com/ConceptBed/evaluations,src/models/erm.py,2023-05-31T05:13:47Z,initial codebase
github.com/ConceptBed/evaluations,src/models/erm_w_outliers.py,2023-05-31T05:13:47Z,initial codebase
github.com/ConceptBed/evaluations,src/models/imagenet_w_outliers.py,2023-05-31T05:13:47Z,initial codebase
github.com/pfnet-research/distilled-feature-fields,encoders/lseg_encoder/modules/models/lseg_vit.py,2022-10-29T02:37:26Z,update
github.com/pfnet-research/distilled-feature-fields,encoders/lseg_encoder/modules/models/lseg_vit_zs.py,2022-10-29T02:37:26Z,update
github.com/amd/RyzenAI-SW,example/onnx_quantizer/timm_resnet_ptq/prepare_model.py,2024-02-17T00:51:22Z,Release v1.1
github.com/wolverinn/stable-diffusion-multi-user,extensions/sd-webui-controlnet/annotator/midas/midas/vit.py,2023-09-04T15:19:23Z,update sd-webui version to torch2.0 and add extension support
github.com/wolverinn/stable-diffusion-multi-user,repositories/stable-diffusion-stability-ai/ldm/modules/midas/midas/vit.py,2023-04-18T00:42:21Z,add django code
github.com/wolverinn/stable-diffusion-multi-user,sd-docker-slim/extensions/sd-webui-controlnet/annotator/midas/midas/vit.py,2023-09-05T00:30:37Z,update readme
github.com/wolverinn/stable-diffusion-multi-user,sd-docker-slim/repositories/stable-diffusion-stability-ai/ldm/modules/midas/midas/vit.py,2023-07-13T00:56:31Z,add docker-slim
github.com/wolverinn/stable-diffusion-multi-user,extensions/sd-webui-controlnet/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/vit.py,2023-09-04T15:19:23Z,update sd-webui version to torch2.0 and add extension support
github.com/wolverinn/stable-diffusion-multi-user,extensions/sd-webui-controlnet/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/beit.py,2023-09-04T15:19:23Z,update sd-webui version to torch2.0 and add extension support
github.com/wolverinn/stable-diffusion-multi-user,extensions/sd-webui-controlnet/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin.py,2023-09-04T15:19:23Z,update sd-webui version to torch2.0 and add extension support
github.com/wolverinn/stable-diffusion-multi-user,extensions/sd-webui-controlnet/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/levit.py,2023-09-04T15:19:23Z,update sd-webui version to torch2.0 and add extension support
github.com/wolverinn/stable-diffusion-multi-user,extensions/sd-webui-controlnet/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin2.py,2023-09-04T15:19:23Z,update sd-webui version to torch2.0 and add extension support
github.com/wolverinn/stable-diffusion-multi-user,extensions/sd-webui-controlnet/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/next_vit.py,2023-09-04T15:19:23Z,update sd-webui version to torch2.0 and add extension support
github.com/wolverinn/stable-diffusion-multi-user,sd-docker-slim/extensions/sd-webui-controlnet/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/vit.py,2023-09-05T00:30:37Z,update readme
github.com/wolverinn/stable-diffusion-multi-user,sd-docker-slim/extensions/sd-webui-controlnet/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/beit.py,2023-09-05T00:30:37Z,update readme
github.com/wolverinn/stable-diffusion-multi-user,sd-docker-slim/extensions/sd-webui-controlnet/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin.py,2023-09-05T00:30:37Z,update readme
github.com/wolverinn/stable-diffusion-multi-user,sd-docker-slim/extensions/sd-webui-controlnet/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/levit.py,2023-09-05T00:30:37Z,update readme
github.com/wolverinn/stable-diffusion-multi-user,sd-docker-slim/extensions/sd-webui-controlnet/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin2.py,2023-09-05T00:30:37Z,update readme
github.com/wolverinn/stable-diffusion-multi-user,sd-docker-slim/extensions/sd-webui-controlnet/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/next_vit.py,2023-09-05T00:30:37Z,update readme
github.com/LLNL/lbann,ci_test/pytorch_tests/test_resnet.py,2023-08-04T22:32:35Z,"PyTorch Frontend (#2279)

* Add `lbann.evaluate` API

* Evaluate convenience API, input robustness

* Support multi-dimensional outputs in evaluate with cnpy

* PyTorch compiler and converter API

* Basic set of module and function replacements

* Add missing function replacements

* Documentation

* Add graph conversion/lowering functionality

* Add extra callbacks to lbann.evaluate

* API for weight conversion and support for Parameter attributes

* Add weight conversion procedures, basic tests

* Test LeNet-5 evaluation and training

* Fixes, warnings, and weight conversion procedures

* Add missing operators to Python frontend

* Add lowering test

* Add cosmoflow test, fix weight conversion for conv without bias

* Support batchnorm weight conversion

* Add ResNet test and random seeds

* Support training mode in evaluate

* Full batchnorm weight conversion

* Add option to disable Bessel's correction in batchnorm to match PyTorch

* Add functions

* Fix slice operation

* Add embedding weights, tanh as a module

* Add option to save protobin files

* prototext<->protobin converters

* Use protobin for cosmoflow test

* Fix test

* Fix batched fully connected layer conversion

* (do not) handle reshapes that modify the minibatch dimension

* Fix test determinism and check

* Update ci_test/pytorch_tests/test_lenet.py

* Update release notes

* Update to use fraction

---------

Co-authored-by: Brian Van Essen <vanessen1@llnl.gov>"
github.com/bit-ml/dolos,dolos/methods/grad_cam/model.py,2023-12-20T14:40:05Z,WIP Add code for Grad-CAM
github.com/wusongbai139/controlnet_TrainingPackage,ldm/modules/midas/midas/vit.py,2024-01-25T07:48:53Z,controlnet train
github.com/megvii-research/TPS-CVPR2023,torch_codebase/utils.py,2023-08-07T12:16:15Z,[fix] fix git repo detect
github.com/megvii-research/TPS-CVPR2023,torch_codebase/utils.py,2023-08-07T11:06:46Z,[feat] torch codebase
github.com/megvii-research/TPS-CVPR2023,torch_codebase/model.py,2023-08-07T11:06:46Z,[feat] torch codebase
github.com/FrancescoCappio/Contrastive_Open_World,models/vit_models.py,2022-02-23T14:29:14Z,First public commit
github.com/yiren-jian/BLIText,lavis/models/clip_models/model.py,2023-10-20T11:39:13Z,upload code
github.com/yiren-jian/BLIText,lavis/models/clip_models/timm_model.py,2023-10-20T11:39:13Z,upload code
github.com/adarobustness/adaptation_robustness,VL-T5/src/clip_prepro_feats.py,2023-06-11T12:20:55Z,init
github.com/adarobustness/adaptation_robustness,feature_extraction/coco_CLIP.py,2023-06-11T12:20:55Z,init
github.com/EarthNets/RSI-Classification,rsicls/models/backbones/timm_backbone.py,2022-08-02T14:55:13Z,initial submission
github.com/ashawkey/torch-merf,depth_tools/dpt.py,2023-04-03T02:59:24Z,"update performance, add dense depth tool"
github.com/comet-ml/comet-examples,integrations/workflow-orchestration/metaflow/metaflow-model-evaluation/metaflow-model-evaluation.py,2023-06-26T09:10:22Z,Fix metaflow evaluation example to be compatible with latest version of datasets (#145)
github.com/comet-ml/comet-examples,integrations/workflow-orchestration/metaflow/metaflow-model-evaluation/metaflow-model-evaluation.py,2022-10-28T09:24:52Z,"Metaflow quickfix (#91)

* fix models parameter in flow so that it accepts list from command line

* update notebook with models parameter fix

* Add validation of --models value to be more user-friendly

* Add metaflow script to the CI matrix

* Speed up metaflow model evaluation example

Co-authored-by: Boris Feld <lothiraldan@gmail.com>"
github.com/comet-ml/comet-examples,integrations/workflow-orchestration/metaflow/metaflow-model-evaluation/metaflow-model-evaluation.py,2022-10-27T10:22:11Z,"Metaflow Examples (#90)

* add metaflow example script

* update metaflow example requirements.txt

* add metaflow example notebook

* update README to follow template

* Fix pylint issue and move imports inside each step

* update model registry flow

* Fix notebook writing file

* save label metadata in notebook

* clean up

* update project link

* update model registration step

* add print when model registry updates

* Last changes and fixes for Metaflow examples

Co-authored-by: Boris Feld <lothiraldan@gmail.com>"
github.com/buaacyw/IT3D-text-to-3D,dpt.py,2023-08-22T14:09:16Z,IT3D v1
github.com/buaacyw/IT3D-text-to-3D,ctn/annotator/midas/midas/vit.py,2023-08-22T14:09:16Z,IT3D v1
github.com/buaacyw/IT3D-text-to-3D,ctn/ldm/modules/midas/midas/vit.py,2023-08-22T14:09:16Z,IT3D v1
github.com/buaacyw/IT3D-text-to-3D,ctn/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/vit.py,2023-08-22T14:09:16Z,IT3D v1
github.com/buaacyw/IT3D-text-to-3D,ctn/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/beit.py,2023-08-22T14:09:16Z,IT3D v1
github.com/buaacyw/IT3D-text-to-3D,ctn/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin.py,2023-08-22T14:09:16Z,IT3D v1
github.com/buaacyw/IT3D-text-to-3D,ctn/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/levit.py,2023-08-22T14:09:16Z,IT3D v1
github.com/buaacyw/IT3D-text-to-3D,ctn/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin2.py,2023-08-22T14:09:16Z,IT3D v1
github.com/buaacyw/IT3D-text-to-3D,ctn/annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/next_vit.py,2023-08-22T14:09:16Z,IT3D v1
github.com/DachengLi1/MPCFormer,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-01-22T19:52:37Z,refactor
github.com/DachengLi1/MPCFormer,transformers/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-01-22T19:52:37Z,refactor
github.com/DachengLi1/MPCFormer,transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-01-22T19:52:37Z,refactor
github.com/DachengLi1/MPCFormer,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-01-22T19:52:37Z,refactor
github.com/DachengLi1/MPCFormer,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-01-22T19:52:37Z,refactor
github.com/DachengLi1/MPCFormer,transformers/examples/pytorch/vision-transformers-cifar10/train_cifar10.py,2023-01-22T19:52:37Z,refactor
github.com/DAMO-NLP-SG/VCD,experiments/lavis/models/clip_models/model.py,2023-11-28T09:36:39Z,merge
github.com/DAMO-NLP-SG/VCD,experiments/lavis/models/clip_models/timm_model.py,2023-11-28T09:36:39Z,merge
github.com/DAMO-NLP-SG/VCD,experiments/lavis/common/annotator/midas/midas/vit.py,2023-11-28T09:36:39Z,merge
github.com/Perp-Neg/Perp-Neg-stablediffusion,stable-dreamfusion/dpt.py,2023-06-10T22:45:36Z,3d code release
github.com/naver/relis,mmsegmentation/mmseg/models/backbones/timm_backbone.py,2023-04-11T09:34:56Z,Upload code.
github.com/bagustris/s3prl-ser,s3prl/upstream/ast/ast_models.py,2023-01-31T02:49:07Z,upload mosei and iemocap
github.com/bagustris/s3prl-ser,s3prl/upstream/ssast/ast_models.py,2023-01-31T02:49:07Z,upload mosei and iemocap
github.com/WildChlamydia/MiVOLO,mivolo/model/create_timm_model.py,2023-07-10T15:07:19Z,Fixing model directory name
github.com/lisasiyu/Cross-Align,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-11-09T12:31:43Z,add
github.com/lisasiyu/Cross-Align,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-11-09T12:31:43Z,add
github.com/lisasiyu/Cross-Align,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-11-09T12:31:43Z,add
github.com/lisasiyu/Cross-Align,build/lib/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-11-09T12:31:43Z,add
github.com/lisasiyu/Cross-Align,build/lib/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-11-09T12:31:43Z,add
github.com/lisasiyu/Cross-Align,build/lib/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-11-09T12:31:43Z,add
github.com/AnanyaKumar/transfer_learning,unlabeled_extrapolation/models/vit_model.py,2022-12-28T18:37:21Z,"Amulet (#5)

* Get waterbirds working on sandbox.

* Get waterbirds working on sandbox.

* Add waterbirds background prediction task.

* Add waterbirds background prediction task.

* Support waterbirds background sweeps.

* Support waterbirds background sweeps.

* Add get_layers to clip model.

* Add get_layers to clip model.

* Fix typo with get layer, only include classifier layer if it exists.

* Fix typo with get layer, only include classifier layer if it exists.

* Add dino layers change.

* Add dino layers change.

* Add bit resnet model.

* Add bit resnet model.

* bit resnet fixes.

* bit resnet fixes.

* Use checkpoint_path to streamline with other models.

* Use checkpoint_path to streamline with other models.

* Add bit model to sweep

* Add bit model to sweep

* Bit fixes.

* Bit fixes.

* Add support for subsampled wilds.

* Add support for subsampled wilds.

* Add support for more optimizers.

* Add support for more optimizers.

* Reduce batch size for larger models.

* Reduce batch size for larger models.

* Do normalization inside vit.

* Do normalization inside vit.

* update

* update

* Add per step scheduling and gradient clipping.

* Add per step scheduling and gradient clipping.

* Make it easy to summarize results.

* Make it easy to summarize results.

* Add linear warmup and gradient clipping.

* Add linear warmup and gradient clipping.

* Implement gradient accumulation.

* Implement gradient accumulation.

* fix loss computation issue, add warmup_frac option.

* fix loss computation issue, add warmup_frac option.

* log warmup steps

* log warmup steps

* Fine-grained layers

* Fine-grained layers

* Log warmup steps.

* Log warmup steps.

* Tune bottom k

* Tune bottom k

* Add no train option, useful to e.g., get gradient stats across train data

* Add no train option, useful to e.g., get gradient stats across train data

* Add option to not trian.

* Add option to not trian.

* Add amlt template files.

* Add amlt template files.

* Update amulet output dir

* Add wilds downloader, fix model layers

* Add wilds downloader, fix model layers

* Add amulet sweep capability.

* Add amulet sweep capability.

* Fix edge case with batch splitting, and add timm model

* Fix edge case with batch splitting, and add timm model

* Add option to run all hyper sweeps in one job

* Add option to run all hyper sweeps in one job

* Add amlt_data_cmd to run copy data bash script.

* Add amlt_data_cmd to run copy data bash script.

* Copy imagenet and domainnet on amulet.

* Copy imagenet and domainnet on amulet.

* Add modified CLIP repo inside

* Add modified CLIP repo inside

* Add CLIP

* Add CLIP

* Add big table script, use v100

* Add big table script, use v100

* Automate results collection a bit more.

* Automate results collection a bit more.

* Log parameter norm, so we can compute gradient normalized by parameter norm metrics.

* Log parameter norm, so we can compute gradient normalized by parameter norm metrics.

* Add more wilds support

* Add more wilds support

* Add layer wise tuning.

* Add layer wise tuning.

* Layerwise tuning

* Layerwise tuning

* Improve layer wise tuner, add arbitrary options to run script.

* Improve layer wise tuner, add arbitrary options to run script.

* Final paper updates

* Final paper updates

* Remove files

* Update gitignore

* Start prep for wilds leaderboard.

* Add best to avoid name conflict.

* Fix arg name.

* Debug

* Add high rest fmow

* address reviewer comments

* Updates

* Add big table data.

* big table format change

* made non significant gain/loss lighter

* Change name.

* Clear outputs.

* Update, and keep big table source.

* Add more pickle files for results.

* Fix typo.

* Add group name, add models.

* Codalab

* More codalab updates.

* Restore hyper for fmow.

* Updates for surgical fine tuning checkpoints.

Co-authored-by: suriya <suriyag88@gmail.com>"
github.com/AnanyaKumar/transfer_learning,unlabeled_extrapolation/models/vit_model.py,2022-08-09T00:46:17Z,Updates.
github.com/AnanyaKumar/transfer_learning,unlabeled_extrapolation/models/vit_model.py,2022-04-04T05:27:30Z,"Release (#2)

Fine-tuning paper code release"
github.com/AnanyaKumar/transfer_learning,unlabeled_extrapolation/models/timm_model.py,2022-12-28T18:37:21Z,"Amulet (#5)

* Get waterbirds working on sandbox.

* Get waterbirds working on sandbox.

* Add waterbirds background prediction task.

* Add waterbirds background prediction task.

* Support waterbirds background sweeps.

* Support waterbirds background sweeps.

* Add get_layers to clip model.

* Add get_layers to clip model.

* Fix typo with get layer, only include classifier layer if it exists.

* Fix typo with get layer, only include classifier layer if it exists.

* Add dino layers change.

* Add dino layers change.

* Add bit resnet model.

* Add bit resnet model.

* bit resnet fixes.

* bit resnet fixes.

* Use checkpoint_path to streamline with other models.

* Use checkpoint_path to streamline with other models.

* Add bit model to sweep

* Add bit model to sweep

* Bit fixes.

* Bit fixes.

* Add support for subsampled wilds.

* Add support for subsampled wilds.

* Add support for more optimizers.

* Add support for more optimizers.

* Reduce batch size for larger models.

* Reduce batch size for larger models.

* Do normalization inside vit.

* Do normalization inside vit.

* update

* update

* Add per step scheduling and gradient clipping.

* Add per step scheduling and gradient clipping.

* Make it easy to summarize results.

* Make it easy to summarize results.

* Add linear warmup and gradient clipping.

* Add linear warmup and gradient clipping.

* Implement gradient accumulation.

* Implement gradient accumulation.

* fix loss computation issue, add warmup_frac option.

* fix loss computation issue, add warmup_frac option.

* log warmup steps

* log warmup steps

* Fine-grained layers

* Fine-grained layers

* Log warmup steps.

* Log warmup steps.

* Tune bottom k

* Tune bottom k

* Add no train option, useful to e.g., get gradient stats across train data

* Add no train option, useful to e.g., get gradient stats across train data

* Add option to not trian.

* Add option to not trian.

* Add amlt template files.

* Add amlt template files.

* Update amulet output dir

* Add wilds downloader, fix model layers

* Add wilds downloader, fix model layers

* Add amulet sweep capability.

* Add amulet sweep capability.

* Fix edge case with batch splitting, and add timm model

* Fix edge case with batch splitting, and add timm model

* Add option to run all hyper sweeps in one job

* Add option to run all hyper sweeps in one job

* Add amlt_data_cmd to run copy data bash script.

* Add amlt_data_cmd to run copy data bash script.

* Copy imagenet and domainnet on amulet.

* Copy imagenet and domainnet on amulet.

* Add modified CLIP repo inside

* Add modified CLIP repo inside

* Add CLIP

* Add CLIP

* Add big table script, use v100

* Add big table script, use v100

* Automate results collection a bit more.

* Automate results collection a bit more.

* Log parameter norm, so we can compute gradient normalized by parameter norm metrics.

* Log parameter norm, so we can compute gradient normalized by parameter norm metrics.

* Add more wilds support

* Add more wilds support

* Add layer wise tuning.

* Add layer wise tuning.

* Layerwise tuning

* Layerwise tuning

* Improve layer wise tuner, add arbitrary options to run script.

* Improve layer wise tuner, add arbitrary options to run script.

* Final paper updates

* Final paper updates

* Remove files

* Update gitignore

* Start prep for wilds leaderboard.

* Add best to avoid name conflict.

* Fix arg name.

* Debug

* Add high rest fmow

* address reviewer comments

* Updates

* Add big table data.

* big table format change

* made non significant gain/loss lighter

* Change name.

* Clear outputs.

* Update, and keep big table source.

* Add more pickle files for results.

* Fix typo.

* Add group name, add models.

* Codalab

* More codalab updates.

* Restore hyper for fmow.

* Updates for surgical fine tuning checkpoints.

Co-authored-by: suriya <suriyag88@gmail.com>"
github.com/LeiyaoCui/STRAP,models/vit.py,2023-04-13T08:25:16Z,update files
github.com/LeiyaoCui/STRAP,models/vit.py,2022-11-16T12:21:31Z,code update.
github.com/GaoShuang98/DINO-Mix,models/backbones/swin.py,2023-12-04T13:54:25Z,Add files via upload
github.com/GaoShuang98/DINO-Mix,models/backbones/efficientnet.py,2023-12-04T13:54:25Z,Add files via upload
github.com/ylsung/Ladder-Side-Tuning,VL-T5/src/clip_prepro_feats.py,2022-06-14T21:10:57Z,First commit
github.com/ZiyuGuo99/Point-Bind_Point-LLM,models/PointBind_models.py,2023-06-05T22:04:36Z,Add files via upload
github.com/zhengtianyi13/HSARS,mmaction2/mmaction/models1/recognizers/base.py,2023-07-07T11:36:14Z,first commit
github.com/zhengtianyi13/HSARS,mmaction2/demo/mmaction/models1/recognizers/base.py,2023-07-07T11:36:14Z,first commit
github.com/tenstorrent-metal/tt-metal,models/experimental/vovnet/tt/vovnet.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/hrnet/demo/cpu_demo.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/vovnet/demo/gs_demo.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/hrnet/tt/hrnet_model.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/vovnet/demo/cpu_demo.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/hrnet/tests/perf_hrnet.py,2023-12-11T18:09:47Z,#0: Commonize logic between E2E and device perf functions/scripts. Enable assertions for device perf scripts/ci
github.com/tenstorrent-metal/tt-metal,models/experimental/hrnet/tests/perf_hrnet.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/vovnet/tests/perf_vovnet.py,2023-12-11T18:09:47Z,#0: Commonize logic between E2E and device perf functions/scripts. Enable assertions for device perf scripts/ci
github.com/tenstorrent-metal/tt-metal,models/experimental/vovnet/tests/perf_vovnet.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/vovnet/tests/test_tt_vovnet.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/hrnet/tests/test_torch_hrnet.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/vovnet/tests/test_torch_vovnet.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/hrnet/tests/test_tt_bottleneck.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/vovnet/tests/test_tt_osa_stage.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/vovnet/tests/test_tt_osa_block.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/hrnet/tests/test_tt_hrnet_model.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/hrnet/tests/test_tt_basic_block.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/inceptionV4/tests/test_inceptionv4.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/vovnet/tests/test_tt_conv_norm_act.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/vovnet/tests/test_tt_classifier_head.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/vovnet/tests/test_tt_effective_se_module.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/vovnet/tests/test_tt_select_adaptivepool2d.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/hrnet/tests/test_tt_high_resolution_module.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/vovnet/tests/test_tt_sequential_append_list.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/tenstorrent-metal/tt-metal,models/experimental/vovnet/tests/test_tt_separable_conv_norm_act.py,2023-10-17T16:59:31Z,"#3101: move models code to model/experimental (yolo, whisper, vovnet, vit, vgg, trocr, t5, synth_grad, swin, ssd, squeezenet, roberta, retinanet, nanogpt, mobilenet, mnist, llama_old, lenet, inception, hrnet, func_bert, efficientnet, deit, convnet_mnist, bloom)"
github.com/bwconrad/dafre,src/model.py,2023-02-10T18:59:05Z,Make num classes an arg + delete debug lines
github.com/bwconrad/dafre,src/model.py,2022-10-17T19:18:32Z,Change some default values
github.com/bwconrad/dafre,src/model.py,2022-10-15T16:29:53Z,Add timm clip models
github.com/bwconrad/dafre,src/model.py,2022-10-13T19:48:42Z,Add option to not load classifier weights
github.com/bwconrad/dafre,src/model.py,2022-10-13T19:28:14Z,Remove metrics
github.com/bwconrad/dafre,src/model.py,2022-10-13T18:42:01Z,Add precision+recall and clean up class acc saving
github.com/bwconrad/dafre,src/model.py,2022-10-11T21:40:44Z,Add class balanced data sampler
github.com/bwconrad/dafre,src/model.py,2022-10-08T22:44:50Z,Add balanced softmax loss
github.com/bwconrad/dafre,src/model.py,2022-10-03T20:37:32Z,Init commit
github.com/spilioeve/eventsrealm,transformers-single-all-attribute-prompt-experiments/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-11-15T02:55:43Z,initial port
github.com/spilioeve/eventsrealm,transformers-single-all-attribute-prompt-experiments/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-11-15T02:55:43Z,initial port
github.com/spilioeve/eventsrealm,transformers-single-all-attribute-prompt-experiments/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-11-15T02:55:43Z,initial port
github.com/KU-CVLAB/CAT-Seg,open_clip/src/open_clip/timm_model.py,2023-03-21T12:14:05Z,initial commit
github.com/wooseok-shin/Egovision-1st-place-solution,network.py,2021-12-09T12:11:20Z,upload python files
github.com/shendu0321/IncepFormer,mmseg/models/backbones/timm_backbone.py,2022-12-06T15:00:03Z,code is open
github.com/xiaoman-zhang/PMC-VQA,src/MedVInT_TE/models/pmc_oa/timm_model.py,2023-05-30T02:36:42Z,update
github.com/ZhangYuanhan-AI/Bamboo,Bamboo-Benchmark/models/timmvit.py,2022-03-15T09:08:45Z,Add files via upload
github.com/ZhangYuanhan-AI/Bamboo,Bamboo-Benchmark/models/efficientnet.py,2022-03-15T09:08:45Z,Add files via upload
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-11-26T09:02:15Z,Add onnx and tensorrt experiments
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-11-22T12:17:39Z,Add experiments
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-11-12T05:17:45Z,Fix errors
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-11-08T10:22:50Z,Fix bugs
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-11-08T08:25:04Z,Fix errors
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-11-05T09:08:07Z,Add interface for tf2tflite int8 quantization
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-10-22T14:28:27Z,Add ViT_Pruned class to mimic pruned deit model
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-10-21T10:41:40Z,Improve benchmark functions
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-10-20T05:22:18Z,Add cmd interface to profile tflite model
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-10-18T13:06:43Z,Add function eval_tf and save_tfhub_vit
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-10-18T03:38:27Z,Add support for load pretrained swin-transformer
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-10-14T13:02:43Z,Small changes
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-10-14T12:20:08Z,Add more flexibility on mobile benchmark function
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-10-13T06:44:56Z,Add support for getting and converting Swin-Transformer
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-10-12T11:16:41Z,Add support for fetch memory footprint in mobile tflite benchmark function
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-09-16T12:51:11Z,Add structure prune deit function and evalute deit function
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-09-14T12:30:19Z,Fix bugs
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-09-14T11:42:48Z,Add evaluate tflite function
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-09-09T12:40:54Z,Add tflite quantization functions
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-09-09T09:33:09Z,Add onnx transformer optimize function
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-09-08T15:00:14Z,Add openvino cli
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-09-08T05:23:24Z,Add evaluate onnx function
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-09-07T09:35:33Z,Add quantize function
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-09-06T07:35:04Z,Update tool.py
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-09-01T14:20:19Z,Add export onnx dense tool
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-09-01T08:07:55Z,Increate precision of latency measurement in server_benchmark
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-09-01T02:44:29Z,Add io_binding in server_benchmark
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-08-31T09:12:35Z,Update server_benchmark
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-08-31T06:02:46Z,Add intra_op_threads in server_benchmark
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-08-31T05:38:53Z,Add code for openvino
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-08-27T09:07:12Z,Fix bugs
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-08-27T06:53:26Z,Add torch layers and update tools.py
github.com/xudoong/EdgeVisionTransformer,tools.py,2021-08-25T06:27:56Z,Initial commit
github.com/Junjue-Wang/Rank1-Ali-Tianchi-Real-World-Image-Forgery-Localization-Challenge,mmsegmentation-tianchi_tamper/mmseg/models/backbones/timm_backbone.py,2022-03-28T12:56:07Z,Initial commit
github.com/yilundu/cross_attention_renderer,midas/vit.py,2023-04-10T04:19:26Z,initial code
github.com/YongzhouPan/Mono-Navigation,2_monocular_depth_ROS/midas_ws/MiDaS/midas/vit.py,2022-09-23T11:08:15Z,submit mono depth ros collection
github.com/muyangyi/SimSeg,simseg/models/backbones/mml/vit_builder.py,2023-06-27T08:52:51Z,init
github.com/muyangyi/SimSeg,simseg/models/backbones/mml/timm_builder.py,2023-06-27T08:52:51Z,init
github.com/wxjiao/ParroT,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-04-14T05:54:56Z,training scripts of full model and lora
github.com/wxjiao/ParroT,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-04-14T05:49:30Z,delete old transformers
github.com/wxjiao/ParroT,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-04-06T13:47:11Z,uploaded
github.com/wxjiao/ParroT,transformers/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-04-14T05:54:56Z,training scripts of full model and lora
github.com/wxjiao/ParroT,transformers/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-04-14T05:49:30Z,delete old transformers
github.com/wxjiao/ParroT,transformers/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-04-06T13:47:11Z,uploaded
github.com/wxjiao/ParroT,transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-04-14T05:54:56Z,training scripts of full model and lora
github.com/wxjiao/ParroT,transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-04-14T05:49:30Z,delete old transformers
github.com/wxjiao/ParroT,transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-04-06T13:47:11Z,uploaded
github.com/wxjiao/ParroT,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-04-14T05:54:56Z,training scripts of full model and lora
github.com/wxjiao/ParroT,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-04-14T05:49:30Z,delete old transformers
github.com/wxjiao/ParroT,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-04-06T13:47:11Z,uploaded
github.com/wxjiao/ParroT,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-04-14T05:54:56Z,training scripts of full model and lora
github.com/wxjiao/ParroT,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-04-14T05:49:30Z,delete old transformers
github.com/wxjiao/ParroT,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-04-06T13:47:11Z,uploaded
github.com/wxjiao/ParroT,transformers/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-04-14T05:54:56Z,training scripts of full model and lora
github.com/wxjiao/ParroT,transformers/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-04-14T05:49:30Z,delete old transformers
github.com/wxjiao/ParroT,transformers/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-04-06T13:47:11Z,uploaded
github.com/wxjiao/ParroT,transformers/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-04-14T05:54:56Z,training scripts of full model and lora
github.com/wxjiao/ParroT,transformers/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-04-14T05:49:30Z,delete old transformers
github.com/wxjiao/ParroT,transformers/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-04-06T13:47:11Z,uploaded
github.com/wxjiao/ParroT,transformers/src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-04-14T05:54:56Z,training scripts of full model and lora
github.com/wxjiao/ParroT,transformers/src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-04-14T05:49:30Z,delete old transformers
github.com/wxjiao/ParroT,transformers/src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-04-06T13:47:11Z,uploaded
github.com/chou141253/FGVC-PIM,models/builder.py,2022-04-22T11:22:01Z,new code
github.com/chou141253/FGVC-PIM,v0/models/Vitb16.py,2022-04-22T11:19:35Z,move old version (v0) to ./v0/
github.com/chou141253/FGVC-PIM,v0/models/ResNet50.py,2022-04-22T11:19:35Z,move old version (v0) to ./v0/
github.com/chou141253/FGVC-PIM,v0/models/SwinVit12.py,2022-04-22T11:19:35Z,move old version (v0) to ./v0/
github.com/chou141253/FGVC-PIM,v0/models/Vitb16_FPN.py,2022-04-22T11:19:35Z,move old version (v0) to ./v0/
github.com/chou141253/FGVC-PIM,v0/models/ResNet50_FPN.py,2022-04-22T11:19:35Z,move old version (v0) to ./v0/
github.com/chou141253/FGVC-PIM,v0/models/SwinVit12_demo.py,2022-04-22T11:19:35Z,move old version (v0) to ./v0/
github.com/chuhaojin/Text2Poster-ICASSP-22,background_retriever/build/lib/models/vl_model.py,2023-01-12T07:24:43Z,add the Background Retriever
github.com/AILab-CVC/Make-Your-Video,lvdm/modules/encoders/midas/midas/vit.py,2023-11-30T15:04:09Z,release model
github.com/mhh0318/Cocktail,ldm/modules/midas/midas/vit.py,2023-05-30T06:41:14Z,init
github.com/duyhominhnguyen/LVM-Med,model/unet_vit.py,2023-06-26T08:19:41Z,Update unet_vit.py
github.com/duyhominhnguyen/LVM-Med,model/unet_vit.py,2023-06-12T01:33:02Z,:sparkles: cleanerize source a lil bit
github.com/duyhominhnguyen/LVM-Med,segmentation_models_pytorch_example/encoders/timm_universal.py,2023-06-27T03:51:29Z,Add files via upload
github.com/duyhominhnguyen/LVM-Med,segmentation_models_pytorch_example/encoders/timm_mobilenetv3.py,2023-06-27T03:51:29Z,Add files via upload
github.com/haha-lisa/RDM-Region-Aware-Diffusion-Model,models/vitseg.py,2023-01-16T05:01:47Z,code
github.com/perf-project/PeRF,ldm/modules/midas/midas/vit.py,2023-10-26T03:05:31Z,first commit
github.com/perf-project/PeRF,modules/geo_predictors/omnidata/modules/midas/vit.py,2023-10-26T03:05:31Z,first commit
github.com/ZhangYuanhan-AI/visual_prompt_retrieval,tools/vit.py,2023-01-31T07:54:28Z,updates
github.com/ZhangYuanhan-AI/visual_prompt_retrieval,tools/featextrater_folderwise_UnsupPR.py,2023-01-31T07:54:28Z,updates
github.com/leonnnop/GMMSeg,mmseg/models/backbones/timm_backbone.py,2022-12-24T14:13:45Z,Full code released; Update README.
github.com/rosewang2008/language_modeling_via_stochastic_processes,decoder/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-05-11T14:33:30Z,V2
github.com/rosewang2008/language_modeling_via_stochastic_processes,decoder/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-05-11T14:33:30Z,V2
github.com/haoshao-nku/medical_seg,mmsegmentation/mmseg/models/backbones/timm_backbone.py,2023-12-15T14:20:47Z,update code
github.com/haoshao-nku/medical_seg,mmsegmentation/projects/Adabins/backbones/adabins_backbone.py,2023-12-15T14:20:47Z,update code
github.com/wxj630/visual-chatgpt-zh,modules/controlnet_aux/midas/midas/vit.py,2023-03-21T09:19:46Z,add: controlnet_aux module
github.com/xijiu9/Train_Transformers_with_INT4,SingleDivide/transformersLocal/models/vit/convert_vit_timm_to_pytorch.py,2023-06-22T18:54:32Z,first commit
github.com/xijiu9/Train_Transformers_with_INT4,SingleDivide/transformersLocal/models/regnet/convert_regnet_to_pytorch.py,2023-06-22T18:54:32Z,first commit
github.com/xijiu9/Train_Transformers_with_INT4,SingleDivide/transformersLocal/models/resnet/convert_resnet_to_pytorch.py,2023-06-22T18:54:32Z,first commit
github.com/xijiu9/Train_Transformers_with_INT4,SingleDivide/transformersLocal/models/deit/convert_deit_timm_to_pytorch.py,2023-06-22T18:54:32Z,first commit
github.com/xijiu9/Train_Transformers_with_INT4,SingleDivide/transformersLocal/models/swin/convert_swin_timm_to_pytorch.py,2023-06-22T18:54:32Z,first commit
github.com/xijiu9/Train_Transformers_with_INT4,SingleDivide/transformersLocal/models/levit/convert_levit_timm_to_pytorch.py,2023-06-22T18:54:32Z,first commit
github.com/xijiu9/Train_Transformers_with_INT4,SingleDivide/transformersLocal/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-06-22T18:54:32Z,first commit
github.com/YuxinWenRick/tree-ring-watermark,open_clip/timm_model.py,2023-05-31T14:39:55Z,initial release
github.com/Junyi42/sd-dino,extractor_dino.py,2023-06-11T09:30:30Z,init commit
github.com/saketh12/Auto1111SDK,auto1111sdk/modules/stable/ldm/modules/midas/midas/vit.py,2024-01-28T09:25:54Z,initial_commit
github.com/QingruZhang/AdaLoRA,NLG_QA/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-05-31T01:21:56Z,initial commit
github.com/QingruZhang/AdaLoRA,NLG_QA/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-05-31T01:21:56Z,initial commit
github.com/QingruZhang/AdaLoRA,NLG_QA/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-05-31T01:21:56Z,initial commit
github.com/QingruZhang/AdaLoRA,NLG_QA/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-05-31T01:21:56Z,initial commit
github.com/QingruZhang/AdaLoRA,NLG_QA/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-05-31T01:21:56Z,initial commit
github.com/QingruZhang/AdaLoRA,NLG_QA/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-05-31T01:21:56Z,initial commit
github.com/Jiawei-Yang/Denoising-ViT,DenoisingViT/vit_wrapper.py,2024-01-06T21:55:18Z,initial code release
github.com/hamidkazemi22/vit-visualization,model/library/transformers/base.py,2022-10-01T04:46:33Z,creating the repo
github.com/StartHua/ComfyUI_Seg_VITON,ldm/modules/midas/midas/vit.py,2024-01-30T14:33:59Z,换装
github.com/yaoppeng/U-Net_v2,PolypSeg/lib/my_pvt.py,2023-09-04T19:13:24Z,add polyp segmentation
github.com/yaoppeng/U-Net_v2,nnunetv2/training/network/model/dim2/pvt/gcn_fuse.py,2023-09-04T19:03:42Z,first commit
github.com/yaoppeng/U-Net_v2,nnunetv2/training/network/model/dim2/segmentation_models_pytorch/encoders/timm_universal.py,2023-09-04T19:03:42Z,first commit
github.com/yaoppeng/U-Net_v2,nnunetv2/training/network/model/dim2/segmentation_models_pytorch/encoders/timm_mobilenetv3.py,2023-09-04T19:03:42Z,first commit
github.com/csslc/CCSR,ldm/modules/midas/midas/vit.py,2024-01-04T13:45:50Z,release_code
github.com/NVIDIA-AI-IOT/jetson-intro-to-distillation,stl10_utils.py,2023-08-01T20:53:22Z,license
github.com/NVIDIA-AI-IOT/jetson-intro-to-distillation,stl10_utils.py,2023-06-27T21:37:06Z,initial commit
github.com/HeliosZhao/Animate124,dpt.py,2023-12-05T12:44:27Z,code upload
github.com/HeliosZhao/Animate124,midas/backbones/vit.py,2023-12-05T12:44:27Z,code upload
github.com/HeliosZhao/Animate124,midas/backbones/beit.py,2023-12-05T12:44:27Z,code upload
github.com/HeliosZhao/Animate124,midas/backbones/swin.py,2023-12-05T12:44:27Z,code upload
github.com/HeliosZhao/Animate124,midas/backbones/levit.py,2023-12-05T12:44:27Z,code upload
github.com/HeliosZhao/Animate124,midas/backbones/swin2.py,2023-12-05T12:44:27Z,code upload
github.com/HeliosZhao/Animate124,midas/backbones/next_vit.py,2023-12-05T12:44:27Z,code upload
github.com/ChenWu98/unified-generative-zoo,model/lib/stylegan_xl/feature_networks/vit.py,2022-10-13T16:44:37Z,Update models
github.com/ChenWu98/unified-generative-zoo,model/lib/stylegan_xl/feature_networks/pretrained_builder.py,2022-10-13T16:44:37Z,Update models
github.com/google-research/syn-rep-learn,StableRep/main_linear.py,2023-11-30T03:55:05Z,restructure the repo
github.com/google-research/syn-rep-learn,SynCLR/eval/models_vit.py,2023-12-26T23:34:40Z,add SynCLR
github.com/google-research/syn-rep-learn,StableRep/models/StableRep.py,2023-11-30T03:55:05Z,restructure the repo
github.com/google-research/syn-rep-learn,StableRep/models/StableRepMM.py,2023-11-30T03:55:05Z,restructure the repo
github.com/google-research/syn-rep-learn,Scaling/supervised/models_vit.py,2023-12-08T16:05:20Z,add scaling paper
github.com/Westlake-AI/MogaNet,cam_image.py,2023-01-13T23:40:54Z,update release and tools
github.com/shinianzhihou/ChangeDetection,mmseg/models/backbones/siamese_efficientnet.py,2021-11-26T05:03:16Z,BIG UPDATE! Totally based on mmseg!
github.com/X-PLUG/Youku-mPLUG,models/gpt3.py,2023-12-19T08:21:02Z,clean code about oss import and add file requires
github.com/X-PLUG/Youku-mPLUG,models/mplug.py,2023-12-19T08:21:02Z,clean code about oss import and add file requires
github.com/X-PLUG/Youku-mPLUG,models/alpro.py,2023-12-19T08:21:02Z,clean code about oss import and add file requires
github.com/X-PLUG/Youku-mPLUG,models/distributed_gpt3.py,2023-12-21T10:03:05Z,sync code
github.com/X-PLUG/Youku-mPLUG,models/distributed_gpt3.py,2023-12-19T03:10:02Z,gpt3
github.com/X-PLUG/Youku-mPLUG,models/model_pretrain_gpt.py,2023-12-19T08:21:02Z,clean code about oss import and add file requires
github.com/mr-eggplant/SAR,main.py,2023-03-01T13:11:09Z,fix bug for bs=1 exps
github.com/mr-eggplant/SAR,main.py,2023-01-30T14:46:35Z,init commit
github.com/mr-eggplant/SAR,main.py,2023-01-30T14:23:37Z,first commit
github.com/zhu-xlab/SSL4EO-S12,src/benchmark/pretrain_ssl/pretrain_data2vec.py,2022-06-14T15:18:36Z,Added Data2vec code and scripts
github.com/zhu-xlab/SSL4EO-S12,src/benchmark/pretrain_ssl/models/data2vec/run_cyclical.py,2022-06-14T15:18:36Z,Added Data2vec code and scripts
github.com/zhu-xlab/SSL4EO-S12,src/benchmark/transfer_classification/models/data2vec/run_cyclical.py,2022-06-14T15:18:36Z,Added Data2vec code and scripts
github.com/zhu-xlab/SSL4EO-S12,src/benchmark/pretrain_ssl/.ipynb_checkpoints/pretrain_data2vec-checkpoint.py,2022-06-14T15:18:36Z,Added Data2vec code and scripts
github.com/zhu-xlab/SSL4EO-S12,src/benchmark/pretrain_ssl/models/data2vec/.ipynb_checkpoints/run_cyclical-checkpoint.py,2022-06-14T15:18:36Z,Added Data2vec code and scripts
github.com/zhu-xlab/SSL4EO-S12,src/benchmark/transfer_classification/models/data2vec/.ipynb_checkpoints/run_cyclical-checkpoint.py,2022-06-14T15:18:36Z,Added Data2vec code and scripts
github.com/hukkelas/deep_privacy2,dp2/discriminator/projected_gan/vit.py,2023-11-19T19:04:08Z,add: TriA-GAN cod
github.com/hukkelas/deep_privacy2,dp2/discriminator/projected_gan/feature_nets.py,2023-11-19T19:04:08Z,add: TriA-GAN cod
github.com/Sense-X/MixMIM,main_pretrain.py,2022-07-12T12:36:16Z,init commit
github.com/JiYuanFeng/DDP,controlnet/annotator/midas/midas/vit.py,2023-07-10T02:21:20Z,controlnet exp
github.com/JiYuanFeng/DDP,controlnet/ldm/modules/midas/midas/vit.py,2023-07-10T02:21:20Z,controlnet exp
github.com/JiYuanFeng/DDP,segmentation/mmseg/models/backbones/timm_backbone.py,2023-05-22T07:44:15Z,"segmentation

the segmentation code"
github.com/JiYuanFeng/DDP,controlnet/annotator/ddp/mmseg/models/backbones/timm_backbone.py,2023-07-10T02:21:20Z,controlnet exp
github.com/xcyao00/BGAD,engines/bgad_train_engine.py,2023-03-20T12:50:56Z,Add files via upload
github.com/xcyao00/BGAD,engines/bgad_fas_train_engine.py,2023-03-20T12:50:56Z,Add files via upload
github.com/xcyao00/BGAD,engines/bgad_test_engine.py,2023-03-20T12:50:56Z,Add files via upload
github.com/sinpcw/showcase-optimizer,train.py,2023-06-02T17:48:26Z,引用したコードは著者の実装でないようだったため修正
github.com/sinpcw/showcase-optimizer,train.py,2023-05-29T14:17:01Z,Sohpiaの実行例を追加
github.com/sinpcw/showcase-optimizer,train.py,2023-02-23T14:49:44Z,wd=1e-3の結果を追記
github.com/sinpcw/showcase-optimizer,train.py,2023-02-21T19:16:03Z,"Add weight decay to Lion optimizer since it is used on AdamW, and keep the effective weight decay (weight_decay * lr) the same as AdamW."
github.com/sinpcw/showcase-optimizer,train.py,2023-02-16T14:27:57Z,最適化手法Lionの検証と結果の追加
github.com/sinpcw/showcase-optimizer,train.py,2023-01-23T17:41:04Z,検証コードおよび結果をコミット
github.com/yhZhai/SOAR,mmaction/models/recognizers/base.py,2023-12-23T14:21:39Z,upload code
github.com/JunweiZheng93/MATERobot,mmseg/models/backbones/timm_backbone.py,2023-03-04T20:25:03Z,add codes
github.com/Liuxinyv/SAZS,model/vit.py,2023-04-11T07:12:50Z,first commit
github.com/Liuxinyv/SAZS,model/lseg_vit.py,2023-04-11T07:12:50Z,first commit
github.com/Liuxinyv/SAZS,model/lseg_vit_zs.py,2023-04-11T07:12:50Z,first commit
github.com/tgxs002/HPSv2,hpsv2/src/open_clip/timm_model.py,2023-08-02T06:54:12Z,Implement Pypi package
github.com/statusrank/XCurve,XCurve/OpenAUC/utils/model_utils.py,2023-08-18T06:01:53Z,update some bugs
github.com/statusrank/XCurve,XCurve/OpenAUC/utils/model_utils.py,2023-06-05T14:30:35Z,update
github.com/knshnb/kaggle-happywhale-1st-place,src/train.py,2023-01-19T11:15:59Z,Fix key error of trainer.callback_metrics
github.com/knshnb/kaggle-happywhale-1st-place,src/train.py,2022-12-08T06:31:25Z,Add tune.py
github.com/knshnb/kaggle-happywhale-1st-place,src/train.py,2022-05-23T11:15:20Z,Initial commit
github.com/xk-huang/segment-caption-anything,src/models/sca/modeling_sca_timm_multitask_v2.py,2023-11-27T10:04:29Z,Initial commit
github.com/sagizty/VPT,PromptModels/GetPromptModel.py,2022-03-26T03:18:39Z,Add files via upload
github.com/microsoft/react,react_customization/src/open_clip/timm_model.py,2023-03-30T16:35:55Z,"Code and model release

Co-authored-by: ChunyuanLI <ChunyuanLI@users.noreply.github.com>"
github.com/lyakaap/ISC21-Descriptor-Track-1st,exp/v98.py,2021-12-08T10:24:03Z,publish solution
github.com/lyakaap/ISC21-Descriptor-Track-1st,exp/v98.py,2021-10-14T07:27:33Z,sdf
github.com/lyakaap/ISC21-Descriptor-Track-1st,exp/v98.py,2021-10-14T07:17:46Z,adsf
github.com/lyakaap/ISC21-Descriptor-Track-1st,exp/v83.py,2021-12-08T10:24:03Z,publish solution
github.com/lyakaap/ISC21-Descriptor-Track-1st,exp/v83.py,2021-10-06T02:28:30Z,d
github.com/lyakaap/ISC21-Descriptor-Track-1st,exp/v86.py,2021-12-08T10:24:03Z,publish solution
github.com/lyakaap/ISC21-Descriptor-Track-1st,exp/v86.py,2021-10-07T01:38:25Z,/s/
github.com/lyakaap/ISC21-Descriptor-Track-1st,exp/v107.py,2021-12-16T10:30:40Z,fix
github.com/lyakaap/ISC21-Descriptor-Track-1st,exp/v107.py,2021-12-08T10:24:03Z,publish solution
github.com/lyakaap/ISC21-Descriptor-Track-1st,exp/v107.py,2021-10-31T13:42:21Z,Clean and add license
github.com/lyakaap/ISC21-Descriptor-Track-1st,exp/v107.py,2021-10-18T01:45:12Z,f
github.com/lyakaap/ISC21-Descriptor-Track-1st,isc_feature_extractor/model.py,2023-11-08T03:40:22Z,Update timm/torch versions
github.com/lyakaap/ISC21-Descriptor-Track-1st,isc_feature_extractor/model.py,2023-02-05T07:11:02Z,use interpolation when fc_dim is different size
github.com/lyakaap/ISC21-Descriptor-Track-1st,isc_feature_extractor/model.py,2023-02-05T07:10:31Z,add l2 normalize option
github.com/lyakaap/ISC21-Descriptor-Track-1st,isc_feature_extractor/model.py,2023-02-03T05:53:21Z,enable to set to fc_dim != 256
github.com/lyakaap/ISC21-Descriptor-Track-1st,isc_feature_extractor/model.py,2022-11-25T09:43:51Z,bump the version
github.com/lyakaap/ISC21-Descriptor-Track-1st,isc_feature_extractor/model.py,2022-11-25T09:09:35Z,make package
github.com/cognitiveailab/darmok,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-07-14T23:00:25Z,Added transformers
github.com/cognitiveailab/darmok,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-07-14T23:00:25Z,Added transformers
github.com/SvipRepetitionCounting/TransRAC,mmaction/models/recognizers/base.py,2021-11-03T14:25:05Z,all commit
github.com/JieShibo/PETL-ViT,FacT/fact_tt.py,2023-02-12T16:59:32Z,update
github.com/JieShibo/PETL-ViT,FacT/fact_tt.py,2022-12-05T10:29:12Z,draft code
github.com/JieShibo/PETL-ViT,FacT/fact_tk.py,2023-02-12T16:59:32Z,update
github.com/JieShibo/PETL-ViT,FacT/fact_tk.py,2022-12-05T10:29:12Z,draft code
github.com/JieShibo/PETL-ViT,binary_adapter/main.py,2023-07-31T09:57:46Z,update iccv
github.com/CAU-HE/CMCDNet,mmseg/models/backbones/timm_backbone.py,2023-03-01T11:33:04Z,cmcdnet first commit
github.com/mariodoebler/test-time-adaptation,classification/models/model.py,2023-11-06T16:29:21Z,Restructuring and minor fixes
github.com/mariodoebler/test-time-adaptation,classification/models/model.py,2023-07-13T13:26:59Z,Minor changes
github.com/mariodoebler/test-time-adaptation,classification/models/model.py,2023-07-13T13:26:24Z,Change get_torchvision_model func
github.com/mariodoebler/test-time-adaptation,classification/models/model.py,2023-06-02T07:12:52Z,Delete unsupported models
github.com/mariodoebler/test-time-adaptation,classification/models/model.py,2023-05-04T08:38:05Z,Fix bug in split_up_model
github.com/mariodoebler/test-time-adaptation,classification/models/model.py,2023-05-02T08:40:33Z,Add loading pre-trained models from timm
github.com/mariodoebler/test-time-adaptation,classification/models/model.py,2023-03-21T14:34:42Z,Add more models and extend compatibility
github.com/mariodoebler/test-time-adaptation,classification/models/model.py,2023-03-21T14:32:30Z,Change to provide all available torchvision models
github.com/mariodoebler/test-time-adaptation,classification/models/model.py,2022-11-28T16:44:18Z,Initial commit
github.com/thomas0809/MolScribe,molscribe/model.py,2023-04-04T04:36:47Z,update interface and README
github.com/thomas0809/MolScribe,molscribe/model.py,2023-04-01T03:41:52Z,Add confidence and atom/bond info to interface
github.com/thomas0809/MolScribe,molscribe/model.py,2022-11-10T04:43:58Z,clean up code; add predict scripts; add README.
github.com/thomas0809/MolScribe,molscribe/model.py,2022-11-03T04:01:11Z,merge
github.com/thomas0809/MolScribe,molscribe/model.py,2022-10-31T19:33:20Z,merge local
github.com/j-min/CLIP-Caption-Reward,scripts/clip_prepro_feats.py,2022-05-24T04:09:03Z,first commit
github.com/j-min/CLIP-Caption-Reward,scripts_FineCapEval/clip_prepro_feats.py,2022-05-24T04:09:03Z,first commit
github.com/wlin-at/CycDA,mmaction/models/recognizers/base.py,2022-07-17T13:53:23Z,Initial commit
github.com/yoctta/XPaste,segment_methods/clipseg/models/vitseg.py,2023-06-08T21:14:34Z,code releasing
github.com/MikeGu721/EasyLLM,installs/transformers-install/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-04-08T07:03:56Z,First Commit
github.com/MikeGu721/EasyLLM,installs/transformers-install/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-04-08T07:03:56Z,First Commit
github.com/MikeGu721/EasyLLM,installs/transformers-install/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-04-08T07:03:56Z,First Commit
github.com/MikeGu721/EasyLLM,installs/transformers-install/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-04-08T07:03:56Z,First Commit
github.com/MikeGu721/EasyLLM,installs/transformers-install/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-04-08T07:03:56Z,First Commit
github.com/MikeGu721/EasyLLM,installs/transformers-install/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-04-08T07:03:56Z,First Commit
github.com/MikeGu721/EasyLLM,installs/transformers-install/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-04-08T07:03:56Z,First Commit
github.com/MikeGu721/EasyLLM,installs/transformers-install/src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-04-08T07:03:56Z,First Commit
github.com/SqueezeAILab/KVQuant,gradients/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2024-02-06T09:26:27Z,First Commit
github.com/SqueezeAILab/KVQuant,gradients/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2024-02-06T09:26:27Z,First Commit
github.com/SqueezeAILab/KVQuant,gradients/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2024-02-06T09:26:27Z,First Commit
github.com/SqueezeAILab/KVQuant,gradients/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2024-02-06T09:26:27Z,First Commit
github.com/SqueezeAILab/KVQuant,gradients/src/transformers/models/timm_backbone/modeling_timm_backbone.py,2024-02-06T09:26:27Z,First Commit
github.com/SqueezeAILab/KVQuant,gradients/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2024-02-06T09:26:27Z,First Commit
github.com/SqueezeAILab/KVQuant,gradients/src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2024-02-06T09:26:27Z,First Commit
github.com/Zongwei97/PopNet,Code/lib/model_R18.py,2023-09-15T13:25:39Z,Create model_R18.py
github.com/shiwt03/MUSTER,mmseg/models/backbones/timm_backbone.py,2022-09-24T11:50:26Z,Initialize repo
github.com/SqueezeAILab/KVQuant,gradients/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2024-02-06T09:26:27Z,First Commit
github.com/SqueezeAILab/KVQuant,gradients/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2024-02-06T09:26:27Z,First Commit
github.com/SqueezeAILab/KVQuant,deployment/transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2024-02-16T20:56:11Z,Deployment Support
github.com/SqueezeAILab/KVQuant,deployment/transformers/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2024-02-16T20:56:11Z,Deployment Support
github.com/SqueezeAILab/KVQuant,deployment/transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2024-02-16T20:56:11Z,Deployment Support
github.com/SqueezeAILab/KVQuant,deployment/transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2024-02-16T20:56:11Z,Deployment Support
github.com/SqueezeAILab/KVQuant,deployment/transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2024-02-16T20:56:11Z,Deployment Support
github.com/SqueezeAILab/KVQuant,deployment/transformers/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2024-02-16T20:56:11Z,Deployment Support
github.com/SqueezeAILab/KVQuant,deployment/transformers/src/transformers/models/timm_backbone/modeling_timm_backbone.py,2024-02-16T20:56:11Z,Deployment Support
github.com/SqueezeAILab/KVQuant,deployment/transformers/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2024-02-16T20:56:11Z,Deployment Support
github.com/SqueezeAILab/KVQuant,deployment/transformers/src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2024-02-16T20:56:11Z,Deployment Support
github.com/XiaoyuShi97/VideoFlow,core/Networks/encoders.py,2023-07-26T08:14:34Z,release inference code for MOF
github.com/zifuwanggg/JDTLosses,models/backbones/backbone.py,2024-01-30T18:21:06Z,Reorganize code
github.com/zifuwanggg/JDTLosses,models/backbones/backbone.py,2023-11-01T02:52:59Z,Release training scripts
github.com/MiaoXiong2320/ProximityBias-Calibration,pytorch-image-models/tests/test_utils.py,2023-11-10T11:41:45Z,camera-ready clean
github.com/MiaoXiong2320/ProximityBias-Calibration,pytorch-image-models/tests/test_models.py,2023-11-10T11:41:45Z,camera-ready clean
github.com/ramber1836/TASD,code/pytorch/src/transformer/models/vit/convert_vit_timm_to_pytorch.py,2023-02-08T09:53:03Z,add pytorch code
github.com/ramber1836/TASD,code/pytorch/src/transformer/models/regnet/convert_regnet_to_pytorch.py,2023-02-08T09:53:03Z,add pytorch code
github.com/ramber1836/TASD,code/pytorch/src/transformer/models/resnet/convert_resnet_to_pytorch.py,2023-02-08T09:53:03Z,add pytorch code
github.com/ramber1836/TASD,code/pytorch/src/transformer/models/deit/convert_deit_timm_to_pytorch.py,2023-02-08T09:53:03Z,add pytorch code
github.com/ramber1836/TASD,code/pytorch/src/transformer/models/swin/convert_swin_timm_to_pytorch.py,2023-02-08T09:53:03Z,add pytorch code
github.com/ramber1836/TASD,code/pytorch/src/transformer/models/levit/convert_levit_timm_to_pytorch.py,2023-02-08T09:53:03Z,add pytorch code
github.com/Stephenfang51/image_classification_pytorch,model/models.py,2021-10-15T07:00:38Z,update 20211015
github.com/Stephenfang51/image_classification_pytorch,model/models.py,2021-10-13T06:28:58Z,update 20211013
github.com/Stephenfang51/image_classification_pytorch,model/model_zoo.py,2021-10-13T06:28:58Z,update 20211013
github.com/EarthNets/RSI-Segmentation,rsiseg/models/backbones/timm_backbone.py,2022-08-24T09:29:47Z,update loveda dataset
github.com/EarthNets/RSI-Segmentation,rsiseg/models/backbones/timm_backbone.py,2022-05-19T09:16:42Z,add repo
github.com/showlab/cosmo,src/multimodal_model/vision_model/base_model/mediasparseformer.py,2024-01-02T02:52:57Z,first commit
github.com/pilancilab/matrix-compressor,src/mnet/loader.py,2023-05-12T11:44:18Z,"feat(knn): implement knn on mnet embeddings

- implement mnet embedding generation scripts for v2 and v3
- add quantizer scripts for generated embeddings
- add loaders for mnet"
github.com/haoheliu/AudioLDM-training-finetuning,audioldm_train/modules/clap/open_clip/timm_model.py,2023-11-13T16:21:20Z,first commit
github.com/nomewang/M3DM,models/models.py,2023-03-20T07:28:04Z,Add files via upload
github.com/torchpipe/torchpipe,examples/gpu_train/train_dp.py,2024-01-29T08:24:27Z,rebuild_if exists for debug mode; update license
github.com/torchpipe/torchpipe,examples/gpu_train/train_dp.py,2023-12-11T03:29:41Z,"Develop (#20)

* update docs

* update docs

* fix typo

* fix typo

* fix typo; release for 0.3.3b1

* update readme

* 修复调用pplcv出错时，仍然赋值到result的问题

* changelog update

* add timing cache：model::timingcache

* minor fix for time cache

* timecache:fix log info

* 删除无关分支 (#13)

Co-authored-by: “Linyuxing” <linyuxing@corp.netease.com>

* Fix the error when the model input type and the actual input type are different (such as torch.int32 and torch.int64).

* Eliminate GPU memory usage after  conversion

* maitain order

* a

* compile error

* skip all ONNXTRT_Broadcast

* skip all ONNXTRT_Broadcast

* skip all ONNXTRT_Broadcast

* skip all ONNXTRT_Broadcast

* print node name

* print node name

* add index

* better print message

* add Range; add tuple

* Set English as the default display language.

* update link to llm

* changelog

* update doc

* update docs

* docs

* docs

* remove infer_model_input

* d

* fix train; add borrow_from;fix  TorchScriptTensor

* ”borrow_from“ force_range for TensorrtTensor

* docs update

* force_range per instance

* fix force_range

* update gpu_decode_train (#17)

* 删除无关分支

* modify hyperparameter for gpu_decode_train

---------

Co-authored-by: “Linyuxing” <linyuxing@corp.netease.com>

* fix unit test; TensorrtTensor: Release memory

* a

* experiment resnet50

* add set_xlabel

* save pdf

* Abandon version upgrade causing key incompat

* fix test for  test_tools.py

* fix A10 compile

* fix test_borrows by remove device_id

* 增加一些python后端设施

* res50

* triton test

* triton test

* triton test

* triton test

* triton test

* triton test

* triton

* triton

* res_thrift

* thrift-tp

* read_pkl

* add Python Backend

* torch allocator

* torch allocator

* max_work_sapce size settable

* allow 1 dim input

* typo

* quick cat

* a

* borrowreplay

* borrowreplay

* borrowreplay

* remove llama

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* new test

* a

* a

* a

* pipeline example

* a

* pipeline example

* pipeline example

* pipeline example

* a

* a

* a

* a

* a

* softmaxargmax

* a

* a

* a

* a

* a

* a

* a

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* experiment v0

* a

* a

* a

* 2 devices

* 2 devices

* 2 devices

* 2 devices

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* a

* register_filter

* a

* a

* a

* a

* register_filter

* a

* register_filter

* a

* remove print

* a

* a

* a

* a

* add clients

* a

* pplcv

* pipeline

* examples/

* fix

* fix changelog

* remove extra

* add .gitignore

* remove cvtcolor's contiguous

* ocr

---------

Signed-off-by: Nan <hydzhang@hotmail.com>
Co-authored-by: Linyuxing <57094406+Linyuxing@users.noreply.github.com>
Co-authored-by: “Linyuxing” <linyuxing@corp.netease.com>
Co-authored-by: root <root@yidun-ai-gpu242.jdlt.163.org>
Co-authored-by: zhangshiyang@crop.netease.com <zhangshiyang@crop.netease.com>"
github.com/torchpipe/torchpipe,examples/gpu_train/train_dp.py,2023-10-24T11:36:37Z,first commit
github.com/torchpipe/torchpipe,examples/gpu_train/train_ddp.py,2024-01-29T08:24:27Z,rebuild_if exists for debug mode; update license
github.com/torchpipe/torchpipe,examples/gpu_train/train_ddp.py,2023-10-24T11:36:37Z,first commit
github.com/torchpipe/torchpipe,examples/backbones/register_model.py,2024-01-29T08:24:27Z,rebuild_if exists for debug mode; update license
github.com/torchpipe/torchpipe,examples/backbones/register_model.py,2023-10-24T11:36:37Z,first commit
github.com/torchpipe/torchpipe,torchpipe/utils/models/onnx_export.py,2024-01-31T06:24:50Z,优化代码结构和条件编译选项
github.com/torchpipe/torchpipe,torchpipe/utils/models/onnx_export.py,2023-10-24T11:36:37Z,first commit
github.com/torchpipe/torchpipe,torchpipe/utils/models/register_models.py,2023-10-24T11:36:37Z,first commit
github.com/torchpipe/torchpipe,examples/gpu_train/test_gpu.py,2024-01-29T08:24:27Z,rebuild_if exists for debug mode; update license
github.com/torchpipe/torchpipe,examples/gpu_train/test_gpu.py,2023-10-24T11:36:37Z,first commit
github.com/torchpipe/torchpipe,torchpipe/utils/test/throughput.py,2024-01-29T08:24:27Z,rebuild_if exists for debug mode; update license
github.com/torchpipe/torchpipe,torchpipe/utils/test/throughput.py,2023-10-24T11:36:37Z,first commit
github.com/torchpipe/torchpipe,examples/backbones/test_throughput.py,2024-01-29T08:24:27Z,rebuild_if exists for debug mode; update license
github.com/torchpipe/torchpipe,examples/backbones/test_throughput.py,2023-10-24T11:36:37Z,first commit
github.com/AHKerrigan/GeoGuessNet,utils.py,2022-07-18T17:37:00Z,Dixes
github.com/AHKerrigan/GeoGuessNet,utils.py,2022-07-15T19:47:48Z,new stuff
github.com/YyzHarry/SubpopBench,subpopbench/models/networks.py,2023-02-23T02:19:09Z,code release
github.com/hwang595/Cuttlefish,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-03-30T03:34:49Z,init push
github.com/hwang595/Cuttlefish,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-03-30T03:34:49Z,init push
github.com/hwang595/Cuttlefish,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-03-30T03:34:49Z,init push
github.com/hwang595/Cuttlefish,transformers/build/lib/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-03-30T03:34:49Z,init push
github.com/hwang595/Cuttlefish,transformers/build/lib/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-03-30T03:34:49Z,init push
github.com/hwang595/Cuttlefish,transformers/build/lib/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-03-30T03:34:49Z,init push
github.com/TorchDSP/torchsig,torchsig/models/iq_models/xcit/xcit.py,2023-06-13T13:19:12Z,"v0.4.0 (#137)

* Change README logo if in dark mode (#95)

* Start transform tests & minor `RandomTimeShift` optimization (#94)

* Start transform tests & slight optimization in RandomTimeShift

* Add new length check for TimeCrop tests

* Code style

* Fixed name mangling.

* QAM/PSK Pulse shaping filter transition bandwidth corrected (#98)

* excess bandwidth is defined in porportion to signal bandwidth, not sampling rate, thus needs to be scaled by the samples per symbol

* filling in a comment to describe modification to code

* QAM/PSK Pulse shaping filter transition bandwidth corrected (#98)

* excess bandwidth is defined in porportion to signal bandwidth, not sampling rate, thus needs to be scaled by the samples per symbol

* filling in a comment to describe modification to code

* OFDM Modulator filter lengths estimated and bandwidth randomized (#99)

* * cutoff frequency for LPF now randomized when using 'rand_lpf'
* derives a transition bandwidth from the cutoff frequency
* uses filter length approximating function for the randomized LPF

* using filter estimation function for pre-computed LPF taps

* Tests for visual inspection. (#103)

* 91 create generation performance benchmarks for each modulation type (#104)

* Initial benchmarking code.

* Some benchmarks

* Adding initial benchmarks.

* Fix action.

---------

* 75 examine ofdm generation for potential speedups for sig53 (#105)

* Tests for visual inspection of modulation generation. (#102)

* Optimizations show significant improvement in generation speed.

* Nominal behavior after using scipy.

* Adding initial Dockerfile (#108)

* Incrementing version

* Fix float issue (#111)

* Initial draft of restructuring transforms (#106)

* Flatten transforms to mirror torchvision/audio structure & add reprs

* Address flake8 errors

* Update transform imports with restructuring

* Formatting.

---------

* Fixing broken examples, formatting files, etc.

* Adjustments for generation speed

* Wideband generation working.

* 45 consider compatibility with torch 20 (#115)

* Seems to work

* Workflow is broken

* Python 3.7 not supported for Torch 2.0

* Adjusting test workflow

* Extracted out a method for filter design. Put DSP-only things in utils/dsp (#116)

* Benchmark and visualize wideband dataset generation. (#118)

* Extracted out a method for filter design. Put DSP-only things in utils/dsp

* New tests.

* Migrated to pytest. (#119)

* Added model instantiation tests for narrowband signals. (#120)

* 85 gmskgfsk also needs faster filtering due to convolution of long signals with gaussian pulse shape (#121)

* Change all references to convolution to scipy-based convolutions.

* Missed one.

* Add mypy workflow check and fix all mypy-found bugs (#123)

* Fix mypy in target_transforms

* Add mypy workflow for static type checking

* Fix typo in mypy.yml workflow

* Fix mypy in torchsig/transforms/functional.py

* Fix mypy in utils/types.py

* Fix mypy in torchsig/utils/

* Fix mypy in torchsig/transforms/

* Fix mypy in torchsig/datasets/

* Fix mypy in torchsig/models/

* Format with pyfmt

* Fix isinstance(x, Callable)

* Add PR template

* Adjusting module (#130)

* 131 configure package for pypi release (#132)

* Adjusting installation

* More information on pyproject.toml

* More information on pyproject.toml

* I guess some keywords in current documentation do not work :/.

* Ignore distributable artifacts

* More documentation and examples (#134)

* More documentation and examples

* Added script to train

* Remove duplicate script

* 126 create dockerfile and script for generating all versions of widebandsig53 (#135)

* Added generation script.

* Adding scripts

* Fixing mypy issue.

* 127 create test suite for visually validating transforms (#136)

* Some transforms here

* Most transforms included

---------

Co-authored-by: lboegner <luke.boegner@gmail.com>
Co-authored-by: Garrett Vanhoy <gmvanhoy@gmail.com>
Co-authored-by: MattCarrickPL <120057274+MattCarrickPL@users.noreply.github.com>"
github.com/TorchDSP/torchsig,torchsig/models/iq_models/xcit/xcit.py,2022-11-22T14:20:43Z,"Wideband datasets, models, etc. (#21)

* Wideband extensions to TorchSig

* add missing req and update dataset init

* Adding necessary transforms and visualizations.

Co-authored-by: Luke Boegner <luke.boegner@gmail.com>
Co-authored-by: Garrett Vanhoy <gmvanhoy@gmail.com>"
github.com/TorchDSP/torchsig,torchsig/models/spectrogram_models/detr/modules.py,2023-06-13T13:19:12Z,"v0.4.0 (#137)

* Change README logo if in dark mode (#95)

* Start transform tests & minor `RandomTimeShift` optimization (#94)

* Start transform tests & slight optimization in RandomTimeShift

* Add new length check for TimeCrop tests

* Code style

* Fixed name mangling.

* QAM/PSK Pulse shaping filter transition bandwidth corrected (#98)

* excess bandwidth is defined in porportion to signal bandwidth, not sampling rate, thus needs to be scaled by the samples per symbol

* filling in a comment to describe modification to code

* QAM/PSK Pulse shaping filter transition bandwidth corrected (#98)

* excess bandwidth is defined in porportion to signal bandwidth, not sampling rate, thus needs to be scaled by the samples per symbol

* filling in a comment to describe modification to code

* OFDM Modulator filter lengths estimated and bandwidth randomized (#99)

* * cutoff frequency for LPF now randomized when using 'rand_lpf'
* derives a transition bandwidth from the cutoff frequency
* uses filter length approximating function for the randomized LPF

* using filter estimation function for pre-computed LPF taps

* Tests for visual inspection. (#103)

* 91 create generation performance benchmarks for each modulation type (#104)

* Initial benchmarking code.

* Some benchmarks

* Adding initial benchmarks.

* Fix action.

---------

* 75 examine ofdm generation for potential speedups for sig53 (#105)

* Tests for visual inspection of modulation generation. (#102)

* Optimizations show significant improvement in generation speed.

* Nominal behavior after using scipy.

* Adding initial Dockerfile (#108)

* Incrementing version

* Fix float issue (#111)

* Initial draft of restructuring transforms (#106)

* Flatten transforms to mirror torchvision/audio structure & add reprs

* Address flake8 errors

* Update transform imports with restructuring

* Formatting.

---------

* Fixing broken examples, formatting files, etc.

* Adjustments for generation speed

* Wideband generation working.

* 45 consider compatibility with torch 20 (#115)

* Seems to work

* Workflow is broken

* Python 3.7 not supported for Torch 2.0

* Adjusting test workflow

* Extracted out a method for filter design. Put DSP-only things in utils/dsp (#116)

* Benchmark and visualize wideband dataset generation. (#118)

* Extracted out a method for filter design. Put DSP-only things in utils/dsp

* New tests.

* Migrated to pytest. (#119)

* Added model instantiation tests for narrowband signals. (#120)

* 85 gmskgfsk also needs faster filtering due to convolution of long signals with gaussian pulse shape (#121)

* Change all references to convolution to scipy-based convolutions.

* Missed one.

* Add mypy workflow check and fix all mypy-found bugs (#123)

* Fix mypy in target_transforms

* Add mypy workflow for static type checking

* Fix typo in mypy.yml workflow

* Fix mypy in torchsig/transforms/functional.py

* Fix mypy in utils/types.py

* Fix mypy in torchsig/utils/

* Fix mypy in torchsig/transforms/

* Fix mypy in torchsig/datasets/

* Fix mypy in torchsig/models/

* Format with pyfmt

* Fix isinstance(x, Callable)

* Add PR template

* Adjusting module (#130)

* 131 configure package for pypi release (#132)

* Adjusting installation

* More information on pyproject.toml

* More information on pyproject.toml

* I guess some keywords in current documentation do not work :/.

* Ignore distributable artifacts

* More documentation and examples (#134)

* More documentation and examples

* Added script to train

* Remove duplicate script

* 126 create dockerfile and script for generating all versions of widebandsig53 (#135)

* Added generation script.

* Adding scripts

* Fixing mypy issue.

* 127 create test suite for visually validating transforms (#136)

* Some transforms here

* Most transforms included

---------

Co-authored-by: lboegner <luke.boegner@gmail.com>
Co-authored-by: Garrett Vanhoy <gmvanhoy@gmail.com>
Co-authored-by: MattCarrickPL <120057274+MattCarrickPL@users.noreply.github.com>"
github.com/TorchDSP/torchsig,torchsig/models/spectrogram_models/detr/modules.py,2023-05-03T17:03:39Z,"Initial removal of cupy as dependency. Replaced with torch.  (#86)

* Initial removal of cupy as dependency. Replaced with torch. Fixing wideband notebook.

* This runs.

* Fixed issue with num_symbols."
github.com/TorchDSP/torchsig,torchsig/models/spectrogram_models/detr/modules.py,2023-05-02T19:09:44Z,Fixing missing imports
github.com/TorchDSP/torchsig,torchsig/models/spectrogram_models/detr/modules.py,2023-05-02T17:47:54Z,Restoring DETR. Notebook runs in QA environment. (#78)
github.com/TorchDSP/torchsig,torchsig/models/spectrogram_models/detr/modules.py,2023-03-23T20:07:22Z,"44 create and automate test suite (#46)

* Basic test and workflow.

* Workflow installing pytest.

* Wrong command.

* Running linting first.

* Proper unit test.

* Fix test dependency.

* Removed non-working spectrogram code.

* Fixing version mechanism

---------"
github.com/TorchDSP/torchsig,torchsig/models/spectrogram_models/detr/modules.py,2022-11-22T14:20:43Z,"Wideband datasets, models, etc. (#21)

* Wideband extensions to TorchSig

* add missing req and update dataset init

* Adding necessary transforms and visualizations.

Co-authored-by: Luke Boegner <luke.boegner@gmail.com>
Co-authored-by: Garrett Vanhoy <gmvanhoy@gmail.com>"
github.com/TorchDSP/torchsig,torchsig/models/iq_models/efficientnet/efficientnet.py,2023-06-13T13:19:12Z,"v0.4.0 (#137)

* Change README logo if in dark mode (#95)

* Start transform tests & minor `RandomTimeShift` optimization (#94)

* Start transform tests & slight optimization in RandomTimeShift

* Add new length check for TimeCrop tests

* Code style

* Fixed name mangling.

* QAM/PSK Pulse shaping filter transition bandwidth corrected (#98)

* excess bandwidth is defined in porportion to signal bandwidth, not sampling rate, thus needs to be scaled by the samples per symbol

* filling in a comment to describe modification to code

* QAM/PSK Pulse shaping filter transition bandwidth corrected (#98)

* excess bandwidth is defined in porportion to signal bandwidth, not sampling rate, thus needs to be scaled by the samples per symbol

* filling in a comment to describe modification to code

* OFDM Modulator filter lengths estimated and bandwidth randomized (#99)

* * cutoff frequency for LPF now randomized when using 'rand_lpf'
* derives a transition bandwidth from the cutoff frequency
* uses filter length approximating function for the randomized LPF

* using filter estimation function for pre-computed LPF taps

* Tests for visual inspection. (#103)

* 91 create generation performance benchmarks for each modulation type (#104)

* Initial benchmarking code.

* Some benchmarks

* Adding initial benchmarks.

* Fix action.

---------

* 75 examine ofdm generation for potential speedups for sig53 (#105)

* Tests for visual inspection of modulation generation. (#102)

* Optimizations show significant improvement in generation speed.

* Nominal behavior after using scipy.

* Adding initial Dockerfile (#108)

* Incrementing version

* Fix float issue (#111)

* Initial draft of restructuring transforms (#106)

* Flatten transforms to mirror torchvision/audio structure & add reprs

* Address flake8 errors

* Update transform imports with restructuring

* Formatting.

---------

* Fixing broken examples, formatting files, etc.

* Adjustments for generation speed

* Wideband generation working.

* 45 consider compatibility with torch 20 (#115)

* Seems to work

* Workflow is broken

* Python 3.7 not supported for Torch 2.0

* Adjusting test workflow

* Extracted out a method for filter design. Put DSP-only things in utils/dsp (#116)

* Benchmark and visualize wideband dataset generation. (#118)

* Extracted out a method for filter design. Put DSP-only things in utils/dsp

* New tests.

* Migrated to pytest. (#119)

* Added model instantiation tests for narrowband signals. (#120)

* 85 gmskgfsk also needs faster filtering due to convolution of long signals with gaussian pulse shape (#121)

* Change all references to convolution to scipy-based convolutions.

* Missed one.

* Add mypy workflow check and fix all mypy-found bugs (#123)

* Fix mypy in target_transforms

* Add mypy workflow for static type checking

* Fix typo in mypy.yml workflow

* Fix mypy in torchsig/transforms/functional.py

* Fix mypy in utils/types.py

* Fix mypy in torchsig/utils/

* Fix mypy in torchsig/transforms/

* Fix mypy in torchsig/datasets/

* Fix mypy in torchsig/models/

* Format with pyfmt

* Fix isinstance(x, Callable)

* Add PR template

* Adjusting module (#130)

* 131 configure package for pypi release (#132)

* Adjusting installation

* More information on pyproject.toml

* More information on pyproject.toml

* I guess some keywords in current documentation do not work :/.

* Ignore distributable artifacts

* More documentation and examples (#134)

* More documentation and examples

* Added script to train

* Remove duplicate script

* 126 create dockerfile and script for generating all versions of widebandsig53 (#135)

* Added generation script.

* Adding scripts

* Fixing mypy issue.

* 127 create test suite for visually validating transforms (#136)

* Some transforms here

* Most transforms included

---------

Co-authored-by: lboegner <luke.boegner@gmail.com>
Co-authored-by: Garrett Vanhoy <gmvanhoy@gmail.com>
Co-authored-by: MattCarrickPL <120057274+MattCarrickPL@users.noreply.github.com>"
github.com/TorchDSP/torchsig,torchsig/models/iq_models/efficientnet/efficientnet.py,2022-11-22T14:20:43Z,"Wideband datasets, models, etc. (#21)

* Wideband extensions to TorchSig

* add missing req and update dataset init

* Adding necessary transforms and visualizations.

Co-authored-by: Luke Boegner <luke.boegner@gmail.com>
Co-authored-by: Garrett Vanhoy <gmvanhoy@gmail.com>"
github.com/yinhanxi/LSMD-Net,LSMD-Net-github/deepstereo/model_zoo/coex/feature.py,2022-09-29T12:30:31Z,"version 0.0

first version"
github.com/yinhanxi/LSMD-Net,LSMD-Net-github/deepstereo/model_zoo/lsfnet/feature.py,2022-09-29T12:30:31Z,"version 0.0

first version"
github.com/ByChelsea/VAND-APRIL-GAN,open_clip/timm_model.py,2023-06-13T08:38:14Z,first commit
github.com/feizc/Video-Stable-Diffusion,deforum-stable-diffusion/src/midas/vit.py,2023-01-10T05:58:44Z,add dependency
github.com/bobo0810/Classification,Models/Backbone/backbone.py,2022-06-08T08:16:46Z,规范化主干网络
github.com/bobo0810/Classification,Models/Backbone/backbone.py,2022-05-30T05:53:31Z,重构主干网络模块，插件化
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-06-08T08:16:46Z,规范化主干网络
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-05-30T05:53:31Z,重构主干网络模块，插件化
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-05-23T02:17:19Z,简化模型加载
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-05-20T07:47:44Z,fix
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-05-18T09:53:03Z,"重构模型初始化,两种任务均支持600+预训练模型"
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-05-12T07:27:42Z,fix
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-04-11T14:03:40Z,简化模型加载
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-04-06T08:51:32Z,度量学习: 支持训练
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-04-02T10:32:25Z,度量学习: 初步支持训练，暂未收敛
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-03-28T08:58:12Z,删除权重加载旧版代码
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-03-09T13:18:03Z,fix
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-03-09T13:17:42Z,修复onnx导出错误
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-03-09T08:01:20Z,更改为labels.txt形式
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-03-04T09:40:28Z,修复timm无法载自定义模型
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-03-04T06:55:08Z,简化自定义backbone
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-03-01T06:00:19Z,fix
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-02-25T10:56:18Z,fix
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-02-25T08:03:23Z,fix
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-02-25T06:52:13Z,规范命名
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-02-24T13:25:25Z,fix
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-02-23T08:18:26Z,backbone支持自定义
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-02-18T07:51:55Z,集成Timm模型库
github.com/bobo0810/Classification,Models/Backbone/__init__.py,2022-02-17T08:09:25Z,init
github.com/huangqzj/Select2Col,opencood/tools/train_utils.py,2023-09-04T08:07:23Z,first commit
github.com/thuyngch/ATSS-EfficientDet-PyTorch,mmdet/models/backbones/timm_backbone.py,2020-04-16T08:32:09Z,initial upload
github.com/pavelsuma/raml,lib/networks/imageretrievalnet.py,2022-11-28T08:06:05Z,Initial commit
github.com/Hiroki11x/Optimizer_Comparison_OOD,backgrounds_challenge/tools/model_utils.py,2022-11-10T17:33:25Z,sync anonymize repository to public repository
github.com/moein-shariatnia/Pix2Seq,model.py,2022-08-17T17:32:41Z,added test.py
github.com/moein-shariatnia/Pix2Seq,model.py,2022-08-16T18:34:05Z,initial commit
github.com/caoyunkang/WinClip,WinCLIP/CLIPAD/timm_model.py,2023-05-21T11:47:01Z,initial commit.
github.com/scortexio/patchcore-few-shot,src/anomalib/models/patchcore/torch_model.py,2023-07-21T07:32:25Z,Initial Commit
github.com/scortexio/patchcore-few-shot,src/anomalib/models/components/feature_extractors/timm.py,2023-07-21T07:32:25Z,Initial Commit
github.com/rese1f/UniAP,model/dpt/vit.py,2023-08-19T08:00:01Z,commit version
github.com/zhoudaquan/dvit_repo,tests/test_models.py,2021-04-16T05:10:38Z,code cleanup
github.com/OpenGVLab/LAMM,src/tools/Octavius/ULIP/models/ULIP_models.py,2023-10-31T06:52:42Z,add 3d data instruction
github.com/skzhang1/IDEAL,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-10-16T16:53:13Z,draft
github.com/skzhang1/IDEAL,transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-10-16T16:53:13Z,draft
github.com/skzhang1/IDEAL,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-10-16T16:53:13Z,draft
github.com/skzhang1/IDEAL,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-10-16T16:53:13Z,draft
github.com/TXH-mercury/VAST,model/vision_encoders/evaclip/timm_model.py,2024-02-23T14:11:29Z,first
github.com/runpod/serverless-workers,workers/ControlNet/annotator/midas/midas/vit.py,2023-03-15T01:23:53Z,feat: start ControlNet Endpoint
github.com/runpod/serverless-workers,workers/ControlNet/ldm/modules/midas/midas/vit.py,2023-03-15T01:23:53Z,feat: start ControlNet Endpoint
github.com/openmedlab/DeblurringMIM,main_finetune.py,2023-06-09T07:22:37Z,second commit
github.com/openmedlab/DeblurringMIM,main_finetune.py,2023-06-08T05:05:56Z,first commit
github.com/openmedlab/DeblurringMIM,SEG_UNET/segmentation_models_pytorch/encoders/timm_mobilenetv3.py,2023-09-04T06:06:52Z,add SEG_UNET
github.com/flyingsheepbin/pet-biometrics,b7ns_stage1/model.py,2022-05-30T13:05:31Z,first commit
github.com/flyingsheepbin/pet-biometrics,v2_stage1/model_v2.py,2022-05-30T13:05:31Z,first commit
github.com/flyingsheepbin/pet-biometrics,v2_stage2/model_v2.py,2022-05-30T13:05:31Z,first commit
github.com/flyingsheepbin/pet-biometrics,b7ns_stage2/model_b7.py,2022-05-30T13:05:31Z,first commit
github.com/flyingsheepbin/pet-biometrics,pseudo_produce/model.py,2022-05-30T13:05:31Z,first commit
github.com/flyingsheepbin/pet-biometrics,swin224_stage1/model.py,2022-05-30T13:05:31Z,first commit
github.com/flyingsheepbin/pet-biometrics,swin224_stage2/model.py,2022-05-30T13:05:31Z,first commit
github.com/flyingsheepbin/pet-biometrics,swin384_stage1/model.py,2022-05-30T13:05:31Z,first commit
github.com/flyingsheepbin/pet-biometrics,swin384_stage2/model.py,2022-05-30T13:05:31Z,first commit
github.com/flyingsheepbin/pet-biometrics,b7ns_stage1/model_infer.py,2022-05-30T13:05:31Z,first commit
github.com/flyingsheepbin/pet-biometrics,v2_stage1/model_v2_infer.py,2022-05-30T13:05:31Z,first commit
github.com/flyingsheepbin/pet-biometrics,v2_stage2/model_v2_infer.py,2022-05-30T13:05:31Z,first commit
github.com/flyingsheepbin/pet-biometrics,b7ns_stage2/model_b7_infer.py,2022-05-30T13:05:31Z,first commit
github.com/flyingsheepbin/pet-biometrics,swin224_stage1/model_infer.py,2022-05-30T13:05:31Z,first commit
github.com/flyingsheepbin/pet-biometrics,swin224_stage2/model_infer.py,2022-05-30T13:05:31Z,first commit
github.com/flyingsheepbin/pet-biometrics,swin384_stage1/model_infer.py,2022-05-30T13:05:31Z,first commit
github.com/flyingsheepbin/pet-biometrics,swin384_stage2/model_infer.py,2022-05-30T13:05:31Z,first commit
github.com/thu-coai/PICL,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-01-14T14:00:04Z,init
github.com/thu-coai/PICL,transformers/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-01-14T14:00:04Z,init
github.com/thu-coai/PICL,transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-01-14T14:00:04Z,init
github.com/thu-coai/PICL,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-01-14T14:00:04Z,init
github.com/thu-coai/PICL,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-01-14T14:00:04Z,init
github.com/thu-coai/PICL,transformers/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-01-14T14:00:04Z,init
github.com/thu-coai/PICL,transformers/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-01-14T14:00:04Z,init
github.com/rezazad68/transdeeplab,model/encoder.py,2022-07-18T10:40:16Z,"Added Files

Added files for the initial release"
github.com/gokul-pv/lightning-hydra-timm,predict.py,2022-09-11T14:53:58Z,added cookiecutter and new experiment config for cifar10 training
github.com/gokul-pv/lightning-hydra-timm,predict.py,2022-09-11T11:27:18Z,integration of timm and dockerization
github.com/gokul-pv/lightning-hydra-timm,src/models/cifar10_module.py,2022-10-31T11:14:25Z,Added model explainability and model robustness check
github.com/gokul-pv/lightning-hydra-timm,src/models/cifar10_module.py,2022-10-21T13:54:17Z,"- Added Sharded Training using fairscale
- Added config for training over internet using hivemind
- Added config for multi node multi gpu using ddp"
github.com/gokul-pv/lightning-hydra-timm,src/models/cifar10_module.py,2022-10-05T12:57:43Z,Added torch tracing to save the model and run from docker image
github.com/gokul-pv/lightning-hydra-timm,src/models/cifar10_module.py,2022-10-04T16:58:12Z,Fixed running gradio inside docker
github.com/gokul-pv/lightning-hydra-timm,src/models/cifar10_module.py,2022-09-30T03:22:30Z,"- Added torch scripting to save the model
- Added a demo UI using gradio and dockerised
- Restructured hp_metric logging and docker folders"
github.com/gokul-pv/lightning-hydra-timm,src/models/cifar10_module.py,2022-09-23T14:09:29Z,"- Added per stepping logging for cifar10 model training
- Fixed hp_metric in tensorboard logging by adding validation loss as metric
- Added Hyperparam sweep for CIFAR10 dataset with resnet18 from timm to find the best batch_size and learning rate, and optimizer"
github.com/gokul-pv/lightning-hydra-timm,src/models/cifar10_module.py,2022-09-11T14:53:58Z,added cookiecutter and new experiment config for cifar10 training
github.com/gokul-pv/lightning-hydra-timm,src/models/cifar10_module.py,2022-09-11T11:27:18Z,integration of timm and dockerization
github.com/sowmen/face-cutout,train.py,2021-11-15T05:03:33Z,train fixed
github.com/sowmen/face-cutout,train.py,2021-11-14T17:00:10Z,init
github.com/GeekDream-x/IDOL,transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-07-14T08:12:20Z,add correct trms
github.com/GeekDream-x/IDOL,transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-07-14T08:10:38Z,rm wrong trms
github.com/GeekDream-x/IDOL,transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-07-13T14:35:48Z,add env yml and transformers
github.com/GeekDream-x/IDOL,transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-07-14T08:12:20Z,add correct trms
github.com/GeekDream-x/IDOL,transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-07-14T08:10:38Z,rm wrong trms
github.com/GeekDream-x/IDOL,transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-07-13T14:35:48Z,add env yml and transformers
github.com/CarnoZhao/RSIPAC_Track2,src/models/mmseg_models.py,2022-08-27T07:37:02Z,debug timm backbone with multiple layers
github.com/CarnoZhao/RSIPAC_Track2,src/models/mmseg_models.py,2022-08-26T09:03:40Z,rsipac init
github.com/CarnoZhao/RSIPAC_Track2,src/models/mmseg_models.py,2022-08-24T07:35:53Z,remove test mode aux head output
github.com/CarnoZhao/RSIPAC_Track2,src/models/mmseg_models.py,2022-08-22T12:09:19Z,add aux fcn head
github.com/CarnoZhao/RSIPAC_Track2,src/models/mmseg_models.py,2022-08-22T07:35:10Z,debug
github.com/CarnoZhao/RSIPAC_Track2,src/models/mmseg_models.py,2022-08-13T09:20:56Z,add fpn and fpn-head pvt
github.com/CarnoZhao/RSIPAC_Track2,src/models/mmseg_models.py,2022-08-13T01:40:57Z,add mmseg pvt_v2 model
github.com/CarnoZhao/RSIPAC_Track2,src/models/mmseg_models.py,2022-08-12T08:59:17Z,remove mmcv and debug load state dict
github.com/CarnoZhao/RSIPAC_Track2,src/models/mmseg_models.py,2022-08-12T03:10:31Z,merge
github.com/CarnoZhao/RSIPAC_Track2,src/models/mmseg_models.py,2022-08-12T03:04:40Z,add mmseg segformer
github.com/CarnoZhao/RSIPAC_Track2,src/models/mmseg_models.py,2022-08-09T05:21:13Z,add basic segmentation pipeline
github.com/CarnoZhao/RSIPAC_Track2,src/models/mmseg_models.py,2022-08-09T02:52:57Z,hubmap init
github.com/bytedance/Shot2Story,code/lavis/models/clip_models/model.py,2023-12-16T15:56:46Z,init
github.com/bytedance/Shot2Story,code/lavis/models/clip_models/timm_model.py,2023-12-16T15:56:46Z,init
github.com/OpenGVLab/InternVL-MMDetSeg,mmsegmentation/mmseg/models/backbones/timm_backbone.py,2024-01-16T14:52:08Z,Release code
github.com/TencentARC/ViT-Lens,vitlens/src/open_clip/timm_model.py,2023-12-15T07:17:15Z,Release ViT-Lens code and models
github.com/compphoto/IntrinsicFlashPhotography,models/altered_midas/vit.py,2023-03-15T21:57:31Z,initial commit
github.com/ternaus/facemask_detection,facemask_detection/pre_trained_models.py,2020-08-09T19:04:15Z,Added function to clean weights
github.com/mipypf/Vesuvius-Challenge,yukke/inkdet/tools/submit.py,2023-07-13T14:34:57Z,"add yukke's code

Signed-off-by: yukke42 <yukke42@users.noreply.github.com>"
github.com/mipypf/Vesuvius-Challenge,tattaka_ron/src/exp055/train.py,2023-06-16T14:00:42Z,clean up solution
github.com/mipypf/Vesuvius-Challenge,yukke/inkdet/tools/benchmark_timm_trt.py,2023-07-13T14:34:57Z,"add yukke's code

Signed-off-by: yukke42 <yukke42@users.noreply.github.com>"
github.com/Rajhans0/Poly_INR,training/loss.py,2023-05-22T22:55:48Z,Initial commit
github.com/Rajhans0/Poly_INR,feature_networks/vit.py,2023-05-22T22:55:48Z,Initial commit
github.com/Rajhans0/Poly_INR,feature_networks/pretrained_builder.py,2023-05-22T22:55:48Z,Initial commit
github.com/NeuralCollapseApplications/UniCIL,mmcls/models/backbones/timm_backbone.py,2023-07-04T11:49:30Z,add cil & ltcil (#1)
github.com/Tlntin/trt2023,annotator/midas/midas/vit.py,2023-07-12T10:22:38Z,first commit
github.com/Tlntin/trt2023,ldm/modules/midas/midas/vit.py,2023-07-12T10:22:38Z,first commit
github.com/inspire-group/PatchCleanser,train_model.py,2022-02-07T19:42:24Z,added more instructions
github.com/inspire-group/PatchCleanser,train_model.py,2021-08-23T13:02:47Z,added files
github.com/inspire-group/PatchCleanser,utils/setup.py,2023-05-17T22:56:50Z,Added MAE
github.com/inspire-group/PatchCleanser,utils/setup.py,2022-02-06T20:47:44Z,Minor changes
github.com/inspire-group/PatchCleanser,utils/setup.py,2022-02-06T17:17:42Z,minor update
github.com/inspire-group/PatchCleanser,utils/setup.py,2021-08-23T13:12:24Z,Update setup.py
github.com/inspire-group/PatchCleanser,utils/setup.py,2021-08-23T13:02:47Z,added files
github.com/reresearcher/DAEH,model_loader.py,2022-12-26T02:38:30Z,Add files via upload
github.com/modestyachts/imagenet-testbed,src/models/vit.py,2020-11-20T18:03:59Z,add vit and bit-m models
github.com/modestyachts/imagenet-testbed,src/models/low_accuracy.py,2021-09-16T03:45:03Z,add new models and existing evaluation data capability
github.com/modestyachts/imagenet-testbed,src/models/efficientnet.py,2020-07-21T02:43:37Z,initial source code commit
github.com/IBM/concept_transformer,ctc/vit.py,2022-05-30T18:35:30Z,Use large VIT backbone
github.com/IBM/concept_transformer,ctc/vit.py,2022-03-18T13:14:31Z,Commit of paper code
github.com/610265158/face_landmark_pytorch,lib/core/model/face_model.py,2022-12-25T08:53:24Z,distill
github.com/610265158/face_landmark_pytorch,lib/core/base_trainer/model.py,2022-12-25T08:53:24Z,distill
github.com/stephenllh/image-captioning-transformer,src/model.py,2021-08-13T03:10:27Z,first commit
github.com/MarcLafon/heatood,heat/ebm/create_backbone.py,2023-07-25T09:37:36Z,First commit
github.com/snap-research/3dgp,scripts/data_scripts/extract_features.py,2023-05-06T11:47:41Z,feat (*): initial release
github.com/ZitongYu/Benchmarking,models/ResNet_Xception.py,2024-01-14T01:52:12Z,Add files via upload
github.com/ZitongYu/Benchmarking,models/ViT_partial_shared.py,2024-01-14T01:52:12Z,Add files via upload
github.com/ZitongYu/Benchmarking,train_FAS_Deepfake_ViT_2head.py,2024-01-14T01:52:12Z,Add files via upload
github.com/ZitongYu/Benchmarking,train_FAS_Deepfake_ViT_Simult.py,2024-01-14T01:52:12Z,Add files via upload
github.com/ZitongYu/Benchmarking,train_FAS_Deepfake_ViT_3class.py,2024-01-14T01:52:12Z,Add files via upload
github.com/ZitongYu/Benchmarking,train_FAS_Deepfake_ViT_TaskbyTask.py,2024-01-14T01:52:12Z,Add files via upload
github.com/ZitongYu/Benchmarking,train_FAS_Deepfake_ViT_Alternating.py,2024-01-14T01:52:12Z,Add files via upload
github.com/ZitongYu/Benchmarking,train_FAS_Deepfake_ViT_STmap_Last_CWT224.py,2024-01-14T01:52:12Z,Add files via upload
github.com/ZitongYu/Benchmarking,train_FAS_Deepfake_ViT_STmap_Last_CWT224_2head.py,2024-01-14T01:52:12Z,Add files via upload
github.com/ZitongYu/Benchmarking,train_FAS_Deepfake_ViT_STmap_Last_CWT224_Simult.py,2024-01-14T01:52:12Z,Add files via upload
github.com/ZitongYu/Benchmarking,train_FAS_Deepfake_ViT_STmap_Last_CWT224_3class.py,2024-01-14T01:52:12Z,Add files via upload
github.com/ZitongYu/Benchmarking,train_FAS_Deepfake_ViT_STmap_Last_CWT224_TaskbyTask.py,2024-01-14T01:52:12Z,Add files via upload
github.com/ZitongYu/Benchmarking,train_FAS_Deepfake_ViT_STmap_Last_CWT224_Alternating.py,2024-01-14T01:52:12Z,Add files via upload
github.com/hritam-98/GFDA-disentangled,models/backbone.py,2023-07-07T01:04:08Z,Add files via upload
github.com/IIT-PAVIS/Positional_Diffusion,puzzle_diff/model/backbones/backbone_vist.py,2023-03-21T14:33:10Z,Release code
github.com/IIT-PAVIS/Positional_Diffusion,puzzle_diff/model/backbones/efficient_gat.py,2023-03-21T14:33:10Z,Release code
github.com/IIT-PAVIS/Positional_Diffusion,puzzle_diff/model/backbones/efficient_gat_new.py,2023-03-21T14:33:10Z,Release code
github.com/IIT-PAVIS/Positional_Diffusion,puzzle_diff/model/backbones/darknet_TransfConv.py,2023-03-21T14:33:10Z,Release code
github.com/ilkerkesen/frozen,frozen/model.py,2022-07-23T12:30:06Z,hotfix for obtaining vit hidden size
github.com/ilkerkesen/frozen,frozen/model.py,2022-07-22T16:36:21Z,hack OPT decoding to make the model completely working (#4)
github.com/ilkerkesen/frozen,frozen/model.py,2022-07-17T13:23:19Z,"add NF-ResNet, more modular config"
github.com/ilkerkesen/frozen,frozen/model.py,2022-07-04T22:12:19Z,"CC3M (#2)

* implement conceptual captions pipeline

* update README"
github.com/ilkerkesen/frozen,frozen/model.py,2022-07-04T19:26:41Z,initial implementation with COCO (#1)
github.com/xlang-ai/icl-selective-annotation,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-09-05T16:02:43Z,update
github.com/xlang-ai/icl-selective-annotation,transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-09-05T16:02:43Z,update
github.com/xlang-ai/icl-selective-annotation,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-09-05T16:02:43Z,update
github.com/xlang-ai/icl-selective-annotation,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-09-05T16:02:43Z,update
github.com/wkcn/TinyViT,tests/test_models.py,2023-06-28T12:16:23Z,hello world
github.com/thecharm/TMR,TMR-NER/models/bert_model.py,2023-06-12T02:04:35Z,Add files via upload
github.com/thecharm/TMR,TMR-RE/opennre/encoder/bert_encoder.py,2024-01-22T12:06:39Z,Add files via upload
github.com/thecharm/TMR,TMR-RE/opennre/encoder/bert_encoder.py,2023-06-12T01:53:29Z,Add files via upload
github.com/dlmacedo/robust-deep-learning,train.py,2022-08-27T16:52:54Z,first commit
github.com/dlmacedo/robust-deep-learning,detect.py,2022-11-26T12:57:09Z,minor
github.com/dlmacedo/robust-deep-learning,detect.py,2022-08-28T13:37:48Z,fast fix
github.com/dlmacedo/robust-deep-learning,detect.py,2022-08-27T16:52:54Z,first commit
github.com/dlmacedo/robust-deep-learning,calibrate.py,2022-11-26T12:57:09Z,minor
github.com/dlmacedo/robust-deep-learning,calibrate.py,2022-08-27T16:52:54Z,first commit
github.com/zhang-guangyi/t-udeepsc,UDeepSC/model_util.py,2024-01-09T02:29:57Z,SecondM
github.com/zhang-guangyi/t-udeepsc,UDeepSC/model_util.py,2023-12-29T12:10:01Z,SecondM
github.com/zhang-guangyi/t-udeepsc,UDeepSC/model_util.py,2023-12-21T16:56:44Z,test2
github.com/zhang-guangyi/t-udeepsc,UDeepSC/model_util.py,2023-04-12T02:56:10Z,Add files via upload
github.com/zhang-guangyi/t-udeepsc,TDeepSC/tdeepsc_main.py,2023-12-21T16:56:44Z,test2
github.com/zhang-guangyi/t-udeepsc,TDeepSC/tdeepsc_main.py,2023-03-31T08:37:43Z,Add files via upload
github.com/amazon-science/regression-constraint-model-upgrade,ConstrainedUpgrade/train.py,2022-11-22T02:41:54Z,regression free training commit
github.com/nnanhuang/Customize-it-3D,dpt.py,2023-12-22T14:29:00Z,first commit
github.com/nnanhuang/Customize-it-3D,midas/backbones/vit.py,2023-12-22T14:29:00Z,first commit
github.com/nnanhuang/Customize-it-3D,midas/backbones/beit.py,2023-12-22T14:29:00Z,first commit
github.com/nnanhuang/Customize-it-3D,midas/backbones/swin.py,2023-12-22T14:29:00Z,first commit
github.com/nnanhuang/Customize-it-3D,midas/backbones/levit.py,2023-12-22T14:29:00Z,first commit
github.com/nnanhuang/Customize-it-3D,midas/backbones/swin2.py,2023-12-22T14:29:00Z,first commit
github.com/nnanhuang/Customize-it-3D,midas/backbones/next_vit.py,2023-12-22T14:29:00Z,first commit
github.com/aiplaybookin/gradio-demo,webCamLive.py,2022-09-29T13:00:25Z,updated for experiments
github.com/aiplaybookin/gradio-demo,timmVisionApp.py,2022-09-26T16:46:50Z,updated readme and 2 py files
github.com/achao2013/deep3dmap,deep3dmap/datasets/ns/dataloaders/dino_extractor.py,2023-05-28T02:32:39Z,add lerf and related dependency
github.com/SamYuen101234/BSMFR,model.py,2021-04-02T15:09:56Z,completed
github.com/hhsinping/few_shot_fas,fas.py,2022-07-20T16:52:47Z,first commit
github.com/tingshua-yts/BetterDL,test/pytorch/tensorrt/benchmark.py,2023-01-30T10:02:27Z,添加pytorch文件
github.com/Zhengxinyang/LAS-Diffusion,generate.py,2023-05-09T03:33:29Z,release
github.com/Zhengxinyang/LAS-Diffusion,prepare_sketch.py,2023-05-09T03:33:29Z,release
github.com/WangYZ1608/Self-Prompt-Tuning,train.py,2024-02-04T02:56:05Z,update
github.com/WangYZ1608/Self-Prompt-Tuning,train_MoCo.py,2024-02-04T02:56:05Z,update
github.com/bipinKrishnan/ml-recipe-book,_build/jupyter_execute/notebooks/image_classification.py,2022-04-09T06:08:59Z,completed img clf chapter
github.com/Yangsenqiao/vida,cifar/robustbench/model_zoo/cifar10.py,2023-10-10T15:57:56Z,update cifar10 code
github.com/Yangsenqiao/vida,imagenet/robustbench/model_zoo/imagenet.py,2023-07-11T14:11:27Z,release the vit and cnn baseline
github.com/qiuzh20/EMoE,Vision/domainbed/algorithms.py,2023-10-14T03:44:15Z,Add files via upload
github.com/ma3mool/goldeneye,src/util.py,2022-02-07T20:34:54Z,"Numsys debug (#3)

* Added cmd line args. Profile.py sytax set - debugging goldeneye merge

* Profile.py can now call goldenEye. GoldenEye doesn't work though atm

* Split error models from num_sys_class.py

* Name fixes and import fixes

* Fixed: end_to_end profiling works. Bad performance with

* tensor numsys added

* fixed small error numsys tensor

* Small fixes and changes. Runs end-to-end. Functionally needs double checking

* End to end for transformers, random errors

* End to end num sys works with profile.py

* Fix injections and nan/inf crash

* Add quantization bits to goldeneye call in profile.py/injection.py

* Added generic numsys support, and started sweep functionality

* Added a sweep for numsys, with quantization

* Restructure code for experiments

* Add cmd line args, and support Integer quantization

* Checkpoint implementation: various bug fixes, API updates, feature support

* Speed up adaptiv float by using torch instead of np

* Fixed bug with profile.py. AdaptivFloat works for profiling

* Implemented range detector for nan issue. AdaptiveFloat inherits ieee754.

* Block Float updated

* Fix split data. Metadata for BFP. Update AdaptiveFloat code

* Meta data injection for adaptive float implemented

* Expand Metadata bitflip for BFP. Fix bug (value being changed)

* torch.no_grad() added to injection script, to avoid running out of memory

* Clean up

* Runtime perf scripts

* Wraparound runtime script

* Added accuracy profiling scripts

* Script finetunings

* Experiment runs

* Added capability to operate on CIFAR10/CIFAR100

* Allows incorporating new models with pretrained weights

* Repo cleanup

Co-authored-by: Tarek Aloui <taloui@college.harvard.edu>"
github.com/ma3mool/goldeneye,src/util.py,2021-07-30T04:40:52Z,injections updated without quantization
github.com/ma3mool/goldeneye,src/util.py,2021-07-28T04:25:01Z,Ported preprocess. Started injections.py port
github.com/ma3mool/goldeneye,src/util.py,2021-07-28T02:06:23Z,Implemented splitting dataset for analysis vs testing
github.com/ma3mool/goldeneye,src/test_goldeneye.py,2022-02-07T20:34:54Z,"Numsys debug (#3)

* Added cmd line args. Profile.py sytax set - debugging goldeneye merge

* Profile.py can now call goldenEye. GoldenEye doesn't work though atm

* Split error models from num_sys_class.py

* Name fixes and import fixes

* Fixed: end_to_end profiling works. Bad performance with

* tensor numsys added

* fixed small error numsys tensor

* Small fixes and changes. Runs end-to-end. Functionally needs double checking

* End to end for transformers, random errors

* End to end num sys works with profile.py

* Fix injections and nan/inf crash

* Add quantization bits to goldeneye call in profile.py/injection.py

* Added generic numsys support, and started sweep functionality

* Added a sweep for numsys, with quantization

* Restructure code for experiments

* Add cmd line args, and support Integer quantization

* Checkpoint implementation: various bug fixes, API updates, feature support

* Speed up adaptiv float by using torch instead of np

* Fixed bug with profile.py. AdaptivFloat works for profiling

* Implemented range detector for nan issue. AdaptiveFloat inherits ieee754.

* Block Float updated

* Fix split data. Metadata for BFP. Update AdaptiveFloat code

* Meta data injection for adaptive float implemented

* Expand Metadata bitflip for BFP. Fix bug (value being changed)

* torch.no_grad() added to injection script, to avoid running out of memory

* Clean up

* Runtime perf scripts

* Wraparound runtime script

* Added accuracy profiling scripts

* Script finetunings

* Experiment runs

* Added capability to operate on CIFAR10/CIFAR100

* Allows incorporating new models with pretrained weights

* Repo cleanup

Co-authored-by: Tarek Aloui <taloui@college.harvard.edu>"
github.com/facebookresearch/OmnimatteRF,third_party/RoDynRF/scripts/midas/vit.py,2023-09-15T18:54:17Z,first commit
github.com/facebookresearch/OmnimatteRF,third_party/MiDaS/midas/backbones/vit.py,2023-09-15T18:54:17Z,first commit
github.com/facebookresearch/OmnimatteRF,third_party/MiDaS/midas/backbones/beit.py,2023-09-15T18:54:17Z,first commit
github.com/facebookresearch/OmnimatteRF,third_party/MiDaS/midas/backbones/swin.py,2023-09-15T18:54:17Z,first commit
github.com/facebookresearch/OmnimatteRF,third_party/MiDaS/midas/backbones/levit.py,2023-09-15T18:54:17Z,first commit
github.com/facebookresearch/OmnimatteRF,third_party/MiDaS/midas/backbones/swin2.py,2023-09-15T18:54:17Z,first commit
github.com/facebookresearch/OmnimatteRF,third_party/MiDaS/midas/backbones/next_vit.py,2023-09-15T18:54:17Z,first commit
github.com/batmanlab/ICML-2023-Route-interpret-repeat,src/codebase/BB/models/BB_DenseNet121.py,2023-04-29T18:56:50Z,ICML refactored
github.com/AndongDeng/BEAR,benchmark/BEAR-Standard/mmaction/models/recognizers/base.py,2023-03-23T14:29:43Z,rename
github.com/AndongDeng/BEAR,benchmark/BEAR-Standard/mmaction/models/recognizers/base.py,2023-03-23T08:14:37Z,rename
github.com/AndongDeng/BEAR,benchmark/BEAR-Standard/mmaction/models/recognizers/base.py,2023-03-23T07:49:25Z,update benchmark name
github.com/HHHedo/IBMIL,ctran.py,2022-11-18T03:57:51Z,init
github.com/aim-uofa/StyleDrop-PyTorch,open_clip/timm_model.py,2023-07-04T03:10:02Z,first commit
github.com/AnonymGiant/ViLaM,lavis/models/clip_models/model.py,2023-11-24T18:34:30Z,update
github.com/AnonymGiant/ViLaM,lavis/models/clip_models/timm_model.py,2023-11-24T18:34:30Z,update
github.com/zhangzilongc/MMR,utils/backbones.py,2023-04-03T11:29:49Z,mvtec code commit
github.com/khornlund/understanding-cloud-organization,uco/model/model.py,2019-11-14T08:01:31Z,Update classification ensemble
github.com/khornlund/understanding-cloud-organization,uco/model/model.py,2019-11-12T11:41:19Z,Update metrics and add support for saving raw predictions under HDF5 groups
github.com/khornlund/understanding-cloud-organization,uco/model/model.py,2019-11-11T10:47:31Z,"Add blessed configs, fix bias weight decay"
github.com/khornlund/understanding-cloud-organization,uco/model/model.py,2019-10-27T03:55:46Z,Working training loop with cloud data
github.com/khornlund/understanding-cloud-organization,uco/model/model.py,2019-10-27T01:01:22Z,First commit
github.com/jlianglab/BenchmarkTransformers,models.py,2023-10-08T07:06:18Z,Include pretrained Ark models
github.com/jlianglab/BenchmarkTransformers,models.py,2022-07-29T18:33:39Z,fix bugs: reduced data
github.com/jlianglab/BenchmarkTransformers,models.py,2022-05-08T19:50:32Z,VinDrCXR
github.com/jlianglab/BenchmarkTransformers,models.py,2022-04-15T20:00:37Z,"Revision

Bugs fixed."
github.com/jlianglab/BenchmarkTransformers,models.py,2022-04-14T19:08:36Z,Initial Commit
github.com/ShuzhaoXie/Armol,src/armor_train.py,2022-07-30T14:14:17Z,update code and README
github.com/ShuzhaoXie/Armol,src/armor_test.py,2022-07-30T14:14:17Z,update code and README
github.com/JosselinSomervilleRoberts/ReachBot-Predictor,mmsegmentation/mmseg/models/backbones/timm_backbone.py,2023-08-10T09:28:51Z,Black formatting
github.com/JosselinSomervilleRoberts/ReachBot-Predictor,mmsegmentation/mmseg/models/backbones/timm_backbone.py,2023-06-04T20:06:33Z,add mmsegmentation
github.com/tenstorrent/tt-buda,pybuda/test/tvm/cnn/pytorch/tests_A/test_hrnet.py,2024-02-12T14:07:41Z,"Support Mobilenet V2 INT8 from ONNX

(cherry picked from commit e29a3826c0a9cb4fd14b76d7d09347f2dc55af99)"
github.com/tenstorrent/tt-buda,pybuda/test/tvm/cnn/pytorch/tests_A/test_hrnet.py,2024-02-12T13:07:54Z,"Removing t-streaming redundant config overrides from tvm tests

(cherry picked from commit f948fb4351504ef851f7f75b2adb541249f190b0)"
github.com/tenstorrent/tt-buda,pybuda/test/tvm/cnn/pytorch/tests_A/test_hrnet.py,2024-02-01T19:21:31Z,"Snapshot of pybuda branch main, squashed from commit f955f2fdd3d4dfc1da7846ae80d10a8855988b5b
Notice regarding the squashed initial commit:

As we transition from our internal development environment to a public
repository, we are committed to ensuring the security and
confidentiality of sensitive information.

To protect against any accidental release of confidential data, we have
made a specific decision regarding the initial commit to our public
repository. We have opted for a squashed commit for the initial public
release, which consolidates all the changes from our internal history
into a single, clean commit. This step ensures that no sensitive
information from our past development is exposed to the public.

We want to emphasize that moving forward, we are fully dedicated to
maintaining a transparent and organized version history for all our
future commits and bug fixes. This approach allows us to maintain a
clean slate for our public repository while ensuring that our ongoing
work is well-documented and traceable.

We appreciate your understanding and support as we make this transition.
Our goal is to provide you with a secure and reliable open-source
project. If you have any questions or concerns, please don't hesitate to
reach out to us.

Thank you for your continued interest and participation in our project."
github.com/tenstorrent/tt-buda,pybuda/test/tvm/cnn/pytorch/tests_B/test_regnety.py,2024-02-01T19:21:31Z,"Snapshot of pybuda branch main, squashed from commit f955f2fdd3d4dfc1da7846ae80d10a8855988b5b
Notice regarding the squashed initial commit:

As we transition from our internal development environment to a public
repository, we are committed to ensuring the security and
confidentiality of sensitive information.

To protect against any accidental release of confidential data, we have
made a specific decision regarding the initial commit to our public
repository. We have opted for a squashed commit for the initial public
release, which consolidates all the changes from our internal history
into a single, clean commit. This step ensures that no sensitive
information from our past development is exposed to the public.

We want to emphasize that moving forward, we are fully dedicated to
maintaining a transparent and organized version history for all our
future commits and bug fixes. This approach allows us to maintain a
clean slate for our public repository while ensuring that our ongoing
work is well-documented and traceable.

We appreciate your understanding and support as we make this transition.
Our goal is to provide you with a secure and reliable open-source
project. If you have any questions or concerns, please don't hesitate to
reach out to us.

Thank you for your continued interest and participation in our project."
github.com/tenstorrent/tt-buda,pybuda/test/benchmark/benchmark/models/vovnet_v2.py,2024-02-05T16:46:49Z,"Removing t-streaming redundant config overrides from benchmark model tests

(cherry picked from commit cfd06d2d0ba3c6d2eea72a21ad1c64007b281c14)"
github.com/tenstorrent/tt-buda,pybuda/test/benchmark/benchmark/models/vovnet_v2.py,2024-02-01T19:21:31Z,"Snapshot of pybuda branch main, squashed from commit f955f2fdd3d4dfc1da7846ae80d10a8855988b5b
Notice regarding the squashed initial commit:

As we transition from our internal development environment to a public
repository, we are committed to ensuring the security and
confidentiality of sensitive information.

To protect against any accidental release of confidential data, we have
made a specific decision regarding the initial commit to our public
repository. We have opted for a squashed commit for the initial public
release, which consolidates all the changes from our internal history
into a single, clean commit. This step ensures that no sensitive
information from our past development is exposed to the public.

We want to emphasize that moving forward, we are fully dedicated to
maintaining a transparent and organized version history for all our
future commits and bug fixes. This approach allows us to maintain a
clean slate for our public repository while ensuring that our ongoing
work is well-documented and traceable.

We appreciate your understanding and support as we make this transition.
Our goal is to provide you with a secure and reliable open-source
project. If you have any questions or concerns, please don't hesitate to
reach out to us.

Thank you for your continued interest and participation in our project."
github.com/tenstorrent/tt-buda,pybuda/test/benchmark/benchmark/models/inception_v4.py,2024-02-05T16:46:49Z,"Removing t-streaming redundant config overrides from benchmark model tests

(cherry picked from commit cfd06d2d0ba3c6d2eea72a21ad1c64007b281c14)"
github.com/tenstorrent/tt-buda,pybuda/test/benchmark/benchmark/models/inception_v4.py,2024-02-01T19:21:31Z,"Snapshot of pybuda branch main, squashed from commit f955f2fdd3d4dfc1da7846ae80d10a8855988b5b
Notice regarding the squashed initial commit:

As we transition from our internal development environment to a public
repository, we are committed to ensuring the security and
confidentiality of sensitive information.

To protect against any accidental release of confidential data, we have
made a specific decision regarding the initial commit to our public
repository. We have opted for a squashed commit for the initial public
release, which consolidates all the changes from our internal history
into a single, clean commit. This step ensures that no sensitive
information from our past development is exposed to the public.

We want to emphasize that moving forward, we are fully dedicated to
maintaining a transparent and organized version history for all our
future commits and bug fixes. This approach allows us to maintain a
clean slate for our public repository while ensuring that our ongoing
work is well-documented and traceable.

We appreciate your understanding and support as we make this transition.
Our goal is to provide you with a secure and reliable open-source
project. If you have any questions or concerns, please don't hesitate to
reach out to us.

Thank you for your continued interest and participation in our project."
github.com/tenstorrent/tt-buda,pybuda/test/tvm/cnn/pytorch/tests_A/test_efficientnet.py,2024-02-12T13:07:54Z,"Removing t-streaming redundant config overrides from tvm tests

(cherry picked from commit f948fb4351504ef851f7f75b2adb541249f190b0)"
github.com/tenstorrent/tt-buda,pybuda/test/tvm/cnn/pytorch/tests_A/test_efficientnet.py,2024-02-01T19:21:31Z,"Snapshot of pybuda branch main, squashed from commit f955f2fdd3d4dfc1da7846ae80d10a8855988b5b
Notice regarding the squashed initial commit:

As we transition from our internal development environment to a public
repository, we are committed to ensuring the security and
confidentiality of sensitive information.

To protect against any accidental release of confidential data, we have
made a specific decision regarding the initial commit to our public
repository. We have opted for a squashed commit for the initial public
release, which consolidates all the changes from our internal history
into a single, clean commit. This step ensures that no sensitive
information from our past development is exposed to the public.

We want to emphasize that moving forward, we are fully dedicated to
maintaining a transparent and organized version history for all our
future commits and bug fixes. This approach allows us to maintain a
clean slate for our public repository while ensuring that our ongoing
work is well-documented and traceable.

We appreciate your understanding and support as we make this transition.
Our goal is to provide you with a secure and reliable open-source
project. If you have any questions or concerns, please don't hesitate to
reach out to us.

Thank you for your continued interest and participation in our project."
github.com/tenstorrent/tt-buda,pybuda/test/model_demos/high_prio/cnn/pytorch/test_vgg.py,2024-02-12T14:17:34Z,"update model-demo tests to catch download error and replace inputs with random value

(cherry picked from commit 143ca83568635ff605f58343dad3c9ac8bb2f31a)"
github.com/tenstorrent/tt-buda,pybuda/test/model_demos/high_prio/cnn/pytorch/test_vgg.py,2024-02-05T16:46:55Z,"As we enabled t-streaming by default this commit removes redundant t-streaming config overrides from model demos tests

(cherry picked from commit 4f5b4476e1dc953a6a6f5c77a9e1617e58d8a40e)"
github.com/tenstorrent/tt-buda,pybuda/test/model_demos/high_prio/cnn/pytorch/test_vgg.py,2024-02-05T16:46:53Z,"fix nightlies after KB change

(cherry picked from commit 2d641484a223d044d502ad5e38fbc6680505295a)"
github.com/tenstorrent/tt-buda,pybuda/test/model_demos/high_prio/cnn/pytorch/test_vgg.py,2024-02-01T19:21:31Z,"Snapshot of pybuda branch main, squashed from commit f955f2fdd3d4dfc1da7846ae80d10a8855988b5b
Notice regarding the squashed initial commit:

As we transition from our internal development environment to a public
repository, we are committed to ensuring the security and
confidentiality of sensitive information.

To protect against any accidental release of confidential data, we have
made a specific decision regarding the initial commit to our public
repository. We have opted for a squashed commit for the initial public
release, which consolidates all the changes from our internal history
into a single, clean commit. This step ensures that no sensitive
information from our past development is exposed to the public.

We want to emphasize that moving forward, we are fully dedicated to
maintaining a transparent and organized version history for all our
future commits and bug fixes. This approach allows us to maintain a
clean slate for our public repository while ensuring that our ongoing
work is well-documented and traceable.

We appreciate your understanding and support as we make this transition.
Our goal is to provide you with a secure and reliable open-source
project. If you have any questions or concerns, please don't hesitate to
reach out to us.

Thank you for your continued interest and participation in our project."
github.com/tenstorrent/tt-buda,pybuda/test/benchmark/benchmark/models/mobilenet_v2_timm.py,2024-02-05T16:46:49Z,"Removing t-streaming redundant config overrides from benchmark model tests

(cherry picked from commit cfd06d2d0ba3c6d2eea72a21ad1c64007b281c14)"
github.com/tenstorrent/tt-buda,pybuda/test/benchmark/benchmark/models/mobilenet_v2_timm.py,2024-02-01T19:21:31Z,"Snapshot of pybuda branch main, squashed from commit f955f2fdd3d4dfc1da7846ae80d10a8855988b5b
Notice regarding the squashed initial commit:

As we transition from our internal development environment to a public
repository, we are committed to ensuring the security and
confidentiality of sensitive information.

To protect against any accidental release of confidential data, we have
made a specific decision regarding the initial commit to our public
repository. We have opted for a squashed commit for the initial public
release, which consolidates all the changes from our internal history
into a single, clean commit. This step ensures that no sensitive
information from our past development is exposed to the public.

We want to emphasize that moving forward, we are fully dedicated to
maintaining a transparent and organized version history for all our
future commits and bug fixes. This approach allows us to maintain a
clean slate for our public repository while ensuring that our ongoing
work is well-documented and traceable.

We appreciate your understanding and support as we make this transition.
Our goal is to provide you with a secure and reliable open-source
project. If you have any questions or concerns, please don't hesitate to
reach out to us.

Thank you for your continued interest and participation in our project."
github.com/tenstorrent/tt-buda,pybuda/test/benchmark/benchmark/models/mobilenet_v3_timm.py,2024-02-05T16:46:49Z,"Removing t-streaming redundant config overrides from benchmark model tests

(cherry picked from commit cfd06d2d0ba3c6d2eea72a21ad1c64007b281c14)"
github.com/tenstorrent/tt-buda,pybuda/test/benchmark/benchmark/models/mobilenet_v3_timm.py,2024-02-01T19:21:31Z,"Snapshot of pybuda branch main, squashed from commit f955f2fdd3d4dfc1da7846ae80d10a8855988b5b
Notice regarding the squashed initial commit:

As we transition from our internal development environment to a public
repository, we are committed to ensuring the security and
confidentiality of sensitive information.

To protect against any accidental release of confidential data, we have
made a specific decision regarding the initial commit to our public
repository. We have opted for a squashed commit for the initial public
release, which consolidates all the changes from our internal history
into a single, clean commit. This step ensures that no sensitive
information from our past development is exposed to the public.

We want to emphasize that moving forward, we are fully dedicated to
maintaining a transparent and organized version history for all our
future commits and bug fixes. This approach allows us to maintain a
clean slate for our public repository while ensuring that our ongoing
work is well-documented and traceable.

We appreciate your understanding and support as we make this transition.
Our goal is to provide you with a secure and reliable open-source
project. If you have any questions or concerns, please don't hesitate to
reach out to us.

Thank you for your continued interest and participation in our project."
github.com/tenstorrent/tt-buda,pybuda/test/model_demos/high_prio/cnn/pytorch/test_vovnet.py,2024-02-12T14:17:34Z,"update model-demo tests to catch download error and replace inputs with random value

(cherry picked from commit 143ca83568635ff605f58343dad3c9ac8bb2f31a)"
github.com/tenstorrent/tt-buda,pybuda/test/model_demos/high_prio/cnn/pytorch/test_vovnet.py,2024-02-05T16:46:55Z,"As we enabled t-streaming by default this commit removes redundant t-streaming config overrides from model demos tests

(cherry picked from commit 4f5b4476e1dc953a6a6f5c77a9e1617e58d8a40e)"
github.com/tenstorrent/tt-buda,pybuda/test/model_demos/high_prio/cnn/pytorch/test_vovnet.py,2024-02-05T16:46:53Z,"fix nightlies after KB change

(cherry picked from commit 2d641484a223d044d502ad5e38fbc6680505295a)"
github.com/tenstorrent/tt-buda,pybuda/test/model_demos/high_prio/cnn/pytorch/test_vovnet.py,2024-02-01T19:21:31Z,"Snapshot of pybuda branch main, squashed from commit f955f2fdd3d4dfc1da7846ae80d10a8855988b5b
Notice regarding the squashed initial commit:

As we transition from our internal development environment to a public
repository, we are committed to ensuring the security and
confidentiality of sensitive information.

To protect against any accidental release of confidential data, we have
made a specific decision regarding the initial commit to our public
repository. We have opted for a squashed commit for the initial public
release, which consolidates all the changes from our internal history
into a single, clean commit. This step ensures that no sensitive
information from our past development is exposed to the public.

We want to emphasize that moving forward, we are fully dedicated to
maintaining a transparent and organized version history for all our
future commits and bug fixes. This approach allows us to maintain a
clean slate for our public repository while ensuring that our ongoing
work is well-documented and traceable.

We appreciate your understanding and support as we make this transition.
Our goal is to provide you with a secure and reliable open-source
project. If you have any questions or concerns, please don't hesitate to
reach out to us.

Thank you for your continued interest and participation in our project."
github.com/tenstorrent/tt-buda,pybuda/test/tvm/nightly/get_pytorch_model_with_activations.py,2024-02-01T19:21:31Z,"Snapshot of pybuda branch main, squashed from commit f955f2fdd3d4dfc1da7846ae80d10a8855988b5b
Notice regarding the squashed initial commit:

As we transition from our internal development environment to a public
repository, we are committed to ensuring the security and
confidentiality of sensitive information.

To protect against any accidental release of confidential data, we have
made a specific decision regarding the initial commit to our public
repository. We have opted for a squashed commit for the initial public
release, which consolidates all the changes from our internal history
into a single, clean commit. This step ensures that no sensitive
information from our past development is exposed to the public.

We want to emphasize that moving forward, we are fully dedicated to
maintaining a transparent and organized version history for all our
future commits and bug fixes. This approach allows us to maintain a
clean slate for our public repository while ensuring that our ongoing
work is well-documented and traceable.

We appreciate your understanding and support as we make this transition.
Our goal is to provide you with a secure and reliable open-source
project. If you have any questions or concerns, please don't hesitate to
reach out to us.

Thank you for your continued interest and participation in our project."
github.com/tenstorrent/tt-buda,pybuda/test/model_demos/high_prio/cnn/pytorch/test_mobilenet_v3.py,2024-02-12T14:17:34Z,"update model-demo tests to catch download error and replace inputs with random value

(cherry picked from commit 143ca83568635ff605f58343dad3c9ac8bb2f31a)"
github.com/tenstorrent/tt-buda,pybuda/test/model_demos/high_prio/cnn/pytorch/test_mobilenet_v3.py,2024-02-05T16:46:55Z,"As we enabled t-streaming by default this commit removes redundant t-streaming config overrides from model demos tests

(cherry picked from commit 4f5b4476e1dc953a6a6f5c77a9e1617e58d8a40e)"
github.com/tenstorrent/tt-buda,pybuda/test/model_demos/high_prio/cnn/pytorch/test_mobilenet_v3.py,2024-02-05T16:46:53Z,"fix nightlies after KB change

(cherry picked from commit 2d641484a223d044d502ad5e38fbc6680505295a)"
github.com/tenstorrent/tt-buda,pybuda/test/model_demos/high_prio/cnn/pytorch/test_mobilenet_v3.py,2024-02-01T19:21:31Z,"Snapshot of pybuda branch main, squashed from commit f955f2fdd3d4dfc1da7846ae80d10a8855988b5b
Notice regarding the squashed initial commit:

As we transition from our internal development environment to a public
repository, we are committed to ensuring the security and
confidentiality of sensitive information.

To protect against any accidental release of confidential data, we have
made a specific decision regarding the initial commit to our public
repository. We have opted for a squashed commit for the initial public
release, which consolidates all the changes from our internal history
into a single, clean commit. This step ensures that no sensitive
information from our past development is exposed to the public.

We want to emphasize that moving forward, we are fully dedicated to
maintaining a transparent and organized version history for all our
future commits and bug fixes. This approach allows us to maintain a
clean slate for our public repository while ensuring that our ongoing
work is well-documented and traceable.

We appreciate your understanding and support as we make this transition.
Our goal is to provide you with a secure and reliable open-source
project. If you have any questions or concerns, please don't hesitate to
reach out to us.

Thank you for your continued interest and participation in our project."
github.com/tenstorrent/tt-buda,pybuda/test/model_demos/high_prio/cnn/pytorch/test_inception_v4.py,2024-02-12T14:17:34Z,"update model-demo tests to catch download error and replace inputs with random value

(cherry picked from commit 143ca83568635ff605f58343dad3c9ac8bb2f31a)"
github.com/tenstorrent/tt-buda,pybuda/test/model_demos/high_prio/cnn/pytorch/test_inception_v4.py,2024-02-05T16:46:55Z,"As we enabled t-streaming by default this commit removes redundant t-streaming config overrides from model demos tests

(cherry picked from commit 4f5b4476e1dc953a6a6f5c77a9e1617e58d8a40e)"
github.com/tenstorrent/tt-buda,pybuda/test/model_demos/high_prio/cnn/pytorch/test_inception_v4.py,2024-02-01T19:21:31Z,"Snapshot of pybuda branch main, squashed from commit f955f2fdd3d4dfc1da7846ae80d10a8855988b5b
Notice regarding the squashed initial commit:

As we transition from our internal development environment to a public
repository, we are committed to ensuring the security and
confidentiality of sensitive information.

To protect against any accidental release of confidential data, we have
made a specific decision regarding the initial commit to our public
repository. We have opted for a squashed commit for the initial public
release, which consolidates all the changes from our internal history
into a single, clean commit. This step ensures that no sensitive
information from our past development is exposed to the public.

We want to emphasize that moving forward, we are fully dedicated to
maintaining a transparent and organized version history for all our
future commits and bug fixes. This approach allows us to maintain a
clean slate for our public repository while ensuring that our ongoing
work is well-documented and traceable.

We appreciate your understanding and support as we make this transition.
Our goal is to provide you with a secure and reliable open-source
project. If you have any questions or concerns, please don't hesitate to
reach out to us.

Thank you for your continued interest and participation in our project."
github.com/KuofengGao/Verbose_Images,lavis/models/clip_models/model.py,2024-01-19T16:46:43Z,first commit
github.com/KuofengGao/Verbose_Images,lavis/models/clip_models/timm_model.py,2024-01-19T16:46:43Z,first commit
github.com/KuofengGao/Verbose_Images,lavis/models/ulip_models/ULIP_models.py,2024-01-19T16:46:43Z,first commit
github.com/KuofengGao/Verbose_Images,lavis/common/annotator/midas/midas/vit.py,2024-01-19T16:46:43Z,first commit
github.com/kssteven418/BigLittleDecoder,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/kssteven418/BigLittleDecoder,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/kssteven418/BigLittleDecoder,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-08-04T16:29:23Z,"Add BEiT (#12994)

* First pass

* Make conversion script work

* Improve conversion script

* Fix bug, conversion script working

* Improve conversion script, implement BEiTFeatureExtractor

* Make conversion script work based on URL

* Improve conversion script

* Add tests, add documentation

* Fix bug in conversion script

* Fix another bug

* Add support for converting masked image modeling model

* Add support for converting masked image modeling

* Fix bug

* Add print statement for debugging

* Fix another bug

* Make conversion script finally work for masked image modeling models

* Move id2label for datasets to JSON files on the hub

* Make sure id's are read in as integers

* Add integration tests

* Make style & quality

* Fix test, add BEiT to README

* Apply suggestions from @sgugger's review

* Apply suggestions from code review

* Make quality

* Replace nielsr by microsoft in tests, add docs

* Rename BEiT to Beit

* Minor fix

* Fix docs of BeitForMaskedImageModeling

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/kssteven418/BigLittleDecoder,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-04-12T22:07:10Z,"Add DeiT (PyTorch) (#11056)

* First draft of deit

* More improvements

* Remove DeiTTokenizerFast from init

* Conversion script works

* Add DeiT to ViT conversion script

* Add tests, add head model, add support for deit in vit conversion script

* Update model checkpoint names

* Update image_mean and image_std, set resample to bicubic

* Improve docs

* Docs improvements

* Add DeiTForImageClassificationWithTeacher to init

* Address comments by @sgugger

* Improve feature extractors

* Make fix-copies

* Minor fixes

* Address comments by @patil-suraj

* All models uploaded

* Fix tests

* Remove labels argument from DeiTForImageClassificationWithTeacher

* Fix-copies, style and quality

* Fix tests

* Fix typo

* Multiple docs improvements

* More docs fixes"
github.com/kssteven418/BigLittleDecoder,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-04-01T15:16:05Z,"Add Vision Transformer and ViTFeatureExtractor (#10950)

* Squash all commits into one

* Update ViTFeatureExtractor to use image_utils instead of torchvision

* Remove torchvision and add Pillow

* Small docs improvement

* Address most comments by @sgugger

* Fix tests

* Clean up conversion script

* Pooler first draft

* Fix quality

* Improve conversion script

* Make style and quality

* Make fix-copies

* Minor docs improvements

* Should use fix-copies instead of manual handling

* Revert ""Should use fix-copies instead of manual handling""

This reverts commit fd4e591bce4496d41406425c82606a8fdaf8a50b.

* Place ViT in alphabetical order

Co-authored-by: Lysandre <lysandre.debut@reseau.eseo.fr>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/kssteven418/BigLittleDecoder,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/kssteven418/BigLittleDecoder,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2022-05-12T20:25:55Z,"Black preview (#17217)

* Black preview

* Fixup too!

* Fix check copies

* Use the same version as the CI

* Bump black"
github.com/kssteven418/BigLittleDecoder,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2022-04-07T19:58:00Z,"RegNet (#16188)

* base model done

* make style

* done

* added files

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Trigger doc build

* resolved conversations

* resolved conversations

* seer models

* minor changes

* minor changes

* make fixup

* glob variables

* minor changes

* fix copies

* config when possibile

* resolved conflicts

* resolved conflicts

* resolved conflicts

* CI

* conversion script for 10b param

* fixed for 10b model

* minor updates in the doc + make style

* removed unused code

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* removed unused code

* removed unused code

* updated modeling_utils from main

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <Sylvain.gugger@gmail.com>"
github.com/kssteven418/BigLittleDecoder,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/kssteven418/BigLittleDecoder,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-05-12T20:25:55Z,"Black preview (#17217)

* Black preview

* Fixup too!

* Fix check copies

* Use the same version as the CI

* Bump black"
github.com/kssteven418/BigLittleDecoder,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/kssteven418/BigLittleDecoder,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-03-14T18:57:55Z,"[WIP] Resnet (#15770)

* first commit

* ResNet model correctly implemented.

basic modeling + weights conversion is done

removed unused doc

mdx file

doc and conversion script

added feature_extractor to auto

test

minor changes + style + quality

doc

test

Delete process.yml

A left over from my attempt of running circleci locally

* minor changes

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* new test format

* minor changes from conversations

* minor changes from conversations

* make style + quality

* readded the tests

* test + README

* minor changes from conversations

* error in README

* make fix-copies

* removed regression for classification head

* make quality

* fixed loss control flow

* fixed loss control flow

* resolved conversations

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* READMEs

* index.mdx

* minor changes

* updated tests and models

* unused import

* outputs

* Update docs/source/model_doc/resnet.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* added embeddings_size

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* conversation

* added push to hub

* test

* embedding_size

* make fix-copies

* resolved conversations

* CI

* changed organization

* minor changes

* CI

* minor changes

* conversations

* conversation

* doc

* tests

* removed unused docstring

* conversation

* removed unused outputs

* CI

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>
Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>"
github.com/kssteven418/BigLittleDecoder,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/kssteven418/BigLittleDecoder,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/kssteven418/BigLittleDecoder,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-08-04T16:29:23Z,"Add BEiT (#12994)

* First pass

* Make conversion script work

* Improve conversion script

* Fix bug, conversion script working

* Improve conversion script, implement BEiTFeatureExtractor

* Make conversion script work based on URL

* Improve conversion script

* Add tests, add documentation

* Fix bug in conversion script

* Fix another bug

* Add support for converting masked image modeling model

* Add support for converting masked image modeling

* Fix bug

* Add print statement for debugging

* Fix another bug

* Make conversion script finally work for masked image modeling models

* Move id2label for datasets to JSON files on the hub

* Make sure id's are read in as integers

* Add integration tests

* Make style & quality

* Fix test, add BEiT to README

* Apply suggestions from @sgugger's review

* Apply suggestions from code review

* Make quality

* Replace nielsr by microsoft in tests, add docs

* Rename BEiT to Beit

* Minor fix

* Fix docs of BeitForMaskedImageModeling

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/kssteven418/BigLittleDecoder,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-04-12T22:07:10Z,"Add DeiT (PyTorch) (#11056)

* First draft of deit

* More improvements

* Remove DeiTTokenizerFast from init

* Conversion script works

* Add DeiT to ViT conversion script

* Add tests, add head model, add support for deit in vit conversion script

* Update model checkpoint names

* Update image_mean and image_std, set resample to bicubic

* Improve docs

* Docs improvements

* Add DeiTForImageClassificationWithTeacher to init

* Address comments by @sgugger

* Improve feature extractors

* Make fix-copies

* Minor fixes

* Address comments by @patil-suraj

* All models uploaded

* Fix tests

* Remove labels argument from DeiTForImageClassificationWithTeacher

* Fix-copies, style and quality

* Fix tests

* Fix typo

* Multiple docs improvements

* More docs fixes"
github.com/kssteven418/BigLittleDecoder,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/kssteven418/BigLittleDecoder,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/kssteven418/BigLittleDecoder,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-01-21T11:10:41Z,"Add Swin Transformer (#15085)

* Add all files

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Updates

* Apply suggestions from review

* Fix failing tests

* Update __init__.py

* Update configuration_swin.py

* Update auto_factory.py

* Fix pytests

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Fix tests and default checkpoint

* Fix Recursion error

* Code quality

* Remove copied from

* Update modeling_swin.py

* Code quality

* Update modeling_swin.py

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

* Fix feature extractor

* Fix code quality

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

* Update configuration_swin.py

* Update default checkpoint

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/model_doc/swin.mdx

Co-authored-by: Mishig Davaadorj <mishig.davaadorj@coloradocollege.edu>

* Update conversion script

* Reformat conversion script

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>
Co-authored-by: Mishig Davaadorj <mishig.davaadorj@coloradocollege.edu>"
github.com/kssteven418/BigLittleDecoder,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/kssteven418/BigLittleDecoder,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2022-06-01T15:06:20Z,"Adding LeViT Model by Facebook (#17466)

* levit files

* levit tests

* weights script

* weights script

* update

* style fixes

* few minor corrections

* Added teacher model

* edit docs

* fix-copies

* style fixes

* pr error resolved

* Update README.md

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/index.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/__init__.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/__init__.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/configuration_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/configuration_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* suggested pr changes

* style fixes

* minor bug

* update

* minor doc edit

* style

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update tests/models/levit/test_modeling_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* residual layer readable

* style

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update tests/models/levit/test_feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* change checkpoints and style

* update

* minor changes

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/kssteven418/BigLittleDecoder,src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/kssteven418/BigLittleDecoder,src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2022-07-27T15:14:47Z,"Add swin transformer v2 (#17469)

* Add files generated using transformer-cli add-new-model-like command

* Add changes for swinv2 attention and forward method

* Add fixes

* Add modifications for weight conversion and remaining args in swin model

* Add changes for patchmerging

* Add changes for SwinV2selfattention

* Update conversion script

* Add final fixes for the swin_v2 model

* Add changes for conversion script for pretrained window size case

* Add pretrained window size value from config in SwinV2Encoder class

* Make fixup

* Add swinv2 to models_not_in_readme to utils/check_copies.py

* Modify Swinv2v2 to Swin Transformer V2

* Remove copied from, to run make fixup command

* Add updates to swinv2tf from main branch

* Add pretrained_window_size to config, to make tests pass

* Add modified weights from nandwalritik profile for swinv2

* Update model weights from swinv2 from nandwalritik profile

* Add fix for build_pr_documentation CI fix

* Add fixes for weight conversion

* Add change to make input with padding work

* Add fixes for test cases

* Add few changes from swin to swinv2 to pass test cases

* Remove tests for tensorflow as swinv2 for TF is not added yet

* Overide test_pt_tf_model_equivalence function as TF implementation for swinv2 is not added yet

* Add modeling_tf_swinv2 to _ignore_modules as test file is removed for this one right now.

* Update docs url for swinv2 in README.md

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Undo changes for check_repo

* Update url in readme.md

* Remove overrided function to test pt_tf_model_equivalence

* Remove TF model imports for Swinv2 as its not implemented in this PR

* Add changes for index.mdx

* Add swinv2 papers link,abstract and contributors details

* Rename cpb_mlp to continous_position_bias_mlp

* Add tips for swinv2 model

* Update src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Fix indentation for docstring example in src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update import order in src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add copyright statements in weights conversion script.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Remove Swinv2 from models_not_in_readme

* Reformat code

* Remove TF implementation file for swinv2

* Update start docstring.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add changes for docstring

* Update orgname for weights to microsoft

* Remove to_2tuple function

* Add copied from statements wherever applicable

* Add copied from to Swinv2ForMaskedImageModelling class

* Reformat code.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add unittest.skip(with reason.) for test_inputs_embeds test case.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add updates for test_modeling_swinv2.py

* Add @unittest.skip() annotation for clarity to create_and_test_config_common_properties function

* Add continuous_position_bias_mlp parameter to conversion script

* Add test for testing masked_image_modelling for swinv2

* Update Swinv2 to Swin Transformer v2 in docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update Swinv2 to Swin Transformer v2 in docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add suggested changes

* Add copied from to forward methods of Swinv2Stage and Swinv2Encoder

* Add push_to_hub flag to weight conversion script

* Change order or Swinv2DropPath class

* Add id2label mapping for imagenet 21k

* Add updated url for SwinV2 functions and classes used in implementation

* Update input_feature dimensions format, mentioned in comments.

Co-authored-by: Alara Dirik <8944735+alaradirik@users.noreply.github.com>

* Add suggested changes for modeling_swin2.py

* Update docs

* Remove create_and_test_config_common_properties function, as test_model_common_attributes is sufficient.

* Fix indentation.

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Add changes for making Nit objects in code style

* Add suggested changes

* Add suggested changes for test_modelling_swinv2

* make fix-copies

* Update docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Alara Dirik <8944735+alaradirik@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/layer6ai-labs/dgm-eval,dgm_eval/models/inception.py,2023-06-15T23:09:25Z,"code and data release

l2 memorization notebook"
github.com/RichardErkhov/rope,models/vitseg.py,2023-08-21T07:02:22Z,Add files via upload
github.com/tjddus9597/HIER-CVPR23,hier/models/model.py,2023-04-09T21:20:21Z,first commit
github.com/leexinhao/ZeroI2V,mmaction/models/recognizers/base.py,2024-01-17T10:55:22Z,fix some bugs
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-06-15T08:59:12Z,add seresnext_26t
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-06-10T09:50:59Z,Add effnets
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-06-09T13:33:25Z,"hard white mask, should work a bit better"
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-06-09T07:28:49Z,save white mask in --save-patches
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-06-08T17:15:52Z,"white mask v3, lower white limit"
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-06-08T07:00:28Z,more granular white-mask
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-06-07T15:09:34Z,Merge branch 'master' into mask-white
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-29T16:20:53Z,add resnet50_abn
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-28T20:26:30Z,add abn models
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-26T19:39:22Z,make --white-mask a parameter
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-26T19:18:26Z,Merge branch 'master' into mask-white
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-26T17:55:14Z,fix resnext submit
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-26T09:18:42Z,mask white patches
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-24T08:47:58Z,"don't require iabn, add requests (already in docker)"
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-23T21:03:23Z,include normalization before pooling as in original
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-23T18:39:30Z,add BiT models
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-17T19:22:54Z,timm and iabn now available on kaggle
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-17T11:18:23Z,don't freeze layer4
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-17T10:16:03Z,re-purpose --frozen to fine-tune the head
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-14T19:59:50Z,add tresnet_m
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-13T17:56:39Z,add resnext gn ws support
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-12T20:13:36Z,swsl kaggle support
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-10T19:21:38Z,"remove max pooling, just average pooling is a bit better"
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-10T16:02:28Z,remove mobilenet as it uses more memory then resnet34
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-10T14:56:31Z,"add mobilenet v2, more flexible model definition"
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-09T18:51:22Z,Fix resnet_timm
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-09T18:45:39Z,rm fixup: it's slower and uses more memory
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-09T18:45:14Z,fix fixup
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-09T18:09:05Z,"add fixup resnet (without pre-train), just to check"
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-09T17:18:26Z,resnet34 with timm weights (not tested)
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-08T17:31:24Z,add missing super call
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-08T17:20:09Z,add --frozen option to save memory
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-07T17:08:05Z,basic validation
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-07T16:48:44Z,WIP start regression
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-07T16:45:53Z,add a bigger swsl model
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-05T15:56:35Z,add swsl models from https://github.com/facebookresearch/semi-supervised-ImageNet1K-models
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-04T14:59:07Z,remove gn/ws replaces as we still need proper pre-train
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-04T14:15:30Z,gnws_resnet fixes
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-04T13:57:45Z,"1 group works a bit better, maybe due to better use of init"
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-04T13:39:19Z,resnet with group norm + weight standartization (not tested)
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-04T11:10:04Z,group norms and weight standardization (poor)
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-04T10:03:02Z,"don't freeze bns, this leads to worse quality"
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-03T19:18:27Z,"Use group normalization in the head, freeze bns in the base

this allows to use gradient accumulation without a loss"
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-02T19:14:11Z,add resnet18
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-02T12:00:31Z,Add HeadFC2 head
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-05-02T09:32:14Z,add maxpool
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-04-28T18:48:21Z,pool over multiple patches
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-04-26T19:20:25Z,"Fix kaggle submit issues

* ignore jpeg4py import error
* don't load pre-trained weights on kaggle
* support cpu submit"
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-04-26T10:13:51Z,a simple training loop
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-04-26T09:55:36Z,do several random crops per image
github.com/lopuhin/kaggle-panda-2020,panda/models.py,2020-04-26T08:56:46Z,create a package to simplify kaggle upload
github.com/xcyao00/FOD,trainer.py,2023-08-06T01:43:45Z,Add files via upload
github.com/xcyao00/FOD,create_ref_features.py,2023-08-06T01:43:45Z,Add files via upload
github.com/KIT-MRT/road-barlow-twins,src/road_barlow_twins/finetune_motion.py,2023-05-10T09:15:19Z,Add run_prefix param
github.com/KIT-MRT/road-barlow-twins,src/road_barlow_twins/finetune_motion.py,2023-05-07T15:35:03Z,Make num of gpus and num of nodes configurable
github.com/KIT-MRT/road-barlow-twins,src/road_barlow_twins/finetune_motion.py,2023-05-06T20:50:09Z,Add fine-tuning script
github.com/KIT-MRT/road-barlow-twins,src/road_barlow_twins/pretrain_sim_clr.py,2023-05-07T15:35:03Z,Make num of gpus and num of nodes configurable
github.com/KIT-MRT/road-barlow-twins,src/road_barlow_twins/pretrain_sim_clr.py,2023-05-05T16:39:05Z,Make path to train and val files configurable
github.com/KIT-MRT/road-barlow-twins,src/road_barlow_twins/pretrain_sim_clr.py,2023-04-17T14:38:24Z,Add pretraining scripts
github.com/KIT-MRT/road-barlow-twins,src/road_barlow_twins/pretrain_pretram.py,2023-05-07T15:35:03Z,Make num of gpus and num of nodes configurable
github.com/KIT-MRT/road-barlow-twins,src/road_barlow_twins/pretrain_pretram.py,2023-05-05T16:39:05Z,Make path to train and val files configurable
github.com/KIT-MRT/road-barlow-twins,src/road_barlow_twins/pretrain_pretram.py,2023-04-17T14:38:24Z,Add pretraining scripts
github.com/KIT-MRT/road-barlow-twins,src/road_barlow_twins/pretrain_road_barlow_twins.py,2023-05-07T15:35:03Z,Make num of gpus and num of nodes configurable
github.com/KIT-MRT/road-barlow-twins,src/road_barlow_twins/pretrain_road_barlow_twins.py,2023-05-05T16:39:05Z,Make path to train and val files configurable
github.com/KIT-MRT/road-barlow-twins,src/road_barlow_twins/pretrain_road_barlow_twins.py,2023-04-17T14:38:24Z,Add pretraining scripts
github.com/iliasprc/COVIDNet,tests/test_models.py,2021-04-23T13:26:57Z,Cxr8 dataloader update
github.com/iliasprc/COVIDNet,tests/test_models.py,2021-04-04T18:04:24Z,"Major updates
config files
Trainer class
feature pretraining"
github.com/iliasprc/COVIDNet,tests/test_models.py,2021-03-31T17:01:57Z,"Major updates
config files
Trainer class"
github.com/DannielSilva/MM-VQA,vqamed2019/grad_cam.py,2021-11-09T02:08:57Z,Update README.md
github.com/DannielSilva/MM-VQA,vqamed2019/grad_cam.py,2021-10-13T14:42:33Z,trying grad-cam for the whole model
github.com/amro-kamal/ObjectPose,src/Models/Models.py,2022-07-12T18:23:02Z,new folder name
github.com/mudabek/encoding-cxr-report-gen,custom_models.py,2022-11-24T13:17:45Z,full
github.com/cshizhe/HM3DAutoVLN,hm3d_data_gen/step06_extract_obj_features.py,2022-08-24T21:53:21Z,first commit
github.com/cshizhe/HM3DAutoVLN,hm3d_data_gen/step02_extract_view_features.py,2022-08-24T21:53:21Z,first commit
github.com/justchenhao/SILI_CD,models/networks.py,2023-11-26T07:38:11Z,"Update networks.py

fixed #2"
github.com/justchenhao/SILI_CD,models/networks.py,2023-10-21T09:14:17Z,SILI_CD
github.com/MaverickPeter/vDiSCO,prnet/models/localizer/dolgnet.py,2023-09-15T09:29:43Z,update full version
github.com/basilevh/tcow,model/resnet.py,2023-06-12T00:19:42Z,release
github.com/k-gyuhak/MORE,run.py,2022-07-18T02:50:35Z,"init

init"
github.com/k-gyuhak/MORE,datasets/cont_data.py,2022-07-18T02:50:35Z,"init

init"
github.com/wangcunxiang/Graph-aS-Tokens,reader/transformers-4.16.0/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-02-13T05:25:45Z,init
github.com/wangcunxiang/Graph-aS-Tokens,reader/transformers-4.16.0/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-02-13T05:25:45Z,init
github.com/wangcunxiang/Graph-aS-Tokens,reader/transformers-4.16.0/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-02-13T05:25:45Z,init
github.com/hwk0702/keras2torch,Anomaly_Detection/PatchCore/backbones.py,2022-07-17T14:58:26Z,[Anomaly Detection] PatchCore
github.com/hwk0702/keras2torch,Adversarial_Attack/Fast_Gradient_Sign_Method/main.py,2021-10-22T04:49:28Z,fgsm
github.com/hwk0702/keras2torch,Adversarial_Attack/Projected_Gradient_Descent/main.py,2021-10-22T04:50:11Z,pgd update
github.com/hwk0702/keras2torch,Adversarial_Attack/Projected_Gradient_Descent/main.py,2021-10-09T17:01:16Z,pgd
github.com/ChunmingHe/FEDER,lib/Network.py,2023-05-15T03:31:32Z,Add files via upload
github.com/yaoching0/CLCNet-Rethinking-of-Ensemble-Modeling,eval-custom-data.py,2022-05-17T11:17:16Z,🎉 code publicly release
github.com/yaoching0/CLCNet-Rethinking-of-Ensemble-Modeling,eval-imagenet-5-fold-cv.py,2022-05-17T16:05:34Z,🎉 code publicly release
github.com/yaoching0/CLCNet-Rethinking-of-Ensemble-Modeling,eval-imagenet-5-fold-cv.py,2022-05-17T16:05:12Z,Delete eval-imagenet-5-fold-cv.py
github.com/yaoching0/CLCNet-Rethinking-of-Ensemble-Modeling,eval-imagenet-5-fold-cv.py,2022-05-17T11:17:16Z,🎉 code publicly release
github.com/yaoching0/CLCNet-Rethinking-of-Ensemble-Modeling,generate_data_for_CLCNet.py,2022-05-17T11:17:16Z,🎉 code publicly release
github.com/yaoching0/CLCNet-Rethinking-of-Ensemble-Modeling,generate_data_for_CLCNet.py,2022-05-17T11:16:21Z,Delete generate_data_for_CLCNet.py
github.com/yaoching0/CLCNet-Rethinking-of-Ensemble-Modeling,generate_data_for_CLCNet.py,2022-05-15T11:41:43Z,🎉 code publicly release
github.com/smiles724/GNN-Bottleneck,cnn/util/model_util.py,2022-10-25T13:40:31Z,update
github.com/YangXiaocui1215/GMP,src/model/modules_for_prompt.py,2023-07-03T09:32:37Z,Add files via upload
github.com/YangXiaocui1215/GMP,src/model/modules_for_prompt_multitasks.py,2023-07-03T09:32:37Z,Add files via upload
github.com/brainpriority/vitmem,src/vitmem/__init__.py,2022-06-23T11:35:41Z,Initial commit
github.com/danfenghong/IEEE_TPAMI_SpectralGPT,downstream_tasks/SegMunich/train_multi_GPU_new.py,2024-02-21T15:18:17Z,20240221
github.com/Westlake-AI/A2MIM,analysis_tools/fourier_analysis/utils.py,2023-11-22T18:57:37Z,update docs
github.com/Westlake-AI/A2MIM,analysis_tools/representation_bottleneck/util/model_util.py,2023-07-26T12:06:33Z,update docs and tools
github.com/ModelTC/L2_Compression,train/train_yolo.py,2023-08-07T13:03:49Z,base features
github.com/ModelTC/L2_Compression,train/train_final.py,2023-08-07T13:03:49Z,base features
github.com/rahimentezari/DataDistributionTransferLearning,src/models/simclr/models.py,2022-11-01T22:37:46Z,"add ""README.md"""
github.com/adodge/ComfyLib,comfy/hazard/ldm/modules/midas/midas/vit.py,2023-02-26T03:09:37Z,creating a library interface for the SD implementation in ComfyUI
github.com/feng-lab/pytorch-image-models,tests/test_utils.py,2021-10-02T15:10:11Z,Fix ordering of tests
github.com/feng-lab/pytorch-image-models,tests/test_utils.py,2021-10-02T14:55:08Z,Freeze unfreeze functionality finalized. Tests added
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2022-03-21T20:41:43Z,Merge remote-tracking branch 'origin/master' into norm_norm_norm
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2022-02-28T21:56:23Z,"Significant model refactor and additions:
* All models updated with revised foward_features / forward_head interface
* Vision transformer and MLP based models consistently output sequence from forward_features (pooling or token selection considered part of 'head')
* WIP param grouping interface to allow consistent grouping of parameters for layer-wise decay across all model types
* Add gradient checkpointing support to a significant % of models, especially popular architectures
* Formatting and interface consistency improvements across models
* layer-wise LR decay impl part of optimizer factory w/ scale support in scheduler
* Poolformer and Volo architectures added"
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2022-02-24T03:50:26Z,Missed comitting outstanding changes to default_cfg keys and test exclusions for swin v2
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2022-01-27T06:53:57Z,"Move DeiT to own file, vit getting crowded. Working towards fixing #1029, make pooling interface for transformers and mlp closer to convnets. Still working through some details..."
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2022-01-26T06:20:45Z,Merge remote-tracking branch 'origin/master' into norm_norm_norm
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2022-01-26T05:54:13Z,"Transitioning default_cfg -> pretrained_cfg. Improving handling of pretrained_cfg source (HF-Hub, files, timm config, etc). Checkpoint handling tweaks."
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2022-01-17T20:20:02Z,Add Dino pretrained weights (no head) for vit models. Add support to tests and helpers for models w/ no classifier (num_classes=0 in pretrained cfg)
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2022-01-15T01:23:35Z,"Giant/gigantic vits snuck through in a test a broke GitHub test runner, add filter"
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2022-01-15T00:28:27Z,"Extra vit_huge model likely to cause test issue (non in21k variant), adding to filters"
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2022-01-15T00:28:27Z,Update REAMDE.md. Sneak in g/G (giant / gigantic?) ViT defs from scaling paper
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2022-01-07T06:21:05Z,Add lcnet_100 and mnasnet_small weights
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2022-01-07T02:08:39Z,Remove deprecated bn-tf train arg and create_model handler. Add evos/evob models back into fx test filter until norm_norm_norm branch merged.
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2022-01-07T00:04:23Z,"Update pytest for GitHub runner to use --forked with xdist, hopefully eliminate memory buildup"
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-12-01T22:58:56Z,Add FX backward tests back
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-12-01T20:09:23Z,"Update pytest for GitHub runner to use --forked with xdist, hopefully eliminate memory buildup"
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-11-24T21:21:24Z,Remove evonorm models from FX tests
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-11-24T06:24:58Z,Would like to pass GitHub tests again disabling both FX feature extract backward and torchscript tests
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-11-23T22:32:32Z,Remove FX backward test from GitHub actions runs for now.
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-11-22T22:00:27Z,Add patch8 vit model to FX exclusion filter
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-11-22T19:48:40Z,"New FX test strategy, filter based on param count"
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-11-22T17:46:43Z,More FX test tweaks
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-11-22T05:26:44Z,Filter more large models from FX tests
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-11-22T03:49:33Z,Filter more models for FX tests
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-11-21T22:08:53Z,Add nfnet_f2 to FX test exclusion
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-11-20T23:51:48Z,Add more models to FX filter
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-11-20T01:35:41Z,Add FX test exclusion since it uses more ram and barfs on GitHub actions. Will take a few iterations to include needed models :(
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-11-19T22:24:12Z,Attempt to reduce memory footprint of FX tests for GitHub actions runs
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-11-19T16:39:48Z,"beit_large models killing GitHub actions test, filter out"
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-11-19T05:25:00Z,Cleanup qkv_bias cat in beit model so it can be traced
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-11-19T03:47:07Z,Minor post FX merge cleanup
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-11-13T00:06:33Z,fx ready for review
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-11-12T21:16:53Z,Add try/except guards
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-11-12T20:45:05Z,wip - pre-rebase
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-11-12T20:45:05Z,Tests to enforce all models FX traceable
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-09-13T23:38:23Z,"Add BeiT 'finetuned' 1k weights and pretrained 22k weights, pretraining specific (masked) model excluded for now"
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-09-13T20:01:05Z,"Better handling of crossvit for tests / forward_features, fix torchscript regression in my changes"
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-09-13T18:49:54Z,"Post crossvit merge cleanup, change model names to reflect input size, cleanup img size vs scale handling, fix tests"
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-09-01T21:13:12Z,add crossvit
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-08-07T23:45:29Z,Add gc_efficientnetv2_rw_t weights (global context instead of SE attn). Add TF XL weights even though the fine-tuned ones don't validate that well. Change default arg for GlobalContext to use scal (mul) mode.
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-07-13T23:33:55Z,Attempt to fix xcit test failures on github runner by filter largest models
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-07-11T08:39:38Z,wip xcit
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-07-03T11:10:12Z,wip to review
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-06-23T06:16:05Z,"Fix a few issues loading pretrained vit/bit npz weights w/ num_classes=0 __init__ arg. Missed a few other small classifier handling detail on Mlp, GhostNet, Levit. Should fix #713"
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-06-20T05:28:44Z,Add hybrid model fwds back
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-06-13T06:31:24Z,Try lower max size for non_std default_cfg test
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-06-12T23:40:02Z,"Refactoring, cleanup, improved test coverage.
* Add eca_nfnet_l2 weights, 84.7 @ 384x384
* All 'non-std' (ie transformer / mlp) models have classifier / default_cfg test added
* Fix #694 reset_classifer / num_features / forward_features / num_classes=0 consistency for transformer / mlp models
* Add direct loading of npz to vision transformer (pure transformer so far, hybrid to come)
* Rename vit_deit* to deit_*
* Remove some deprecated vit hybrid model defs
* Clean up classifier flatten for conv classifiers and unusual cases (mobilenetv3/ghostnet)
* Remove explicit model fns for levit conv, just pass in arg"
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-31T05:00:43Z,Missed comma in test filters.
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-30T19:47:02Z,Able to use other attn layer in EfficientNet now. Create test ECA + GC B0 configs. Make ECA more configurable.
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-26T22:28:42Z,"Fix #661, move hardswish out of default args for LeViT. Enable native torch support for hardswish, hardsigmoid, mish if present."
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-25T21:11:36Z,Fix visformer in_chans stem handling
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-25T19:52:07Z,Filter large vit models from torchscript tests
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-25T18:10:17Z,Hopefully the last test update for this PR...
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-25T17:14:45Z,Filter test models before creation for backward/torchscript tests
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-25T05:50:12Z,"Add Visformer-small weighs, tweak torchscript jit test img size."
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-25T04:36:56Z,Lower max backward size for tests.
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-25T04:13:26Z,Expand scope of testing for non-std vision transformer / mlp models. Some related cleanup and create fn cleanup for all vision transformer and mlp models. More CoaT weights.
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-22T23:34:31Z,Merge branch 'master' into levit_visformer_rednet
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-21T23:27:10Z,Merge branch 'convit' of https://github.com/amaarora/pytorch-image-models into amaarora-convit
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-21T03:46:47Z,Add convit to non-std filters as vit_
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-21T01:11:56Z,update tests and exclude convit_base
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-20T03:20:39Z,update test_models.py
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-19T18:09:42Z,Update tests for new mlp models
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-15T00:16:34Z,"Add levit, levit_c, and visformer model defs. Largely untested and not finished cleanup."
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-06T00:51:23Z,Update test for cait 448x448 model
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-06T00:29:38Z,Merge branch 'master' into cait
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-05T22:59:40Z,"Add official pretrained weights to MLP-Mixer, complete model cfgs."
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-04T18:19:27Z,Initial Cait commit. Still some cleanup to do.
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-04T18:04:23Z,"Post ResNet-RS merge cleanup. Add weight urls, adjust train/test/crop pct."
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-05-04T17:59:44Z,"[WIP] Add ResNet-RS models (#554)

* Add ResNet-RS models

* Only include resnet-rs changes

* remove whitespace diff

* EOF newline

* Update time

* increase time

* Add first conv

* Try running only resnetv2_101x1_bitm on Linux runner

* Add to exclude filter

* Run test_model_forward_features for all

* Add to exclude ftrs

* back to defaults

* only run test_forward_features

* run all tests

* Run all tests

* Add bigger resnetrs to model filters to fix Github CLI

* Remove resnetv2_101x1_bitm from exclude feat features

* Remove hardcoded values

* Make sure reduction ratio in resnetrs is 0.25

* There is no bias in replaced maxpool so remove it"
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-04-24T12:41:28Z,Add files via upload
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-04-15T16:30:25Z,Merge branch 'master' of https://github.com/iamhankai/pytorch-image-models into iamhankai-master
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-04-14T05:15:20Z,Fix unit test filter update.
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-04-13T20:36:24Z,Update README again. Add 101x3 BiT-M model to CI ignore since it's starting to fail in GitHub runners.
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-04-13T19:17:21Z,Add Swin Transformer models from https://github.com/microsoft/Swin-Transformer
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-04-13T15:19:51Z,Add GhostNet
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-04-12T18:54:22Z,"Add default_cfg options for min_input_size / fixed_input_size, queries in model registry, and use for testing self-attn models"
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-04-03T18:18:12Z,Fix ResNetV2 pretrained classifier issue. Fixes #540
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-04-01T01:20:14Z,Add PiT model from https://github.com/naver-ai/pit
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-03-29T18:33:08Z,"Small tweak to tests for tnt model, reorder model imports."
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-03-29T01:39:50Z,Update test_models.py
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-03-06T20:48:06Z,"Tweak NFNet, ResNetV2, RexNet feature extraction, use pre-act features for simplicty. Update tests for pytorch 1.8. 0.4.5 version bump."
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-02-18T21:43:04Z,Fix test model filter to include dm_ variants that break GitHub CI limits
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-02-13T05:05:41Z,"Fix issue with nfnet tests, bit more cleanup."
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-02-10T00:22:52Z,Fix regression in models with 1001 class pretrained weights. Improve batchnorm arg and BatchNormAct layer handling in several models.
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-01-19T00:11:02Z,"Refactor vision_transformer entrpy fns, add pos embedding resize support for fine tuning, add some deit models for testing"
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-01-16T20:37:10Z,Update tests
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2021-01-05T07:21:39Z,Fix some broken tests for ResNetV2 BiT models
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2020-12-01T00:19:52Z,"A few more changes for 0.3.2 maint release. Linear layer change for mobilenetv3 and inception_v3, support no bias for linear wrapper."
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2020-10-29T22:43:39Z,Fix regression for pretrained classifier loading when using entrypt functions directly
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2020-10-13T21:51:08Z,"Update README, ensure vit excluded from all tests (not ready)"
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2020-10-13T20:33:44Z,Initial Vision Transformer impl w/ patch and hybrid variants. Refactor tuple helpers.
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2020-09-02T00:37:55Z,hrnet features_only pretrained weight loading issue. Fix #232.
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2020-08-18T21:11:30Z,"Fix MobileNetV3 crash with global_pool='', output consistent with other models but not equivalent due to efficient head."
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2020-08-12T01:57:47Z,Fix a few more issues related to #216 w/ TResNet (space2depth) and FP16 weights in wide resnets. Also don't completely dump pretrained weights in in_chans != 1 or 3 cases.
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2020-08-11T14:33:22Z,remove comments
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2020-08-11T14:23:57Z,fix test_model_default_cfgs
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2020-08-08T18:12:58Z,Change default_cfg names for senet to include the legacy and match model names
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2020-08-04T05:18:24Z,"More uniform treatment of classifiers across all models, reduce code duplication."
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2020-07-30T02:43:01Z,Fix some checkpoint / model str regressions
github.com/feng-lab/pytorch-image-models,tests/test_models.py,2020-07-28T01:01:43Z,Disable big models for MacOS test since they are starting to fail frequently.
github.com/Expedit-LargeScale-Vision-Transformer/Expedit-DINO,detrex/modeling/backbone/timm_backbone.py,2022-09-27T03:27:32Z,"Refine code format (#80)

* refine format

* refine format

* refine docs links

Co-authored-by: ntianhe ren <rentianhe@dgx061.scc.idea>"
github.com/Expedit-LargeScale-Vision-Transformer/Expedit-DINO,detrex/modeling/backbone/timm_backbone.py,2022-09-22T03:13:31Z,"Clean redundant code and refine README (#74)

* clean redundant code and refine readme

* refine README

Co-authored-by: ntianhe ren <rentianhe@dgx061.scc.idea>"
github.com/Expedit-LargeScale-Vision-Transformer/Expedit-DINO,detrex/modeling/backbone/timm_backbone.py,2022-09-21T09:36:36Z,add get_rank
github.com/Expedit-LargeScale-Vision-Transformer/Expedit-DINO,detrex/modeling/backbone/timm_backbone.py,2022-09-19T05:55:21Z,"Add using-backbone and FAQs docs (#67)

* add using backbone docs

* refine README

* add more settings

* fix timm backbone bugs and add dino timm backbone example

* add timm backbone docs

Co-authored-by: ntianhe ren <rentianhe@dgx061.scc.idea>"
github.com/Expedit-LargeScale-Vision-Transformer/Expedit-DINO,detrex/modeling/backbone/timm_backbone.py,2022-08-30T05:15:19Z,"Add modeling docs (#33)

* refine docs

* refine docs

* refine docs

* add matcher docs

* add neck docs

* refine channel mapper docs

Co-authored-by: ntianhe ren <rentianhe@dgx061.scc.idea>"
github.com/Expedit-LargeScale-Vision-Transformer/Expedit-DINO,detrex/modeling/backbone/timm_backbone.py,2022-08-29T13:15:27Z,"Rename ideadet to detrex (#32)

* rename ideadet to detrex

* rename ideadet to detrex

* rename ideadet params to detrex

Co-authored-by: ntianhe ren <rentianhe@dgx061.scc.idea>"
github.com/gakkiri/simple-centernet-pytorch,model/backbone/renset.py,2020-05-16T04:31:55Z,Add files via upload
github.com/chufengt/ViRReq,whole-to-part-semantic-segmentation/mmseg/models/backbones/timm_backbone.py,2022-07-26T05:50:25Z,initial
github.com/chufengt/ViRReq,whole-to-part-semantic-segmentation/mmseg/models/backbones/timm_backbone.py,2022-07-26T05:49:26Z,update
github.com/chufengt/ViRReq,whole-to-part-semantic-segmentation/mmseg/models/backbones/timm_backbone.py,2022-07-23T15:10:01Z,inital
github.com/psyai-net/D-IF_release,lib/pare/pare/models/backbone/hrnet_legacy.py,2023-07-21T13:05:49Z,d_if first release code
github.com/TWK2022/classification,model/timm_model.py,2024-01-25T03:30:37Z,!
github.com/TWK2022/classification,model/timm_model.py,2023-04-03T09:25:39Z,增加分布式训练
github.com/TWK2022/classification,model/timm_model.py,2023-03-23T10:04:23Z,!
github.com/TWK2022/classification,model/timm_model.py,2023-03-08T02:34:26Z,!
github.com/TWK2022/classification,model/timm_model.py,2023-02-21T06:27:29Z,!
github.com/TWK2022/classification,model/timm_model.py,2022-12-04T08:43:53Z,Add files via upload
github.com/GiantJun/CL_Pytorch,backbone/inc_net.py,2023-07-16T11:32:45Z,update options/multi_steps/acl/cifar100.yaml
github.com/GiantJun/CL_Pytorch,backbone/inc_net.py,2023-07-10T16:37:00Z,update acl
github.com/GiantJun/CL_Pytorch,backbone/inc_net.py,2023-07-05T03:22:01Z,updated adatper-cl
github.com/GiantJun/CL_Pytorch,backbone/inc_net.py,2023-04-13T16:23:40Z,updated baselines
github.com/GiantJun/CL_Pytorch,backbone/inc_net.py,2022-10-31T14:20:11Z,first commit
github.com/ly19965/CVPR_Anti_UAV,modelscope/models/cv/text_driven_segmentation/lseg_vit.py,2023-01-18T12:38:53Z,add baseline
github.com/ly19965/CVPR_Anti_UAV,modelscope/models/cv/indoor_layout_estimation/networks/backbone/vit_horizon_pry_image.py,2023-01-18T12:38:53Z,add baseline
github.com/facebookresearch/SIEVE,open_clip_torch/src/open_clip/timm_model.py,2023-12-14T20:43:31Z,Initial commit
github.com/KalbeDigitalLab/Getting-Started-ML-CV,src/models.py,2023-06-13T06:27:51Z,Update inline definitions and docstrings
github.com/KalbeDigitalLab/Getting-Started-ML-CV,src/models.py,2023-06-13T03:33:13Z,Move and reformat python scripts to root dir
github.com/xzz777/SCTNet,mmseg/models/backbones/timm_backbone.py,2024-01-15T07:29:07Z,Release the code and model of SCTNet
github.com/sIncerass/MVLPT,trainers/vision_benchmark/evaluation/feature.py,2022-11-21T01:57:53Z,init
github.com/jaylenwang7/DNN-Dataflow-Resilience,helpers.py,2023-02-21T00:47:35Z,more experiments
github.com/jaylenwang7/DNN-Dataflow-Resilience,helpers.py,2023-01-24T01:16:30Z,changes
github.com/jaylenwang7/DNN-Dataflow-Resilience,helpers.py,2023-01-24T01:03:20Z,changes
github.com/jaylenwang7/DNN-Dataflow-Resilience,helpers.py,2022-10-03T02:29:04Z,"fixes, added region support (not on by default)"
github.com/jaylenwang7/DNN-Dataflow-Resilience,helpers.py,2022-10-01T16:35:48Z,"fixed use_cpu, imports, etc"
github.com/jaylenwang7/DNN-Dataflow-Resilience,helpers.py,2022-09-28T13:12:01Z,added batched inference across images + other fixes
github.com/jaylenwang7/DNN-Dataflow-Resilience,helpers.py,2022-09-25T18:58:58Z,"added naive CUDA support, removed circular deps, other changes, dataset can now take list, will add support for batching inputs"
github.com/jaylenwang7/DNN-Dataflow-Resilience,helpers.py,2022-08-07T18:14:28Z,add timeloop stuff
github.com/jaylenwang7/DNN-Dataflow-Resilience,helpers.py,2022-08-02T20:10:43Z,README updates + some docstrings/type hints
github.com/jaylenwang7/DNN-Dataflow-Resilience,helpers.py,2022-07-05T12:42:36Z,changed plotting and bug fixes
github.com/jaylenwang7/DNN-Dataflow-Resilience,helpers.py,2022-06-27T14:11:12Z,FC support + other changes
github.com/jaylenwang7/DNN-Dataflow-Resilience,helpers.py,2022-06-14T14:18:15Z,lots of changes
github.com/jaylenwang7/DNN-Dataflow-Resilience,helpers.py,2022-04-29T21:07:40Z,"changed plotting, parsing, and fixed some loop bugs"
github.com/jaylenwang7/DNN-Dataflow-Resilience,helpers.py,2022-04-27T03:46:19Z,better inj ind checking/producing
github.com/jaylenwang7/DNN-Dataflow-Resilience,helpers.py,2022-04-24T14:24:21Z,lots of changes
github.com/jaylenwang7/DNN-Dataflow-Resilience,helpers.py,2022-03-31T21:34:35Z,initial commit
github.com/see--/pneumothorax-segmentation,Model_000_f00/segmentation_model.py,2019-09-06T10:56:50Z,First commit
github.com/see--/pneumothorax-segmentation,Model_001_f00/segmentation_model.py,2019-09-06T10:56:50Z,First commit
github.com/see--/pneumothorax-segmentation,Model_002_f00/segmentation_model.py,2019-09-06T10:56:50Z,First commit
github.com/HHU-MMBS/TEMI-official-BMVC2023,model_builders/model_builders.py,2023-09-28T12:11:21Z,"Cleanup, add readme, test code in server + upload"
github.com/Jayfeather1024/DensePure,eval_certified_densepure.py,2023-01-06T07:31:00Z,update
github.com/Jayfeather1024/DensePure,eval_certified_densepure.py,2023-01-06T05:59:09Z,update
github.com/Jayfeather1024/DensePure,eval_certified_densepure.py,2022-11-18T19:38:21Z,update
github.com/Jayfeather1024/DensePure,eval_certified_densepure.py,2022-11-16T21:41:00Z,upload
github.com/wangsr126/MAE-Lite,mae_lite/models/__init__.py,2022-07-11T02:26:18Z,fix some bugs
github.com/wangsr126/MAE-Lite,mae_lite/models/__init__.py,2022-05-27T07:50:52Z,fix bug
github.com/lmb-freiburg/cv-exercises,ex08/dpt/vit.py,2024-01-11T13:23:58Z,add ex08
github.com/lmb-freiburg/cv-exercises,solution08/dpt/vit.py,2024-01-25T13:56:11Z,add solution08
github.com/vvhg1/guided-text-generation-with-classifier-free-language-diffusion,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-08-17T13:29:10Z,initial commit
github.com/vvhg1/guided-text-generation-with-classifier-free-language-diffusion,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-08-17T13:29:10Z,initial commit
github.com/vvhg1/guided-text-generation-with-classifier-free-language-diffusion,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-08-17T13:29:10Z,initial commit
github.com/Hans1984/GlowGAN,run_inversion.py,2023-10-22T11:52:36Z,update
github.com/Hans1984/GlowGAN,training/loss.py,2023-10-22T11:28:43Z,Initialize
github.com/Hans1984/GlowGAN,feature_networks/vit.py,2023-10-22T11:28:43Z,Initialize
github.com/Hans1984/GlowGAN,feature_networks/pretrained_builder.py,2023-10-22T11:28:43Z,Initialize
github.com/ahmedbesbes/whales-classification,backbones/resnet_models.py,2020-04-28T22:55:04Z,remove useless arguments in model factory
github.com/ahmedbesbes/whales-classification,backbones/resnet_models.py,2020-04-28T22:51:37Z,adapt code for arcface solution
github.com/ahmedbesbes/whales-classification,backbones/resnet_models.py,2020-03-26T13:57:20Z,add resnext as part of pretrained models
github.com/ahmedbesbes/whales-classification,backbones/resnet_models.py,2020-03-26T12:46:58Z,define gap attribute at the beginning
github.com/ahmedbesbes/whales-classification,backbones/resnet_models.py,2020-03-26T12:32:19Z,add gap argument
github.com/ahmedbesbes/whales-classification,backbones/resnet_models.py,2020-03-13T12:34:23Z,add alpha to args
github.com/ahmedbesbes/whales-classification,backbones/resnet_models.py,2020-03-10T11:15:50Z,replace embedding size by embedding dim
github.com/ahmedbesbes/whales-classification,backbones/resnet_models.py,2020-03-10T11:08:43Z,add model factory
github.com/pianoza/LayerEnsembles,segmentation_models_pytorch/encoders/timm_universal.py,2022-06-20T15:27:38Z,Initial commit
github.com/pianoza/LayerEnsembles,segmentation_models_pytorch/encoders/timm_mobilenetv3.py,2022-06-20T15:27:38Z,Initial commit
github.com/moothes/SALOD,methods/srm.py,2023-03-17T09:53:23Z,Add files via upload
github.com/moothes/SALOD,methods/menet.py,2023-07-11T02:28:48Z,Add files via upload
github.com/moothes/SALOD,methods/menet.py,2023-06-28T10:45:30Z,Add files via upload
github.com/moothes/SALOD,methods/menet.py,2023-06-27T14:17:55Z,Add files via upload
github.com/moothes/SALOD,base/framework_factory.py,2023-03-17T09:53:23Z,Add files via upload
github.com/moothes/SALOD,base/framework_factory.py,2023-03-17T09:52:33Z,Delete base directory
github.com/moothes/SALOD,base/framework_factory.py,2022-10-17T02:25:41Z,Add files via upload
github.com/moothes/SALOD,base/framework_factory.py,2022-08-18T12:40:40Z,Add files via upload
github.com/moothes/SALOD,base/framework_factory.py,2022-05-15T12:13:37Z,Add files via upload
github.com/moothes/SALOD,base/framework_factory.py,2020-09-16T02:43:03Z,Add files via upload
github.com/ChenhongyiYang/GPViT,mmcls/models/backbones/timm_backbone.py,2022-12-11T22:15:52Z,first commit
github.com/ChenhongyiYang/GPViT,downstream/mmsegmentation/mmseg/models/backbones/timm_backbone.py,2022-12-11T22:15:52Z,first commit
github.com/gfodor/instructblip-replicate,lavis/models/clip_models/model.py,2023-05-19T05:24:20Z,initial commit
github.com/gfodor/instructblip-replicate,lavis/models/clip_models/timm_model.py,2023-05-19T05:24:20Z,initial commit
github.com/LeeYN-43/Clover,mmaction/models/recognizers/base.py,2022-08-18T04:33:18Z,Initial commit
github.com/mondalanindya/MSQNet,multi-label-action-main/models/convit.py,2023-09-26T17:17:37Z,Add files via upload
github.com/mondalanindya/MSQNet,multi-label-action-main/models/query2label.py,2023-09-26T17:17:37Z,Add files via upload
github.com/mondalanindya/MSQNet,multi-label-action-main/models/query2labelclipinit.py,2023-09-26T17:17:37Z,Add files via upload
github.com/gyhandy/Shared-Knowledge-Lifelong-Learning,main.py,2023-07-04T02:52:31Z,Merge branch 'main' into yuecheng_code
github.com/gyhandy/Shared-Knowledge-Lifelong-Learning,main.py,2023-05-24T06:32:26Z,maha_src
github.com/gyhandy/Shared-Knowledge-Lifelong-Learning,main.py,2023-05-22T23:49:20Z,create place holder for maha
github.com/gyhandy/Shared-Knowledge-Lifelong-Learning,main.py,2023-05-22T23:36:29Z,update readme
github.com/gyhandy/Shared-Knowledge-Lifelong-Learning,main.py,2023-05-22T13:32:31Z,update
github.com/gyhandy/Shared-Knowledge-Lifelong-Learning,main.py,2023-05-22T05:09:08Z,update code
github.com/gyhandy/Shared-Knowledge-Lifelong-Learning,main.py,2023-05-21T13:06:23Z,gmmc pending
github.com/gyhandy/Shared-Knowledge-Lifelong-Learning,Xception_src/classifiers.py,2023-05-22T05:09:08Z,update code
github.com/gyhandy/Shared-Knowledge-Lifelong-Learning,Xception_src/classifiers.py,2023-05-11T09:31:44Z,"add some comments on how to use the code, but further adaptation is needed for
1. a more formal script
2. adapt with different dataset
3. adapt with different argument"
github.com/gyhandy/Shared-Knowledge-Lifelong-Learning,Xception_src/classifiers.py,2023-05-11T08:46:34Z,"copy of BPN, GMMC, and dataset code"
github.com/IDEA-Research/HumanSD,ldm/modules/midas/midas/vit.py,2023-04-27T03:31:47Z,release v1.0
github.com/IDEA-Research/HumanSD,comparison_models/ControlNet/annotator/midas/midas/vit.py,2023-08-24T18:47:39Z,fix bugs
github.com/IDEA-Research/HumanSD,comparison_models/ControlNet/ldm/modules/midas/midas/vit.py,2023-08-24T18:47:39Z,fix bugs
github.com/IDEA-Research/HumanSD,comparison_models/T2IAdapter/ldm/modules/extra_condition/midas/midas/vit.py,2023-08-24T18:47:39Z,fix bugs
github.com/scjjb/DRAS-MIL,extract_features_fp.py,2022-10-28T14:31:31Z,further refactoring sampling functions
github.com/scjjb/DRAS-MIL,extract_features_fp.py,2022-10-26T11:45:44Z,refactor args.task
github.com/scjjb/DRAS-MIL,extract_features_fp.py,2022-09-01T10:23:09Z,"Add transformations and levit_128s

Also removed inconsistent tabs and replaced them with spaces. Also added a line to integrate with the current version of Whole_Slide_Bag_FP which requires a call to update_sample to load any data."
github.com/scjjb/DRAS-MIL,extract_features_fp.py,2022-05-11T18:02:12Z,Added histo pretraining capability
github.com/scjjb/DRAS-MIL,extract_features_fp.py,2022-02-14T15:17:53Z,"Add GPU check

Added a line to print whether torch is using cpu or cuda (gpu)"
github.com/scjjb/DRAS-MIL,extract_features_fp.py,2021-08-30T02:05:48Z,Update extract_features_fp.py
github.com/scjjb/DRAS-MIL,extract_features_fp.py,2021-05-24T19:24:06Z,add heatmap visualization
github.com/scjjb/DRAS-MIL,extract_features_fp.py,2021-03-01T16:44:41Z,update fast patching/feature extraction pipeline
github.com/ai-forever/deforum-kandinsky,deforum_kandinsky/src/midas/vit.py,2023-10-16T21:02:49Z,commit message
github.com/ai-forever/deforum-kandinsky,deforum_kandinsky/src/ldm/modules/midas/midas/vit.py,2023-10-16T21:02:49Z,commit message
github.com/gmlwns2000/sttabt,trainer/vit_trainer_mvit.py,2022-11-11T05:38:16Z,update to create save dirs
github.com/gmlwns2000/sttabt,trainer/vit_trainer_mvit.py,2022-11-10T17:03:33Z,Merge branch 'master' of https://github.com/gmlwns2000/discrete_edge_learning
github.com/gmlwns2000/sttabt,trainer/vit_trainer_mvit.py,2022-11-10T17:01:56Z,mvit backward ready
github.com/gmlwns2000/sttabt,trainer/vit_trainer_mvit.py,2022-11-10T14:28:53Z,add debug feature
github.com/gmlwns2000/sttabt,trainer/vit_trainer_mvit.py,2022-11-10T14:17:07Z,upate mvit trainer
github.com/gmlwns2000/sttabt,trainer/vit_trainer_mvit.py,2022-11-10T13:17:47Z,add log
github.com/gmlwns2000/sttabt,trainer/vit_trainer_mvit.py,2022-11-10T13:16:48Z,update lr and mvit pretrain loader
github.com/gmlwns2000/sttabt,trainer/vit_trainer_mvit.py,2022-11-10T11:58:25Z,fix for deit learning rate
github.com/gmlwns2000/sttabt,trainer/vit_trainer_mvit.py,2022-11-10T11:43:31Z,update for mvit in1k
github.com/gmlwns2000/sttabt,trainer/vit_trainer_mvit.py,2022-11-10T07:25:11Z,update mvit trainer
github.com/gmlwns2000/sttabt,trainer/vit_trainer_mvit.py,2022-11-10T06:55:57Z,update mvit trainer
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-11-11T05:38:16Z,update to create save dirs
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-11-06T15:56:14Z,hotfix for lvvit
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-09-19T05:39:14Z,apply approx epochs arg
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-09-09T07:31:15Z,support approx ddp
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-09-08T05:44:19Z,fix trainer
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-09-08T05:44:11Z,add end2end
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-09-02T08:18:42Z,"update vit concrete
update imnet import
update ddp"
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-09-02T07:04:46Z,support concrete vit
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-09-01T16:34:45Z,"add timm dataloader
start concrete vit
add dyvit occupy"
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-08-31T12:18:21Z,fix vit test set bug
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-08-27T08:12:17Z,update tensor wrapping vi
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-08-26T12:24:04Z,update memory leak
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-08-26T08:26:12Z,ddp fix vit approx trainer
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-08-18T14:00:16Z,approx attention table
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-08-16T12:39:29Z,open mp bug in imagenet
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-08-16T05:35:00Z,bug fix
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-08-02T12:10:36Z,"fix concrete loss of occupy
less batch size / lr"
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-07-31T13:40:56Z,try to add imagenet...
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-07-21T14:40:20Z,"sparse_token{
change default True accum att;
vit on approxsparsebertmodel;
}
add vit approx plot
images dataset dispose
cifar approx train / eval"
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-07-21T08:40:19Z,Merge branch 'master' of https://github.com/gmlwns2000/discrete_edge_learning
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-07-21T08:40:10Z,update app train
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-07-21T07:49:39Z,update approx trainer and traienr
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-07-19T14:01:52Z,add kldiv
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-07-19T13:18:48Z,update vit approx
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-07-19T08:58:55Z,add vit thing
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-07-19T06:51:33Z,fix ddp thing
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-07-19T06:06:10Z,add approx
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-07-18T15:08:02Z,add cifar100 support
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer.py,2022-07-18T10:21:19Z,add vit approx
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer_mvit.py,2022-11-11T09:24:22Z,add mvit supports
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer_mvit.py,2022-11-11T05:38:16Z,update to create save dirs
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer_mvit.py,2022-11-10T14:28:53Z,add debug feature
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer_mvit.py,2022-11-10T13:17:47Z,add log
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer_mvit.py,2022-11-10T13:16:48Z,update lr and mvit pretrain loader
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer_mvit.py,2022-11-10T11:58:25Z,fix for deit learning rate
github.com/gmlwns2000/sttabt,trainer/vit_approx_trainer_mvit.py,2022-11-10T11:43:31Z,update for mvit in1k
github.com/Anjum48/rsna-ich,networks.py,2019-11-14T05:13:37Z,Add files via upload
github.com/HashmatShadab/APR,classification.py,2022-07-11T12:19:46Z,"refactor code, removed transformer file"
github.com/HashmatShadab/APR,classification.py,2022-07-11T05:30:51Z,put the argeparse arguments inside the __main__
github.com/HashmatShadab/APR,classification.py,2022-07-07T12:51:21Z,added attack file and formatted the code
github.com/HashmatShadab/APR,classification.py,2022-07-07T12:00:28Z,Added file for evaluating accuracy on adversarial examples
github.com/Mr-TalhaIlyas/CWD30,classification/train.py,2023-11-28T02:38:33Z,baselines
github.com/Mr-TalhaIlyas/CWD30,semantic_segmentation/models/smp/encoders/timm_universal.py,2023-11-28T02:38:33Z,baselines
github.com/Mr-TalhaIlyas/CWD30,semantic_segmentation/models/smp/encoders/timm_mobilenetv3.py,2023-11-28T02:38:33Z,baselines
github.com/lygsbw/segdeformer,mmseg/models/backbones/timm_backbone.py,2022-11-29T09:58:23Z,updating code
github.com/gersteinlab/ML-Bench,MLAgent/repo/open_clip/src/open_clip/timm_model.py,2023-11-18T21:06:52Z,test
github.com/gersteinlab/ML-Bench,MLAgent/repo/lavis/lavis/models/clip_models/model.py,2023-11-18T21:06:52Z,test
github.com/gersteinlab/ML-Bench,MLAgent/repo/lavis/lavis/models/clip_models/timm_model.py,2023-11-18T21:06:52Z,test
github.com/gersteinlab/ML-Bench,MLAgent/repo/lavis/lavis/common/annotator/midas/midas/vit.py,2023-11-18T21:06:52Z,test
github.com/sony/ctm,code/feature_networks/vit.py,2024-02-14T08:35:35Z,Add files via upload
github.com/sony/ctm,code/feature_networks/pretrained_builder.py,2024-02-14T08:35:35Z,Add files via upload
github.com/biasvariancelabs/aitlas,aitlas/models/hrnet.py,2023-07-05T17:04:11Z,documentation
github.com/biasvariancelabs/aitlas,aitlas/models/hrnet.py,2023-06-12T14:26:37Z,Added model implementation urls.
github.com/biasvariancelabs/aitlas,aitlas/models/hrnet.py,2021-09-15T14:26:58Z,added hrnet
github.com/biasvariancelabs/aitlas,aitlas/models/hrnet.py,2021-09-07T17:15:06Z,added hrnet
github.com/biasvariancelabs/aitlas,aitlas/models/mlp_mixer.py,2023-07-05T17:04:11Z,documentation
github.com/biasvariancelabs/aitlas,aitlas/models/mlp_mixer.py,2023-06-12T14:26:37Z,Added model implementation urls.
github.com/biasvariancelabs/aitlas,aitlas/models/mlp_mixer.py,2023-05-07T14:15:14Z,documentation
github.com/biasvariancelabs/aitlas,aitlas/models/mlp_mixer.py,2022-06-09T15:48:11Z,name attribute in classifier
github.com/biasvariancelabs/aitlas,aitlas/models/mlp_mixer.py,2022-02-04T12:55:15Z,mlp mixer
github.com/biasvariancelabs/aitlas,aitlas/models/vision_transformer.py,2023-07-05T17:04:11Z,documentation
github.com/biasvariancelabs/aitlas,aitlas/models/vision_transformer.py,2023-06-12T14:26:37Z,Added model implementation urls.
github.com/biasvariancelabs/aitlas,aitlas/models/vision_transformer.py,2023-03-06T13:09:21Z,various fixes
github.com/biasvariancelabs/aitlas,aitlas/models/vision_transformer.py,2023-01-17T12:26:47Z,resnet50 and ViT remove prefix from model checkpoint
github.com/biasvariancelabs/aitlas,aitlas/models/vision_transformer.py,2022-09-14T09:50:12Z,in domain pre-training
github.com/biasvariancelabs/aitlas,aitlas/models/vision_transformer.py,2022-06-09T15:48:11Z,name attribute in classifier
github.com/biasvariancelabs/aitlas,aitlas/models/vision_transformer.py,2022-06-03T13:55:02Z,various fixes
github.com/biasvariancelabs/aitlas,aitlas/models/vision_transformer.py,2022-02-04T13:34:31Z,remove redundant code
github.com/biasvariancelabs/aitlas,aitlas/models/vision_transformer.py,2022-02-04T12:45:10Z,vision transformer
github.com/YyzHarry/shortcut-ood-fairness,models/networks.py,2023-12-15T04:29:17Z,init commit
github.com/htdt/hyp_metric,model.py,2021-11-20T14:18:09Z,--help info
github.com/htdt/hyp_metric,model.py,2021-11-06T13:47:17Z,minor
github.com/htdt/hyp_metric,model.py,2021-10-25T17:09:51Z,add cars and inshop
github.com/htdt/hyp_metric,model.py,2021-10-22T15:42:57Z,refactor
github.com/sunlab-osu/IterPrompt,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-11-07T22:09:14Z,init commit
github.com/sunlab-osu/IterPrompt,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-11-07T22:09:14Z,init commit
github.com/Adlik/model_optimizer,src/model_optimizer/models/__init__.py,2023-05-16T12:14:44Z,"Support model optimization (#3)

1. Model quantization, models can be exported to JIT/ONNX format

2. Mixed-precision quantization

3. Model Pruning, AutoSlim"
github.com/SBU-BMI/champkit,train.py,2023-04-25T01:54:31Z,"[ENH] add multi-class eval and more metrics (#7)

* add fn,fp,tn,tp + make --directory required

* use --binary-metrics only if num_classes > 2

* add space between dir and other part of validate.py command

* use torchmetrics 0.11.4 classes

* use torchmetrics=0.11.4

* print whether using binary or multiclass metrics

* fix: use multi-class metrics

All metrics are multi-class because we accept no fewer than 2 classes for each model.
The metrics are from torchmetrics, and we have to install version >=0.11 for this.
This also prints the per-class metrics.

* print a summary of eval results + save figure with eval plots

* use multi-class auroc"
github.com/SBU-BMI/champkit,train.py,2022-06-14T13:58:02Z,add code to reproduce manuscript + run new benchmarks
github.com/mshukor/TFood,recipe1m/models/networks/image_networks/networks.py,2022-04-23T20:39:31Z,release
github.com/mediatechnologycenter/aestheval,aestheval/baselines/probbing.py,2022-06-02T15:08:28Z,Probbing finally working
github.com/mediatechnologycenter/aestheval,aestheval/baselines/probbing.py,2022-06-02T10:10:32Z,"Probbing improved, now using custom datacollators"
github.com/mediatechnologycenter/aestheval,aestheval/baselines/probbing.py,2022-06-01T16:16:33Z,Small changes
github.com/mediatechnologycenter/aestheval,aestheval/baselines/probbing.py,2022-06-01T16:12:29Z,modele val
github.com/mediatechnologycenter/aestheval,aestheval/baselines/probbing.py,2022-06-01T16:06:04Z,Better metrics saving
github.com/mediatechnologycenter/aestheval,aestheval/baselines/probbing.py,2022-06-01T16:03:17Z,Probbing code added
github.com/mediatechnologycenter/aestheval,aestheval/baselines/probbing.py,2022-06-01T14:00:09Z,Re-structured datasets. Updated edas
github.com/LeoLiding/Software2-for-Remote-Sensing-Image-Classification-using-deep-learning,mmseg/models/backbones/timm_backbone.py,2023-04-17T18:10:21Z,Initial commit
github.com/fudan-zvg/SeaFormer,seaformer-seg/mmseg/models/backbones/timm_backbone.py,2023-01-29T03:25:00Z,first commit
github.com/fudan-zvg/SeaFormer,seaformer-cls/tests/test_utils.py,2023-01-29T03:25:00Z,first commit
github.com/fudan-zvg/SeaFormer,seaformer-cls/tests/test_models.py,2023-01-29T03:25:00Z,first commit
github.com/luogantt/onnxruntime_cpp_demo,onnx_python/torch_model.py,2022-02-10T02:15:33Z,all
github.com/neilfei/brivl-nmi,models/vl_model.py,2021-08-01T17:25:21Z,initial commit
github.com/hkust-nlp/PEM_composition,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-06-14T16:32:28Z,PEM composition exps for BERT-scale
github.com/hkust-nlp/PEM_composition,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-06-14T16:32:28Z,PEM composition exps for BERT-scale
github.com/hkust-nlp/PEM_composition,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-06-14T16:32:28Z,PEM composition exps for BERT-scale
github.com/hkust-nlp/PEM_composition,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-06-14T16:32:28Z,PEM composition exps for BERT-scale
github.com/hkust-nlp/PEM_composition,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-06-14T16:32:28Z,PEM composition exps for BERT-scale
github.com/hkust-nlp/PEM_composition,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-06-14T16:32:28Z,PEM composition exps for BERT-scale
github.com/Lego1st/pytorch-starter-kit,modeling/resnet.py,2020-06-10T10:25:07Z,first update v2
github.com/Lego1st/pytorch-starter-kit,modeling/efficient.py,2020-06-10T10:25:07Z,first update v2
github.com/mightyzau/RegionBLIP,lavis/models/clip_models/model.py,2023-08-04T03:23:01Z,fix config file
github.com/mightyzau/RegionBLIP,lavis/models/clip_models/timm_model.py,2023-08-04T03:23:01Z,fix config file
github.com/Greenstand/treetracker-machine-learning,plantnet_baseline/greenstand/utils.py,2022-09-23T16:12:59Z,"Adding predict, fixes, more cli options"
github.com/Greenstand/treetracker-machine-learning,plantnet_baseline/greenstand/utils.py,2022-08-14T21:46:32Z,Adding plantnet baseline materials
github.com/Greenstand/treetracker-machine-learning,plantnet_baseline/plantnet_base/utils.py,2022-08-14T21:46:32Z,Adding plantnet baseline materials
github.com/Greenstand/treetracker-machine-learning,plantnet_baseline/greenstand/.ipynb_checkpoints/utils-checkpoint.py,2022-08-14T21:46:32Z,Adding plantnet baseline materials
github.com/batmanlab/MICCAI-2023-Route-interpret-repeat-CXRs,src/codebase/BB/models/BB_DenseNet121.py,2023-05-28T00:36:13Z,1st cut of miccai 2023
github.com/jkooy/Parameter-efficient-Fine-tuning-for-Vision-Transformers,full_shot/main/tools/finetune.py,2022-08-28T06:22:11Z,first commit
github.com/jkooy/Parameter-efficient-Fine-tuning-for-Vision-Transformers,full_shot/main/tools/finetune_bias.py,2022-08-28T06:22:11Z,first commit
github.com/jkooy/Parameter-efficient-Fine-tuning-for-Vision-Transformers,full_shot/main/tools/finetune_lora.py,2022-08-28T06:22:11Z,first commit
github.com/jkooy/Parameter-efficient-Fine-tuning-for-Vision-Transformers,full_shot/main/tools/finetune_cswin.py,2022-08-28T06:22:11Z,first commit
github.com/jkooy/Parameter-efficient-Fine-tuning-for-Vision-Transformers,full_shot/main/tools/finetune_1st_mlp.py,2022-08-28T06:22:11Z,first commit
github.com/jkooy/Parameter-efficient-Fine-tuning-for-Vision-Transformers,full_shot/main/tools/finetune_adapter.py,2022-08-28T06:22:11Z,first commit
github.com/jkooy/Parameter-efficient-Fine-tuning-for-Vision-Transformers,full_shot/main/lib/evaluation/feature.py,2022-08-28T06:22:11Z,first commit
github.com/jkooy/Parameter-efficient-Fine-tuning-for-Vision-Transformers,full_shot/main/tools/finetune_lr_group.py,2022-08-28T06:22:11Z,first commit
github.com/jkooy/Parameter-efficient-Fine-tuning-for-Vision-Transformers,full_shot/main/tools/finetune_kadapter.py,2022-08-28T06:22:11Z,first commit
github.com/jkooy/Parameter-efficient-Fine-tuning-for-Vision-Transformers,full_shot/main/tools/finetune_attention.py,2022-08-28T06:22:11Z,first commit
github.com/jkooy/Parameter-efficient-Fine-tuning-for-Vision-Transformers,full_shot/main/tools/finetune_layernorm.py,2022-08-28T06:22:11Z,first commit
github.com/jkooy/Parameter-efficient-Fine-tuning-for-Vision-Transformers,full_shot/main/tools/intrinsic_dimension.py,2022-08-28T06:22:11Z,first commit
github.com/jkooy/Parameter-efficient-Fine-tuning-for-Vision-Transformers,full_shot/main/tools/finetune_lora_adapter.py,2022-08-28T06:22:11Z,first commit
github.com/jkooy/Parameter-efficient-Fine-tuning-for-Vision-Transformers,full_shot/main/tools/finetune_lora_fix_one.py,2022-08-28T06:22:11Z,first commit
github.com/jkooy/Parameter-efficient-Fine-tuning-for-Vision-Transformers,full_shot/main/tools/finetune_1st_attention.py,2022-08-28T06:22:11Z,first commit
github.com/jkooy/Parameter-efficient-Fine-tuning-for-Vision-Transformers,few_shot/vision_benchmark/evaluation/feature.py,2022-08-28T06:22:11Z,first commit
github.com/jkooy/Parameter-efficient-Fine-tuning-for-Vision-Transformers,full_shot/main/tools/finetune_lora_drop_adapter.py,2022-08-28T06:22:11Z,first commit
github.com/jkooy/Parameter-efficient-Fine-tuning-for-Vision-Transformers,full_shot/main/tools/finetune_attention_position_bias.py,2022-08-28T06:22:11Z,first commit
github.com/librauee/DCIC-OCR,data/code/part1_code/train.py,2022-04-27T00:02:38Z,update
github.com/librauee/DCIC-OCR,data/code/part1_code/infer.py,2022-04-27T00:02:38Z,update
github.com/librauee/DCIC-OCR,data/code/part1_code/train_ema.py,2022-04-27T00:02:38Z,update
github.com/librauee/DCIC-OCR,data/code/part1_code/infer_oof.py,2022-04-27T00:02:38Z,update
github.com/librauee/DCIC-OCR,data/code/part2_code/models/timm_m.py,2022-04-27T00:02:38Z,update
github.com/librauee/DCIC-OCR,data/code/part1_code/train_ema_epoch.py,2022-04-27T00:02:38Z,update
github.com/chenxx89/BFRffusion,annotator/midas/midas/vit.py,2023-12-27T04:10:32Z,initial commit
github.com/chenxx89/BFRffusion,ldm/modules/midas/midas/vit.py,2023-12-27T04:10:32Z,initial commit
github.com/XiaoyuShi97/FlowFormerPlusPlus,core/FlowFormer/encoders.py,2023-07-10T03:47:51Z,update pretrain and finetune code
github.com/chunmeifeng/SPRC,src/lavis/models/clip_models/model.py,2024-01-15T14:54:35Z,add models
github.com/chunmeifeng/SPRC,src/lavis/models/clip_models/timm_model.py,2024-01-15T14:54:35Z,add models
github.com/slimgroup/GCS-CAM,scripts/model.py,2023-05-02T20:05:04Z,add comments
github.com/slimgroup/GCS-CAM,scripts/model.py,2022-10-19T23:31:21Z,add classifier script
github.com/fupiao1998/TransformerSOD,model/backbone/DPT_blocks/vit.py,2021-11-05T07:01:06Z,[update] New structure
github.com/ffiirree/cv-models,cvm/utils/factory.py,2023-02-28T17:11:11Z,bug fix
github.com/ffiirree/cv-models,cvm/utils/factory.py,2023-02-23T10:10:53Z,[Data Augmentation] + 'RandomGaussianBlur'
github.com/ffiirree/cv-models,cvm/utils/factory.py,2023-02-21T08:22:09Z,[Data Augmentation] + 'RandomFrequencyErasing'
github.com/ffiirree/cv-models,cvm/utils/factory.py,2022-12-02T15:31:07Z,Add Gather-Excite Block
github.com/ffiirree/cv-models,cvm/utils/factory.py,2022-12-01T10:54:41Z,pytorch >= 1.12: weights enum
github.com/ffiirree/cv-models,cvm/utils/factory.py,2022-11-26T09:18:59Z,Adversarial Attack
github.com/ffiirree/cv-models,cvm/utils/factory.py,2022-11-22T09:01:26Z,v0.0.22
github.com/ffiirree/cv-models,cvm/utils/factory.py,2022-09-16T11:20:43Z,dali >= 1.16
github.com/ffiirree/cv-models,cvm/utils/factory.py,2022-04-12T07:43:42Z,1. fork Model EMA from pytorch/vision. 2. fork RandAugment from timm
github.com/ffiirree/cv-models,cvm/utils/factory.py,2022-01-22T20:57:42Z,COCO Segmentation
github.com/ffiirree/cv-models,cvm/utils/factory.py,2022-01-22T20:47:49Z,semantically determined kernels
github.com/ffiirree/cv-models,cvm/utils/factory.py,2021-12-27T13:30:18Z,segmentation training is ok
github.com/ffiirree/cv-models,cvm/utils/factory.py,2021-12-27T03:23:42Z,metrics for segmentation & repeated augmentation sampler
github.com/ffiirree/cv-models,cvm/utils/factory.py,2021-12-24T15:23:54Z,Add transforms for training segmentation
github.com/ffiirree/cv-models,cvm/utils/factory.py,2021-12-24T08:16:34Z,wrapper for data loader
github.com/ffiirree/cv-models,cvm/utils/factory.py,2021-12-08T04:23:41Z,"normalizer bug for None & models for [stem, stage1~stage4]"
github.com/ffiirree/cv-models,cvm/utils/factory.py,2021-12-03T08:49:53Z,add DCGAN
github.com/ffiirree/cv-models,cvm/utils/factory.py,2021-12-02T12:02:08Z,GAN & VAE demos
github.com/ffiirree/cv-models,cvm/utils/factory.py,2021-12-02T08:30:55Z,v0.0.4
github.com/ffiirree/cv-models,cvm/utils/factory.py,2021-12-02T08:21:17Z,MEAN and STD of MNIST
github.com/ffiirree/cv-models,cvm/utils/factory.py,2021-11-30T08:47:10Z,ImageNet1K Real Labels
github.com/ffiirree/cv-models,cvm/utils/factory.py,2021-11-28T08:12:52Z,create models from timm
github.com/ffiirree/cv-models,cvm/utils/factory.py,2021-11-27T08:20:29Z,fix the bug when using random erasing
github.com/ffiirree/cv-models,cvm/utils/factory.py,2021-11-26T12:37:12Z,training: mixup & cutmix
github.com/ffiirree/cv-models,cvm/utils/factory.py,2021-11-26T12:30:15Z,fix bugs in factory.py
github.com/ffiirree/cv-models,cvm/utils/factory.py,2021-11-26T01:53:42Z,fix a parameter typo bug
github.com/ffiirree/cv-models,cvm/utils/factory.py,2021-11-25T10:06:17Z,train script
github.com/ffiirree/cv-models,cvm/utils/factory.py,2021-11-25T07:44:43Z,functions for create model
github.com/srvCodes/continual_learning_with_vit,src/networks/timm_vit_tiny_16_augreg_224.py,2022-06-17T11:07:21Z,continual_ViT
github.com/srvCodes/continual_learning_with_vit,src/test.py,2022-06-17T11:07:21Z,continual_ViT
github.com/FactoDeepLearning/MultitaskVLFM,OPENCLIP/timm_model.py,2023-07-07T13:06:06Z,init repo
github.com/i-Eval/ieval-instruction,src/transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-04-10T07:16:35Z,add run command
github.com/i-Eval/ieval-instruction,src/transformers/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-04-10T07:16:35Z,add run command
github.com/i-Eval/ieval-instruction,src/transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-04-10T07:16:35Z,add run command
github.com/i-Eval/ieval-instruction,src/transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-04-10T07:16:35Z,add run command
github.com/i-Eval/ieval-instruction,src/transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-04-10T07:16:35Z,add run command
github.com/i-Eval/ieval-instruction,src/transformers/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-04-10T07:16:35Z,add run command
github.com/i-Eval/ieval-instruction,src/transformers/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-04-10T07:16:35Z,add run command
github.com/i-Eval/ieval-instruction,src/transformers/src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-04-10T07:16:35Z,add run command
github.com/links-ads/igarss-spada,mmseg/models/backbones/timm_backbone.py,2023-06-28T13:54:21Z,Bulk update
github.com/KimbingNg/DeskPro,model/__init__.py,2022-08-30T13:21:33Z,initial commit
github.com/geyanqi/SAR,mmseg/models/backbones/timm_backbone.py,2024-01-31T05:57:33Z,init
github.com/ggjy/FastMIM.pytorch,mmseg-v0.28/mmseg/models/backbones/timm_backbone.py,2022-12-13T13:40:25Z,init
github.com/fire717/FireClassification,fire/model.py,2024-01-15T03:08:03Z,Fix: pre
github.com/fire717/FireClassification,fire/model.py,2023-11-02T09:21:45Z,Feat: add some timm models
github.com/fire717/FireClassification,fire/model.py,2023-09-25T07:54:59Z,fix requirement
github.com/fire717/FireClassification,fire/model.py,2023-09-25T03:41:41Z,v1.1
github.com/fire717/FireClassification,fire/model.py,2023-03-13T03:44:41Z,Update model.py
github.com/fire717/FireClassification,fire/model.py,2022-07-09T15:53:53Z,Perf: chean code
github.com/fire717/FireClassification,fire/model.py,2022-07-09T10:17:48Z,Feat: v0.1.0
github.com/fire717/FireClassification,fire/model.py,2021-09-18T02:45:56Z,Feat:v0.0.9
github.com/fire717/FireClassification,fire/model.py,2021-08-22T05:48:50Z,Feat:v0.0.8
github.com/fire717/FireClassification,fire/model.py,2020-12-15T12:00:50Z,Feat: mixup and sample weights
github.com/fire717/FireClassification,fire/model.py,2020-12-09T11:45:56Z,Perf: clean runner
github.com/fire717/FireClassification,fire/model.py,2020-12-05T10:06:19Z,Feat:support labelsmooth
github.com/fire717/FireClassification,fire/model.py,2020-12-05T08:36:43Z,Feat:support add comment in log
github.com/fire717/FireClassification,fire/model.py,2020-12-05T08:21:48Z,Feat: v0.0.6 support tensorboard
github.com/fire717/FireClassification,fire/model.py,2020-12-04T07:37:10Z,"Feat:add focal loss, set pretained strict true"
github.com/fire717/FireClassification,fire/model.py,2020-12-02T03:35:52Z,Docs: update readme
github.com/fire717/FireClassification,fire/model.py,2020-12-02T03:05:03Z,Feat: add mobilenetv2 and dropout param
github.com/fire717/FireClassification,fire/model.py,2020-12-01T02:21:14Z,Fix: support xception
github.com/fire717/FireClassification,fire/model.py,2020-11-30T11:50:59Z,Feat: implement predict
github.com/fire717/FireClassification,fire/model.py,2020-11-30T09:59:08Z,Feat: support freeze base model
github.com/fire717/FireClassification,fire/model.py,2020-11-30T03:47:25Z,Fix: support resnext50
github.com/fire717/FireClassification,fire/model.py,2020-11-30T03:26:20Z,Feat: add cleanData
github.com/fire717/FireClassification,fire/model.py,2020-11-27T07:00:58Z,"Feat: add data dir load, add models, add ranger."
github.com/fire717/FireClassification,fire/model.py,2020-11-27T03:06:13Z,Init: v0.0.1
github.com/qcwthu/Continual_Fewshot_Relation_Learning,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-03-30T15:35:14Z,transformers
github.com/hq-deng/AnoVL,open_clip/timm_model.py,2023-09-07T09:50:18Z,Add files via upload
github.com/TheoViel/kaggle_rsna_abdominal_trauma,src/model_zoo/models.py,2023-10-16T13:45:49Z,cleaning and doc
github.com/TheoViel/kaggle_rsna_abdominal_trauma,src/model_zoo/models.py,2023-10-13T09:46:33Z,CV 0.310 - Final subs & different head crop models
github.com/TheoViel/kaggle_rsna_abdominal_trauma,src/model_zoo/models.py,2023-10-07T20:48:07Z,"CV 0.314 - Stride 2, more crop models, exp lvl2"
github.com/TheoViel/kaggle_rsna_abdominal_trauma,src/model_zoo/models.py,2023-10-05T16:57:14Z,"CV 0.316 - Maxvit & more models, cover all crop"
github.com/TheoViel/kaggle_rsna_abdominal_trauma,src/model_zoo/models.py,2023-10-02T13:40:43Z,"CV 0.326, coat_lite, fix frame issue, inf code"
github.com/TheoViel/kaggle_rsna_abdominal_trauma,src/model_zoo/models.py,2023-09-30T15:59:36Z,CV 0.334 - crop models
github.com/TheoViel/kaggle_rsna_abdominal_trauma,src/model_zoo/models.py,2023-09-29T09:29:35Z,"CV 0.339 - CNN head, inference, pool fts lvl2"
github.com/TheoViel/kaggle_rsna_abdominal_trauma,src/model_zoo/models.py,2023-09-27T20:43:12Z,"CV 0.342 - rescaling, yolox, 5 frames, transfo head"
github.com/TheoViel/kaggle_rsna_abdominal_trauma,src/model_zoo/models.py,2023-09-26T22:07:08Z,"CV 0.351 - 2.5D, det"
github.com/TheoViel/kaggle_rsna_abdominal_trauma,src/model_zoo/models.py,2023-09-25T22:01:11Z,"CV 0.356 - transfo, 3D seg"
github.com/TheoViel/kaggle_rsna_abdominal_trauma,src/model_zoo/models.py,2023-09-19T11:47:05Z,"CV 0.369 - Smaller seg model, inference optim"
github.com/TheoViel/kaggle_rsna_abdominal_trauma,src/model_zoo/models.py,2023-08-25T16:16:13Z,2D approach code
github.com/CarnoZhao/Kaggle-UWMGIT,mmseg/models/backbones/timm_backbone.py,2022-05-24T09:45:04Z,add out indices timm
github.com/CarnoZhao/Kaggle-UWMGIT,mmseg/models/backbones/timm_backbone.py,2021-11-02T04:51:11Z,"[Feature] Support TIMMBackbone (#998)

* add TIMMBackbone and unittests

* add timm to tests requirements

* deprecate pt1.3.1

* reduce the unittests input of timm backbone

* fix ci

* fix ci

* fix ci

* fix ci

* fix ci

* fix ci

* fix ci

* fix ci

* fix ci

* remove unittests of large models of timm backbone

* generate coverage report for all unittests env

* reduce the unittests input of timm backbone

* reduce the unittests input of timm backbone"
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-26T21:13:25Z,change precision
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-26T21:10:10Z,change precision
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-26T18:51:31Z,fsspec fixes
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-26T02:44:33Z,add progress bar
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-26T02:39:03Z,add progress bar
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-26T02:30:34Z,add progress bar
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-26T02:23:52Z,add progress bar
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-25T15:32:55Z,uuid + fsspec
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-24T05:54:11Z,bug fixes
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-24T03:17:18Z,bug fixes
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-24T03:01:13Z,bug fixes
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-24T02:37:41Z,bug fixes
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-24T02:17:49Z,alter spacing
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-24T00:32:36Z,rather not explain
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-23T23:03:27Z,collate
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-23T18:30:30Z,bug fixes
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-23T18:27:11Z,tqdm
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-23T18:14:09Z,Small tweaks
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-23T17:58:16Z,Update inference.py
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-22T21:46:24Z,Update inference.py
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-22T21:44:40Z,Update inference.py
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-22T19:14:12Z,update inference.py
github.com/LAION-AI/LAION-5B-WatermarkDetection,inference.py,2022-03-22T00:41:52Z,Add data pipeline
github.com/LAION-AI/LAION-5B-WatermarkDetection,example_use.py,2023-01-10T17:56:27Z,"Fixed bug (double .pt), added convert('RGB')"
github.com/LAION-AI/LAION-5B-WatermarkDetection,example_use.py,2022-06-22T17:41:04Z,add model
github.com/wxjhll/OAM,class/train.py,2023-11-17T09:30:34Z,增加网络swin_unet_denoise
github.com/wxjhll/OAM,class/train.py,2023-07-03T08:58:09Z,新增
github.com/volvo-cars/FB-SSEM-dataset,F2BEV_code/F2BEV/bblocks/backbone_bifpn.py,2023-12-18T23:17:01Z,structure refactoring
github.com/1hunters/LIMPQ,quantization_training/model/model.py,2023-03-04T16:48:35Z,first commit
github.com/1hunters/LIMPQ,indicators_pretraining/model/model.py,2023-03-04T16:48:35Z,first commit
github.com/4uiiurz1/kaggle-pku-autonomous-driving,lib/models/resnet_fpn.py,2019-12-31T07:46:56Z,Add resnet50_maskrcnn
github.com/4uiiurz1/kaggle-pku-autonomous-driving,lib/models/resnet_fpn.py,2019-12-28T07:53:42Z,Add pseudo labeling
github.com/4uiiurz1/kaggle-pku-autonomous-driving,lib/models/resnet_fpn.py,2019-12-22T01:00:22Z,Update resnet_fpn
github.com/4uiiurz1/kaggle-pku-autonomous-driving,lib/models/resnet_fpn.py,2019-12-20T20:13:57Z,Add dla_fpn and some archs
github.com/4uiiurz1/kaggle-pku-autonomous-driving,lib/models/resnet_fpn.py,2019-12-12T13:30:18Z,Add ensembling each fold predictions by merging output maps
github.com/4uiiurz1/kaggle-pku-autonomous-driving,lib/models/resnet_fpn.py,2019-12-04T06:47:57Z,Fix bug
github.com/4uiiurz1/kaggle-pku-autonomous-driving,lib/models/resnet_fpn.py,2019-12-01T04:43:07Z,Add some exps
github.com/4uiiurz1/kaggle-pku-autonomous-driving,lib/models/resnet_fpn.py,2019-11-15T13:32:53Z,Init
github.com/UAws/CV-3315-Is-All-You-Need,mmseg/models/backbones/timm_backbone.py,2022-06-24T15:40:03Z,"Initial Public Release

Initial Public Release. 
Co-authored-by: Akide Liu <mail@llycloud.com>"
github.com/distable/core,src_plugins/midas3d/midas/vit.py,2023-04-15T16:52:46Z,more
github.com/pollinations/lucid-sonic-dreams-xl,stylegan_xl/training/loss.py,2023-02-07T22:44:05Z,first working version
github.com/pollinations/lucid-sonic-dreams-xl,stylegan_xl/run_inversion.py,2023-02-07T22:44:05Z,first working version
github.com/pollinations/lucid-sonic-dreams-xl,stylegan_xl/feature_networks/vit.py,2023-02-07T22:44:05Z,first working version
github.com/pollinations/lucid-sonic-dreams-xl,stylegan_xl/feature_networks/pretrained_builder.py,2023-02-07T22:44:05Z,first working version
github.com/TheDenk/denk_baseline,repositories/pytorch-image-models/onnx_export.py,2023-11-11T11:36:50Z,add new aij
github.com/TheDenk/denk_baseline,denk_baseline/custom_models/classification/timm_default.py,2023-02-20T21:32:43Z,...
github.com/TheDenk/denk_baseline,denk_baseline/custom_models/classification/timm_default.py,2022-12-16T07:40:52Z,drop_rate and drop_path_rate
github.com/TheDenk/denk_baseline,denk_baseline/custom_models/classification/timm_default.py,2022-12-14T21:01:34Z,augs
github.com/TheDenk/denk_baseline,denk_baseline/custom_models/classification/timm_default.py,2022-12-13T20:44:07Z,roi
github.com/TheDenk/denk_baseline,denk_baseline/custom_models/classification/timm_default.py,2022-12-13T20:01:02Z,alot
github.com/TheDenk/denk_baseline,denk_baseline/custom_models/classification/timm_default.py,2022-12-11T11:50:06Z,focal loss
github.com/TheDenk/denk_baseline,denk_baseline/custom_models/classification/timm_default.py,2022-09-23T22:02:21Z,bugs
github.com/TheDenk/denk_baseline,denk_baseline/custom_models/classification/timm_default.py,2022-09-17T16:39:55Z,rename
github.com/TheDenk/denk_baseline,repositories/segmentation_models.pytorch/segmentation_models_pytorch/encoders/timm_universal.py,2022-09-17T16:39:55Z,rename
github.com/TheDenk/denk_baseline,repositories/segmentation_models.pytorch/segmentation_models_pytorch/encoders/timm_mobilenetv3.py,2022-09-17T16:39:55Z,rename
github.com/TheDenk/denk_baseline,repositories/pytorch-image-models/tests/test_utils.py,2023-11-11T11:36:50Z,add new aij
github.com/TheDenk/denk_baseline,repositories/pytorch-image-models/tests/test_models.py,2023-11-11T11:36:50Z,add new aij
github.com/MCG-NKU/ExperiCV,SemanticSeg/mmsegmentation/mmseg/models/backbones/timm_backbone.py,2022-12-13T02:33:25Z,add SemanticSeg
github.com/probcomp/bayes3d,bayes3d/neural/dino.py,2024-01-25T17:44:35Z,"Add pre-commit hooks, Ruff formatting and linting (#42)"
github.com/probcomp/bayes3d,bayes3d/neural/dino.py,2023-10-09T14:38:35Z,notebooks
github.com/probcomp/bayes3d,bayes3d/neural/dino.py,2023-10-07T23:11:41Z,Init
github.com/develooper1994/ocr_toolkit,image_models/image_models.py,2020-06-16T12:02:17Z,efficientnetb3a model add.
github.com/develooper1994/ocr_toolkit,image_models/image_models.py,2020-06-15T13:02:36Z,efficientnetb3a model add.
github.com/amazon-science/fact-graph,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-04-27T07:49:41Z,transformers base code
github.com/amazon-science/fact-graph,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-04-27T07:49:41Z,transformers base code
github.com/zeroQiaoba/MERTools,MERBench/feature_extraction/visual/extract_vision_huggingface.py,2024-01-10T06:43:33Z,“code”
github.com/ecm200/caltech_birds,pkg/cub_tools/trainer/Base.py,2021-06-30T14:40:30Z,"Renamed source directory of package.
Renamed from cub_tools to pkg"
github.com/facebookresearch/video_rep_learning,CARL_MVF/models/transformer.py,2023-11-16T00:02:27Z,Initial commit
github.com/canktech/xview2unet,efflocunet.py,2020-01-02T12:46:40Z,initial commit
github.com/canktech/xview2unet,effdamageunet.py,2020-01-06T03:12:19Z,move empty images from training set during preprocess step
github.com/canktech/xview2unet,effdamageunet.py,2020-01-02T12:46:40Z,initial commit
github.com/ethz-spylab/diffusion_denoised_smoothing,imagenet/DRM.py,2022-10-07T21:04:18Z,code update
github.com/yxuhan/ReflectanceMM,insightface/alignment/synthetics/trainer_synthetics.py,2023-05-25T06:30:05Z,add the code
github.com/hllj/ZaloAIChallenge-2022,src/networks.py,2022-12-03T06:13:50Z,create branch to train 2 model
github.com/hllj/ZaloAIChallenge-2022,src/networks.py,2022-11-28T13:08:43Z,submit docker
github.com/hllj/ZaloAIChallenge-2022,src/networks.py,2022-11-28T07:17:06Z,save stuff
github.com/hllj/ZaloAIChallenge-2022,src/networks.py,2022-11-10T05:05:45Z,remove dropout
github.com/hllj/ZaloAIChallenge-2022,src/networks.py,2022-11-10T02:50:06Z,add eval
github.com/hllj/ZaloAIChallenge-2022,src/networks.py,2022-11-08T07:53:56Z,effi b0
github.com/hllj/ZaloAIChallenge-2022,src/networks.py,2022-11-08T05:01:35Z,swin_timm
github.com/hllj/ZaloAIChallenge-2022,src/networks.py,2022-11-08T04:54:04Z,fix unified config file
github.com/hllj/ZaloAIChallenge-2022,src/networks.py,2022-11-08T03:01:23Z,swin
github.com/hllj/ZaloAIChallenge-2022,src/networks.py,2022-11-07T10:50:07Z,update for create submisson with config inference
github.com/hllj/ZaloAIChallenge-2022,src/networks.py,2022-11-06T07:49:12Z,"change hydra config hierachy, auto instantiate"
github.com/hllj/ZaloAIChallenge-2022,src/networks.py,2022-11-05T14:22:04Z,fix pre-commit
github.com/hllj/ZaloAIChallenge-2022,src/networks.py,2022-11-05T12:28:49Z,done training module
github.com/hllj/ZaloAIChallenge-2022,src/networks.py,2022-11-05T06:50:04Z,build datamodule
github.com/hllj/ZaloAIChallenge-2022,src/networks.py,2022-11-05T02:51:05Z,edit readme
github.com/hllj/ZaloAIChallenge-2022,src/networks.py,2022-09-29T16:14:14Z,WIP: Fixes things in TODO and FIXME
github.com/hllj/ZaloAIChallenge-2022,src/networks.py,2022-09-26T14:02:46Z,Init code
github.com/amazon-science/masked-diffusion-lm,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-04-10T16:56:50Z,Upload code
github.com/amazon-science/masked-diffusion-lm,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-04-10T16:56:50Z,Upload code
github.com/amazon-science/masked-diffusion-lm,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-04-10T16:56:50Z,Upload code
github.com/ananthu-aniraj/masking_strategies_bias_removal,early_masking_and_baseline/fine_tune_cnn.py,2023-08-17T10:07:51Z,Initial commit
github.com/ananthu-aniraj/masking_strategies_bias_removal,mmsegmentation/mmseg/models/backbones/timm_backbone.py,2023-08-17T10:07:51Z,Initial commit
github.com/razeghi71/stable-diffusion-v2-m1,ldm/modules/midas/midas/vit.py,2022-11-24T00:22:28Z,release more models
github.com/cxx226/DPF,model/vit.py,2023-03-17T10:53:22Z,first commit
github.com/THU-DA-6D-Pose-Group/CATRE,core/utils/timm_utils.py,2022-07-11T06:32:01Z,original
github.com/cyZhu98/dogs_vs_cats_accelerate,run.py,2022-01-24T10:52:03Z,add dataparallel
github.com/cyZhu98/dogs_vs_cats_accelerate,run.py,2022-01-21T05:29:56Z,add test
github.com/cyZhu98/dogs_vs_cats_accelerate,run.py,2022-01-20T02:59:53Z,update run
github.com/cyZhu98/dogs_vs_cats_accelerate,run.py,2022-01-20T02:21:31Z,update file
github.com/cyZhu98/dogs_vs_cats_accelerate,run.py,2022-01-19T13:47:45Z,initial commit
github.com/cyZhu98/dogs_vs_cats_accelerate,run_dataparallel.py,2022-01-24T10:52:03Z,add dataparallel
github.com/cyZhu98/dogs_vs_cats_accelerate,test.py,2022-01-21T05:29:56Z,add test
github.com/scenarios/WeMM,third_party/EVA-CLIP/rei/eva_clip/timm_model.py,2023-11-19T19:28:45Z,infer and evaluation
github.com/suu990901/LLaMA-InfoEntropy-Loss,transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-11-04T09:18:48Z,init
github.com/suu990901/LLaMA-InfoEntropy-Loss,transformers/models/regnet/convert_regnet_to_pytorch.py,2023-11-04T09:18:48Z,init
github.com/suu990901/LLaMA-InfoEntropy-Loss,transformers/models/resnet/convert_resnet_to_pytorch.py,2023-11-04T09:18:48Z,init
github.com/suu990901/LLaMA-InfoEntropy-Loss,transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-11-04T09:18:48Z,init
github.com/suu990901/LLaMA-InfoEntropy-Loss,transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-11-04T09:18:48Z,init
github.com/suu990901/LLaMA-InfoEntropy-Loss,transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-11-04T09:18:48Z,init
github.com/suu990901/LLaMA-InfoEntropy-Loss,transformers/models/timm_backbone/modeling_timm_backbone.py,2023-11-04T09:18:48Z,init
github.com/suu990901/LLaMA-InfoEntropy-Loss,transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-11-04T09:18:48Z,init
github.com/suu990901/LLaMA-InfoEntropy-Loss,transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-11-04T09:18:48Z,init
github.com/Orion-AI-Lab/PrototypeInSAR,Models.py,2022-06-04T10:46:32Z,clean repo
github.com/Orion-AI-Lab/PrototypeInSAR,Models.py,2022-01-31T15:08:14Z,pl training
github.com/artonson/def,sharpf/neural/defs/modeling/model/unet_2d.py,2022-12-26T15:18:51Z,w.i.p. on documentation and preparing for release
github.com/wangjksjtu/minmax-adv,pytorch/main.py,2021-11-02T02:27:48Z,init release
github.com/wangjksjtu/minmax-adv,pytorch/ens_attack.py,2021-11-02T02:27:48Z,init release
github.com/cyZhu98/Identification-of-crop-growth,main.py,2021-10-22T03:18:32Z,Update main.py
github.com/cyZhu98/Identification-of-crop-growth,main.py,2021-10-22T02:21:03Z,Add files via upload
github.com/mdabbah/COOD_benchmarking,utils/misc.py,2023-02-24T17:41:53Z,some code cleanup
github.com/mdabbah/COOD_benchmarking,utils/misc.py,2023-02-24T17:20:21Z,results are now saved in a new folders structure which allows multiple datasets evaluation
github.com/mdabbah/COOD_benchmarking,utils/misc.py,2023-02-18T21:36:46Z,bug fix: allow transforms without open + some cleanup
github.com/mdabbah/COOD_benchmarking,utils/misc.py,2023-02-18T17:16:30Z,"bug fixes related to csv column names change
and added an error in case given path to images doesn't contain images recursively"
github.com/mdabbah/COOD_benchmarking,utils/misc.py,2023-02-17T18:25:52Z,bug fix for transforms not including open image
github.com/mdabbah/COOD_benchmarking,utils/misc.py,2023-02-11T13:54:46Z,Cleaned timm_lib
github.com/mdabbah/COOD_benchmarking,utils/misc.py,2023-02-08T08:38:43Z,Fixed some references broken in the moving of old_timm_lib
github.com/mdabbah/COOD_benchmarking,utils/misc.py,2023-02-08T08:35:50Z,Fixed create_model_and_transforms. We now don't need timm_lib (we don't want too many folders)
github.com/mdabbah/COOD_benchmarking,utils/misc.py,2023-02-08T08:30:13Z,Fixing timm imports
github.com/mdabbah/COOD_benchmarking,utils/misc.py,2023-02-04T12:43:06Z,more example inputs + softmax only function
github.com/mdabbah/COOD_benchmarking,utils/misc.py,2023-01-27T22:03:48Z,second commit
github.com/mdabbah/COOD_benchmarking,utils/old_timm_lib/tests/test_models.py,2023-02-08T08:37:31Z,"Moved timm_lib_old to utils, we don't want it to be on the main directory (it's ugly)"
github.com/SALT-NLP/Adaptive-Compositional-Modules,mytransformers/models/vit/convert_vit_timm_to_pytorch.py,2022-04-03T22:45:46Z,"update code, init"
github.com/HuaqingHe/JOINED,Coarse/models.py,2023-05-28T08:01:03Z,coarse update
github.com/HuaqingHe/JOINED,Coarse/pytorch-image-models-master/tests/test_utils.py,2023-05-28T08:01:03Z,coarse update
github.com/HuaqingHe/JOINED,Coarse/pytorch-image-models-master/tests/test_models.py,2023-05-28T08:01:03Z,coarse update
github.com/aassxun/Equiangular-Basis-Vectors,PLOT_Figure/plot_cka.py,2023-03-21T09:53:25Z,Add files via upload
github.com/aassxun/Equiangular-Basis-Vectors,EBV_Dim_Experiment/EBV_Dim_ImageNet.py,2022-11-11T06:42:58Z,Add files via upload
github.com/aassxun/Equiangular-Basis-Vectors,EBV_Dim_Experiment/EBV_Dim_ImageNet.py,2022-10-20T07:21:14Z,Rename EBV_ImageNet2.py to EBV_Dim_ImageNet.py
github.com/aassxun/Equiangular-Basis-Vectors,ImageNet_Validation_Experiment/EBV_ImageNet.py,2022-11-11T06:55:26Z,Add files via upload
github.com/aassxun/Equiangular-Basis-Vectors,ADE20k_segmentation/mmseg/models/backbones/timm_backbone.py,2022-11-13T07:50:41Z,Add files via upload
github.com/RistoranteRist/FastFlow,train.py,2022-03-29T05:14:26Z,add
github.com/Eric3911/OpenAGI,AudioGPT-master/text_to_audio/Make_An_Audio/ldm/modules/encoders/open_clap/timm_model.py,2023-05-06T06:44:54Z,"模型更新

update"
github.com/OliverRensu/co-advise,main.py,2022-06-18T14:50:03Z,v0.1
github.com/hamadichihaoui/pytorch-vit-frcnn,model/backbone.py,2021-02-26T18:53:05Z,first commit
github.com/regob/vehicle_reid,model.py,2022-11-15T09:05:27Z,resnet152 option added.
github.com/regob/vehicle_reid,model.py,2022-10-23T07:21:13Z,mixstyle import fix
github.com/regob/vehicle_reid,model.py,2022-10-15T07:18:56Z,mixstyle added to train and load scripts
github.com/regob/vehicle_reid,model.py,2022-10-14T14:23:45Z,add mixstyle
github.com/regob/vehicle_reid,model.py,2022-09-22T09:26:40Z,resnet101 models added
github.com/regob/vehicle_reid,model.py,2022-08-12T15:41:40Z,swin forward modified to use adaptiveavgpool
github.com/regob/vehicle_reid,model.py,2022-08-12T09:48:58Z,"NAS, swin models updated, new results in readme"
github.com/regob/vehicle_reid,model.py,2022-08-05T10:42:07Z,"updated torch, timm, and torchvision to recent versions and added label smoothing"
github.com/regob/vehicle_reid,model.py,2022-05-08T08:29:13Z,support for all efficientnet models instead of only b4
github.com/regob/vehicle_reid,model.py,2022-05-07T10:35:41Z,cleanup and tpu training skeleton added
github.com/regob/vehicle_reid,model.py,2022-03-22T17:16:42Z,model loading refactored\nrefactor imports
github.com/regob/vehicle_reid,model.py,2022-03-04T10:20:45Z,training fixed for imagedataset
github.com/regob/vehicle_reid,model.py,2022-01-25T07:12:50Z,Update model.py
github.com/regob/vehicle_reid,model.py,2022-01-25T07:10:59Z,Update model.py
github.com/regob/vehicle_reid,model.py,2022-01-22T21:32:23Z,"Update model.py

Update PCB"
github.com/regob/vehicle_reid,model.py,2022-01-22T20:57:54Z,"Update model.py

Simplify the classifier: replacing bottleneck with linear"
github.com/regob/vehicle_reid,model.py,2022-01-07T08:20:36Z,"Update model.py

Support linear_num option for DenseNet, HRNet, Swin, EfficientNet and NAS."
github.com/regob/vehicle_reid,model.py,2021-12-22T14:10:35Z,"Update model.py

Support 2048 feature dimension"
github.com/regob/vehicle_reid,model.py,2021-12-06T15:29:17Z,add comment
github.com/regob/vehicle_reid,model.py,2021-12-06T15:07:58Z,update exception
github.com/regob/vehicle_reid,model.py,2021-12-01T12:26:30Z,add hr
github.com/regob/vehicle_reid,model.py,2021-12-01T06:24:56Z,move tf to efficient-pytoch
github.com/regob/vehicle_reid,model.py,2021-12-01T03:49:47Z,from timm to tf
github.com/regob/vehicle_reid,model.py,2021-11-30T18:17:06Z,efficientnet from torchvision to timm
github.com/regob/vehicle_reid,model.py,2021-11-30T17:40:06Z,add efficientNet
github.com/regob/vehicle_reid,model.py,2021-11-06T14:20:24Z,Update model.py
github.com/regob/vehicle_reid,model.py,2021-09-15T14:11:28Z,adding ibn
github.com/regob/vehicle_reid,model.py,2021-08-17T02:27:07Z,Update model.py
github.com/regob/vehicle_reid,model.py,2021-08-17T02:23:11Z,Update model.py
github.com/regob/vehicle_reid,model.py,2021-08-15T08:49:28Z,save memory
github.com/regob/vehicle_reid,model.py,2021-08-11T14:31:08Z,add swin transformer
github.com/regob/vehicle_reid,model.py,2021-02-18T08:29:15Z,Update model.py
github.com/regob/vehicle_reid,model.py,2021-02-05T11:45:44Z,add circle loss
github.com/regob/vehicle_reid,model.py,2019-05-20T01:28:11Z,add warm up
github.com/regob/vehicle_reid,model.py,2019-03-21T05:40:26Z,add NAS support
github.com/regob/vehicle_reid,model.py,2019-01-18T00:46:59Z,update model.py
github.com/regob/vehicle_reid,model.py,2019-01-18T00:44:06Z,fix stride=1
github.com/regob/vehicle_reid,model.py,2019-01-18T00:23:57Z,add new pretrained models
github.com/regob/vehicle_reid,model.py,2019-01-08T08:18:07Z,add debug model
github.com/regob/vehicle_reid,model.py,2018-12-24T03:21:35Z,fix fp16
github.com/regob/vehicle_reid,model.py,2018-11-30T19:34:52Z,add some comments
github.com/regob/vehicle_reid,model.py,2018-11-30T18:40:14Z,Add dropout option to ClassBlock
github.com/regob/vehicle_reid,model.py,2018-11-30T00:28:35Z,Update model.py
github.com/regob/vehicle_reid,model.py,2018-11-29T20:25:17Z,Update model.py
github.com/regob/vehicle_reid,model.py,2018-11-29T20:18:34Z,Add dropout option
github.com/regob/vehicle_reid,model.py,2018-11-26T04:03:40Z,Update model.py
github.com/regob/vehicle_reid,model.py,2018-11-26T03:55:41Z,Update the initial method
github.com/regob/vehicle_reid,model.py,2018-05-07T06:33:21Z,Fix the bug
github.com/regob/vehicle_reid,model.py,2018-04-24T08:14:16Z,Update model.py
github.com/regob/vehicle_reid,model.py,2018-04-24T08:04:15Z,Update model.py
github.com/regob/vehicle_reid,model.py,2018-04-23T03:03:17Z,Update model.py
github.com/regob/vehicle_reid,model.py,2018-04-21T05:27:42Z,Add middle network
github.com/regob/vehicle_reid,model.py,2018-04-17T05:30:57Z,Make model more easy to use
github.com/regob/vehicle_reid,model.py,2018-02-04T07:09:00Z,add dense121
github.com/regob/vehicle_reid,model.py,2018-01-03T05:11:58Z,-v0.4
github.com/regob/vehicle_reid,model.py,2018-01-02T06:36:20Z,v0.3
github.com/theNded/mini-omnidata,midas/vit.py,2023-04-05T16:57:33Z,refactor
github.com/YoojLee/Uniformaly,uniformaly/encoder.py,2023-09-15T10:36:11Z,Initial Code Drop
github.com/SimarKareer/UnifiedVideoDA,mmseg/models/backbones/timm_backbone.py,2021-11-02T04:51:11Z,"[Feature] Support TIMMBackbone (#998)

* add TIMMBackbone and unittests

* add timm to tests requirements

* deprecate pt1.3.1

* reduce the unittests input of timm backbone

* fix ci

* fix ci

* fix ci

* fix ci

* fix ci

* fix ci

* fix ci

* fix ci

* fix ci

* remove unittests of large models of timm backbone

* generate coverage report for all unittests env

* reduce the unittests input of timm backbone

* reduce the unittests input of timm backbone"
github.com/k-gyuhak/CLOOD,datasets/augs.py,2023-07-26T19:25:28Z,init
github.com/VSydorskyy/hubmap_2022_htt_solution,code_base/models/timm_clf.py,2022-09-27T09:38:59Z,initial commit
github.com/VSydorskyy/hubmap_2022_htt_solution,code_base/models/denis_models/timm_encoder.py,2022-09-27T09:38:59Z,initial commit
github.com/dangnh0611/kaggle_rsna_breast_cancer,src/roi_det/YOLOX/torch2trt/scripts/profile_timm.py,2023-03-13T18:48:53Z,reproducible version
github.com/dangnh0611/kaggle_rsna_breast_cancer,src/pytorch-image-models/tests/test_utils.py,2023-03-13T18:48:53Z,reproducible version
github.com/dangnh0611/kaggle_rsna_breast_cancer,src/pytorch-image-models/tests/test_models.py,2023-03-13T18:48:53Z,reproducible version
github.com/ShihaoShao-GH/1st-Place-Solution-in-Google-Universal-Image-Embedding,open_clip_280/src/open_clip/timm_model.py,2022-10-16T15:59:07Z,"Initial Version

Initial Version"
github.com/ShihaoShao-GH/1st-Place-Solution-in-Google-Universal-Image-Embedding,open_clip_280_overlap/src/open_clip/timm_model.py,2022-10-16T15:59:07Z,"Initial Version

Initial Version"
github.com/bnabis93/vision-language-examples,acceleration/03-vit-xformers/benchmark.py,2023-07-12T18:56:18Z,"Experiment acceration (#16)

* test: baseline batch

* docs: add experiment result

* test: tensorrt

* feat: onnx input name checker

* fix: trtexec

* docs: add experiment results

* fix: makefile

* fix: wrong baseline result bcz of torch sync

* feat: add result table and fix xformer benchamark code

* fix: xformer benchmark

* docs: xformer results

* docs: update experiment result

* docs: tensorrt plugin

* docs: add faster-trasnformer trt plugin result

* docs: result table update

* fix: typo

* test: xformers

* docs: result update

* docs: result update

* docs: update fp16 result

* feat: fp16 trt model

* docs: update fp16 result

* feat: fp16 baseline

* docs: update fp16 result

* docs: result update

* docs: add fp16 result

* docs: add dir table"
github.com/bnabis93/vision-language-examples,acceleration/03-vit-xformers/benchmark.py,2023-07-12T05:31:16Z,"Benchmark vit xFormers (#13)

* init the project

* docs: update key features

* feat: makefile for setup

* feat: init benchmark code

* feat: timm vit

* fix: remove conda setup

* feat: add benchmark

* feat: specify the dependencies version

* feat: sparse vit benchmark

* feat: add reproduce file bcz of performance degradation

* feat: add mem efficient attn

* feat: another test bcz of performance degradation

* fix: invalid lib path

* docs: issue"
github.com/bnabis93/vision-language-examples,acceleration/00-vit-baseline/benchmark.py,2023-07-12T18:56:18Z,"Experiment acceration (#16)

* test: baseline batch

* docs: add experiment result

* test: tensorrt

* feat: onnx input name checker

* fix: trtexec

* docs: add experiment results

* fix: makefile

* fix: wrong baseline result bcz of torch sync

* feat: add result table and fix xformer benchamark code

* fix: xformer benchmark

* docs: xformer results

* docs: update experiment result

* docs: tensorrt plugin

* docs: add faster-trasnformer trt plugin result

* docs: result table update

* fix: typo

* test: xformers

* docs: result update

* docs: result update

* docs: update fp16 result

* feat: fp16 trt model

* docs: update fp16 result

* feat: fp16 baseline

* docs: update fp16 result

* docs: result update

* docs: add fp16 result

* docs: add dir table"
github.com/bnabis93/vision-language-examples,acceleration/00-vit-baseline/benchmark.py,2023-07-06T08:44:40Z,"Acceleration ViT Methods (#10)

* Init the project

* feat: ViT benchmark

* feat: cuda benchmark code

* fix: benchmark code bugs"
github.com/bnabis93/vision-language-examples,acceleration/01-vit-tensorrt/onnx_export.py,2023-07-06T11:03:11Z,"Benchmark ViT-TensorRT model (#11)

* feat: onnx export

* feat: update docker image version

* feat: export trt model

* feat: benchmark

* feat: trt infer code

* fix: code error

* fix: input type

* feat: benchmark using trtexec

* fix: benchmark bug

* docs: update README"
github.com/bnabis93/vision-language-examples,acceleration/00-vit-baseline/benchmark_fp16.py,2023-07-12T18:56:18Z,"Experiment acceration (#16)

* test: baseline batch

* docs: add experiment result

* test: tensorrt

* feat: onnx input name checker

* fix: trtexec

* docs: add experiment results

* fix: makefile

* fix: wrong baseline result bcz of torch sync

* feat: add result table and fix xformer benchamark code

* fix: xformer benchmark

* docs: xformer results

* docs: update experiment result

* docs: tensorrt plugin

* docs: add faster-trasnformer trt plugin result

* docs: result table update

* fix: typo

* test: xformers

* docs: result update

* docs: result update

* docs: update fp16 result

* feat: fp16 trt model

* docs: update fp16 result

* feat: fp16 baseline

* docs: update fp16 result

* docs: result update

* docs: add fp16 result

* docs: add dir table"
github.com/xix-ai/antispoofing,code/entry_antispoof/models.py,2022-06-15T20:27:01Z,initial publication
github.com/BAAI-DCAI/Dataset-Pruning,LAION/clipa/open_clip/timm_model.py,2023-10-06T16:22:05Z,laion commit 1
github.com/BAAI-DCAI/Dataset-Pruning,LAION/openclip/open_clip/timm_model.py,2023-10-06T16:22:05Z,laion commit 1
github.com/Qinying-Liu/TagAlign,mmsegmentation_obsolete/mmseg/models/backbones/timm_backbone.py,2023-12-17T07:52:06Z,add mmseg
github.com/ekurtulus/tied-augment,pytorch/supervised/handlers.py,2023-04-02T01:01:52Z,update
github.com/ekurtulus/tied-augment,pytorch/supervised/handlers.py,2023-03-05T04:28:28Z,order
github.com/ekurtulus/tied-augment,pytorch/supervised/handlers.py,2023-01-29T07:11:02Z,fatih terim
github.com/ekurtulus/tied-augment,pytorch/supervised/handlers.py,2023-01-07T00:05:10Z,Yеl kayadan ancak toz alır
github.com/ekurtulus/tied-augment,pytorch/supervised/handlers.py,2022-12-19T14:42:40Z,update
github.com/CGCL-codes/TransferAttackSurrogates,TransferAttack/imagenet_attack.py,2024-01-08T02:01:44Z,Add files via upload
github.com/CGCL-codes/TransferAttackSurrogates,TransferAttack/imagenett_attack.py,2024-01-08T02:01:44Z,Add files via upload
github.com/CGCL-codes/TransferAttackSurrogates,TransferAttack/CIFAR_Train/utils/generic.py,2024-01-08T02:01:44Z,Add files via upload
github.com/zsh2000/3D-CLR,LSeg/modules/models/lseg_vit.py,2023-06-13T15:53:53Z,first commit
github.com/zsh2000/3D-CLR,LSeg/modules/models/lseg_vit_zs.py,2023-06-13T15:53:53Z,first commit
github.com/XiudiChen/ConPL,transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-05-13T18:52:07Z,all code
github.com/XiudiChen/ConPL,transformers/models/regnet/convert_regnet_to_pytorch.py,2023-05-13T18:52:07Z,all code
github.com/XiudiChen/ConPL,transformers/models/resnet/convert_resnet_to_pytorch.py,2023-05-13T18:52:07Z,all code
github.com/XiudiChen/ConPL,transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-05-13T18:52:07Z,all code
github.com/XiudiChen/ConPL,transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-05-13T18:52:07Z,all code
github.com/XiudiChen/ConPL,transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-05-13T18:52:07Z,all code
github.com/XiudiChen/ConPL,transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-05-13T18:52:07Z,all code
github.com/mobiusml/hqq,hqq/engine/timm.py,2024-03-07T14:19:53Z,add support for quantize/load on specific CUDA devices
github.com/mobiusml/hqq,hqq/engine/timm.py,2024-02-20T16:35:22Z,add offload_meta
github.com/mobiusml/hqq,hqq/engine/timm.py,2024-02-12T12:08:22Z,dequantize CUDA kernels + compute_dtype support
github.com/mobiusml/hqq,hqq/engine/timm.py,2024-01-04T15:47:26Z,Add LoRA + optimizer_v2
github.com/mobiusml/hqq,hqq/engine/timm.py,2023-12-02T17:14:26Z,HQQ v0.1.0 refactoring
github.com/mobiusml/hqq,examples/timm/vit_clip_example.py,2023-12-02T17:14:26Z,HQQ v0.1.0 refactoring
github.com/ZYiJie/text2img,open_clip/src/clip/model.py,2022-04-15T16:39:21Z,init
github.com/ZYiJie/text2img,BriVL-code-inference/models/vl_model.py,2022-04-15T16:39:21Z,init
github.com/md-mohaiminul/ViS4mer,extract_features/extract_features_lvu_vit.py,2022-07-18T18:07:07Z,first draft
github.com/md-mohaiminul/ViS4mer,extract_features/Video-Swin-Transformer/mmaction/models/recognizers/base.py,2022-07-18T17:13:17Z,coin and beakfast
github.com/LINs-lab/ttab,ttab/loads/define_model.py,2023-05-31T20:25:03Z,first commit
github.com/layer6ai-labs/tr0n,tr0n/modules/sgxl_utils/training/loss.py,2023-04-28T19:13:54Z,TR0N
github.com/layer6ai-labs/tr0n,tr0n/modules/sgxl_utils/run_inversion.py,2023-04-28T19:13:54Z,TR0N
github.com/layer6ai-labs/tr0n,tr0n/modules/sgxl_utils/feature_networks/vit.py,2023-04-28T19:13:54Z,TR0N
github.com/layer6ai-labs/tr0n,tr0n/modules/sgxl_utils/feature_networks/pretrained_builder.py,2023-04-28T19:13:54Z,TR0N
github.com/zkkli/RepQ-ViT,classification/utils/build_model.py,2022-12-23T10:04:05Z,init commit
github.com/clovaai/meev,main/model.py,2022-10-18T08:54:55Z,Initial Commit
github.com/dingfengshi/ReAct,mmaction/models/recognizers/base.py,2022-07-25T04:30:34Z,init push
github.com/SCLBD/BlackboxBench,utils/model_loader.py,2024-03-09T08:28:44Z,main commit
github.com/SCLBD/BlackboxBench,utils/model_loader.py,2022-02-10T07:10:02Z,"add utils

Signed-off-by: Alan-Qin <zeyu6181136@gamil.com>"
github.com/bytedance/DiffusionEngine,detrex/modeling/backbone/timm_backbone.py,2023-09-11T02:31:50Z,update diffusion engine
github.com/F-period/Open_Chinese_Figure_KG,methods/transformers-master/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-04-19T15:42:24Z,first commit
github.com/F-period/Open_Chinese_Figure_KG,methods/transformers-master/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-04-19T15:42:24Z,first commit
github.com/vinbigdata-medical/midl2020-cnnlstm-ich,src/modeling/cnn_rnn.py,2020-09-11T09:02:03Z,Update code
github.com/LFhase/FeAT,Wilds/models/__init__.py,2023-10-30T14:56:03Z,first commit
github.com/Unispac/Visual-Adversarial-Examples-Jailbreak-Large-Language-Models,lavis/models/clip_models/model.py,2023-08-16T07:57:56Z,add support for other models
github.com/Unispac/Visual-Adversarial-Examples-Jailbreak-Large-Language-Models,lavis/models/clip_models/timm_model.py,2023-08-16T07:57:56Z,add support for other models
github.com/iliasprc/SSL-vit-cnn,model/cnn.py,2021-05-07T13:39:09Z,Celeb A multi class trainer
github.com/iliasprc/SSL-vit-cnn,model/cnn.py,2021-05-07T12:35:30Z,simsiam
github.com/iliasprc/SSL-vit-cnn,model/cnn.py,2021-05-02T15:30:17Z,token to token vit
github.com/iliasprc/SSL-vit-cnn,model/cnn.py,2021-04-28T06:07:12Z,"deit
t2tvit
clf config"
github.com/iliasprc/SSL-vit-cnn,model/cnn.py,2021-04-24T19:12:24Z,stl10 dataset
github.com/iliasprc/SSL-vit-cnn,model/cnn.py,2021-04-24T15:13:15Z,sim-siam trainer ssl
github.com/iliasprc/SSL-vit-cnn,model/cnn.py,2021-04-24T10:54:00Z,sim-siam trainer ssl
github.com/iliasprc/SSL-vit-cnn,model/cnn.py,2021-04-23T15:06:56Z,"colab scripts
feature pretraine"
github.com/iliasprc/SSL-vit-cnn,model/cnn.py,2021-04-23T14:45:36Z,timm models usage
github.com/iliasprc/SSL-vit-cnn,model/cnn.py,2021-04-23T14:34:32Z,initial commit
github.com/iliasprc/SSL-vit-cnn,selfsl/ssl_models/simsiam.py,2021-05-02T15:30:17Z,token to token vit
github.com/iliasprc/SSL-vit-cnn,selfsl/ssl_models/simsiam.py,2021-05-01T07:22:00Z,simsiam
github.com/iliasprc/SSL-vit-cnn,selfsl/ssl_models/simsiam.py,2021-04-28T06:13:18Z,"deit
t2tvit
clf config"
github.com/iliasprc/SSL-vit-cnn,selfsl/ssl_models/simsiam.py,2021-04-28T06:07:12Z,"deit
t2tvit
clf config"
github.com/iliasprc/SSL-vit-cnn,selfsl/ssl_models/simsiam.py,2021-04-27T09:28:29Z,deit
github.com/iliasprc/SSL-vit-cnn,selfsl/ssl_models/simsiam.py,2021-04-27T07:56:05Z,stl10 dataset
github.com/iliasprc/SSL-vit-cnn,selfsl/ssl_models/simsiam.py,2021-04-26T17:51:16Z,stl10 dataset
github.com/iliasprc/SSL-vit-cnn,selfsl/ssl_models/simsiam.py,2021-04-26T17:44:03Z,stl10 dataset
github.com/iliasprc/SSL-vit-cnn,selfsl/ssl_models/simsiam.py,2021-04-26T08:17:47Z,stl10 dataset
github.com/iliasprc/SSL-vit-cnn,selfsl/ssl_models/simsiam.py,2021-04-26T06:57:09Z,stl10 dataset
github.com/iliasprc/SSL-vit-cnn,selfsl/ssl_models/simsiam.py,2021-04-24T15:23:37Z,sim-siam trainer ssl
github.com/iliasprc/SSL-vit-cnn,selfsl/ssl_models/simsiam.py,2021-04-24T15:13:15Z,sim-siam trainer ssl
github.com/iliasprc/SSL-vit-cnn,selfsl/ssl_models/simsiam.py,2021-04-24T13:34:26Z,sim-siam trainer ssl
github.com/iliasprc/SSL-vit-cnn,selfsl/ssl_models/simsiam.py,2021-04-24T11:12:06Z,sim-siam trainer ssl
github.com/StrongResearch/isc-demos,pytorch-image-models/onnx_export.py,2023-07-28T08:19:39Z,first commit
github.com/StrongResearch/isc-demos,pytorch-image-models/tests/test_utils.py,2023-07-28T08:19:39Z,first commit
github.com/StrongResearch/isc-demos,pytorch-image-models/tests/test_models.py,2023-07-28T08:19:39Z,first commit
github.com/gau-nernst/vision-toolbox,tests/test_vit.py,2023-10-29T06:54:04Z,Add SigLIP weights (#22)
github.com/gau-nernst/vision-toolbox,tests/test_vit.py,2023-08-20T05:36:38Z,Add CaiT (#19)
github.com/gau-nernst/vision-toolbox,tests/test_vit.py,2023-07-23T12:36:55Z,Improve ViT (#12)
github.com/gau-nernst/vision-toolbox,tests/test_cait.py,2023-08-20T05:36:38Z,Add CaiT (#19)
github.com/gau-nernst/vision-toolbox,tests/test_deit.py,2023-08-20T11:59:48Z,Add DeiT and DeiT-III (#20)
github.com/gau-nernst/vision-toolbox,tests/test_swin.py,2023-08-19T03:16:47Z,Add Swin Transformer (#16)
github.com/gau-nernst/vision-toolbox,tests/test_convnext.py,2023-08-19T09:15:03Z,Add ConvNeXt-V2 (#18)
github.com/gau-nernst/vision-toolbox,tests/test_convnext.py,2023-08-19T05:35:44Z,Add ConvNeXt (#17)
github.com/gau-nernst/vision-toolbox,tests/test_mlp_mixer.py,2023-08-08T13:39:45Z,Add MLP-Mixer (#14)
github.com/Hazel1994/ViPE-Videos,src/midas/vit.py,2023-10-19T13:28:52Z,first commit
github.com/Hazel1994/ViPE-Videos,src/ldm/modules/midas/midas/vit.py,2023-10-19T13:28:52Z,first commit
github.com/h2oai/cvpr-multiearth-deforestation-segmentation,src/models/forest_model.py,2023-07-05T07:33:03Z,init
github.com/Scarecrow0/SGTR,playground/detection/coco/rcnn/mask_rcnn.swin_tiny.fpn.coco.multiscale.1x/modeling/backbone/timm_backbone.py,2022-06-27T06:46:35Z,init
github.com/Scarecrow0/SGTR,playground/detection/coco/rcnn/mask_rcnn.swin_tiny.fpn.coco.multiscale.3x/modeling/backbone/timm_backbone.py,2022-06-27T06:46:35Z,init
github.com/superhero-7/AltDiffusion,misc/evaluation/metrics_eval/geval/open_clip/timm_model.py,2023-08-18T17:14:51Z,first commit
github.com/lauraset/Coarse-to-fine-weakly-supervised-GPC-segmentation,tttcls_google_gpc/encoders/timm_universal.py,2022-04-23T06:27:07Z,rename
github.com/lauraset/Coarse-to-fine-weakly-supervised-GPC-segmentation,tttcls_google_gpc/encoders/timm_mobilenetv3.py,2022-04-23T06:27:07Z,rename
github.com/PeterouZh/CIPS-3Dplusplus,exp/cips3d/models/vgg_per_loss.py,2023-06-24T08:16:25Z,init
github.com/Computer-Vision-in-the-Wild/UniCL-OpenCLIP,src/open_clip/timm_model.py,2022-12-09T03:23:32Z,update
github.com/Event-AHU/HARDVS,mmaction/models/recognizers/base.py,2024-01-07T05:43:38Z,Add files via upload
github.com/MIDS-scaling-up/v2,week06/demo.py,2020-06-09T20:58:47Z,Update demo
github.com/MIDS-scaling-up/v2,week06/demo.py,2020-06-07T18:33:38Z,Demo torch and keras
github.com/MIDS-scaling-up/v2,week06/demo.py,2020-06-07T18:32:15Z,Demo torch and keras
github.com/yeates/MaGIC,annotator/depth/midas/vit.py,2023-06-23T02:08:04Z,magic init
github.com/ziplab/SN-Netv2,segmentation/mmseg/models/backbones/timm_backbone.py,2024-01-17T10:44:44Z,update
github.com/pprp/Vision-Mamba-CIFAR10,main.py,2024-01-21T03:27:39Z,Add models_mamba and timm imports
github.com/pprp/Vision-Mamba-CIFAR10,main.py,2024-01-21T03:20:24Z,Add CIFAR10Dataset class and build_cifar10_dataset function
github.com/pprp/Vision-Mamba-CIFAR10,main.py,2024-01-19T15:51:13Z,Init from vim
github.com/Georgefwt/Face-Landmark-ControlNet,annotator/midas/midas/vit.py,2023-03-09T01:17:06Z,init commit
github.com/Georgefwt/Face-Landmark-ControlNet,ldm/modules/midas/midas/vit.py,2023-03-09T01:17:06Z,init commit
github.com/cure-lab/DiffGuard,external/pytorch-grad-cam/usage_examples/swinT_example.py,2023-08-14T07:37:10Z,init commit
github.com/VITA-Group/DSEE,non-GPT-2/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-10-27T13:30:08Z,add unstructured bertt code
github.com/VITA-Group/DSEE,non-GPT-2/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-10-27T13:30:08Z,add unstructured bertt code
github.com/ds-hub-sochi/sl-techreport,mmaction2/mmaction/models/recognizers/base.py,2023-02-01T12:44:34Z,fix repo
github.com/aclex/detection-experiments,backbone/timm.py,2021-03-09T20:05:54Z,"Slight backbone restructure

Use the fresh version of `timm` which is now allows successful
exports to ONNX. Make use of the rest of the backbone models
from it by name (some may fail to work due to specific
restrictions)."
github.com/lambert-x/video-semisup,mmaction/models/recognizers/base.py,2022-05-22T23:57:45Z,upload code
github.com/sail-sg/dualformer,mmaction/models/recognizers/base.py,2022-01-12T12:39:45Z,upload files
github.com/xiaobai1217/Unseen-Modality-Interaction,mmaction/models/recognizers/base.py,2024-01-22T15:37:43Z,initial
github.com/viridityzhu/HiFiHR,network/res_encoder.py,2023-05-17T11:05:27Z,add encoder effinetb3
github.com/viridityzhu/HiFiHR,network/res_encoder.py,2023-05-02T07:30:41Z,fix hardtanh in light est
github.com/viridityzhu/HiFiHR,network/res_encoder.py,2023-04-29T13:16:49Z,add light estimator: directional light
github.com/viridityzhu/HiFiHR,network/res_encoder.py,2023-04-26T05:14:49Z,fix encoder texture param
github.com/viridityzhu/HiFiHR,network/res_encoder.py,2023-04-06T18:21:47Z,!!Dangerous changing texture param to zero
github.com/viridityzhu/HiFiHR,network/res_encoder.py,2023-03-17T15:52:16Z,update: add mano layer. with bugs
github.com/viridityzhu/HiFiHR,network/res_encoder.py,2023-03-17T03:23:54Z,add pretrain res101
github.com/viridityzhu/HiFiHR,network/res_encoder.py,2023-03-13T18:05:25Z,add res50 as backbone choice!
github.com/viridityzhu/HiFiHR,network/res_encoder.py,2023-03-13T17:11:16Z,fix
github.com/viridityzhu/HiFiHR,network/res_encoder.py,2023-03-10T12:21:18Z,Add hand_model option: nimble or mano
github.com/viridityzhu/HiFiHR,network/res_encoder.py,2023-03-09T08:57:00Z,update the 4c or 3c option.
github.com/viridityzhu/HiFiHR,network/res_encoder.py,2023-03-07T16:46:54Z,update train_hrnet
github.com/viridityzhu/HiFiHR,network/res_encoder.py,2023-03-07T15:04:18Z,finish new network.
github.com/viridityzhu/HiFiHR,network/res_encoder.py,2023-03-07T12:01:59Z,adding network.
github.com/viridityzhu/HiFiHR,network/res_encoder.py,2023-03-06T06:34:20Z,adding new network structure
github.com/facebookresearch/CiT,hfmodels/augreg.py,2023-01-07T05:15:45Z,update copyright format for new files.
github.com/facebookresearch/CiT,hfmodels/augreg.py,2023-01-05T20:10:11Z,Initial commit
github.com/amazon-science/object-centric-multiple-object-tracking,ocl/feature_extractors.py,2023-09-07T09:24:10Z,code initialization
github.com/Sense-X/TokenMix,main.py,2022-09-08T06:52:22Z,update code
github.com/rucmlcv/Wenlan-Video-Public,models/vl_model.py,2022-03-19T15:07:48Z,Add files via upload
github.com/DongSky/vpt_reproduce,PromptModels/GetPromptModel.py,2022-05-10T03:15:57Z,Update GetPromptModel.py
github.com/DongSky/vpt_reproduce,PromptModels/GetPromptModel.py,2022-05-04T07:02:28Z,Add files via upload
github.com/wagner-group/pubdef,src/models/timm_model.py,2023-10-15T22:15:25Z,Initial commit message
github.com/Reza-Zhu/SUES-200-Benchmark,model_.py,2023-02-25T12:41:26Z,update paper code
github.com/Reza-Zhu/SUES-200-Benchmark,model_.py,2022-04-25T03:27:34Z,update argparse
github.com/Reza-Zhu/SUES-200-Benchmark,model_.py,2022-03-25T13:53:43Z,"fix bugs and add  image_size,loss_func,multi_query,"
github.com/Reza-Zhu/SUES-200-Benchmark,model_.py,2022-03-11T11:47:53Z,fix bugs and add new functions
github.com/Reza-Zhu/SUES-200-Benchmark,model_.py,2022-02-17T07:43:41Z,AutoTuning V2.0
github.com/Reza-Zhu/SUES-200-Benchmark,model_.py,2021-12-22T13:31:35Z,Update Models' Structure
github.com/Reza-Zhu/SUES-200-Benchmark,model_.py,2021-12-14T06:33:53Z,add se-res cbam-res inception
github.com/Reza-Zhu/SUES-200-Benchmark,model_.py,2021-12-13T13:58:02Z,"add seres,cbamres,Incpt waiting test..."
github.com/Reza-Zhu/SUES-200-Benchmark,model_.py,2021-10-26T13:35:38Z,EfficientNet V1.0
github.com/Reza-Zhu/SUES-200-Benchmark,model_.py,2021-10-26T02:49:42Z,DenseNet V1.0
github.com/Reza-Zhu/SUES-200-Benchmark,model_.py,2021-10-25T12:16:58Z,VGG V1.0
github.com/Reza-Zhu/SUES-200-Benchmark,model_.py,2021-10-23T12:33:37Z,resnet V1.0
github.com/Reza-Zhu/SUES-200-Benchmark,loss_func/loss_model.py,2022-06-03T00:09:42Z,loss func
github.com/GenjiB/LAVISH,AVE/nets/my_vit.py,2022-12-14T05:09:29Z,initial upload
github.com/GenjiB/LAVISH,AVE/nets/net_trans.py,2023-04-15T02:45:27Z,fixed bugs and also add new version for AVE
github.com/GenjiB/LAVISH,AVE/nets/net_trans.py,2022-12-26T09:50:52Z,fix bugs for AVE
github.com/GenjiB/LAVISH,AVE/nets/net_trans.py,2022-12-14T05:09:29Z,initial upload
github.com/GenjiB/LAVISH,AVE/nets/ast_models.py,2022-12-14T05:09:29Z,initial upload
github.com/GenjiB/LAVISH,AVE/nets/net_trans_v2.py,2023-04-15T02:45:27Z,fixed bugs and also add new version for AVE
github.com/GenjiB/LAVISH,AVQA/net_grd_avst/net_avst.py,2023-07-05T07:58:38Z,avqa bug fixed
github.com/GenjiB/LAVISH,AVQA/net_grd_avst/net_avst.py,2022-12-14T18:22:57Z,+fig
github.com/GenjiB/LAVISH,AVS/avs_scripts/avs_s4/model/PVT_AVSModel.py,2022-12-14T05:15:37Z,avs
github.com/luping-liu/Detector-Guidance,stablediffusion/ldm/modules/midas/midas/vit.py,2024-02-07T08:52:21Z,init
github.com/wenh18/AdaptiveNet,ondevice_baseline.py,2022-08-26T08:01:50Z,ondevice
github.com/wenh18/AdaptiveNet,ondevice_baseline.py,2022-08-26T05:18:53Z,ondevice-baseline
github.com/wenh18/AdaptiveNet,train_classification.py,2023-02-07T06:43:42Z,torch_pruning updated
github.com/wenh18/AdaptiveNet,train_classification.py,2022-08-26T03:48:24Z,othertask
github.com/wenh18/AdaptiveNet,mytimm/models/quantize_model.py,2022-08-25T14:53:45Z,adaptive
github.com/wenh18/AdaptiveNet,segmentation_models_pytorch/encoders/timm_universal.py,2022-08-25T14:53:45Z,adaptive
github.com/wenh18/AdaptiveNet,segmentation_models_pytorch/encoders/timm_mobilenetv3.py,2022-08-25T14:53:45Z,adaptive
github.com/ExplainableML/DeViL,src/vision_models.py,2023-10-16T18:02:02Z,Code release
github.com/wkcn/TinyCLIP,src/open_clip/timm_model.py,2024-01-21T12:18:23Z,first commit
github.com/eyalgomel/box-based-refinement,moveseg/discriminators/pg_modules/projector.py,2023-09-08T03:43:18Z,initial commit
github.com/ChainsmokersAI/Prompt-Tuning-on-ToTTo,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-03-08T05:52:39Z,T5 Codes For Prompt-Tuning
github.com/ChainsmokersAI/Prompt-Tuning-on-ToTTo,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-03-08T05:52:39Z,T5 Codes For Prompt-Tuning
github.com/ChainsmokersAI/Prompt-Tuning-on-ToTTo,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-03-08T05:52:39Z,T5 Codes For Prompt-Tuning
github.com/Mutoy-choi/Tryondiffusion,models/EfficientUNet.py,2023-09-25T04:05:34Z,organize folders
github.com/zxhuang1698/ZeroShape,model/depth/vit.py,2024-01-14T08:12:09Z,Release code
github.com/PIC4SeR/Back-to-Bones,models/utils.py,2023-05-16T08:37:29Z,update
github.com/PIC4SeR/Back-to-Bones,models/utils.py,2023-03-09T15:35:36Z,aggd
github.com/PIC4SeR/Back-to-Bones,models/utils.py,2022-12-12T17:33:25Z,unified code
github.com/MatPiech/motor-fault-diagnosis,fault_diagnosis/thermovision/src/models/classifier.py,2023-08-01T07:36:15Z,Fix linter issues
github.com/MatPiech/motor-fault-diagnosis,fault_diagnosis/thermovision/src/models/classifier.py,2023-04-04T10:55:54Z,Update metrics calculation; resize data instead of cropping
github.com/MatPiech/motor-fault-diagnosis,fault_diagnosis/thermovision/src/models/classifier.py,2023-03-24T19:37:56Z,"Update dataset split, remove legacy parameters"
github.com/MatPiech/motor-fault-diagnosis,fault_diagnosis/thermovision/src/models/classifier.py,2023-03-03T12:33:10Z,Rename project main folder
github.com/valeoai/rangevit,models/rangevit.py,2023-06-14T16:04:08Z,adding code
github.com/analokmaus/kaggle-rsna-breast-cancer,modules.py,2023-01-17T22:38:49Z,add expts
github.com/analokmaus/kaggle-rsna-breast-cancer,modules.py,2023-01-08T03:28:50Z,first commit
github.com/analokmaus/kaggle-rsna-breast-cancer,architectures.py,2023-02-28T07:20:39Z,remove unnecessary for publication
github.com/analokmaus/kaggle-rsna-breast-cancer,architectures.py,2023-02-20T13:07:17Z,add GMIC expts
github.com/analokmaus/kaggle-rsna-breast-cancer,architectures.py,2023-02-19T05:49:24Z,add expts
github.com/analokmaus/kaggle-rsna-breast-cancer,architectures.py,2023-02-16T01:15:57Z,add distillation model
github.com/analokmaus/kaggle-rsna-breast-cancer,architectures.py,2023-02-14T01:34:59Z,add expts
github.com/analokmaus/kaggle-rsna-breast-cancer,architectures.py,2023-02-12T14:06:13Z,add expts
github.com/analokmaus/kaggle-rsna-breast-cancer,architectures.py,2023-02-04T12:39:55Z,new expts
github.com/analokmaus/kaggle-rsna-breast-cancer,architectures.py,2023-02-02T02:37:03Z,fix LR dataset
github.com/analokmaus/kaggle-rsna-breast-cancer,architectures.py,2023-02-01T03:02:34Z,add Siamese network / add Patient level LR dataset
github.com/analokmaus/kaggle-rsna-breast-cancer,architectures.py,2023-01-31T01:19:53Z,add resolution expts
github.com/analokmaus/kaggle-rsna-breast-cancer,architectures.py,2023-01-17T22:38:49Z,add expts
github.com/analokmaus/kaggle-rsna-breast-cancer,architectures.py,2023-01-16T01:40:28Z,add MultiLevelModel
github.com/analokmaus/kaggle-rsna-breast-cancer,architectures.py,2023-01-12T01:03:36Z,add expts
github.com/analokmaus/kaggle-rsna-breast-cancer,architectures.py,2023-01-08T03:28:50Z,first commit
github.com/AttentionX/InstructBLIP_PEFT,lavis/models/clip_models/model.py,2023-11-03T11:55:31Z,upload codes
github.com/AttentionX/InstructBLIP_PEFT,lavis/models/clip_models/timm_model.py,2023-11-03T11:55:31Z,upload codes
github.com/AttentionX/InstructBLIP_PEFT,lavis/common/annotator/midas/midas/vit.py,2023-11-03T11:55:31Z,upload codes
github.com/sled-group/CycleNet,annotator/midas/midas/vit.py,2023-03-27T03:51:26Z,ini
github.com/sled-group/CycleNet,ldm/modules/midas/midas/vit.py,2023-03-27T03:51:26Z,ini
github.com/sagarverma/transformer-lipschitz,liptrf/dp_to_l2/vit_imagenet1k.py,2022-05-18T17:48:58Z,Fix
github.com/sagarverma/transformer-lipschitz,liptrf/dp_to_l2/vit_imagenet1k.py,2022-05-18T17:37:06Z,imagenet fixed
github.com/sagarverma/transformer-lipschitz,liptrf/dp_to_l2/vit_imagenet1k.py,2022-05-18T17:34:03Z,imagenet fixed
github.com/sagarverma/transformer-lipschitz,liptrf/dp_to_l2/vit_imagenet1k.py,2022-05-18T17:33:18Z,imagenet fixed
github.com/sagarverma/transformer-lipschitz,liptrf/dp_to_l2/vit_imagenet1k.py,2022-05-18T14:08:27Z,try imagenet like this
github.com/sagarverma/transformer-lipschitz,liptrf/dp_to_l2/vit_imagenet1k.py,2022-05-18T13:46:22Z,vit_imagenet1k.py l2 adapt
github.com/sagarverma/transformer-lipschitz,liptrf/dp_to_l2/vit_imagenet1k.py,2022-05-16T13:04:33Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/dp_to_l2/vit_imagenet1k.py,2022-05-16T09:00:27Z,sync
github.com/sagarverma/transformer-lipschitz,liptrf/dp_to_l2/vit_imagenet1k.py,2022-05-16T08:56:41Z,argument parser
github.com/sagarverma/transformer-lipschitz,liptrf/dp_to_l2/vit_imagenet1k.py,2022-05-16T07:00:03Z,ddp stuff
github.com/sagarverma/transformer-lipschitz,liptrf/dp_to_l2/vit_imagenet1k.py,2022-05-16T06:50:55Z,ddp
github.com/sagarverma/transformer-lipschitz,liptrf/dp_to_l2/vit_imagenet1k.py,2022-05-15T15:23:41Z,delete stuff
github.com/sagarverma/transformer-lipschitz,liptrf/dp_to_l2/vit_imagenet1k.py,2022-05-15T15:06:55Z,vit_imagenet1k adapt
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-14T00:29:39Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-14T00:28:24Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-14T00:27:58Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-14T00:25:01Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-14T00:23:32Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-14T00:21:13Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-14T00:19:38Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-14T00:19:17Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-14T00:18:47Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-14T00:17:23Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-14T00:16:24Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-14T00:15:38Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-13T23:52:51Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-13T23:43:47Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-13T23:43:06Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-13T23:42:33Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-13T23:41:58Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-13T23:40:54Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-13T23:40:22Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-13T23:39:20Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-13T23:38:42Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-13T23:29:47Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-13T23:28:31Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-13T23:27:18Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-13T15:39:41Z,Fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-10-13T15:38:08Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-09-24T13:36:54Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/scratch/vit/train_imagenet.py,2022-09-20T06:08:44Z,toepltiz required?
github.com/sagarverma/transformer-lipschitz,liptrf/pretrained/train_tmn_from_pretrained.py,2022-05-17T20:31:14Z,train cifar100
github.com/sagarverma/transformer-lipschitz,liptrf/pretrained/train_tmn_from_pretrained.py,2022-05-17T17:21:28Z,fix
github.com/sagarverma/transformer-lipschitz,liptrf/pretrained/train_tmn_from_pretrained.py,2022-05-17T14:37:50Z,Fix
github.com/sagarverma/transformer-lipschitz,liptrf/pretrained/train_cifar10_from_pretrained.py,2022-05-17T14:37:50Z,Fix
github.com/sagarverma/transformer-lipschitz,liptrf/pretrained/train_cifar100_from_pretrained.py,2022-05-18T08:50:49Z,cifar10 and 100 adaptation
github.com/sagarverma/transformer-lipschitz,liptrf/pretrained/train_cifar100_from_pretrained.py,2022-05-17T14:37:50Z,Fix
github.com/sejong-rcv/TransDSSL,dpt/vit.py,2023-01-11T07:22:34Z,update
github.com/sejong-rcv/TransDSSL,transdssl/vit.py,2023-01-11T07:22:34Z,update
github.com/jayLEE0301/snerl_official,nerf_pretrain/dino.py,2023-05-20T02:18:47Z,first commit
github.com/OpenRobotLab/DORT,software/mmseg/mmseg/models/backbones/timm_backbone.py,2024-01-02T01:11:58Z,first init
github.com/Shwai-He/SparseAdapter,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-12-25T13:37:22Z,upload
github.com/Shwai-He/SparseAdapter,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-12-25T13:37:22Z,upload
github.com/karazijal/guess-what-moves,src/utils/vit_extractor.py,2023-01-20T10:28:51Z,Code Release
github.com/karazijal/guess-what-moves,src/mask_former/modeling/backbone/vit.py,2023-01-20T10:28:51Z,Code Release
github.com/isaaccorley/contrastive-surface-image-pretraining,csip/models/csip.py,2022-02-26T23:29:02Z,init
github.com/lishiqianhugh/LfID,LfI/train.py,2022-09-20T07:55:01Z,Initial Commit
github.com/lishiqianhugh/LfID,LfI/evaluate.py,2022-09-20T07:55:01Z,Initial Commit
github.com/lishiqianhugh/LfID,LfI/utils/save_distribution.py,2022-09-20T07:55:01Z,Initial Commit
github.com/grantword8/BLV,fully_sup/mmseg/models/backbones/timm_backbone.py,2023-06-13T13:16:19Z,initial commit
github.com/lessw2020/transformer_framework,main_training.py,2023-10-13T20:44:03Z,update timing output
github.com/lessw2020/transformer_framework,main_training.py,2023-10-13T19:50:43Z,integrate sharding_groups_helper
github.com/lessw2020/transformer_framework,main_training.py,2023-06-28T21:14:29Z,correct ordering for AC with compile
github.com/lessw2020/transformer_framework,main_training.py,2023-06-28T19:35:03Z,add limit_all_gathers and use_orig_params to config options for FSDP
github.com/lessw2020/transformer_framework,main_training.py,2023-06-13T05:26:17Z,use the context manager context to ensure profiling works
github.com/lessw2020/transformer_framework,main_training.py,2023-06-07T20:28:47Z,enable HF grad checkpointing for T5
github.com/lessw2020/transformer_framework,main_training.py,2023-06-07T19:04:15Z,temp remove warning about not loading pattn blocks
github.com/lessw2020/transformer_framework,main_training.py,2023-06-07T19:02:46Z,t5 with ac working again
github.com/lessw2020/transformer_framework,main_training.py,2023-06-07T17:35:50Z,add register_buffer fix (thanks Andrew for spotting)
github.com/lessw2020/transformer_framework,main_training.py,2023-06-07T17:31:13Z,add ddp support via use_ddp in config
github.com/lessw2020/transformer_framework,main_training.py,2023-06-07T05:20:31Z,"set deferred init to False, add warning if deferred init is True"
github.com/lessw2020/transformer_framework,main_training.py,2023-05-22T23:06:39Z,"tp now working,but housing in diff files until I can merge into single config"
github.com/lessw2020/transformer_framework,main_training.py,2023-05-21T00:02:15Z,improved end of run reporting stats
github.com/lessw2020/transformer_framework,main_training.py,2023-05-20T21:24:12Z,add linear warmup (required for AdamW training)
github.com/lessw2020/transformer_framework,main_training.py,2023-05-20T20:55:26Z,turn off metric logging to file for now
github.com/lessw2020/transformer_framework,main_training.py,2023-05-20T20:48:58Z,remove redundant perf timer calls
github.com/lessw2020/transformer_framework,main_training.py,2023-05-20T14:09:59Z,"create context based profiling, remove dupe training loop blocks"
github.com/lessw2020/transformer_framework,main_training.py,2023-05-20T13:12:01Z,"add none_context for cfg deferred init control, _zero_print partial function"
github.com/lessw2020/transformer_framework,main_training.py,2023-05-17T00:37:41Z,fix classifier head to match any dataset
github.com/lessw2020/transformer_framework,main_training.py,2023-05-16T20:36:52Z,get rid of text files from logging
github.com/lessw2020/transformer_framework,main_training.py,2023-05-11T23:18:14Z,"make mqa configurable, remove fused_upper config (always using now)"
github.com/lessw2020/transformer_framework,main_training.py,2023-05-10T00:39:34Z,updates for parallel attention block and perf timing (remove data loading time)
github.com/lessw2020/transformer_framework,main_training.py,2023-05-02T17:01:22Z,profile all ranks
github.com/lessw2020/transformer_framework,main_training.py,2023-05-02T16:59:05Z,"all configs working fused,parallel, upper"
github.com/lessw2020/transformer_framework,main_training.py,2023-05-02T16:25:19Z,"prep for config control over upper_fusion, fused_attention"
github.com/lessw2020/transformer_framework,main_training.py,2023-04-27T17:16:57Z,add dist.barrier() to avoid fsdp hang with parallel layers
github.com/lessw2020/transformer_framework,main_training.py,2023-04-27T00:54:38Z,support config for Parallel or Sequential Attention
github.com/lessw2020/transformer_framework,main_training.py,2023-04-26T17:34:17Z,rewrite to ParallelLayersBlock
github.com/lessw2020/transformer_framework,main_training.py,2023-04-25T20:54:37Z,parallelizemodule default
github.com/lessw2020/transformer_framework,main_training.py,2023-04-12T23:13:48Z,add init func
github.com/lessw2020/transformer_framework,main_training.py,2023-03-29T23:23:46Z,addig deferred init
github.com/lessw2020/transformer_framework,main_training.py,2023-03-08T00:40:58Z,add selective recompute to vit_smart
github.com/lessw2020/transformer_framework,main_training.py,2023-03-07T19:16:02Z,"add batch size display in summary, revert bias for vit convd2 patch stem"
github.com/lessw2020/transformer_framework,main_training.py,2023-03-07T19:09:01Z,"ensure both vit smart and base run smoothly with mixed precision, no tp"
github.com/lessw2020/transformer_framework,main_training.py,2023-03-07T16:39:45Z,"misc fixes to config (add warmup steps setting), remove debug prints in main training"
github.com/lessw2020/transformer_framework,main_training.py,2023-03-07T16:18:59Z,proper calc of avg step time now working
github.com/lessw2020/transformer_framework,main_training.py,2023-03-07T16:15:06Z,fix total step count generically
github.com/lessw2020/transformer_framework,main_training.py,2023-03-07T15:45:11Z,add AdamW back with fused option
github.com/lessw2020/transformer_framework,main_training.py,2023-03-01T19:34:50Z,add metric logging to file for validation stats
github.com/lessw2020/transformer_framework,main_training.py,2023-03-01T19:13:00Z,add simple validation stats logging
github.com/lessw2020/transformer_framework,main_training.py,2023-03-01T17:24:12Z,smartvit up and running!
github.com/lessw2020/transformer_framework,main_training.py,2023-02-28T19:13:27Z,add use_label_singular for food ds
github.com/lessw2020/transformer_framework,main_training.py,2023-02-28T19:05:20Z,add universal and food ds
github.com/lessw2020/transformer_framework,main_training.py,2023-02-27T20:45:50Z,tp for vit base fully working with synthetic data
github.com/lessw2020/transformer_framework,main_training.py,2023-02-27T19:34:44Z,"split vit_base and vit_smart, add 250M vit base"
github.com/lessw2020/transformer_framework,main_training.py,2023-02-27T04:15:14Z,add dual_patchnorm for patch projection
github.com/lessw2020/transformer_framework,main_training.py,2023-02-26T20:27:18Z,show highest val acc with green highlight
github.com/lessw2020/transformer_framework,main_training.py,2023-02-26T20:23:10Z,"fix cfg num heads, not exposed atm in timm"
github.com/lessw2020/transformer_framework,main_training.py,2023-02-26T20:11:46Z,enable num_heads customization in config
github.com/lessw2020/transformer_framework,main_training.py,2023-02-26T20:07:21Z,directions for installing timm from source
github.com/lessw2020/transformer_framework,main_training.py,2023-02-26T20:05:56Z,ensure timm references are bc for other users
github.com/lessw2020/transformer_framework,main_training.py,2023-02-26T19:56:43Z,add timm vit with customized qk settings
github.com/lessw2020/transformer_framework,main_training.py,2023-02-25T21:39:25Z,add dadaptation for auto lr
github.com/lessw2020/transformer_framework,main_training.py,2023-02-25T21:23:56Z,add beans leaf disease dataset
github.com/lessw2020/transformer_framework,main_training.py,2023-02-25T01:02:50Z,adds val los and accuracy print out at end (start of curves plotting)
github.com/lessw2020/transformer_framework,main_training.py,2023-02-25T00:28:33Z,"print epoch step, storing val data, fsdp only on in config"
github.com/lessw2020/transformer_framework,main_training.py,2023-02-24T23:22:22Z,working validation for tp pkmn
github.com/lessw2020/transformer_framework,main_training.py,2023-02-24T22:54:28Z,initial training working with pk dataset
github.com/lessw2020/transformer_framework,main_training.py,2023-02-23T02:32:28Z,fix avg step calcs to remove warmups
github.com/lessw2020/transformer_framework,main_training.py,2023-02-23T01:53:34Z,"90M vit, starting tp"
github.com/lessw2020/transformer_framework,main_training.py,2023-02-23T00:29:04Z,halfway done with tp integration
github.com/lessw2020/transformer_framework,main_training.py,2023-02-22T23:26:13Z,verify valid model size during init
github.com/lessw2020/transformer_framework,main_training.py,2023-02-22T23:11:42Z,vit up and running
github.com/lessw2020/transformer_framework,main_training.py,2022-10-08T00:18:19Z,sharding loading saving updates
github.com/lessw2020/transformer_framework,main_training.py,2022-10-07T01:26:34Z,add sharded_state_dict load and save
github.com/lessw2020/transformer_framework,main_training.py,2022-09-30T01:25:11Z,"cleanup activation checkpointing, local_state_dict saving"
github.com/lessw2020/transformer_framework,main_training.py,2022-09-17T01:26:02Z,"improved memory stats, cfg control of print mem summary"
github.com/lessw2020/transformer_framework,main_training.py,2022-09-17T00:40:22Z,add anyprecision
github.com/lessw2020/transformer_framework,main_training.py,2022-08-30T02:09:28Z,fixes for deepvit real data
github.com/lessw2020/transformer_framework,main_training.py,2022-08-19T03:08:08Z,"updates for real vision data training (dist sampler), add validation and epoch loop"
github.com/lessw2020/transformer_framework,main_training.py,2022-08-16T02:32:58Z,support BF16 and int8 optimizers and BF16 gradients
github.com/lessw2020/transformer_framework,main_training.py,2022-07-27T03:28:54Z,Merge branch 'main' into Merge-conflicts
github.com/lessw2020/transformer_framework,main_training.py,2022-07-27T02:09:48Z,"adds bff optimizer, debug copy of fsdp to track all gather and reduce scatter"
github.com/lessw2020/transformer_framework,main_training.py,2022-07-26T23:07:24Z,Merge branch 'main' into Merge-conflicts
github.com/lessw2020/transformer_framework,main_training.py,2022-07-26T23:03:30Z,"Refactor t5_config, fix some small bugs"
github.com/lessw2020/transformer_framework,main_training.py,2022-07-25T19:34:09Z,adds profile folder in cfg and main
github.com/lessw2020/transformer_framework,main_training.py,2022-07-20T18:34:09Z,"add tf32 control in base config, make sharding plan print cfg controlled"
github.com/lessw2020/transformer_framework,main_training.py,2022-07-20T16:26:05Z,"Merge pull request #5 from LinjianMa/main

Activation checkpointing support"
github.com/lessw2020/transformer_framework,main_training.py,2022-07-20T06:16:01Z,Activation checkpointing support
github.com/lessw2020/transformer_framework,main_training.py,2022-07-19T19:59:00Z,"updates to local_state_dict saving, model build prep notice"
github.com/lessw2020/transformer_framework,main_training.py,2022-07-19T19:36:08Z,"print running model name to confirm model, add training4.sh for 4 node (just sets nproc_node to 4 rather than risk checking in modified sh)"
github.com/lessw2020/transformer_framework,main_training.py,2022-07-19T18:04:14Z,Add regnet
github.com/lessw2020/transformer_framework,main_training.py,2022-07-18T04:36:10Z,Refactor main_training and add t5_config
github.com/lessw2020/transformer_framework,main_training.py,2022-07-15T02:37:46Z,add updated bfloat checker (remove distutuls)
github.com/lessw2020/transformer_framework,main_training.py,2022-07-12T17:14:14Z,update for 750M
github.com/lessw2020/transformer_framework,main_training.py,2022-07-10T00:09:39Z,add meta copyright in prep for tutorial (gpu_memory.py)
github.com/lessw2020/transformer_framework,main_training.py,2022-07-09T17:21:19Z,add 1B model
github.com/lessw2020/transformer_framework,main_training.py,2022-07-09T01:04:48Z,minor cleanup
github.com/lessw2020/transformer_framework,main_training.py,2022-07-09T00:54:11Z,update bf16 check to remove warning
github.com/lessw2020/transformer_framework,main_training.py,2022-07-09T00:14:36Z,revert to Adam from AdamW
github.com/lessw2020/transformer_framework,main_training.py,2022-07-08T23:26:21Z,"Merge pull request #2 from LinjianMa/regnet

Refactor model specific config out from main_training"
github.com/lessw2020/transformer_framework,main_training.py,2022-07-08T23:25:53Z,fix import
github.com/lessw2020/transformer_framework,main_training.py,2022-07-08T23:21:59Z,move to mem max entirely
github.com/lessw2020/transformer_framework,main_training.py,2022-07-08T23:13:52Z,Refactor config out from main_training and merge with upstream
github.com/lessw2020/transformer_framework,main_training.py,2022-07-08T23:12:17Z,improved memmax info with % display
github.com/lessw2020/transformer_framework,main_training.py,2022-07-08T22:54:21Z,updated mem maximizer class
github.com/lessw2020/transformer_framework,main_training.py,2022-07-08T21:00:54Z,start of memory maximizer object
github.com/lessw2020/transformer_framework,main_training.py,2022-07-08T04:05:19Z,update for config control over sharding
github.com/lessw2020/transformer_framework,main_training.py,2022-07-06T23:28:47Z,add backward prefetch to config
github.com/lessw2020/transformer_framework,main_training.py,2022-06-30T23:14:55Z,updates to model and opt save and loading
github.com/mshukor/eP-ALM,models/ast.py,2023-06-12T21:06:18Z,code release
github.com/arc144/siim-pneumothorax,See/Model_000_f00/segmentation_model.py,2019-09-07T15:35:41Z,Initial commit
github.com/arc144/siim-pneumothorax,See/Model_001_f00/segmentation_model.py,2019-09-07T15:35:41Z,Initial commit
github.com/arc144/siim-pneumothorax,See/Model_002_f00/segmentation_model.py,2019-09-07T15:35:41Z,Initial commit
github.com/epfml/pam,submodules/timm/tests/test_utils.py,2023-05-31T09:00:54Z,Public release
github.com/epfml/pam,submodules/timm/tests/test_models.py,2023-05-31T09:00:54Z,Public release
github.com/Equationliu/GA-Attack,utils/architectures.py,2022-01-06T06:44:09Z,Initial commit
github.com/Equationliu/GA-Attack,Competition/code/utils.py,2022-01-06T06:44:09Z,Initial commit
github.com/dodler/kgl,shopee/model.py,2021-06-10T06:24:06Z,miner
github.com/dodler/kgl,ranzcr/model.py,2021-01-11T07:54:13Z,ranzcr
github.com/dodler/kgl,cassava/model.py,2021-02-07T09:18:12Z,several experiments
github.com/dodler/kgl,cassava/model.py,2021-01-16T13:08:41Z,several configs
github.com/dodler/kgl,cassava/model.py,2020-12-28T20:01:34Z,cassava
github.com/dodler/kgl,cassava/model.py,2020-11-26T06:32:28Z,lyft
github.com/dodler/kgl,covid_det/cls_main.py,2021-06-20T08:14:23Z,miner
github.com/dodler/kgl,covid_det/cls_main.py,2021-06-10T06:24:06Z,miner
github.com/dodler/kgl,cassava/model_snap.py,2021-01-16T13:08:41Z,several configs
github.com/dodler/kgl,pretrain_medical/main.py,2021-06-10T06:24:06Z,miner
github.com/dodler/kgl,pretrain_medical/main.py,2021-02-07T09:18:12Z,several experiments
github.com/dodler/kgl,cassava/model_manifold_mixup.py,2021-02-07T09:18:12Z,several experiments
github.com/dodler/kgl,lyft_motion_prediction/models.py,2020-11-26T06:32:28Z,lyft
github.com/dodler/kgl,cassava/pazzle_mix/model_pazzle_mix.py,2021-02-12T16:43:12Z,several experiments
github.com/dodler/kgl,cassava/pazzle_mix/model_pazzle_mix.py,2021-02-07T09:18:12Z,several experiments
github.com/dodler/kgl,covid_det/test.py,2021-06-10T06:24:06Z,miner
github.com/hectorLop/Waste-Detector,deployment/classifier.py,2022-04-27T18:04:31Z,refactor: Cleaned some code
github.com/hectorLop/Waste-Detector,deployment/classifier.py,2022-02-15T19:58:38Z,feature: Image encoding and predictions
github.com/hectorLop/Waste-Detector,deployment/classifier.py,2022-02-14T19:58:18Z,feature: Deployment template
github.com/hectorLop/Waste-Detector,hugginface_space/classifier.py,2021-12-22T18:21:47Z,feature: Code to deploy on Hugginface Spaces
github.com/hectorLop/Waste-Detector,local_deployment/classifier.py,2022-07-26T11:01:36Z,refactor: Removed unused code and added README.md
github.com/hectorLop/Waste-Detector,local_deployment/classifier.py,2022-07-23T12:04:36Z,feature: First version of local deployment
github.com/hectorLop/Waste-Detector,waste_detector/classifier/model.py,2022-01-29T10:40:28Z,refactor: Fixing bugs
github.com/hectorLop/Waste-Detector,waste_detector/classifier/model.py,2022-01-24T19:11:28Z,refactor: Fixed classifier Model Versioning
github.com/hectorLop/Waste-Detector,waste_detector/classifier/model.py,2022-01-09T10:50:56Z,refactor: Refactor using flake8 and black
github.com/hectorLop/Waste-Detector,waste_detector/classifier/model.py,2021-12-14T18:16:24Z,feature: CustomEfficientNet classifier
github.com/hectorLop/Waste-Detector,waste_detector/classifier/sagemaker/model.py,2022-04-30T11:45:42Z,refactor: Removed commented code and homogeinized classifier checkpoint names
github.com/hectorLop/Waste-Detector,waste_detector/classifier/sagemaker/model.py,2022-02-03T19:26:12Z,feature: Sagemaker classifier scripts
github.com/MehmetAygun/demistfy_correspondence,backbone/vit.py,2022-07-10T18:10:05Z,first commit
github.com/MehmetAygun/demistfy_correspondence,backbone/transformer.py,2022-07-10T18:10:05Z,first commit
github.com/hammoudhasan/SynthCLIP,Training/models.py,2024-02-09T22:44:32Z,Add SynthCLIP training scripts
github.com/hammoudhasan/SynthCLIP,ImageGen/ldm/modules/midas/midas/vit.py,2024-02-09T00:58:26Z,Added ImageGen code and formatted files
github.com/maryam089/SDViT,domainbed/lib/utils.py,2022-06-17T20:22:10Z,domainbed
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-11-20T16:00:30Z,"timm to pytorch conversion for vit model fix (#26908)

* timm to pytorch conversion for vit model fix

* remove unecessary print statments

* Detect non-supported ViTs in transformers & better handle id2label mapping

* detect non supported hybrid resnet-vit models in conversion script

* remove check for overlap between cls token and pos embed"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-06-29T09:17:36Z,"Update old existing feature extractor references (#24552)

* Update old existing feature extractor references

* Typo

* Apply suggestions from code review

* Apply suggestions from code review

* Apply suggestions from code review

* Address comments from review - update 'feature extractor'
Co-authored by: Yih-Dar <2521628+ydshieh@users.noreply.github.com>"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-08-04T16:29:23Z,"Add BEiT (#12994)

* First pass

* Make conversion script work

* Improve conversion script

* Fix bug, conversion script working

* Improve conversion script, implement BEiTFeatureExtractor

* Make conversion script work based on URL

* Improve conversion script

* Add tests, add documentation

* Fix bug in conversion script

* Fix another bug

* Add support for converting masked image modeling model

* Add support for converting masked image modeling

* Fix bug

* Add print statement for debugging

* Fix another bug

* Make conversion script finally work for masked image modeling models

* Move id2label for datasets to JSON files on the hub

* Make sure id's are read in as integers

* Add integration tests

* Make style & quality

* Fix test, add BEiT to README

* Apply suggestions from @sgugger's review

* Apply suggestions from code review

* Make quality

* Replace nielsr by microsoft in tests, add docs

* Rename BEiT to Beit

* Minor fix

* Fix docs of BeitForMaskedImageModeling

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-04-12T22:07:10Z,"Add DeiT (PyTorch) (#11056)

* First draft of deit

* More improvements

* Remove DeiTTokenizerFast from init

* Conversion script works

* Add DeiT to ViT conversion script

* Add tests, add head model, add support for deit in vit conversion script

* Update model checkpoint names

* Update image_mean and image_std, set resample to bicubic

* Improve docs

* Docs improvements

* Add DeiTForImageClassificationWithTeacher to init

* Address comments by @sgugger

* Improve feature extractors

* Make fix-copies

* Minor fixes

* Address comments by @patil-suraj

* All models uploaded

* Fix tests

* Remove labels argument from DeiTForImageClassificationWithTeacher

* Fix-copies, style and quality

* Fix tests

* Fix typo

* Multiple docs improvements

* More docs fixes"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-04-01T15:16:05Z,"Add Vision Transformer and ViTFeatureExtractor (#10950)

* Squash all commits into one

* Update ViTFeatureExtractor to use image_utils instead of torchvision

* Remove torchvision and add Pillow

* Small docs improvement

* Address most comments by @sgugger

* Fix tests

* Clean up conversion script

* Pooler first draft

* Fix quality

* Improve conversion script

* Make style and quality

* Make fix-copies

* Minor docs improvements

* Should use fix-copies instead of manual handling

* Revert ""Should use fix-copies instead of manual handling""

This reverts commit fd4e591bce4496d41406425c82606a8fdaf8a50b.

* Place ViT in alphabetical order

Co-authored-by: Lysandre <lysandre.debut@reseau.eseo.fr>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-11-16T16:43:19Z,"[`Styling`] stylify using ruff (#27144)

* try to stylify using ruff

* might need to remove these changes?

* use ruf format andruff check

* use isinstance instead of type comparision

* use # fmt: skip

* use # fmt: skip

* nits

* soem styling changes

* update ci job

* nits isinstance

* more files update

* nits

* more nits

* small nits

* check and format

* revert wrong changes

* actually use formatter instead of checker

* nits

* well docbuilder is overwriting this commit

* revert notebook changes

* try to nuke docbuilder

* style

* fix feature exrtaction test

* remve `indent-width = 4`

* fixup

* more nits

* update the ruff version that we use

* style

* nuke docbuilder styling

* leve the print for detected changes

* nits

* Remove file I/O

Co-authored-by: charliermarsh
 <charlie.r.marsh@gmail.com>

* style

* nits

* revert notebook changes

* Add # fmt skip when possible

* Add # fmt skip when possible

* Fix

* More `  # fmt: skip` usage

* More `  # fmt: skip` usage

* More `  # fmt: skip` usage

* NIts

* more fixes

* fix tapas

* Another way to skip

* Recommended way

* Fix two more fiels

* Remove asynch
Remove asynch

---------

Co-authored-by: charliermarsh <charlie.r.marsh@gmail.com>"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-06-29T09:17:36Z,"Update old existing feature extractor references (#24552)

* Update old existing feature extractor references

* Typo

* Apply suggestions from code review

* Apply suggestions from code review

* Apply suggestions from code review

* Address comments from review - update 'feature extractor'
Co-authored by: Yih-Dar <2521628+ydshieh@users.noreply.github.com>"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-02-22T08:14:54Z,Apply ruff flake8-comprehensions (#21694)
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2022-05-12T20:25:55Z,"Black preview (#17217)

* Black preview

* Fixup too!

* Fix check copies

* Use the same version as the CI

* Bump black"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2022-04-07T19:58:00Z,"RegNet (#16188)

* base model done

* make style

* done

* added files

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Trigger doc build

* resolved conversations

* resolved conversations

* seer models

* minor changes

* minor changes

* make fixup

* glob variables

* minor changes

* fix copies

* config when possibile

* resolved conflicts

* resolved conflicts

* resolved conflicts

* CI

* conversion script for 10b param

* fixed for 10b model

* minor updates in the doc + make style

* removed unused code

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* removed unused code

* removed unused code

* updated modeling_utils from main

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <Sylvain.gugger@gmail.com>"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-06-29T09:17:36Z,"Update old existing feature extractor references (#24552)

* Update old existing feature extractor references

* Typo

* Apply suggestions from code review

* Apply suggestions from code review

* Apply suggestions from code review

* Address comments from review - update 'feature extractor'
Co-authored by: Yih-Dar <2521628+ydshieh@users.noreply.github.com>"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-02-22T08:14:54Z,Apply ruff flake8-comprehensions (#21694)
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-05-12T20:25:55Z,"Black preview (#17217)

* Black preview

* Fixup too!

* Fix check copies

* Use the same version as the CI

* Bump black"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-03-14T18:57:55Z,"[WIP] Resnet (#15770)

* first commit

* ResNet model correctly implemented.

basic modeling + weights conversion is done

removed unused doc

mdx file

doc and conversion script

added feature_extractor to auto

test

minor changes + style + quality

doc

test

Delete process.yml

A left over from my attempt of running circleci locally

* minor changes

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* new test format

* minor changes from conversations

* minor changes from conversations

* make style + quality

* readded the tests

* test + README

* minor changes from conversations

* error in README

* make fix-copies

* removed regression for classification head

* make quality

* fixed loss control flow

* fixed loss control flow

* resolved conversations

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* READMEs

* index.mdx

* minor changes

* updated tests and models

* unused import

* outputs

* Update docs/source/model_doc/resnet.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* added embeddings_size

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* conversation

* added push to hub

* test

* embedding_size

* make fix-copies

* resolved conversations

* CI

* changed organization

* minor changes

* CI

* minor changes

* conversations

* conversation

* doc

* tests

* removed unused docstring

* conversation

* removed unused outputs

* CI

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>
Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-06-29T09:17:36Z,"Update old existing feature extractor references (#24552)

* Update old existing feature extractor references

* Typo

* Apply suggestions from code review

* Apply suggestions from code review

* Apply suggestions from code review

* Address comments from review - update 'feature extractor'
Co-authored by: Yih-Dar <2521628+ydshieh@users.noreply.github.com>"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-08-04T16:29:23Z,"Add BEiT (#12994)

* First pass

* Make conversion script work

* Improve conversion script

* Fix bug, conversion script working

* Improve conversion script, implement BEiTFeatureExtractor

* Make conversion script work based on URL

* Improve conversion script

* Add tests, add documentation

* Fix bug in conversion script

* Fix another bug

* Add support for converting masked image modeling model

* Add support for converting masked image modeling

* Fix bug

* Add print statement for debugging

* Fix another bug

* Make conversion script finally work for masked image modeling models

* Move id2label for datasets to JSON files on the hub

* Make sure id's are read in as integers

* Add integration tests

* Make style & quality

* Fix test, add BEiT to README

* Apply suggestions from @sgugger's review

* Apply suggestions from code review

* Make quality

* Replace nielsr by microsoft in tests, add docs

* Rename BEiT to Beit

* Minor fix

* Fix docs of BeitForMaskedImageModeling

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-04-12T22:07:10Z,"Add DeiT (PyTorch) (#11056)

* First draft of deit

* More improvements

* Remove DeiTTokenizerFast from init

* Conversion script works

* Add DeiT to ViT conversion script

* Add tests, add head model, add support for deit in vit conversion script

* Update model checkpoint names

* Update image_mean and image_std, set resample to bicubic

* Improve docs

* Docs improvements

* Add DeiTForImageClassificationWithTeacher to init

* Address comments by @sgugger

* Improve feature extractors

* Make fix-copies

* Minor fixes

* Address comments by @patil-suraj

* All models uploaded

* Fix tests

* Remove labels argument from DeiTForImageClassificationWithTeacher

* Fix-copies, style and quality

* Fix tests

* Fix typo

* Multiple docs improvements

* More docs fixes"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-06-29T09:17:36Z,"Update old existing feature extractor references (#24552)

* Update old existing feature extractor references

* Typo

* Apply suggestions from code review

* Apply suggestions from code review

* Apply suggestions from code review

* Address comments from review - update 'feature extractor'
Co-authored by: Yih-Dar <2521628+ydshieh@users.noreply.github.com>"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-01-21T11:10:41Z,"Add Swin Transformer (#15085)

* Add all files

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Updates

* Apply suggestions from review

* Fix failing tests

* Update __init__.py

* Update configuration_swin.py

* Update auto_factory.py

* Fix pytests

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Fix tests and default checkpoint

* Fix Recursion error

* Code quality

* Remove copied from

* Update modeling_swin.py

* Code quality

* Update modeling_swin.py

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

* Fix feature extractor

* Fix code quality

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

* Update configuration_swin.py

* Update default checkpoint

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/model_doc/swin.mdx

Co-authored-by: Mishig Davaadorj <mishig.davaadorj@coloradocollege.edu>

* Update conversion script

* Reformat conversion script

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>
Co-authored-by: Mishig Davaadorj <mishig.davaadorj@coloradocollege.edu>"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-06-29T09:17:36Z,"Update old existing feature extractor references (#24552)

* Update old existing feature extractor references

* Typo

* Apply suggestions from code review

* Apply suggestions from code review

* Apply suggestions from code review

* Address comments from review - update 'feature extractor'
Co-authored by: Yih-Dar <2521628+ydshieh@users.noreply.github.com>"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-01-06T12:27:30Z,"fix levit timm conversion file (#20938)

* fix levit timm conversion file

* remove set_defaults"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2022-06-01T15:06:20Z,"Adding LeViT Model by Facebook (#17466)

* levit files

* levit tests

* weights script

* weights script

* update

* style fixes

* few minor corrections

* Added teacher model

* edit docs

* fix-copies

* style fixes

* pr error resolved

* Update README.md

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/index.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/__init__.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/__init__.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/configuration_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/configuration_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* suggested pr changes

* style fixes

* minor bug

* update

* minor doc edit

* style

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update tests/models/levit/test_modeling_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* residual layer readable

* style

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update tests/models/levit/test_feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* change checkpoints and style

* update

* minor changes

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/timm_backbone/modeling_timm_backbone.py,2023-11-01T15:58:35Z,"improving TimmBackbone to support FrozenBatchNorm2d (#27160)

* supporting freeze_batch_norm_2d

* supporting freeze_batch_norm_2d

* including unfreeze + separate into methods

* fix typo

* calling unfreeze

* lint

* Update src/transformers/models/timm_backbone/modeling_timm_backbone.py

Co-authored-by: amyeroberts <22614925+amyeroberts@users.noreply.github.com>

---------

Co-authored-by: Rafael Padilla <rafael.padilla@huggingface.co>
Co-authored-by: amyeroberts <22614925+amyeroberts@users.noreply.github.com>"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/timm_backbone/modeling_timm_backbone.py,2023-08-28T13:31:22Z,"Add type hints for pytorch models (final batch) (#25750)

* Add type hints for table_transformer

* Add type hints to Timesformer model

* Add type hints to Timm Backbone model

* Add type hints to TVLT family models

* Add type hints to Vivit family models

* Use the typing instance instead of the python builtin.

* Fix the `replace_return_docstrings` decorator for Vivit model

Co-authored-by: Matt <Rocketknight1@users.noreply.github.com>

---------

Co-authored-by: Matt <Rocketknight1@users.noreply.github.com>"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/timm_backbone/modeling_timm_backbone.py,2023-06-06T16:11:30Z,"Add TimmBackbone model (#22619)

* Add test_backbone for convnext

* Add TimmBackbone model

* Add check for backbone type

* Tidying up - config checks

* Update convnextv2

* Tidy up

* Fix indices & clearer comment

* Exceptions for config checks

* Correclty update config for tests

* Safer imports

* Safer safer imports

* Fix where decorators go

* Update import logic and backbone tests

* More import fixes

* Fixup

* Only import all_models if torch available

* Fix kwarg updates in from_pretrained & main rebase

* Tidy up

* Add tests for AutoBackbone

* Tidy up

* Fix import error

* Fix up

* Install nattan in doc_test_job

* Revert back to setting self._out_xxx directly

* Bug fix - out_indices mapping from out_features

* Fix tests

* Dont accept output_loading_info for Timm models

* Set out_xxx and don't remap

* Use smaller checkpoint for test

* Don't remap timm indices - check out_indices based on stage names

* Skip test as it's n/a

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Cleaner imports / spelling is hard

---------

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-06-29T09:17:36Z,"Update old existing feature extractor references (#24552)

* Update old existing feature extractor references

* Typo

* Apply suggestions from code review

* Apply suggestions from code review

* Apply suggestions from code review

* Address comments from review - update 'feature extractor'
Co-authored by: Yih-Dar <2521628+ydshieh@users.noreply.github.com>"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2022-07-27T15:14:47Z,"Add swin transformer v2 (#17469)

* Add files generated using transformer-cli add-new-model-like command

* Add changes for swinv2 attention and forward method

* Add fixes

* Add modifications for weight conversion and remaining args in swin model

* Add changes for patchmerging

* Add changes for SwinV2selfattention

* Update conversion script

* Add final fixes for the swin_v2 model

* Add changes for conversion script for pretrained window size case

* Add pretrained window size value from config in SwinV2Encoder class

* Make fixup

* Add swinv2 to models_not_in_readme to utils/check_copies.py

* Modify Swinv2v2 to Swin Transformer V2

* Remove copied from, to run make fixup command

* Add updates to swinv2tf from main branch

* Add pretrained_window_size to config, to make tests pass

* Add modified weights from nandwalritik profile for swinv2

* Update model weights from swinv2 from nandwalritik profile

* Add fix for build_pr_documentation CI fix

* Add fixes for weight conversion

* Add change to make input with padding work

* Add fixes for test cases

* Add few changes from swin to swinv2 to pass test cases

* Remove tests for tensorflow as swinv2 for TF is not added yet

* Overide test_pt_tf_model_equivalence function as TF implementation for swinv2 is not added yet

* Add modeling_tf_swinv2 to _ignore_modules as test file is removed for this one right now.

* Update docs url for swinv2 in README.md

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Undo changes for check_repo

* Update url in readme.md

* Remove overrided function to test pt_tf_model_equivalence

* Remove TF model imports for Swinv2 as its not implemented in this PR

* Add changes for index.mdx

* Add swinv2 papers link,abstract and contributors details

* Rename cpb_mlp to continous_position_bias_mlp

* Add tips for swinv2 model

* Update src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Fix indentation for docstring example in src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update import order in src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add copyright statements in weights conversion script.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Remove Swinv2 from models_not_in_readme

* Reformat code

* Remove TF implementation file for swinv2

* Update start docstring.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add changes for docstring

* Update orgname for weights to microsoft

* Remove to_2tuple function

* Add copied from statements wherever applicable

* Add copied from to Swinv2ForMaskedImageModelling class

* Reformat code.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add unittest.skip(with reason.) for test_inputs_embeds test case.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add updates for test_modeling_swinv2.py

* Add @unittest.skip() annotation for clarity to create_and_test_config_common_properties function

* Add continuous_position_bias_mlp parameter to conversion script

* Add test for testing masked_image_modelling for swinv2

* Update Swinv2 to Swin Transformer v2 in docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update Swinv2 to Swin Transformer v2 in docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add suggested changes

* Add copied from to forward methods of Swinv2Stage and Swinv2Encoder

* Add push_to_hub flag to weight conversion script

* Change order or Swinv2DropPath class

* Add id2label mapping for imagenet 21k

* Add updated url for SwinV2 functions and classes used in implementation

* Update input_feature dimensions format, mentioned in comments.

Co-authored-by: Alara Dirik <8944735+alaradirik@users.noreply.github.com>

* Add suggested changes for modeling_swin2.py

* Update docs

* Remove create_and_test_config_common_properties function, as test_model_common_attributes is sufficient.

* Fix indentation.

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Add changes for making Nit objects in code style

* Add suggested changes

* Add suggested changes for test_modelling_swinv2

* make fix-copies

* Update docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Alara Dirik <8944735+alaradirik@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/kssteven418/SqueezeLLM-gradients,src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2022-12-07T10:03:39Z,"Add BiT + ViT hybrid (#20550)

* First draft

* More improvements

* Add backbone, first draft of ViT hybrid

* Add AutoBackbone

* More improvements

* Fix bug

* More improvements

* More improvements

* Convert ViT-hybrid

* More improvements

* add patch bit

* Fix style

* Improve code

* cleaned v1

* more cleaning

* more refactoring

* Improve models, add tests

* Add docs and tests

* Make more tests pass

* Improve default backbone config

* Update model_type

* Fix more tests

* Add more copied from statements

* More improvements

* Add push to hub to conversion scripts

* clean

* more cleanup

* clean

* replace to

* fix

* Update src/transformers/models/bit/configuration_bit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* fix base model prefix

* more cleaning

* get rid of stem

* clean

* replace flag

* Update src/transformers/models/bit/configuration_bit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/bit/configuration_bit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* add check

* another check

* fix for hybrid vit

* final fix

* update config

* fix class name

* fix `make fix-copies`

* remove `use_activation`

* Update src/transformers/models/bit/configuration_bit.py

* rm unneeded file

* Add BiT image processor

* rm unneeded file

* add doc

* Add image processor to conversion script

* Add ViTHybrid image processor

* Add resources

* Move bit to correct position

* Fix auto mapping

* Rename hybrid to Hybrid

* Fix name in toctree

* Fix READMEs'

* Improve config

* Simplify GroupNormActivation layer

* fix test + make style

* Improve config

* Apply suggestions from code review

Co-authored-by: Patrick von Platen <patrick.v.platen@gmail.com>

* remove comment

* remove comment

* replace

* replace

* remove all conv_layer

* refactor norm_layer

* revert x

* add copied from

* last changes + integration tests

* make fixup

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* fix name

* fix message

* remove assert and refactor

* refactor + make fixup

* refactor - add  + sfety checker

* fix docstring + checkpoint names

* fix merge issues

* fix function name

* fix copies

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* fix model checkpoint

* fix doctest output

* vit name on doc

* fix name on doc

* fix small nits

* fixed integration tests

* final changes - slow tests pass

Co-authored-by: Niels Rogge <nielsrogge@Nielss-MacBook-Pro.local>
Co-authored-by: younesbelkada <younesbelkada@gmail.com>
Co-authored-by: Younes Belkada <49240599+younesbelkada@users.noreply.github.com>
Co-authored-by: Patrick von Platen <patrick.v.platen@gmail.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/saifullah3396/docxclassifier,src/das/models/common/utils.py,2022-02-23T18:13:53Z,Complete commit.
github.com/Choiuijin1125/bclef2022,src/models/timmsed.py,2022-05-17T01:56:19Z,update commit
github.com/Choiuijin1125/bclef2022,src/models/timmsed.py,2022-05-16T19:36:36Z,update timmsed
github.com/Choiuijin1125/bclef2022,src/models/timmsed.py,2022-05-16T10:04:14Z,update conformer-part
github.com/Choiuijin1125/bclef2022,src/models/timmsed.py,2022-05-16T09:27:13Z,update configs
github.com/Choiuijin1125/bclef2022,src/models/timmsed.py,2022-05-13T07:29:04Z,Init commit
github.com/bamps53/kaggle-autonomous-driving2019,models/centernet.py,2020-01-22T02:23:47Z,format code
github.com/bamps53/kaggle-autonomous-driving2019,models/centernet.py,2020-01-22T02:13:20Z,init
github.com/amaarora/imagenette-ddp,src/train_ddp.py,2021-07-21T08:27:10Z,Update config
github.com/amaarora/imagenette-ddp,src/train_ddp.py,2021-07-21T08:21:38Z,Update src code
github.com/amaarora/imagenette-ddp,src/train_ddp.py,2021-04-25T23:05:31Z,Add train DDP and Accelerate scripts on ImageNette
github.com/amaarora/imagenette-ddp,src/train_accelerate.py,2021-07-21T08:27:10Z,Update config
github.com/amaarora/imagenette-ddp,src/train_accelerate.py,2021-07-21T08:21:38Z,Update src code
github.com/amaarora/imagenette-ddp,src/train_accelerate.py,2021-04-26T03:26:31Z,Remove extra code
github.com/amaarora/imagenette-ddp,src/train_accelerate.py,2021-04-25T23:05:31Z,Add train DDP and Accelerate scripts on ImageNette
github.com/kenjiqq/aesthetics-scorer,convnext_scorer/model.py,2023-04-22T00:39:44Z,add convnext models
github.com/kenjiqq/aesthetics-scorer,convnext_scorer/model.py,2023-04-16T02:09:30Z,tmp
github.com/RobertTLange/algonauts-2021,feature_extraction/timm_models.py,2021-06-19T09:49:33Z,Update ImageNet Validation Pipeline
github.com/RobertTLange/algonauts-2021,feature_extraction/timm_models.py,2021-05-30T06:58:56Z,`EncoderFitter` Infrastructure
github.com/RobertTLange/algonauts-2021,feature_extraction/timm_models.py,2021-05-26T18:45:04Z,JAX LS
github.com/RobertTLange/algonauts-2021,feature_extraction/timm_models.py,2021-05-26T17:45:39Z,timm model import
github.com/tianfr/MonoNeRF,train/utils/midas/vit.py,2023-09-25T11:22:37Z,MonoNeRF codes initialization
github.com/aurooj/WSG-VQA-VLTransformers,src/lxrt/vit_explore_code.py,2022-07-19T13:31:47Z,Add files via upload
github.com/aurooj/WSG-VQA-VLTransformers,src/lxrt/modeling_capsbert.py,2022-07-19T13:31:47Z,Add files via upload
github.com/jw9730/lps,src/model/backbone.py,2023-11-07T04:18:38Z,Code release
github.com/caodoanh2001/upar_challenge,models/backbone/models.py,2023-11-07T03:02:10Z,update
github.com/caodoanh2001/upar_challenge,models/backbone/models.py,2023-10-27T08:39:55Z,update
github.com/caodoanh2001/upar_challenge,models/backbone/models.py,2023-10-27T08:37:15Z,update
github.com/caodoanh2001/upar_challenge,models/backbone/models.py,2023-10-27T08:33:29Z,update
github.com/caodoanh2001/upar_challenge,models/backbone/swin_transformer.py,2023-11-07T03:02:10Z,update
github.com/caodoanh2001/upar_challenge,models/backbone/swin_transformer.py,2023-10-27T08:39:55Z,update
github.com/caodoanh2001/upar_challenge,models/backbone/swin_transformer.py,2023-10-27T08:37:15Z,update
github.com/caodoanh2001/upar_challenge,models/backbone/swin_transformer.py,2023-10-27T08:33:29Z,update
github.com/caodoanh2001/upar_challenge,models/backbone/swin_transformer.py,2023-10-16T08:55:18Z,update
github.com/caodoanh2001/upar_challenge,models/backbone/swin_transformer2.py,2023-11-07T03:02:10Z,update
github.com/caodoanh2001/upar_challenge,models/backbone/swin_transformer2.py,2023-10-27T08:39:55Z,update
github.com/caodoanh2001/upar_challenge,models/backbone/swin_transformer2.py,2023-10-27T08:37:15Z,update
github.com/caodoanh2001/upar_challenge,models/backbone/swin_transformer2.py,2023-10-27T08:33:29Z,update
github.com/MingtaoGuo/AnimateAnyone_unofficial,annotator/midas/midas/vit.py,2023-12-16T03:42:11Z,Add files via upload
github.com/MingtaoGuo/AnimateAnyone_unofficial,ldm/modules/midas/midas/vit.py,2023-12-16T03:35:29Z,Add files via upload
github.com/McGill-NLP/retriever-lm-reasoning,realm/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-12-28T22:29:33Z,added code for realm
github.com/McGill-NLP/retriever-lm-reasoning,realm/transformers/models/regnet/convert_regnet_to_pytorch.py,2022-12-28T22:29:33Z,added code for realm
github.com/McGill-NLP/retriever-lm-reasoning,realm/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-12-28T22:29:33Z,added code for realm
github.com/McGill-NLP/retriever-lm-reasoning,realm/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-12-28T22:29:33Z,added code for realm
github.com/McGill-NLP/retriever-lm-reasoning,realm/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-12-28T22:29:33Z,added code for realm
github.com/mamonraab/Data-efficient-video-transformer,menovideo/menovideo.py,2021-10-14T07:28:12Z,readme changing
github.com/mamonraab/Data-efficient-video-transformer,menovideo/menovideo.py,2021-10-11T21:38:55Z,fixing cpu gpu load and complate jupyter examples
github.com/mamonraab/Data-efficient-video-transformer,menovideo/menovideo.py,2021-10-11T18:11:14Z,adding main files and packages
github.com/jonathsch/lidar-synthesis,lidar_synthesis/agents/team_code_transfuser/latentTF.py,2023-05-26T13:20:24Z,Initial commit
github.com/jonathsch/lidar-synthesis,lidar_synthesis/agents/team_code_transfuser/transfuser.py,2023-05-26T13:20:24Z,Initial commit
github.com/jonathsch/lidar-synthesis,lidar_synthesis/agents/team_code_transfuser/late_fusion.py,2023-05-26T13:20:24Z,Initial commit
github.com/jonathsch/lidar-synthesis,lidar_synthesis/agents/team_code_transfuser/geometric_fusion.py,2023-05-26T13:20:24Z,Initial commit
github.com/Vastai/VastModelZOO,classification/tools/cls_mode_hub.py,2023-01-13T10:31:54Z,update pre-commit
github.com/Vastai/VastModelZOO,classification/tools/cls_mode_hub.py,2022-12-29T11:29:54Z,refactor: update resnet code.
github.com/Vastai/VastModelZOO,classification/common/utils/export_timm_torchvision_model.py,2023-04-12T11:28:04Z,update:cls
github.com/RUCKBReasoning/GLM-Dialog,docker/SwissArmyTransformer/examples/cait/config/cait_config.py,2023-02-18T08:08:50Z,update SubModule SwissArmyTransformer
github.com/RUCKBReasoning/GLM-Dialog,docker/SwissArmyTransformer/examples/vit/config/vit_base_config.py,2023-02-18T08:08:50Z,update SubModule SwissArmyTransformer
github.com/RUCKBReasoning/GLM-Dialog,docker/SwissArmyTransformer/examples/deit/config/deit_tiny_config.py,2023-02-18T08:08:50Z,update SubModule SwissArmyTransformer
github.com/RUCKBReasoning/GLM-Dialog,docker/SwissArmyTransformer/examples/deit/config/deit_base_config.py,2023-02-18T08:08:50Z,update SubModule SwissArmyTransformer
github.com/RUCKBReasoning/GLM-Dialog,docker/SwissArmyTransformer/examples/deit/config/deit_small_config.py,2023-02-18T08:08:50Z,update SubModule SwissArmyTransformer
github.com/albumentations-team/autoalbument-benchmarks,lib/builders.py,2021-01-12T11:21:43Z,Init
github.com/edornd/mmflood,floods/models/__init__.py,2022-01-28T14:06:41Z,Fix test output + otsu baseline notebook
github.com/edornd/mmflood,floods/models/__init__.py,2022-01-14T08:29:17Z,Fix IoU and F1 for background and foreground
github.com/edornd/mmflood,floods/models/__init__.py,2022-01-11T17:46:27Z,Add compatibility with RGB
github.com/edornd/mmflood,floods/models/__init__.py,2022-01-11T16:39:32Z,"Add RGB preproc, add different LRs for encoder and decoder"
github.com/edornd/mmflood,floods/models/__init__.py,2022-01-10T15:06:04Z,Fix test + replaced func with torch
github.com/edornd/mmflood,floods/models/__init__.py,2021-12-20T09:04:32Z,Update with modular implementations of baseline architectures
github.com/edornd/mmflood,floods/models/__init__.py,2021-11-16T18:03:18Z,Bulk commit with template
github.com/laoniandisko/Kaggle-birdCLEF2023-finished,zoo/last_year.py,2023-05-30T06:14:20Z,first
github.com/laoniandisko/Kaggle-birdCLEF2023-finished,zoo/classifiers.py,2023-05-30T06:14:20Z,first
github.com/alefiury/Audio-Tagging-Single-Attention-CNN,model.py,2022-08-23T19:37:59Z,Hydra removed
github.com/alefiury/Audio-Tagging-Single-Attention-CNN,model.py,2021-10-06T17:13:21Z,Update model.py
github.com/alefiury/Audio-Tagging-Single-Attention-CNN,model.py,2021-09-24T18:24:18Z,First Commit
github.com/HyoKong/DreamDrone,midas/backbones/vit.py,2023-12-12T17:18:04Z,Add files via upload
github.com/HyoKong/DreamDrone,midas/backbones/beit.py,2023-12-12T17:18:04Z,Add files via upload
github.com/HyoKong/DreamDrone,midas/backbones/swin.py,2023-12-12T17:18:04Z,Add files via upload
github.com/HyoKong/DreamDrone,midas/backbones/levit.py,2023-12-12T17:18:04Z,Add files via upload
github.com/HyoKong/DreamDrone,midas/backbones/swin2.py,2023-12-12T17:18:04Z,Add files via upload
github.com/HyoKong/DreamDrone,midas/backbones/next_vit.py,2023-12-12T17:18:04Z,Add files via upload
github.com/RunpeiDong/ACT,models/dvae.py,2022-12-20T03:27:46Z,Init commit
github.com/tyamaguchi17/kaggle-happywhale-1st-place-solution-charmq,src/nn/backbone.py,2022-05-24T14:13:09Z,first commit
github.com/roatienza/agmax,features/regnet.py,2021-10-20T12:29:32Z,AgMax code
github.com/roatienza/agmax,features/efficientnet.py,2021-10-20T12:29:32Z,AgMax code
github.com/Zongwei97/XMSNet,Code/lib/model_pvt.py,2023-09-15T16:20:08Z,Add files via upload
github.com/ragavsachdeva/CYWS-3D,modules/model.py,2023-08-28T08:01:09Z,added code + inference script
github.com/siyi-wind/AViT,Models/Transformer/AdapterFormer.py,2023-12-15T15:13:10Z,add model weights
github.com/siyi-wind/AViT,Models/Transformer/AdapterFormer.py,2023-07-26T02:03:18Z,one full version
github.com/siyi-wind/AViT,Models/Transformer/Swin_adapters.py,2023-12-15T15:13:10Z,add model weights
github.com/siyi-wind/AViT,Models/Transformer/Swin_adapters.py,2023-07-26T02:03:18Z,one full version
github.com/POSTECH-CVLab/NeRF-Downstream,co3d_2d/src/model/models.py,2023-01-21T15:24:00Z,pre-release
github.com/SALT-NLP/Efficient_Unlearning,src/models/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-10-18T22:43:58Z,update
github.com/SALT-NLP/Efficient_Unlearning,src/models/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-10-18T22:43:58Z,update
github.com/SALT-NLP/Efficient_Unlearning,src/models/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-10-18T22:43:58Z,update
github.com/SALT-NLP/Efficient_Unlearning,src/models/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-10-18T22:43:58Z,update
github.com/SALT-NLP/Efficient_Unlearning,src/models/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-10-18T22:43:58Z,update
github.com/SALT-NLP/Efficient_Unlearning,src/models/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-10-18T22:43:58Z,update
github.com/YanNeu/spurious_imagenet,utils/get_models.py,2023-08-22T12:03:07Z,remove old imports
github.com/YanNeu/spurious_imagenet,utils/get_models.py,2023-08-21T09:26:17Z,add spufix
github.com/YanNeu/spurious_imagenet,utils/get_models.py,2022-12-22T10:33:23Z,Add code and dataset
github.com/YanNeu/spurious_imagenet,dataset/spurious_score.py,2023-08-22T12:03:07Z,remove old imports
github.com/YanNeu/spurious_imagenet,dataset/spurious_score.py,2023-08-20T15:34:28Z,update evaluation
github.com/YanNeu/spurious_imagenet,dataset/spurious_score.py,2023-08-06T16:07:05Z,update evaluation
github.com/YanNeu/spurious_imagenet,dataset/spurious_score.py,2022-12-22T10:33:23Z,Add code and dataset
github.com/YijinHuang/pytorch-classification,modules/builder.py,2022-10-25T02:28:32Z,fix a bug in evaluation under the DDP mode
github.com/YijinHuang/pytorch-classification,modules/builder.py,2022-10-18T21:23:51Z,support DDP and timm
github.com/YijinHuang/pytorch-classification,modules/builder.py,2022-04-18T01:40:06Z,1. transfer from torchvision to timm; 2. support ViT; 3. support adamw; 4. support multiple input channels
github.com/YijinHuang/pytorch-classification,modules/builder.py,2021-06-29T02:17:08Z,1. refactor code; 2. use yaml file as config file and support for specifying config file in the console; 3. support data augmentation operations adjustment in config file; 4. remove customized warpping of pytorch models
github.com/TRT2022/ControlNet_TensorRT,annotator/midas/midas/vit.py,2023-08-16T08:54:00Z,controlnet trt
github.com/TRT2022/ControlNet_TensorRT,ldm/modules/midas/midas/vit.py,2023-08-16T08:54:00Z,controlnet trt
github.com/inspire-group/DP-RandP,tan/src/models/prepare_models.py,2023-06-12T03:32:39Z,Initial commit
github.com/inspire-group/DP-RandP,tan/src/utils/test_vote.py,2023-06-12T03:32:39Z,Initial commit
github.com/yeongjoonJu/NeuroInspect,utils/model_utils.py,2023-07-19T05:42:05Z,init repo
github.com/yeongjoonJu/NeuroInspect,exp_spurious/train.py,2023-10-10T12:55:54Z,update spurious experiments
github.com/yeongjoonJu/NeuroInspect,exp_spurious/evaluate.py,2023-10-10T12:55:54Z,update spurious experiments
github.com/yeongjoonJu/NeuroInspect,exp_spurious/evaluate_cce.py,2023-10-10T12:55:54Z,update spurious experiments
github.com/yeongjoonJu/NeuroInspect,train_test_classifier.py,2023-10-10T11:40:04Z,init second version
github.com/yeongjoonJu/NeuroInspect,train_test_classifier.py,2023-09-07T01:56:16Z,add core relevance score
github.com/yeongjoonJu/NeuroInspect,train_test_classifier.py,2023-07-19T05:42:05Z,init repo
github.com/zjukg/KGTransformer,transformers_local/models/vit/convert_vit_timm_to_pytorch.py,2023-01-26T06:33:42Z,data and code
github.com/zjukg/KGTransformer,transformers_local/models/deit/convert_deit_timm_to_pytorch.py,2023-01-26T06:33:42Z,data and code
github.com/zjukg/KGTransformer,transformers_local/models/swin/convert_swin_timm_to_pytorch.py,2023-01-26T06:33:42Z,data and code
github.com/tubo213/signate_technopro,techno/src/preprocess.py,2022-01-06T06:04:29Z,load_configをutilsに移動
github.com/tubo213/signate_technopro,techno/src/preprocess.py,2022-01-04T14:58:08Z,modified img_hash
github.com/tubo213/signate_technopro,techno/src/preprocess.py,2022-01-04T13:24:15Z,first commit
github.com/gyhandy/Channel-wise-Lightweight-Reprogramming,network/model.py,2023-07-28T00:08:38Z,init
github.com/lianqing11/mvc_monodet,software/mmseg/mmseg/models/backbones/timm_backbone.py,2022-08-18T00:24:34Z,first init and add readme
github.com/LightChaser666/RegionDCL,model/resnet.py,2023-11-17T12:36:49Z,Release NYC & Singapore raw/projected dataset
github.com/LightChaser666/RegionDCL,model/resnet.py,2022-10-16T13:39:17Z,Initial commit
github.com/loeweX/RotatingFeatures,codebase/utils/model_utils.py,2023-09-11T07:19:13Z,code upload
github.com/FirasGit/lsmt,classification/models/lsmt.py,2023-06-19T15:30:57Z,Paper ready version
github.com/Happenmass/ControlNet-for-SDXL,annotator/midas/midas/vit.py,2023-08-11T02:55:29Z,add init test file
github.com/Happenmass/ControlNet-for-SDXL,ldm/modules/midas/midas/vit.py,2023-08-11T02:55:29Z,add init test file
github.com/hbchen121/AICITY2022_Track2_SSM,models/resnest.py,2022-04-14T00:36:11Z,.
github.com/Lee-Gihun/MEDIAR,segmentation_models_pytorch/encoders/timm_universal.py,2022-11-17T04:16:34Z,Fix - smp packagle error fixed
github.com/Lee-Gihun/MEDIAR,segmentation_models_pytorch/encoders/timm_universal.py,2022-11-16T10:33:34Z,Refactor - Core pipeline now works
github.com/Lee-Gihun/MEDIAR,segmentation_models_pytorch/encoders/timm_universal.py,2022-11-16T05:37:21Z,Refactor - Overall code structures
github.com/Lee-Gihun/MEDIAR,segmentation_models_pytorch/encoders/timm_mobilenetv3.py,2022-11-17T04:16:34Z,Fix - smp packagle error fixed
github.com/Lee-Gihun/MEDIAR,segmentation_models_pytorch/encoders/timm_mobilenetv3.py,2022-11-16T10:33:34Z,Refactor - Core pipeline now works
github.com/Lee-Gihun/MEDIAR,segmentation_models_pytorch/encoders/timm_mobilenetv3.py,2022-11-16T05:37:21Z,Refactor - Overall code structures
github.com/michalwols/yann,examples/benchmark.py,2022-07-19T14:42:22Z,Training improvements
github.com/google-research/preprocessor-aware-black-box-attack,attack_prep/utils/model.py,2022-11-29T19:21:25Z,Simplify script. Documentation. Extraction attack.
github.com/google-research/preprocessor-aware-black-box-attack,attack_prep/utils/model.py,2022-11-23T21:52:10Z,Refactor
github.com/google-research/preprocessor-aware-black-box-attack,attack_prep/utils/model.py,2022-11-21T07:03:35Z,Refactor package and add draft extraction attack.
github.com/Mehrdad-Noori/TFS-ViT_Token-level_Feature_Stylization,domainbed/lib/utils.py,2023-02-27T22:15:13Z,Add files via upload
github.com/dataplayer12/darklight,darklight/trainer/trainer.py,2023-05-09T16:26:19Z,support for training only with teacher and without labels
github.com/dataplayer12/darklight,darklight/trainer/trainer.py,2022-10-15T13:31:18Z,add multi-GPU support and correct timer
github.com/dataplayer12/darklight,darklight/trainer/trainer.py,2022-09-12T14:24:53Z,relatice import of trtengine and losses
github.com/dataplayer12/darklight,darklight/trainer/trainer.py,2022-09-11T16:53:44Z,import in modules init files
github.com/dataplayer12/darklight,darklight/trainer/trainer.py,2022-09-10T16:49:18Z,reorganized into modules
github.com/layumi/U_turn,model.py,2022-07-13T10:54:11Z,first commit
github.com/mbaradad/depth_prompt,dpt/dpt/vit.py,2023-06-08T20:59:32Z,Added baselines
github.com/mbaradad/depth_prompt,baselines/omnidata_main/omnidata_tools/torch/modules/midas/vit.py,2023-06-08T20:59:32Z,Added baselines
github.com/sayakpaul/swin-transformers-tf,convert.py,2022-05-09T01:28:05Z,feat: better type annotation for complex returns.
github.com/sayakpaul/swin-transformers-tf,convert.py,2022-05-08T13:55:55Z,add: conversion utilities.
github.com/nis-research/nn-frequency-shortcuts,train.py,2023-07-19T19:01:41Z,update
github.com/nis-research/nn-frequency-shortcuts,train.py,2023-07-19T18:31:23Z,update
github.com/nis-research/nn-frequency-shortcuts,train.py,2023-07-19T14:05:24Z,update
github.com/nis-research/nn-frequency-shortcuts,train.py,2023-07-19T11:59:15Z,update
github.com/nis-research/nn-frequency-shortcuts,train.py,2023-07-19T09:43:22Z,update
github.com/nis-research/nn-frequency-shortcuts,train.py,2023-07-19T09:01:18Z,update
github.com/nis-research/nn-frequency-shortcuts,train.py,2023-07-19T08:04:01Z,update
github.com/nis-research/nn-frequency-shortcuts,train.py,2023-07-19T07:09:40Z,update
github.com/zugexiaodui/torch_flops,example1.py,2024-01-20T05:29:04Z,v0.3.4: fix import error; print time and memory; support max_memory_allocated
github.com/zugexiaodui/torch_flops,example1.py,2024-01-19T04:15:10Z,v0.3.1: add support for  GPU memory usage
github.com/zugexiaodui/torch_flops,example1.py,2024-01-18T09:28:42Z,v0.2.1: add execution time
github.com/zugexiaodui/torch_flops,example1.py,2023-11-28T07:47:28Z,"add an example for ViT and ResNet, and update README; add sub, div and adaptive_avg ops"
github.com/pyinstaller/pyinstaller-hooks-contrib,src/_pyinstaller_hooks_contrib/tests/test_deep_learning.py,2024-01-18T21:40:36Z,"hooks: add hook for fairscale

Add hook for `fairscale` to collect its source .py files for
torchscript/JIT.

Add a basic import test that demonstrates the need for that."
github.com/pyinstaller/pyinstaller-hooks-contrib,src/_pyinstaller_hooks_contrib/tests/test_deep_learning.py,2023-12-23T13:37:54Z,"tests: add multiprocessing.freeze_support() call to lightning test

When running the `test_lightning_mnist_autoencoder` under arm64
macOS, `multiprocessing` seems to be activated at some point,
and the test gets stuck due to lack of
`multiprocessing.freeze_support` call."
github.com/pyinstaller/pyinstaller-hooks-contrib,src/_pyinstaller_hooks_contrib/tests/test_deep_learning.py,2023-12-23T13:37:54Z,"tests: add a basic test for Hugging Face accelerate

Add basic test for Hugging Face `accelerate`; demonstrates that
for the tested subset of functionality, no hook is necessary."
github.com/pyinstaller/pyinstaller-hooks-contrib,src/_pyinstaller_hooks_contrib/tests/test_deep_learning.py,2023-12-23T13:37:54Z,"hooks: add hook for Hugging Face datasets

Add hook for `datasets` to collect its source .py files for
torchscript/JIT.

Add a basic dataset loading test that demonstrates the need for that."
github.com/pyinstaller/pyinstaller-hooks-contrib,src/_pyinstaller_hooks_contrib/tests/test_deep_learning.py,2023-12-23T13:37:54Z,"hooks: add hook for detectron2

Add hook for `detectron` to collect its source .py files for
torchscript/JIT.

Add a basic import test that demonstrates the need for that."
github.com/pyinstaller/pyinstaller-hooks-contrib,src/_pyinstaller_hooks_contrib/tests/test_deep_learning.py,2023-12-23T13:37:54Z,"hooks: add hook for fvcore.nn

Add hook for `fvcore.nn` to collect its source .py files for
torchscript/JIT.

Add a basic import test that demonstrates the need for that."
github.com/pyinstaller/pyinstaller-hooks-contrib,src/_pyinstaller_hooks_contrib/tests/test_deep_learning.py,2023-12-23T13:37:54Z,"tests: add test for gpytorch

Add a basic test for GPyTorch, based on their ""Simple GP Regression""
example."
github.com/pyinstaller/pyinstaller-hooks-contrib,src/_pyinstaller_hooks_contrib/tests/test_deep_learning.py,2023-12-23T13:37:54Z,"hooks: add hook for linear_operator

Add hook and basic test for `linear_operator`. The package uses
torchscript/JIT, so we need to collect its source .py files."
github.com/pyinstaller/pyinstaller-hooks-contrib,src/_pyinstaller_hooks_contrib/tests/test_deep_learning.py,2023-12-23T13:37:54Z,"hooks: add hooks for bitsandbytes and triton

Add hooks for `bitsandbytes`, and its dependency `triton`. Both
packages have dynamically-loaded extension libraries, and both
require collection of source .py files for (`triton`'s) JIT module.

With `triton`, some of the submodules need to be collected only as
source .py files (no PYZ), because the code naively tries to read
the files pointed to by `__file__` attribute under assumption that
they are source .py files. So we must not collect these modules
into the PYZ."
github.com/pyinstaller/pyinstaller-hooks-contrib,src/_pyinstaller_hooks_contrib/tests/test_deep_learning.py,2023-12-23T13:37:54Z,"tests: add test for lightning

Add test for `lightning`, based on their ""Getting started"" example
with autoencoder trained on MNIST dataset. Requires `torchivsion`
for dataset."
github.com/pyinstaller/pyinstaller-hooks-contrib,src/_pyinstaller_hooks_contrib/tests/test_deep_learning.py,2023-12-23T13:37:54Z,"hooks: add hook for timm (Hugging face torch image models)

Add hook for timm, which ensures that the package's source .py
files are collected, as they are required for TorchScript.

Add a basic model listing and creation test."
github.com/pyinstaller/pyinstaller-hooks-contrib,src/_pyinstaller_hooks_contrib/tests/test_deep_learning.py,2023-12-23T13:37:54Z,"hooks: add a hook for fastai

Add a hook for fastai, which ensures that the package's source .py
files are collected, as they are required for TorchScript.

Add a test based on the ""building models from tabular data"" example
from https://docs.fast.ai/quick_start.html, which demonstrates
the need for the source .py files."
github.com/pyinstaller/pyinstaller-hooks-contrib,src/_pyinstaller_hooks_contrib/tests/test_deep_learning.py,2023-12-23T13:37:54Z,"tests: add tests for transformers package

Add a basic `transformers` pipeline test. Add a basic import test
for `transformers.DebertaModel`, which shows that we need to collect
source .py files for TorchScript."
github.com/TIGER-AI-Lab/ImagenHub,src/imagen_hub/pipelines/controlnet/annotator/midas/midas/vit.py,2023-10-20T00:35:15Z,release 0.1.0
github.com/TIGER-AI-Lab/ImagenHub,src/imagen_hub/pipelines/unicontrol/annotator/midas/midas/vit.py,2023-10-20T00:35:15Z,release 0.1.0
github.com/TIGER-AI-Lab/ImagenHub,src/imagen_hub/pipelines/controlnet/ldm/modules/midas/midas/vit.py,2023-10-20T00:35:15Z,release 0.1.0
github.com/TIGER-AI-Lab/ImagenHub,src/imagen_hub/pipelines/unicontrol/ldm/modules/midas/midas/vit.py,2023-10-20T00:35:15Z,release 0.1.0
github.com/UCSC-VLAA/Image-Pretraining-for-Video,Spatiotemporal_Finetuning/mmaction/models/recognizers/base.py,2022-05-04T07:23:46Z,first commit ImageNet pre-train evaluation and training scripts
github.com/tyamaguchi17/rsna_mammo,src/nn/backbone.py,2023-02-05T16:38:54Z,format
github.com/tyamaguchi17/rsna_mammo,src/nn/backbone.py,2023-02-04T08:19:03Z,add architectures
github.com/morningmoni/UniPELT,transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-03-23T20:14:51Z,init
github.com/Theia-4869/BiCross,DPT/vit.py,2024-03-04T11:30:58Z,ICRA 2024 final version
github.com/RockeyCoss/StructToken,mmseg/models/backbones/timm_backbone.py,2022-11-17T18:53:35Z,add ade20k
github.com/RanPAC/RanPAC,inc_net.py,2024-02-16T01:18:59Z,"Bug fixes

Primarily a fix to group accuracies and task average accuracies to account for possible unequal numbers of classes in each task"
github.com/RanPAC/RanPAC,inc_net.py,2024-01-13T09:30:27Z,Clean up of code and add all parameter settings for all datasets
github.com/RanPAC/RanPAC,inc_net.py,2023-05-27T13:29:15Z,Full commit
github.com/RanPAC/RanPAC,petl/vpt.py,2024-01-13T09:30:27Z,Clean up of code and add all parameter settings for all datasets
github.com/RanPAC/RanPAC,petl/vpt.py,2023-05-27T13:29:15Z,Full commit
github.com/RanPAC/RanPAC,petl/vision_transformer_adapter.py,2024-01-13T09:30:27Z,Clean up of code and add all parameter settings for all datasets
github.com/RanPAC/RanPAC,petl/vision_transformer_adapter.py,2023-05-27T13:29:15Z,Full commit
github.com/farewellthree/STAN,mmaction/models/recognizers/base.py,2023-11-24T15:56:21Z,mug_stan
github.com/OscarXZQ/weight-selection,weight_selection.py,2023-11-30T23:30:38Z,update
github.com/hendrycks/jiminy-cricket,examples/experiments/custom_transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-09-05T18:55:45Z,cleaning/organizing code
github.com/hendrycks/jiminy-cricket,examples/experiments/custom_transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-09-05T18:55:45Z,cleaning/organizing code
github.com/showlab/VisorGPT,demo/ControlNet/controlnet/annotator/midas/midas/vit.py,2023-05-28T08:50:01Z,add gradio demo
github.com/showlab/VisorGPT,demo/ControlNet/controlnet/ldm/modules/midas/midas/vit.py,2023-05-28T08:50:01Z,add gradio demo
github.com/JunjieYang97/Meta-ControlNet,annotator/midas/midas/vit.py,2023-12-03T01:03:50Z,init
github.com/JunjieYang97/Meta-ControlNet,ldm/modules/midas/midas/vit.py,2023-12-03T01:03:50Z,init
github.com/facebookresearch/Whac-A-Mole,model/model_zoo.py,2022-11-28T03:04:58Z,Initial commit
github.com/davidbrandfonbrener/imitation_pretraining,imitation_pretraining/algs/pretrained_models/timm.py,2023-05-25T18:58:32Z,First commit
github.com/MadryLab/backgrounds_challenge,tools/model_utils.py,2020-10-02T00:15:45Z,Now loads pretrained models from timm
github.com/MadryLab/backgrounds_challenge,tools/model_utils.py,2020-06-18T18:52:37Z,Initial commit
github.com/UMass-Foundation-Model/CoVLM,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-11-01T14:42:53Z,init commit
github.com/UMass-Foundation-Model/CoVLM,transformers/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-11-01T14:42:53Z,init commit
github.com/UMass-Foundation-Model/CoVLM,transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-11-01T14:42:53Z,init commit
github.com/UMass-Foundation-Model/CoVLM,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-11-01T14:42:53Z,init commit
github.com/UMass-Foundation-Model/CoVLM,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-11-01T14:42:53Z,init commit
github.com/UMass-Foundation-Model/CoVLM,transformers/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-11-01T14:42:53Z,init commit
github.com/UMass-Foundation-Model/CoVLM,transformers/src/transformers/models/timm_backbone/modeling_timm_backbone.py,2023-11-01T14:42:53Z,init commit
github.com/UMass-Foundation-Model/CoVLM,transformers/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-11-01T14:42:53Z,init commit
github.com/UMass-Foundation-Model/CoVLM,transformers/src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-11-01T14:42:53Z,init commit
github.com/thecharm/RECK,opennre/encoder/bert_encoder.py,2023-06-18T03:13:59Z,Add files via upload
github.com/thecharm/RECK,opennre/encoder/bert_encoder.py,2023-06-18T03:05:46Z,Delete opennre directory
github.com/thecharm/RECK,opennre/encoder/bert_encoder.py,2023-03-01T14:12:36Z,Add files via upload
github.com/egeozsoy/4D-OR,scene_graph_prediction/scene_graph_helpers/model/model_utils.py,2022-06-10T13:10:29Z,- initial commit
github.com/satya15july/depth_estimation_stereo_images,networks/FastACVNet/models/Fast_ACV.py,2023-03-01T08:32:46Z,first commit
github.com/satya15july/depth_estimation_stereo_images,networks/FastACVNet/models/Fast_ACV_plus.py,2023-03-01T08:32:46Z,first commit
github.com/modelscope/normal-depth-diffusion,libs/MiDaS/midas/backbones/vit.py,2023-12-11T02:42:52Z,init
github.com/modelscope/normal-depth-diffusion,libs/MiDaS/midas/backbones/beit.py,2023-12-11T02:42:52Z,init
github.com/modelscope/normal-depth-diffusion,libs/MiDaS/midas/backbones/swin.py,2023-12-11T02:42:52Z,init
github.com/modelscope/normal-depth-diffusion,libs/MiDaS/midas/backbones/levit.py,2023-12-11T02:42:52Z,init
github.com/modelscope/normal-depth-diffusion,libs/MiDaS/midas/backbones/swin2.py,2023-12-11T02:42:52Z,init
github.com/modelscope/normal-depth-diffusion,libs/MiDaS/midas/backbones/next_vit.py,2023-12-11T02:42:52Z,init
github.com/modelscope/normal-depth-diffusion,libs/omnidata_torch/modules/midas/vit.py,2023-12-11T02:42:52Z,init
github.com/modelscope/normal-depth-diffusion,libs/omnidata_torch/lib/midas/midas/vit.py,2023-12-14T11:06:55Z,update README && add missing files
github.com/modelscope/normal-depth-diffusion,libs/omnidata_torch/lib/midas_31/midas/backbones/vit.py,2023-12-14T11:06:55Z,update README && add missing files
github.com/modelscope/normal-depth-diffusion,libs/omnidata_torch/lib/midas_31/midas/backbones/beit.py,2023-12-14T11:06:55Z,update README && add missing files
github.com/modelscope/normal-depth-diffusion,libs/omnidata_torch/lib/midas_31/midas/backbones/swin.py,2023-12-14T11:06:55Z,update README && add missing files
github.com/modelscope/normal-depth-diffusion,libs/omnidata_torch/lib/midas_31/midas/backbones/levit.py,2023-12-14T11:06:55Z,update README && add missing files
github.com/modelscope/normal-depth-diffusion,libs/omnidata_torch/lib/midas_31/midas/backbones/swin2.py,2023-12-14T11:06:55Z,update README && add missing files
github.com/modelscope/normal-depth-diffusion,libs/omnidata_torch/lib/midas_31/midas/backbones/next_vit.py,2023-12-14T11:06:55Z,update README && add missing files
github.com/modelscope/normal-depth-diffusion,libs/omnidata_torch/lib/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/vit.py,2023-12-14T11:06:55Z,update README && add missing files
github.com/modelscope/normal-depth-diffusion,libs/omnidata_torch/lib/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/beit.py,2023-12-14T11:06:55Z,update README && add missing files
github.com/modelscope/normal-depth-diffusion,libs/omnidata_torch/lib/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin.py,2023-12-14T11:06:55Z,update README && add missing files
github.com/modelscope/normal-depth-diffusion,libs/omnidata_torch/lib/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/levit.py,2023-12-14T11:06:55Z,update README && add missing files
github.com/modelscope/normal-depth-diffusion,libs/omnidata_torch/lib/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin2.py,2023-12-14T11:06:55Z,update README && add missing files
github.com/modelscope/normal-depth-diffusion,libs/omnidata_torch/lib/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/next_vit.py,2023-12-14T11:06:55Z,update README && add missing files
github.com/efan3000/muisc,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-06-26T19:55:13Z,initial
github.com/efan3000/muisc,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-06-26T19:55:13Z,initial
github.com/qcwthu/Lifelong-Fewshot-Language-Learning,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-02-10T05:51:54Z,transformers
github.com/qcwthu/Lifelong-Fewshot-Language-Learning,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-02-10T05:51:54Z,transformers
github.com/qcwthu/Lifelong-Fewshot-Language-Learning,transformers/build/lib/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-02-10T05:51:54Z,transformers
github.com/qcwthu/Lifelong-Fewshot-Language-Learning,transformers/build/lib/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-02-10T05:51:54Z,transformers
github.com/RuyiLian/CheckerPose,checkerpose/model/backbone.py,2023-08-02T22:20:20Z,first commit
github.com/erprogs/GenConViT,model/genconvit_ed.py,2023-07-13T16:06:33Z,Initial commit
github.com/aiiu-lab/CLIPCAM,utils/model.py,2022-07-13T17:18:38Z,minor fix
github.com/aiiu-lab/CLIPCAM,utils/model.py,2022-01-17T09:53:39Z,first commit
github.com/HUSTLYRM/HUST_Radar_2023,stereo_camera/coex/models/stereo/CoExTRT.py,2023-09-13T14:28:23Z,Initial commit
github.com/HUSTLYRM/HUST_Radar_2023,stereo_camera/coex/models/stereo/submodules/feature.py,2023-09-13T14:28:23Z,Initial commit
github.com/kinredon/Harmonious-Teacher,cvpods/cvpods/modeling/backbone/timm_backbone.py,2023-07-02T08:25:05Z,initial commit
github.com/LoveSiameseCat/CFM,test.py,2023-11-07T04:47:29Z,Update test.py
github.com/LoveSiameseCat/CFM,test.py,2023-11-04T08:02:27Z,Update test.py
github.com/LoveSiameseCat/CFM,test.py,2023-11-04T08:01:24Z,"Update test.py

update the image pre-process Pytorch-like code"
github.com/LoveSiameseCat/CFM,test.py,2023-08-12T08:32:20Z,Update test.py
github.com/LoveSiameseCat/CFM,test.py,2023-08-10T13:01:10Z,Update test.py
github.com/LoveSiameseCat/CFM,test.py,2023-08-10T12:49:58Z,Add files via upload
github.com/LoveSiameseCat/CFM,test.py,2023-08-10T12:48:08Z,Delete test.py
github.com/LoveSiameseCat/CFM,test.py,2023-08-10T12:45:17Z,Add files via upload
github.com/rawalkhirodkar/egohumans,egohumans/external/midas/midas/vit.py,2023-10-26T22:25:49Z,Add bbox detection benchmark
github.com/rawalkhirodkar/egohumans,egohumans/assets/pare/pare/models/backbone/hrnet_legacy.py,2023-08-22T16:35:04Z,Initial commit
github.com/RolnickLab/gbif-species-trainer,model_training/models/efficientnet.py,2023-05-25T19:59:41Z,Fundamental update to the codebase
github.com/RolnickLab/gbif-species-trainer,model_training/models/efficientnet.py,2022-08-12T11:31:07Z,building hist to analyze count of training poitns
github.com/hiddenswitch/Spellsource,spellsource-art-generation/spellsource_art_generation/custom_midas_repo/midas/backbones/vit.py,2023-08-30T14:57:52Z,add controlnet preprocessor nodes
github.com/hiddenswitch/Spellsource,spellsource-art-generation/spellsource_art_generation/custom_midas_repo/midas/backbones/beit.py,2023-08-30T14:57:52Z,add controlnet preprocessor nodes
github.com/hiddenswitch/Spellsource,spellsource-art-generation/spellsource_art_generation/custom_midas_repo/midas/backbones/swin.py,2023-08-30T14:57:52Z,add controlnet preprocessor nodes
github.com/hiddenswitch/Spellsource,spellsource-art-generation/spellsource_art_generation/custom_midas_repo/midas/backbones/levit.py,2023-08-30T14:57:52Z,add controlnet preprocessor nodes
github.com/hiddenswitch/Spellsource,spellsource-art-generation/spellsource_art_generation/custom_midas_repo/midas/backbones/swin2.py,2023-08-30T14:57:52Z,add controlnet preprocessor nodes
github.com/hiddenswitch/Spellsource,spellsource-art-generation/spellsource_art_generation/custom_midas_repo/midas/backbones/next_vit.py,2023-08-30T14:57:52Z,add controlnet preprocessor nodes
github.com/violet-zct/swarm-distillation-zero-shot,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-08-04T16:29:23Z,"Add BEiT (#12994)

* First pass

* Make conversion script work

* Improve conversion script

* Fix bug, conversion script working

* Improve conversion script, implement BEiTFeatureExtractor

* Make conversion script work based on URL

* Improve conversion script

* Add tests, add documentation

* Fix bug in conversion script

* Fix another bug

* Add support for converting masked image modeling model

* Add support for converting masked image modeling

* Fix bug

* Add print statement for debugging

* Fix another bug

* Make conversion script finally work for masked image modeling models

* Move id2label for datasets to JSON files on the hub

* Make sure id's are read in as integers

* Add integration tests

* Make style & quality

* Fix test, add BEiT to README

* Apply suggestions from @sgugger's review

* Apply suggestions from code review

* Make quality

* Replace nielsr by microsoft in tests, add docs

* Rename BEiT to Beit

* Minor fix

* Fix docs of BeitForMaskedImageModeling

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/violet-zct/swarm-distillation-zero-shot,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-04-12T22:07:10Z,"Add DeiT (PyTorch) (#11056)

* First draft of deit

* More improvements

* Remove DeiTTokenizerFast from init

* Conversion script works

* Add DeiT to ViT conversion script

* Add tests, add head model, add support for deit in vit conversion script

* Update model checkpoint names

* Update image_mean and image_std, set resample to bicubic

* Improve docs

* Docs improvements

* Add DeiTForImageClassificationWithTeacher to init

* Address comments by @sgugger

* Improve feature extractors

* Make fix-copies

* Minor fixes

* Address comments by @patil-suraj

* All models uploaded

* Fix tests

* Remove labels argument from DeiTForImageClassificationWithTeacher

* Fix-copies, style and quality

* Fix tests

* Fix typo

* Multiple docs improvements

* More docs fixes"
github.com/violet-zct/swarm-distillation-zero-shot,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-04-01T15:16:05Z,"Add Vision Transformer and ViTFeatureExtractor (#10950)

* Squash all commits into one

* Update ViTFeatureExtractor to use image_utils instead of torchvision

* Remove torchvision and add Pillow

* Small docs improvement

* Address most comments by @sgugger

* Fix tests

* Clean up conversion script

* Pooler first draft

* Fix quality

* Improve conversion script

* Make style and quality

* Make fix-copies

* Minor docs improvements

* Should use fix-copies instead of manual handling

* Revert ""Should use fix-copies instead of manual handling""

This reverts commit fd4e591bce4496d41406425c82606a8fdaf8a50b.

* Place ViT in alphabetical order

Co-authored-by: Lysandre <lysandre.debut@reseau.eseo.fr>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/violet-zct/swarm-distillation-zero-shot,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-08-04T16:29:23Z,"Add BEiT (#12994)

* First pass

* Make conversion script work

* Improve conversion script

* Fix bug, conversion script working

* Improve conversion script, implement BEiTFeatureExtractor

* Make conversion script work based on URL

* Improve conversion script

* Add tests, add documentation

* Fix bug in conversion script

* Fix another bug

* Add support for converting masked image modeling model

* Add support for converting masked image modeling

* Fix bug

* Add print statement for debugging

* Fix another bug

* Make conversion script finally work for masked image modeling models

* Move id2label for datasets to JSON files on the hub

* Make sure id's are read in as integers

* Add integration tests

* Make style & quality

* Fix test, add BEiT to README

* Apply suggestions from @sgugger's review

* Apply suggestions from code review

* Make quality

* Replace nielsr by microsoft in tests, add docs

* Rename BEiT to Beit

* Minor fix

* Fix docs of BeitForMaskedImageModeling

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/violet-zct/swarm-distillation-zero-shot,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-04-12T22:07:10Z,"Add DeiT (PyTorch) (#11056)

* First draft of deit

* More improvements

* Remove DeiTTokenizerFast from init

* Conversion script works

* Add DeiT to ViT conversion script

* Add tests, add head model, add support for deit in vit conversion script

* Update model checkpoint names

* Update image_mean and image_std, set resample to bicubic

* Improve docs

* Docs improvements

* Add DeiTForImageClassificationWithTeacher to init

* Address comments by @sgugger

* Improve feature extractors

* Make fix-copies

* Minor fixes

* Address comments by @patil-suraj

* All models uploaded

* Fix tests

* Remove labels argument from DeiTForImageClassificationWithTeacher

* Fix-copies, style and quality

* Fix tests

* Fix typo

* Multiple docs improvements

* More docs fixes"
github.com/seungkee/2nd-place-solution-to-Facebook-Image-Similarity-Matching-Track,code/matching_track/train_eval/models/encoder.py,2021-11-27T09:47:53Z,1847
github.com/seungkee/2nd-place-solution-to-Facebook-Image-Similarity-Matching-Track,code/descriptor_track/train_eval/models/encoder.py,2021-11-27T09:47:53Z,1847
github.com/seungkee/2nd-place-solution-to-Facebook-Image-Similarity-Matching-Track,code/pytorch-image-models/tests/test_utils.py,2021-11-27T10:48:44Z,1948
github.com/seungkee/2nd-place-solution-to-Facebook-Image-Similarity-Matching-Track,code/pytorch-image-models/tests/test_models.py,2021-11-27T10:48:44Z,1948
github.com/jinmin527/learning-cuda-trt,tensorrt-integrate-1.19-insightface/insightface-master/alignment/synthetics/trainer_synthetics.py,2022-07-24T02:29:26Z,init
github.com/pengzhi1998/Robotics_Navigation,DPT/dpt/vit.py,2022-01-14T06:58:29Z,add the midas part; remove turning punishment
github.com/pengzhi1998/Robotics_Navigation,DPT/dpt/vit.py,2021-12-09T07:53:43Z,ignore the dpt models
github.com/piotr-teterwak/erm_plusplus,main_erm.py,2023-05-10T17:47:40Z,Fix data timiing
github.com/piotr-teterwak/erm_plusplus,main_erm.py,2023-04-12T17:55:25Z,minor cleanup
github.com/piotr-teterwak/erm_plusplus,main_erm.py,2023-04-10T18:35:02Z,fix final validation call args
github.com/piotr-teterwak/erm_plusplus,main_erm.py,2023-03-29T21:51:53Z,First commit
github.com/yingqichao/fnd-bootstrap,test.py,2022-08-17T17:26:14Z,init
github.com/MoMarky/Eye-gaze-Guided-Vision-Transformer,main_siim.py,2023-05-07T11:51:52Z,Add files via upload
github.com/MoMarky/Eye-gaze-Guided-Vision-Transformer,main_inbrest.py,2023-05-07T11:51:52Z,Add files via upload
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-12-06T16:32:26Z,genslm
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-08-04T16:29:23Z,"Add BEiT (#12994)

* First pass

* Make conversion script work

* Improve conversion script

* Fix bug, conversion script working

* Improve conversion script, implement BEiTFeatureExtractor

* Make conversion script work based on URL

* Improve conversion script

* Add tests, add documentation

* Fix bug in conversion script

* Fix another bug

* Add support for converting masked image modeling model

* Add support for converting masked image modeling

* Fix bug

* Add print statement for debugging

* Fix another bug

* Make conversion script finally work for masked image modeling models

* Move id2label for datasets to JSON files on the hub

* Make sure id's are read in as integers

* Add integration tests

* Make style & quality

* Fix test, add BEiT to README

* Apply suggestions from @sgugger's review

* Apply suggestions from code review

* Make quality

* Replace nielsr by microsoft in tests, add docs

* Rename BEiT to Beit

* Minor fix

* Fix docs of BeitForMaskedImageModeling

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-04-12T22:07:10Z,"Add DeiT (PyTorch) (#11056)

* First draft of deit

* More improvements

* Remove DeiTTokenizerFast from init

* Conversion script works

* Add DeiT to ViT conversion script

* Add tests, add head model, add support for deit in vit conversion script

* Update model checkpoint names

* Update image_mean and image_std, set resample to bicubic

* Improve docs

* Docs improvements

* Add DeiTForImageClassificationWithTeacher to init

* Address comments by @sgugger

* Improve feature extractors

* Make fix-copies

* Minor fixes

* Address comments by @patil-suraj

* All models uploaded

* Fix tests

* Remove labels argument from DeiTForImageClassificationWithTeacher

* Fix-copies, style and quality

* Fix tests

* Fix typo

* Multiple docs improvements

* More docs fixes"
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-04-01T15:16:05Z,"Add Vision Transformer and ViTFeatureExtractor (#10950)

* Squash all commits into one

* Update ViTFeatureExtractor to use image_utils instead of torchvision

* Remove torchvision and add Pillow

* Small docs improvement

* Address most comments by @sgugger

* Fix tests

* Clean up conversion script

* Pooler first draft

* Fix quality

* Improve conversion script

* Make style and quality

* Make fix-copies

* Minor docs improvements

* Should use fix-copies instead of manual handling

* Revert ""Should use fix-copies instead of manual handling""

This reverts commit fd4e591bce4496d41406425c82606a8fdaf8a50b.

* Place ViT in alphabetical order

Co-authored-by: Lysandre <lysandre.debut@reseau.eseo.fr>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2022-12-06T16:32:26Z,genslm
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2022-05-12T20:25:55Z,"Black preview (#17217)

* Black preview

* Fixup too!

* Fix check copies

* Use the same version as the CI

* Bump black"
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2022-04-07T19:58:00Z,"RegNet (#16188)

* base model done

* make style

* done

* added files

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Trigger doc build

* resolved conversations

* resolved conversations

* seer models

* minor changes

* minor changes

* make fixup

* glob variables

* minor changes

* fix copies

* config when possibile

* resolved conflicts

* resolved conflicts

* resolved conflicts

* CI

* conversion script for 10b param

* fixed for 10b model

* minor updates in the doc + make style

* removed unused code

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* removed unused code

* removed unused code

* updated modeling_utils from main

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <Sylvain.gugger@gmail.com>"
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-12-06T16:32:26Z,genslm
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-05-12T20:25:55Z,"Black preview (#17217)

* Black preview

* Fixup too!

* Fix check copies

* Use the same version as the CI

* Bump black"
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-03-14T18:57:55Z,"[WIP] Resnet (#15770)

* first commit

* ResNet model correctly implemented.

basic modeling + weights conversion is done

removed unused doc

mdx file

doc and conversion script

added feature_extractor to auto

test

minor changes + style + quality

doc

test

Delete process.yml

A left over from my attempt of running circleci locally

* minor changes

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* new test format

* minor changes from conversations

* minor changes from conversations

* make style + quality

* readded the tests

* test + README

* minor changes from conversations

* error in README

* make fix-copies

* removed regression for classification head

* make quality

* fixed loss control flow

* fixed loss control flow

* resolved conversations

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* READMEs

* index.mdx

* minor changes

* updated tests and models

* unused import

* outputs

* Update docs/source/model_doc/resnet.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* added embeddings_size

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* conversation

* added push to hub

* test

* embedding_size

* make fix-copies

* resolved conversations

* CI

* changed organization

* minor changes

* CI

* minor changes

* conversations

* conversation

* doc

* tests

* removed unused docstring

* conversation

* removed unused outputs

* CI

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>
Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>"
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-12-06T16:32:26Z,genslm
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-08-04T16:29:23Z,"Add BEiT (#12994)

* First pass

* Make conversion script work

* Improve conversion script

* Fix bug, conversion script working

* Improve conversion script, implement BEiTFeatureExtractor

* Make conversion script work based on URL

* Improve conversion script

* Add tests, add documentation

* Fix bug in conversion script

* Fix another bug

* Add support for converting masked image modeling model

* Add support for converting masked image modeling

* Fix bug

* Add print statement for debugging

* Fix another bug

* Make conversion script finally work for masked image modeling models

* Move id2label for datasets to JSON files on the hub

* Make sure id's are read in as integers

* Add integration tests

* Make style & quality

* Fix test, add BEiT to README

* Apply suggestions from @sgugger's review

* Apply suggestions from code review

* Make quality

* Replace nielsr by microsoft in tests, add docs

* Rename BEiT to Beit

* Minor fix

* Fix docs of BeitForMaskedImageModeling

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-04-12T22:07:10Z,"Add DeiT (PyTorch) (#11056)

* First draft of deit

* More improvements

* Remove DeiTTokenizerFast from init

* Conversion script works

* Add DeiT to ViT conversion script

* Add tests, add head model, add support for deit in vit conversion script

* Update model checkpoint names

* Update image_mean and image_std, set resample to bicubic

* Improve docs

* Docs improvements

* Add DeiTForImageClassificationWithTeacher to init

* Address comments by @sgugger

* Improve feature extractors

* Make fix-copies

* Minor fixes

* Address comments by @patil-suraj

* All models uploaded

* Fix tests

* Remove labels argument from DeiTForImageClassificationWithTeacher

* Fix-copies, style and quality

* Fix tests

* Fix typo

* Multiple docs improvements

* More docs fixes"
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-12-06T16:32:26Z,genslm
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-01-21T11:10:41Z,"Add Swin Transformer (#15085)

* Add all files

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Updates

* Apply suggestions from review

* Fix failing tests

* Update __init__.py

* Update configuration_swin.py

* Update auto_factory.py

* Fix pytests

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Fix tests and default checkpoint

* Fix Recursion error

* Code quality

* Remove copied from

* Update modeling_swin.py

* Code quality

* Update modeling_swin.py

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

* Fix feature extractor

* Fix code quality

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

* Update configuration_swin.py

* Update default checkpoint

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/model_doc/swin.mdx

Co-authored-by: Mishig Davaadorj <mishig.davaadorj@coloradocollege.edu>

* Update conversion script

* Reformat conversion script

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>
Co-authored-by: Mishig Davaadorj <mishig.davaadorj@coloradocollege.edu>"
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2022-12-06T16:32:26Z,genslm
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2022-06-01T15:06:20Z,"Adding LeViT Model by Facebook (#17466)

* levit files

* levit tests

* weights script

* weights script

* update

* style fixes

* few minor corrections

* Added teacher model

* edit docs

* fix-copies

* style fixes

* pr error resolved

* Update README.md

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/index.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/__init__.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/__init__.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/configuration_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/configuration_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* suggested pr changes

* style fixes

* minor bug

* update

* minor doc edit

* style

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update tests/models/levit/test_modeling_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* residual layer readable

* style

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update tests/models/levit/test_feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* change checkpoints and style

* update

* minor changes

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2022-12-06T16:32:26Z,genslm
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/da03/hierarchical_diffusion_LM,src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2022-07-27T15:14:47Z,"Add swin transformer v2 (#17469)

* Add files generated using transformer-cli add-new-model-like command

* Add changes for swinv2 attention and forward method

* Add fixes

* Add modifications for weight conversion and remaining args in swin model

* Add changes for patchmerging

* Add changes for SwinV2selfattention

* Update conversion script

* Add final fixes for the swin_v2 model

* Add changes for conversion script for pretrained window size case

* Add pretrained window size value from config in SwinV2Encoder class

* Make fixup

* Add swinv2 to models_not_in_readme to utils/check_copies.py

* Modify Swinv2v2 to Swin Transformer V2

* Remove copied from, to run make fixup command

* Add updates to swinv2tf from main branch

* Add pretrained_window_size to config, to make tests pass

* Add modified weights from nandwalritik profile for swinv2

* Update model weights from swinv2 from nandwalritik profile

* Add fix for build_pr_documentation CI fix

* Add fixes for weight conversion

* Add change to make input with padding work

* Add fixes for test cases

* Add few changes from swin to swinv2 to pass test cases

* Remove tests for tensorflow as swinv2 for TF is not added yet

* Overide test_pt_tf_model_equivalence function as TF implementation for swinv2 is not added yet

* Add modeling_tf_swinv2 to _ignore_modules as test file is removed for this one right now.

* Update docs url for swinv2 in README.md

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Undo changes for check_repo

* Update url in readme.md

* Remove overrided function to test pt_tf_model_equivalence

* Remove TF model imports for Swinv2 as its not implemented in this PR

* Add changes for index.mdx

* Add swinv2 papers link,abstract and contributors details

* Rename cpb_mlp to continous_position_bias_mlp

* Add tips for swinv2 model

* Update src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Fix indentation for docstring example in src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update import order in src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add copyright statements in weights conversion script.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Remove Swinv2 from models_not_in_readme

* Reformat code

* Remove TF implementation file for swinv2

* Update start docstring.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add changes for docstring

* Update orgname for weights to microsoft

* Remove to_2tuple function

* Add copied from statements wherever applicable

* Add copied from to Swinv2ForMaskedImageModelling class

* Reformat code.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add unittest.skip(with reason.) for test_inputs_embeds test case.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add updates for test_modeling_swinv2.py

* Add @unittest.skip() annotation for clarity to create_and_test_config_common_properties function

* Add continuous_position_bias_mlp parameter to conversion script

* Add test for testing masked_image_modelling for swinv2

* Update Swinv2 to Swin Transformer v2 in docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update Swinv2 to Swin Transformer v2 in docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add suggested changes

* Add copied from to forward methods of Swinv2Stage and Swinv2Encoder

* Add push_to_hub flag to weight conversion script

* Change order or Swinv2DropPath class

* Add id2label mapping for imagenet 21k

* Add updated url for SwinV2 functions and classes used in implementation

* Update input_feature dimensions format, mentioned in comments.

Co-authored-by: Alara Dirik <8944735+alaradirik@users.noreply.github.com>

* Add suggested changes for modeling_swin2.py

* Update docs

* Remove create_and_test_config_common_properties function, as test_model_common_attributes is sufficient.

* Fix indentation.

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Add changes for making Nit objects in code style

* Add suggested changes

* Add suggested changes for test_modelling_swinv2

* make fix-copies

* Update docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Alara Dirik <8944735+alaradirik@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/Ming-er/LGC-SED,src/local/ast/ast_models.py,2024-01-03T02:08:27Z,update the source code
github.com/Daniellli/ECT,model/vit.py,2023-08-06T14:47:02Z,refresh the comment
github.com/Daniellli/ECT,model/vit.py,2022-08-15T15:24:06Z,"final add residual   version, vis-attention"
github.com/Daniellli/ECT,model/vit.py,2022-06-21T11:48:40Z,a
github.com/Daniellli/ECT,model/vit.py,2022-06-08T15:59:12Z,a
github.com/Daniellli/ECT,model/vit.py,2022-06-08T13:49:14Z,a
github.com/Daniellli/ECT,model/vit.py,2022-05-15T02:31:26Z,a
github.com/Daniellli/ECT,model/vit.py,2022-05-13T02:22:29Z,first commit
github.com/amaralibey/gsv-cities,models/backbones/swin.py,2023-02-02T19:43:16Z,GSV-Cities framework
github.com/amaralibey/gsv-cities,models/backbones/efficientnet.py,2023-02-02T19:43:16Z,GSV-Cities framework
github.com/D-HongKim/LicencePlate_Project,Char_model/train_char_model.py,2022-02-10T05:38:33Z,Add files via upload
github.com/mbakker7/timml,examples/workshop_nhv/vlaketunnel_functions.py,2023-04-12T19:18:21Z,new try notebooks nhv workshop
github.com/mbakker7/timml,examples/workshop_nhv/vlaketunnel_functions.py,2023-04-12T15:12:05Z,"Delete vlaketunnel_functions.py

running into codecov probs"
github.com/mbakker7/timml,examples/workshop_nhv/vlaketunnel_functions.py,2023-04-12T14:52:36Z,add workshop files
github.com/NHERI-SimCenter/BRAILS,brails/legacy/modules/PytorchGenericModelClassifier/GenericImageClassifier.py,2022-11-01T19:49:19Z,Moved the previous Pythorch ImageClassifier and OccupancyClassifier to the legacy folder
github.com/PKU-ICST-MIPL/PosterLayout-CVPR2023,model.py,2023-08-17T01:32:05Z,Add files via upload
github.com/WindVChen/DiffAttack,other_attacks.py,2023-09-06T16:25:21Z,9/7 Support more datasets.
github.com/WindVChen/DiffAttack,other_attacks.py,2023-04-30T12:54:28Z,4/30 Code cleanup finished.
github.com/AaltoVision/surface-curvature-estimator,src/DPT/midas/vit.py,2023-10-03T23:46:44Z,code release
github.com/facebookresearch/active_indexing,activeindex/utils.py,2023-03-02T09:08:29Z,Initial commit
github.com/FUZHIYI/TACO,transformers-master/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-10-23T11:05:29Z,update taco repo
github.com/FUZHIYI/TACO,transformers-master/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-10-23T11:05:29Z,update taco repo
github.com/RUCAIBox/LIVE,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2024-01-17T13:23:05Z,Initial commit
github.com/RUCAIBox/LIVE,transformers/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2024-01-17T13:23:05Z,Initial commit
github.com/RUCAIBox/LIVE,transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2024-01-17T13:23:05Z,Initial commit
github.com/RUCAIBox/LIVE,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2024-01-17T13:23:05Z,Initial commit
github.com/RUCAIBox/LIVE,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2024-01-17T13:23:05Z,Initial commit
github.com/RUCAIBox/LIVE,transformers/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2024-01-17T13:23:05Z,Initial commit
github.com/RUCAIBox/LIVE,transformers/build/lib/transformers/models/vit/convert_vit_timm_to_pytorch.py,2024-01-17T13:23:05Z,Initial commit
github.com/RUCAIBox/LIVE,transformers/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2024-01-17T13:23:05Z,Initial commit
github.com/RUCAIBox/LIVE,transformers/build/lib/transformers/models/regnet/convert_regnet_to_pytorch.py,2024-01-17T13:23:05Z,Initial commit
github.com/RUCAIBox/LIVE,transformers/build/lib/transformers/models/resnet/convert_resnet_to_pytorch.py,2024-01-17T13:23:05Z,Initial commit
github.com/RUCAIBox/LIVE,transformers/build/lib/transformers/models/deit/convert_deit_timm_to_pytorch.py,2024-01-17T13:23:05Z,Initial commit
github.com/RUCAIBox/LIVE,transformers/build/lib/transformers/models/swin/convert_swin_timm_to_pytorch.py,2024-01-17T13:23:05Z,Initial commit
github.com/RUCAIBox/LIVE,transformers/build/lib/transformers/models/levit/convert_levit_timm_to_pytorch.py,2024-01-17T13:23:05Z,Initial commit
github.com/RUCAIBox/LIVE,transformers/build/lib/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2024-01-17T13:23:05Z,Initial commit
github.com/RUCAIBox/LIVE,transformers/src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2024-01-17T13:23:05Z,Initial commit
github.com/RUCAIBox/LIVE,transformers/build/lib/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2024-01-17T13:23:05Z,Initial commit
github.com/VSydorskyy/BirdCLEF_2023_1st_place,code_base/models/wave_clasifier.py,2023-06-02T07:51:53Z,initial commit
github.com/UKPLab/adaptable-adapters,adapter-transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-07-10T11:59:01Z,adapter-hub+rational
github.com/UKPLab/adaptable-adapters,adapter-transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-07-10T11:59:01Z,adapter-hub+rational
github.com/whwu95/ATM,eva_clip/timm_model.py,2023-11-29T14:30:09Z,Release ATM
github.com/eric-ai-lab/PEViT,vision_benchmark/evaluation/feature.py,2022-12-05T06:34:24Z,initial commit
github.com/Karel911/MVtec_AD-anomaly-detection,trainer.py,2022-05-18T05:38:48Z,init
github.com/River-Zhang/GTA,lib/pare/pare/models/backbone/hrnet_legacy.py,2023-11-30T06:48:13Z,release code
github.com/Healthcare-Robotics/visual-force-torque,prediction/model_vit.py,2023-01-18T19:00:38Z,Initial commit
github.com/louis-she/rsna-2022-public,main.py,2023-02-28T05:24:29Z,init commit
github.com/louis-she/rsna-2022-public,tools.py,2023-02-28T05:24:29Z,init commit
github.com/louis-she/rsna-2022-public,models.py,2023-02-28T05:24:29Z,init commit
github.com/TencentARC/TVTS,v2/OpenCLIP/timm_model.py,2023-08-27T18:42:26Z,release TVTSv2
github.com/commune-ai/commune,commune/modules/diffusion/projected-gan/pg_modules/projector.py,2023-11-02T00:41:48Z,update
github.com/Waterman0524/2022-Aliyun-Tianchi-Real-Scene-Tampering-Image-Detection-Challenge-Rank1,mmsegmentation-tianchi_tamper/mmseg/models/backbones/timm_backbone.py,2022-03-28T13:50:34Z,Initial commit
github.com/FuxiaoLiu/DocumentCLIP,open_clip/timm_model.py,2022-12-18T21:03:06Z,Add files via upload
github.com/DUT-CSJ/PVUW2023-VSS-3rd,mmseg/models/backbones/timm_backbone.py,2023-06-04T07:09:19Z,add file
github.com/ChangdeDu/BraVL,BraVL_fMRI/extract_fea_with_timm.py,2022-08-31T05:12:00Z,first
github.com/amazon-science/peft-design-spaces,models/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-01-04T19:24:46Z,Upload code
github.com/amazon-science/peft-design-spaces,models/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-01-04T19:24:46Z,Upload code
github.com/amazon-science/peft-design-spaces,models/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-01-04T19:24:46Z,Upload code
github.com/amazon-science/peft-design-spaces,models/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-01-04T19:24:46Z,Upload code
github.com/amazon-science/peft-design-spaces,models/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-01-04T19:24:46Z,Upload code
github.com/amazon-science/peft-design-spaces,models/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-01-04T19:24:46Z,Upload code
github.com/val-iisc/SDAT,examples/utils.py,2022-06-19T09:11:01Z,Initial Release Commit
github.com/line/Meta-AI-Video-Similarity-Challenge-3rd-Place-Solution,editing_prediction/training/utils/model.py,2023-04-28T01:54:33Z,update
github.com/line/Meta-AI-Video-Similarity-Challenge-3rd-Place-Solution,editing_prediction/training/utils/model.py,2023-04-24T09:25:39Z,Add training code
github.com/line/Meta-AI-Video-Similarity-Challenge-3rd-Place-Solution,meta-vsc-matching-runtime/submission_src/src/model.py,2023-04-28T01:54:33Z,update
github.com/line/Meta-AI-Video-Similarity-Challenge-3rd-Place-Solution,meta-vsc-matching-runtime/submission_src/src/model.py,2023-04-26T04:06:39Z,update
github.com/line/Meta-AI-Video-Similarity-Challenge-3rd-Place-Solution,meta-vsc-matching-runtime/submission_src/src/model.py,2023-04-19T08:11:05Z,obey checklist
github.com/line/Meta-AI-Video-Similarity-Challenge-3rd-Place-Solution,meta-vsc-matching-runtime/submission_src/src/model.py,2023-04-17T05:58:32Z,Add matching ensemble code
github.com/line/Meta-AI-Video-Similarity-Challenge-3rd-Place-Solution,meta-vsc-matching-runtime/submission_src/src/model.py,2023-04-17T05:00:37Z,add matching track code
github.com/line/Meta-AI-Video-Similarity-Challenge-3rd-Place-Solution,meta-vsc-descriptor-runtime/submission_src/src/model.py,2023-04-28T01:54:33Z,update
github.com/line/Meta-AI-Video-Similarity-Challenge-3rd-Place-Solution,meta-vsc-descriptor-runtime/submission_src/src/model.py,2023-04-26T04:06:39Z,update
github.com/line/Meta-AI-Video-Similarity-Challenge-3rd-Place-Solution,meta-vsc-descriptor-runtime/submission_src/src/model.py,2023-04-19T08:11:05Z,obey checklist
github.com/line/Meta-AI-Video-Similarity-Challenge-3rd-Place-Solution,meta-vsc-descriptor-runtime/submission_src/src/model.py,2023-04-17T05:00:21Z,add descriptor track code
github.com/izmailovpavel/spurious_feature_learning,models/__init__.py,2023-01-17T22:59:55Z,remove unused imports
github.com/izmailovpavel/spurious_feature_learning,models/__init__.py,2022-10-20T15:16:29Z,Public init
github.com/dreamflake/CFM,utils.py,2023-05-25T07:04:29Z,Initial commit
github.com/qixiong-wang/mmsegmentation-mpcnet,mmseg/models/backbones/timm_backbone.py,2021-11-02T04:51:11Z,"[Feature] Support TIMMBackbone (#998)

* add TIMMBackbone and unittests

* add timm to tests requirements

* deprecate pt1.3.1

* reduce the unittests input of timm backbone

* fix ci

* fix ci

* fix ci

* fix ci

* fix ci

* fix ci

* fix ci

* fix ci

* fix ci

* remove unittests of large models of timm backbone

* generate coverage report for all unittests env

* reduce the unittests input of timm backbone

* reduce the unittests input of timm backbone"
github.com/sanjayss34/codevqa,lavis/models/clip_models/model.py,2022-09-16T03:14:32Z,renaming features to embeds_proj.
github.com/sanjayss34/codevqa,lavis/models/clip_models/model.py,2022-09-14T17:48:52Z,added licence headers.
github.com/sanjayss34/codevqa,lavis/models/clip_models/model.py,2022-08-19T06:28:36Z,"(feat) feature extractor for ALBEF, BLIP, CLIP."
github.com/sanjayss34/codevqa,lavis/models/clip_models/model.py,2022-07-31T10:03:55Z,"(feat, caution) return intermediate variables after ALBEF, BLIP, ALPRO forward."
github.com/sanjayss34/codevqa,lavis/models/clip_models/model.py,2022-07-27T07:55:17Z,(refactor) rename PRETRAIEND_MODEL_DICT to PRETRAINED_MODEL_CONFIG_DICT; rename type2path to DATASET_CONFIG_DICT.
github.com/sanjayss34/codevqa,lavis/models/clip_models/model.py,2022-07-11T14:05:13Z,(refactor) rename type2path to PRETRAIN_MODEL_DICT.
github.com/sanjayss34/codevqa,lavis/models/clip_models/model.py,2022-07-02T11:58:07Z,"(fix, refactor) refactor model and dataset default config paths to allow installing lavis as a package."
github.com/sanjayss34/codevqa,lavis/models/clip_models/model.py,2022-06-11T11:35:26Z,(feat) finished clip zero-shot imagenet eval. Verfied using ViT-L-14-336.
github.com/sanjayss34/codevqa,lavis/models/clip_models/model.py,2022-06-08T03:06:10Z,"(feat, wip) update retrieval task to allow CLIP, ALBEF, BLIP coexist."
github.com/sanjayss34/codevqa,lavis/models/clip_models/model.py,2022-06-07T08:27:53Z,"(wip) add clip models, can run training and zero-shot classification."
github.com/sanjayss34/codevqa,lavis/models/clip_models/timm_model.py,2022-09-14T17:48:52Z,added licence headers.
github.com/sanjayss34/codevqa,lavis/models/clip_models/timm_model.py,2022-06-07T08:27:53Z,"(wip) add clip models, can run training and zero-shot classification."
github.com/Leiyi-Hu/mona,Swin-Transformer-Classification/mmcls/models/backbones/timm_backbone.py,2023-11-25T07:16:12Z,231125_ReadMe_v0
github.com/LukasStruppek/Plug-and-Play-Attacks,models/classifier.py,2024-01-19T07:09:07Z,Fix error message
github.com/LukasStruppek/Plug-and-Play-Attacks,models/classifier.py,2024-01-17T07:58:52Z,add label smoothing training
github.com/LukasStruppek/Plug-and-Play-Attacks,models/classifier.py,2023-10-12T15:59:36Z,extend supported architectures
github.com/LukasStruppek/Plug-and-Play-Attacks,models/classifier.py,2023-10-12T14:54:05Z,"Update classifier.py

run even without rtpt provided"
github.com/LukasStruppek/Plug-and-Play-Attacks,models/classifier.py,2022-01-31T14:42:05Z,initial commit
github.com/FeiyuZhang98/IncreLoRA,NLG_QA/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-08-23T06:28:54Z,first commit
github.com/FeiyuZhang98/IncreLoRA,NLG_QA/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-08-23T06:28:54Z,first commit
github.com/FeiyuZhang98/IncreLoRA,NLG_QA/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-08-23T06:28:54Z,first commit
github.com/FeiyuZhang98/IncreLoRA,NLG_QA/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-08-23T06:28:54Z,first commit
github.com/FeiyuZhang98/IncreLoRA,NLG_QA/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-08-23T06:28:54Z,first commit
github.com/FeiyuZhang98/IncreLoRA,NLG_QA/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-08-23T06:28:54Z,first commit
github.com/GenjiB/ECLIPSE,modules/modeling.py,2022-07-20T10:18:40Z,code updates
github.com/GenjiB/ECLIPSE,modules/ast_models.py,2022-07-20T10:18:40Z,code updates
github.com/GenjiB/ECLIPSE,modules/module_clip.py,2022-07-20T10:18:40Z,code updates
github.com/isLinXu/vision-process-webui,webui/cls/timm_cls_ui.py,2023-10-13T11:53:47Z,[webui] update
github.com/isLinXu/vision-process-webui,webui/cls/timm_cls_ui.py,2023-09-07T07:08:11Z,[webui][cls] update timm_cls_ui.py
github.com/isLinXu/vision-process-webui,webui/cls/timm_cls_ui.py,2023-09-07T07:05:51Z,[webui][cls] update timm_cls_ui.py
github.com/isLinXu/vision-process-webui,webui/cls/timm_cls_ui.py,2023-09-07T04:38:01Z,update README.md
github.com/isLinXu/vision-process-webui,webui/cls/timm_cls_ui.py,2023-09-05T11:12:43Z,[webui][cls] update timm_cls_ui.py
github.com/isLinXu/vision-process-webui,webui/cls/timm_cls_ui.py,2023-09-05T10:41:53Z,[webui][cls] add timm_cls_ui.py
github.com/isLinXu/vision-process-webui,webui/app/timm_cls_app.py,2023-09-07T10:03:02Z,[webui][app] fix timm_cls_app.py
github.com/isLinXu/vision-process-webui,webui/app/timm_cls_app.py,2023-09-07T09:49:47Z,[webui][app] fix timm_cls_app.py
github.com/isLinXu/vision-process-webui,webui/app/timm_cls_app.py,2023-09-07T08:15:11Z,[webui][app] add example for app.py
github.com/isLinXu/vision-process-webui,webui/app/timm_cls_app.py,2023-09-05T12:46:39Z,[webui][app] timm_cls_app.py
github.com/KevinWangHP/Anomaly-Clustering,Anomaly-Clustering/models/patchcore/backbones.py,2023-05-26T16:46:45Z,2023-05-27 Code integration
github.com/KevinWangHP/Anomaly-Clustering,patchcore-inspection-main/src/patchcore/backbones.py,2023-05-11T15:28:43Z,2023-05-10 dino base
github.com/KevinWangHP/Anomaly-Clustering,patchcore-inspection-main/src/patchcore/backbones.py,2023-05-10T05:07:20Z,2023-05-10 dino base
github.com/KevinWangHP/Anomaly-Clustering,patchcore-inspection-main/src/patchcore/backbones.py,2023-05-04T08:06:08Z,2023-04-19 处理tau——>0时的结果
github.com/KevinWangHP/Anomaly-Clustering,patchcore-inspection-main/src/patchcore/backbones.py,2023-04-15T17:08:31Z,2023-04-16 dino+supervised
github.com/KevinWangHP/Anomaly-Clustering,patchcore-inspection-main/src/patchcore/backbones.py,2023-04-11T10:41:00Z,2023-04-11 backbone+dino模型权重
github.com/KevinWangHP/Anomaly-Clustering,patchcore-inspection-main/src/patchcore/backbones.py,2023-03-28T11:16:43Z,Initial commit
github.com/chris901003/DeepLearning,mmaction2/mmaction/models/recognizers/base.py,2022-08-16T07:02:02Z,ResNet3D的2D預訓練權重加載
github.com/chris901003/DeepLearning,mmaction2/mmaction/models/recognizers/base.py,2022-08-16T01:33:22Z,I3D test部分
github.com/chris901003/DeepLearning,mmaction2/mmaction/models/recognizers/base.py,2022-08-15T08:59:59Z,I3D訓練標註
github.com/chris901003/DeepLearning,mmaction2/mmaction/models/recognizers/base.py,2022-08-13T15:00:54Z,MMAction2安裝
github.com/chris901003/DeepLearning,mmsegmentation/mmseg/models/backbones/timm_backbone.py,2022-07-09T08:06:12Z,MMCV+MMSegmentation
github.com/DSaurus/threestudio-dreamcraft3D,dpt.py,2023-12-19T11:15:53Z,update preprocess code
github.com/ChenMnZ/CF-ViT,dynamic_inference.py,2022-03-01T08:26:50Z,update
github.com/ChenMnZ/CF-ViT,dynamic_inference.py,2022-03-01T02:58:57Z,update
github.com/ChenMnZ/CF-ViT,dynamic_inference.py,2022-02-28T14:53:19Z,first commit
github.com/SakodaShintaro/Miacis,scripts/generate_timm_model.py,2022-05-07T06:17:27Z,オセロのコードを削除
github.com/SakodaShintaro/Miacis,scripts/generate_timm_model.py,2022-02-19T02:44:51Z,Timm利用モデルを仮実装したが全くロスが下がらない
github.com/Ackesnal/GTP-ViT,main.py,2024-01-09T05:46:36Z,updated
github.com/Ackesnal/GTP-ViT,main.py,2023-08-22T06:40:26Z,updated
github.com/Ackesnal/GTP-ViT,main.py,2023-08-22T05:27:43Z,updated
github.com/Ackesnal/GTP-ViT,main.py,2023-06-01T10:23:06Z,Initial commit
github.com/Emilien-mipt/fer-pytorch,fer_pytorch/model.py,2022-04-11T15:16:44Z,"Hydra config system (#18)

* Refactor training with hydra config package

* Implement special config class for defining the parameters for inference

* Fix FER class and tests to take into account the created config for inference

* Omit config file for inference and pass all parameters directly as class attributes or function arguments"
github.com/Emilien-mipt/fer-pytorch,fer_pytorch/model.py,2022-04-07T10:02:39Z,"Release 0.5.0 (#17)

* Add possibility to choose model architecture for inference through FER class interface

* Add pytorch-lightning to the file with requirements

* Refactor training with Pytorch Lightning

* Add the name of the model to  checkpoint name

* Refactor model loading
Uploaded new weigths from Pytorch Lightning, removed all redundant information while loading the weights since it is already contained in the name of the model, removed extra argument from get_pretrained_model function.

* Fix tests

* Ignore some lines for type checking in Lightning class

* Update version to 0.5.0"
github.com/Emilien-mipt/fer-pytorch,fer_pytorch/model.py,2022-03-30T14:18:34Z,"First release (#16)

* Refactor model definition through class + remove extra csv files

* Delete extra logs and leave only the logs with best experiment

* Write a function that initializes the model and loads weights, pretrained on FER+ dataset

* Minor additions to functions

* Fix import

* Prototype fer class for inference on different types of data

* Prototype function for inference on a single image

* Implement inference through batches for the list of images

* Implement function for making predictions for the list of images and saving the result in json format

* Implement function for inference on video files and saving output video

* Implement function for running the model on the webcam stream

* Fix webcam function

* Implement the function for inference on the test part of the FER+ dataset and calculation of the accuracy and f1 metrics

* Write function for processing output list

* Fix output paths and box vizualization for videos

* Refactor inference (#9)

* Refactor model definition through class + remove extra csv files

* Delete extra logs and leave only the logs with best experiment

* Write a function that initializes the model and loads weights, pretrained on FER+ dataset

* Minor additions to functions

* Fix import

* Prototype fer class for inference on different types of data

* Prototype function for inference on a single image

* Implement inference through batches for the list of images

* Implement function for making predictions for the list of images and saving the result in json format

* Implement function for inference on video files and saving output video

* Implement function for running the model on the webcam stream

* Fix webcam function

* Implement the function for inference on the test part of the FER+ dataset and calculation of the accuracy and f1 metrics

* Write function for processing output list

* Fix output paths and box vizualization for videos

* Delete unused files

* Add annotations to functions and variables

* Write tests for predict_image method from the FER class

* Write tests for predict_list_images method from FER class

* Write tests for analyze_video method from FER class

* Rename previous test files

* Write tests for test_fer method from the FER class

* Style fixes

* Write tests for methods from the FER class (#11)

* Write tests for predict_image method from the FER class

* Write tests for predict_list_images method from FER class

* Write tests for analyze_video method from FER class

* Rename previous test files

* Write tests for test_fer method from the FER class

* Style fixes

* Fix model initialization

* Add requirement files

* Modify the file with settings for pre-commit hooks

* Fix requirement files

* Modify settings in configuration files

* Fix .gitignore file

* Fix annotations + small style fixes

* Delete output folders and small style fix in train file

* Move tests to separate folder

* Small style fixes

* Write the script to download and organize FER+ data

* Refactor code structure

* Fix paths

* Add test images

* Add ability to download video for conducting corresponding tests

* Refactor code structure (#13)

* Modify the file with settings for pre-commit hooks

* Fix requirement files

* Modify settings in configuration files

* Fix .gitignore file

* Fix annotations + small style fixes

* Delete output folders and small style fix in train file

* Move tests to separate folder

* Small style fixes

* Write the script to download and organize FER+ data

* Refactor code structure

* Fix paths

* Add test images

* Add ability to download video for conducting corresponding tests

* Write docstrings for FER class and add minor fixes

* Finish refactoring (#15)

* Move requirement files to root

* Set CI file

* Add setup file and file for setting the version of the package

* License file

* Modified setup file

* Update .gitignore

* Add __init__.py files

* Add possibility to choose torch device id + additional path checks

* Fix CI file

* Add warnings instead of prints

* Fix black version

* Fix utils annotation

* Fix fer test

* Fix tests

* Update version"
github.com/yylime/FlyAI_ImgCls,SimpleDrawing_FlyAI/main.py,2020-03-10T09:08:05Z,first commit
github.com/yylime/FlyAI_ImgCls,MushroomsRecognition/net.py,2021-08-20T08:23:42Z,add mushroom cls
github.com/shariqfarooq123/LocalBins,models/backbone/densenet.py,2022-07-20T03:58:43Z,first commit
github.com/shariqfarooq123/LocalBins,models/backbone/efficientnet.py,2022-07-20T03:58:43Z,first commit
github.com/lartpang/CAVER,method/caver.py,2023-05-01T12:59:29Z,update code
github.com/upfusion3d/upfusion,control_net/ldm/modules/midas/midas/vit.py,2023-12-12T00:51:03Z,add files
github.com/thunlp/RecyclableTuning,transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-05-26T20:24:10Z,Initial Commit
github.com/thunlp/RecyclableTuning,transformers/models/resnet/convert_resnet_to_pytorch.py,2023-05-26T20:24:10Z,Initial Commit
github.com/thunlp/RecyclableTuning,transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-05-26T20:24:10Z,Initial Commit
github.com/thunlp/RecyclableTuning,transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-05-26T20:24:10Z,Initial Commit
github.com/megvii-research/RealFlow,DPT/dpt/vit.py,2022-07-07T08:56:27Z,RealFlow generate
github.com/CVMI-Lab/ResKD,mmaction/models/recognizers/base.py,2022-11-15T12:13:45Z,init commit
github.com/Amiiney/cld-app-streamlit,models.py,2022-11-01T11:37:59Z,add cv2 dependencies
github.com/Amiiney/cld-app-streamlit,models.py,2021-03-06T14:16:15Z,Remove unused dependencies
github.com/Amiiney/cld-app-streamlit,models.py,2021-03-05T22:57:31Z,Removed Timm
github.com/Amiiney/cld-app-streamlit,models.py,2021-03-05T14:48:17Z,Add python script
github.com/KonradHabel/clip_reid,clipreid/model.py,2022-09-20T21:08:51Z,initial commit
github.com/WeixiongLin/PMC-CLIP,src/pmc_clip/timm_model.py,2023-04-03T00:39:10Z,update
github.com/WangFeng18/Segment-Anything-in-NeRF,samnerf/clipseg/models/vitseg.py,2023-04-27T13:20:56Z,sync
github.com/WangFeng18/Segment-Anything-in-NeRF,samnerf/preprocessing/get_dino_embeddings.py,2023-04-27T01:14:59Z,init
github.com/Texaser/MTN,dpt.py,2023-06-22T10:39:18Z,“multiscale-triplane”
github.com/MCR-PEFT/Ex-MCR,exmcr/ULIP/models/ULIP_models.py,2023-10-10T13:14:50Z,first commit
github.com/daigo0927/blog,multi-gpu-training/train_torch_dp.py,2021-05-17T16:05:37Z,add All/Using GPU print lines
github.com/daigo0927/blog,multi-gpu-training/train_torch_dp.py,2021-05-17T15:25:03Z,running confirmed with n-gpus option
github.com/daigo0927/blog,multi-gpu-training/train_torch_dp.py,2021-05-17T15:03:02Z,set n_gpus
github.com/daigo0927/blog,multi-gpu-training/train_torch_dp.py,2021-05-15T16:19:33Z,remove .item statements
github.com/daigo0927/blog,multi-gpu-training/train_torch_dp.py,2021-05-15T16:08:08Z,update DDP setup
github.com/daigo0927/blog,multi-gpu-training/train_torch_dp.py,2021-05-15T15:15:30Z,add sys import
github.com/daigo0927/blog,multi-gpu-training/train_torch_dp.py,2021-05-15T15:14:11Z,remove tqdm line
github.com/daigo0927/blog,multi-gpu-training/train_torch_dp.py,2021-05-15T15:12:16Z,remove tqdm line
github.com/daigo0927/blog,multi-gpu-training/train_torch_dp.py,2021-05-15T15:07:27Z,add show_progress script
github.com/daigo0927/blog,multi-gpu-training/train_torch_dp.py,2021-05-15T11:22:34Z,fix device statement (running confirmed)
github.com/daigo0927/blog,multi-gpu-training/train_torch_dp.py,2021-05-15T10:56:48Z,fix cuda statement
github.com/daigo0927/blog,multi-gpu-training/train_torch_dp.py,2021-05-14T11:12:41Z,fix GPU setup
github.com/daigo0927/blog,multi-gpu-training/train_torch_dp.py,2021-05-14T10:44:11Z,fix line for stanford-dogs folder structure
github.com/daigo0927/blog,multi-gpu-training/train_torch_dp.py,2021-05-14T10:24:29Z,add multi-GPU training scripts
github.com/daigo0927/blog,multi-gpu-training/train_torch_ddp.py,2021-05-16T00:18:19Z,fix print info
github.com/daigo0927/blog,multi-gpu-training/train_torch_ddp.py,2021-05-15T23:53:08Z,fix sampler.set_epoch line
github.com/daigo0927/blog,multi-gpu-training/train_torch_ddp.py,2021-05-15T23:51:43Z,fix device_ids line
github.com/daigo0927/blog,multi-gpu-training/train_torch_ddp.py,2021-05-15T23:50:17Z,fix global_rank line
github.com/daigo0927/blog,multi-gpu-training/train_torch_ddp.py,2021-05-15T23:45:17Z,fix device_ids line
github.com/daigo0927/blog,multi-gpu-training/train_torch_ddp.py,2021-05-15T22:08:42Z,add torch ddp script assuming torch.distributed.launch
github.com/daigo0927/blog,multi-gpu-training/train_torch_ddp.py,2021-05-15T17:07:47Z,fix typo
github.com/daigo0927/blog,multi-gpu-training/train_torch_ddp.py,2021-05-15T16:19:33Z,remove .item statements
github.com/daigo0927/blog,multi-gpu-training/train_torch_ddp.py,2021-05-15T16:08:08Z,update DDP setup
github.com/daigo0927/blog,multi-gpu-training/train_torch_ddp.py,2021-05-15T15:07:27Z,add show_progress script
github.com/daigo0927/blog,multi-gpu-training/train_torch_ddp.py,2021-05-15T11:40:44Z,"fix DDP (running confirmed, but scattered)"
github.com/daigo0927/blog,multi-gpu-training/train_torch_ddp.py,2021-05-14T11:12:41Z,fix GPU setup
github.com/daigo0927/blog,multi-gpu-training/train_torch_ddp.py,2021-05-14T11:01:28Z,add GPU setup
github.com/daigo0927/blog,multi-gpu-training/train_torch_ddp.py,2021-05-14T10:44:11Z,fix line for stanford-dogs folder structure
github.com/daigo0927/blog,multi-gpu-training/train_torch_ddp.py,2021-05-14T10:24:29Z,add multi-GPU training scripts
github.com/lancopku/clip-openness,slip/models.py,2022-11-25T10:52:13Z,init
github.com/pravdomil/Rerender-A-Video,ControlNet/annotator/midas/midas/vit.py,2023-06-16T08:15:01Z,"merge (#1)


- first commit (eab2e368258e9e9b159c3ad6abbc89227cdf3976)"
github.com/pravdomil/Rerender-A-Video,ControlNet/ldm/modules/midas/midas/vit.py,2023-06-16T08:15:01Z,"merge (#1)


- first commit (eab2e368258e9e9b159c3ad6abbc89227cdf3976)"
github.com/lewandofskee/DiAD,ldm/models/diffusion/ddpm.py,2023-12-17T14:31:31Z,update
github.com/lewandofskee/DiAD,ldm/models/diffusion/ddpm.py,2023-12-17T14:30:45Z,1
github.com/lewandofskee/DiAD,ldm/models/diffusion/ddpm.py,2023-12-17T14:29:01Z,111
github.com/lewandofskee/DiAD,ldm/modules/midas/midas/vit.py,2023-12-17T14:31:31Z,update
github.com/lewandofskee/DiAD,ldm/modules/midas/midas/vit.py,2023-12-17T14:30:45Z,1
github.com/lewandofskee/DiAD,ldm/modules/midas/midas/vit.py,2023-12-17T14:29:01Z,111
github.com/lewandofskee/DiAD,ldm/models/diffusion/.ipynb_checkpoints/ddpm-checkpoint.py,2023-12-17T14:31:31Z,update
github.com/lewandofskee/DiAD,ldm/models/diffusion/.ipynb_checkpoints/ddpm-checkpoint.py,2023-12-17T14:30:45Z,1
github.com/lewandofskee/DiAD,ldm/models/diffusion/.ipynb_checkpoints/ddpm-checkpoint.py,2023-12-17T14:29:01Z,111
github.com/lewandofskee/DiAD,test.py,2023-12-17T14:31:31Z,update
github.com/lewandofskee/DiAD,test.py,2023-12-17T14:30:45Z,1
github.com/lewandofskee/DiAD,test.py,2023-12-17T14:29:01Z,111
github.com/dolev104/neural_congealing,models/vit_extractor_model.py,2023-06-15T17:34:09Z,Add src code including pck and video options
github.com/RAIVNLab/CREPE,open_clip/timm_model.py,2023-03-27T01:50:19Z,added eval code
github.com/meilfang/SynthASpoof,model/model.py,2023-02-27T08:57:30Z,added files
github.com/michael-mueller-git/FunPos,FeatureExtraction/midas/midas/backbones/vit.py,2023-03-05T11:04:26Z,add my old midas tests
github.com/michael-mueller-git/FunPos,FeatureExtraction/midas/midas/backbones/beit.py,2023-03-05T11:04:26Z,add my old midas tests
github.com/michael-mueller-git/FunPos,FeatureExtraction/midas/midas/backbones/swin.py,2023-03-05T11:04:26Z,add my old midas tests
github.com/michael-mueller-git/FunPos,FeatureExtraction/midas/midas/backbones/levit.py,2023-03-05T11:04:26Z,add my old midas tests
github.com/michael-mueller-git/FunPos,FeatureExtraction/midas/midas/backbones/swin2.py,2023-03-05T11:04:26Z,add my old midas tests
github.com/michael-mueller-git/FunPos,FeatureExtraction/midas/midas/backbones/next_vit.py,2023-03-05T11:04:26Z,add my old midas tests
github.com/Yui010206/SeViLA,lavis/models/clip_models/model.py,2023-05-12T12:53:37Z,udpate_folder
github.com/Yui010206/SeViLA,lavis/models/clip_models/timm_model.py,2023-05-12T12:53:37Z,udpate_folder
github.com/Ashespt/AdvBCT,models/base_model.py,2023-05-04T03:35:08Z,upload code
github.com/WJ-Chang-42/ASTransformer,dpt/vit.py,2021-10-21T10:25:13Z,first commit
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-08-12T17:46:34Z,argparse update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-07-07T07:16:56Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-07-06T06:46:36Z,train update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-06-29T13:11:20Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-06-29T11:43:35Z,update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-06-29T11:35:19Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-06-24T12:06:02Z,dfdc update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-06-18T14:44:16Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-06-14T15:58:03Z,dfdc dataset update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-06-10T18:13:38Z,dftimithq method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-06-09T15:38:54Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-06-09T15:03:41Z,update methods
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-06-05T13:41:27Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-06-05T12:08:45Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-06-04T21:00:35Z,formatted
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-06-04T11:31:38Z,method updates
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-06-03T20:50:34Z,single predict update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-06-03T14:51:05Z,detect single image
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-06-02T15:47:44Z,celeb df update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-06-01T19:36:43Z,metrics update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-06-01T16:40:20Z,holdout val and kfold cross val
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-05-29T16:59:00Z,added percentage of face size margin
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-05-28T21:04:26Z,lstm pipeline
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-05-27T15:40:32Z,methods
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-05-26T14:38:19Z,pretrained mesonet
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-05-26T10:51:44Z,MesoInception4 pytorch
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-05-24T14:10:20Z,weighted prec at precision levels
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-05-20T14:05:54Z,"weighted precision metric

from dfdc preview paper"
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-05-11T14:43:23Z,celebdf dataset integration
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-05-10T21:17:51Z,auc and ap calculation
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-05-08T14:19:13Z,efficientnet test
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-05-07T13:36:51Z,added celeb df and efficientnet
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-05-06T15:51:51Z,save extracted faces as jpg
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-05-06T09:48:00Z,"clean up, new function"
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-05-05T19:27:50Z,"test, datasets, train, face detector updates

UADFV implementation, DFDetector implementation, Testing loop"
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/train.py,2020-05-04T14:15:30Z,updates
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-08-16T11:48:42Z,fixed typo
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-08-12T17:46:34Z,argparse update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-08-12T13:54:15Z,added argparse
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-08-12T11:22:56Z,added sixmethod ensemble to app
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-08-12T08:03:22Z,added DFDC rank 90 methods to app
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-07-17T14:44:51Z,web app update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-07-13T13:49:31Z,web app update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-07-06T11:41:25Z,dftimit lq method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-07-06T11:33:40Z,dftimit lq method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-07-02T14:18:08Z,web app update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-30T07:05:11Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-29T12:58:59Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-26T12:59:45Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-26T10:56:51Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-25T07:52:39Z,dfdc inference update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-25T06:50:24Z,update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-24T12:06:02Z,dfdc update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-18T14:44:16Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-15T19:07:28Z,update dfdc
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-15T11:54:25Z,files update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-14T15:58:03Z,dfdc dataset update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-14T14:41:17Z,dfdc dataset training implementation
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-13T20:36:27Z,num frames datasets
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-11T19:19:57Z,methods update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-11T18:07:39Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-11T15:16:39Z,sequence dftimit
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-11T09:28:17Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-10T18:13:38Z,dftimithq method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-10T11:50:53Z,dataset update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-09T18:52:17Z,tests df timit
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-09T15:38:54Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-09T15:03:41Z,update methods
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-07T14:46:57Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-06T20:18:37Z,method updates
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-05T14:12:32Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-05T13:41:27Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-05T12:08:45Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-04T21:00:35Z,formatted
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-04T14:26:51Z,method added
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-04T11:31:38Z,method updates
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-03T20:50:34Z,single predict update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-03T14:51:05Z,detect single image
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-02T15:47:44Z,celeb df update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-06-01T16:40:20Z,holdout val and kfold cross val
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-05-29T20:45:55Z,exception
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-05-29T16:59:00Z,added percentage of face size margin
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-05-29T15:23:35Z,added dfdc rank90 ensemble
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-05-28T21:04:26Z,lstm pipeline
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-05-27T15:40:32Z,methods
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-05-26T14:38:19Z,pretrained mesonet
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-05-26T10:51:44Z,MesoInception4 pytorch
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-05-24T15:47:17Z,export preds to csv
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-05-24T14:10:20Z,weighted prec at precision levels
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-05-11T14:43:23Z,celebdf dataset integration
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-05-08T14:19:13Z,efficientnet test
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-05-07T18:33:10Z,reproducibility seed added
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-05-07T13:36:51Z,added celeb df and efficientnet
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-05-07T07:49:23Z,train data update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-05-06T15:51:51Z,save extracted faces as jpg
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-05-06T09:48:00Z,"clean up, new function"
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-05-05T19:27:50Z,"test, datasets, train, face detector updates

UADFV implementation, DFDetector implementation, Testing loop"
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/dfdetector.py,2020-05-04T14:15:30Z,updates
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/pretrained_mods/efficientnetb1lstm.py,2020-07-21T08:03:03Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/pretrained_mods/efficientnetb1lstm.py,2020-07-17T14:44:51Z,web app update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/pretrained_mods/efficientnetb1lstm.py,2020-07-03T20:47:46Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/pretrained_mods/efficientnetb1lstm.py,2020-06-29T11:35:19Z,method update
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/pretrained_mods/efficientnetb1lstm.py,2020-06-04T21:00:35Z,formatted
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/pretrained_mods/efficientnetb1lstm.py,2020-05-28T21:04:26Z,lstm pipeline
github.com/CatoGit/Comparing-the-Performance-of-Deepfake-Detection-Methods-on-Benchmark-Datasets,deepfake_detector/pretrained_mods/efficientnetb1lstm.py,2020-05-27T15:27:11Z,EfficientNetB1 +LSTM and ResNet50 + LSTM
github.com/awslabs/fast-differential-privacy,examples/image_classification/CV_TIMM.py,2024-02-09T09:19:39Z,Update CV_TIMM.py
github.com/awslabs/fast-differential-privacy,examples/image_classification/CV_TIMM.py,2024-02-09T08:44:23Z,Update CV_TIMM.py
github.com/awslabs/fast-differential-privacy,examples/image_classification/CV_TIMM.py,2024-02-05T07:16:21Z,Create CV_TIMM.py
github.com/awslabs/fast-differential-privacy,examples/image_classification/CIFAR_TIMM.py,2024-02-09T10:04:17Z,Update CIFAR_TIMM.py
github.com/awslabs/fast-differential-privacy,examples/image_classification/CIFAR_TIMM.py,2024-02-05T07:02:27Z,Update CIFAR_TIMM.py
github.com/awslabs/fast-differential-privacy,examples/image_classification/CIFAR_TIMM.py,2023-05-13T18:45:38Z,remove attach and add group-wise clipping
github.com/awslabs/fast-differential-privacy,examples/image_classification/CIFAR_TIMM.py,2022-11-21T15:06:34Z,Initial commit
github.com/awslabs/fast-differential-privacy,examples/image_classification/CelebA_TIMM.py,2023-05-13T18:45:38Z,remove attach and add group-wise clipping
github.com/awslabs/fast-differential-privacy,examples/image_classification/CelebA_TIMM.py,2022-11-21T15:06:34Z,Initial commit
github.com/awslabs/fast-differential-privacy,examples/image_classification/ZERO_examples/CIFAR_TIMM_ZERO1.py,2024-02-11T01:03:46Z,Update CIFAR_TIMM_ZERO1.py
github.com/awslabs/fast-differential-privacy,examples/image_classification/ZERO_examples/CIFAR_TIMM_ZERO1.py,2024-02-06T01:26:00Z,Update CIFAR_TIMM_ZERO1.py
github.com/awslabs/fast-differential-privacy,examples/image_classification/ZERO_examples/CIFAR_TIMM_ZERO1.py,2024-02-06T01:25:04Z,Update CIFAR_TIMM_ZERO1.py
github.com/awslabs/fast-differential-privacy,examples/image_classification/ZERO_examples/CIFAR_TIMM_ZERO1.py,2024-02-06T01:22:36Z,Create CIFAR_TIMM_ZERO1.py
github.com/awslabs/fast-differential-privacy,examples/image_classification/ZERO_examples/CIFAR_TIMM_ZERO23.py,2024-02-06T01:25:37Z,Update CIFAR_TIMM_ZERO23.py
github.com/awslabs/fast-differential-privacy,examples/image_classification/ZERO_examples/CIFAR_TIMM_ZERO23.py,2024-02-06T01:24:06Z,Create CIFAR_TIMM_ZERO23.py
github.com/awslabs/fast-differential-privacy,examples/image_classification/ZERO_examples/CIFAR_TIMM_FSDP_extending.py,2024-02-06T01:46:56Z,Update CIFAR_TIMM_FSDP_extending.py
github.com/awslabs/fast-differential-privacy,examples/image_classification/ZERO_examples/CIFAR_TIMM_FSDP_extending.py,2024-02-06T01:44:36Z,Create CIFAR_TIMM_FSDP_extending.py
github.com/awslabs/fast-differential-privacy,examples/image_classification/ZERO_examples/CIFAR_TIMM_ZERO_extending.py,2024-02-06T02:19:18Z,Create CIFAR_TIMM_ZERO_extending.py
github.com/Soester10/Bokeh-Rendering-with-Vision-Transformers,model.py,2022-07-21T06:48:14Z,"Update model.py

line 634, super(type, obj): obj must be an instance or subtype of type"
github.com/Soester10/Bokeh-Rendering-with-Vision-Transformers,model.py,2021-11-23T14:01:45Z,First commit
github.com/korawat-tanwisuth/POUF,pouf_lvm/examples/pouf/image_classification/utils.py,2023-04-27T23:08:57Z,first commit
github.com/faustomorales/mira,mira/detectors/common.py,2022-11-21T23:39:18Z,Allow constant value configuration.
github.com/faustomorales/mira,mira/detectors/common.py,2022-07-25T00:33:36Z,Add maximum option for padding to multiples.
github.com/faustomorales/mira,mira/detectors/common.py,2022-07-21T23:53:48Z,Refactor to enable more deferred operations.
github.com/faustomorales/mira,mira/detectors/common.py,2022-07-21T02:05:41Z,More flexibility around extra blocks.
github.com/faustomorales/mira,mira/detectors/common.py,2022-07-20T16:01:00Z,Re-factor resizing utilities.
github.com/faustomorales/mira,mira/detectors/common.py,2022-07-07T01:33:26Z,Basic classification framework.
github.com/faustomorales/mira,mira/detectors/common.py,2022-06-06T21:44:51Z,"Improved serving API, added flexibility for FasterRCNN."
github.com/faustomorales/mira,mira/detectors/common.py,2022-06-06T18:17:31Z,Improved detection API.
github.com/faustomorales/mira,mira/detectors/common.py,2022-05-21T00:00:58Z,Initial pass at more flexible training and removing persnickety architectures.
github.com/faustomorales/mira,mira/detectors/common.py,2022-03-23T02:41:32Z,Make resizing more flexible.
github.com/faustomorales/mira,mira/detectors/common.py,2022-01-26T00:25:05Z,Support more RetinaNet configurations. Support polygons.
github.com/faustomorales/mira,mira/detectors/common.py,2021-10-07T00:40:27Z,Fix torchserve inference function for GPU.
github.com/faustomorales/mira,mira/detectors/common.py,2021-09-30T02:06:52Z,Make torchserve models support more resizing methods.
github.com/megvii-research/MSCL,mmaction/models/recognizers/base.py,2022-07-19T03:49:07Z,init
github.com/Nikolai10/SwinT-ChARM,swin-transformers-tf/convert.py,2022-08-09T17:34:03Z,first commit
github.com/Computer-Vision-in-the-Wild/Elevater_Toolkit_IC,vision_benchmark/evaluation/feature.py,2023-10-17T01:28:44Z,Support loading from HF directly for CLIP models
github.com/Computer-Vision-in-the-Wild/Elevater_Toolkit_IC,vision_benchmark/evaluation/feature.py,2023-08-28T01:55:17Z,Update SAS
github.com/Computer-Vision-in-the-Wild/Elevater_Toolkit_IC,vision_benchmark/evaluation/feature.py,2023-03-30T00:52:27Z,Onboard REACT model and checkpoints
github.com/Computer-Vision-in-the-Wild/Elevater_Toolkit_IC,vision_benchmark/evaluation/feature.py,2023-03-30T00:33:23Z,Optimize zero-shot evaluation
github.com/Computer-Vision-in-the-Wild/Elevater_Toolkit_IC,vision_benchmark/evaluation/feature.py,2022-11-15T07:53:28Z,Fix #6
github.com/Computer-Vision-in-the-Wild/Elevater_Toolkit_IC,vision_benchmark/evaluation/feature.py,2022-09-23T14:54:02Z,"Add DeCLIP, FILIP, SLIP models."
github.com/Computer-Vision-in-the-Wild/Elevater_Toolkit_IC,vision_benchmark/evaluation/feature.py,2022-08-09T08:43:34Z,Add prediction saving for all commands.
github.com/Computer-Vision-in-the-Wild/Elevater_Toolkit_IC,vision_benchmark/evaluation/feature.py,2022-06-30T16:26:10Z,fix json
github.com/Computer-Vision-in-the-Wild/Elevater_Toolkit_IC,vision_benchmark/evaluation/feature.py,2022-06-19T04:11:41Z,Add toolkit
github.com/guanyuezhen/AR-CDNet,models/encoder.py,2023-05-31T09:13:53Z,update
github.com/saikrishna-prathapaneni/LowDINO,custom/mobile.py,2023-05-17T05:23:08Z,changes added accordingly
github.com/saikrishna-prathapaneni/LowDINO,custom/mobile.py,2023-05-11T05:44:42Z,batch files
github.com/saikrishna-prathapaneni/LowDINO,custom/mobile.py,2023-05-06T05:13:50Z,added mobilevit variant
github.com/istiakshihab/automated-retail-checkout-aicity22,training/classification/clsf_training.py,2022-04-18T09:22:16Z,"added documentation and bash script related to classification tasks including data preprocessing, folder formatting and model training"
github.com/istiakshihab/automated-retail-checkout-aicity22,test/infer.py,2022-04-27T15:26:43Z,Test script update
github.com/istiakshihab/automated-retail-checkout-aicity22,test/infer.py,2022-04-19T16:57:18Z,incoming changes
github.com/istiakshihab/automated-retail-checkout-aicity22,test/infer.py,2022-04-19T16:54:18Z,deletes
github.com/istiakshihab/automated-retail-checkout-aicity22,test/infer.py,2022-04-18T17:36:51Z,Readme Updated | Inference updated
github.com/istiakshihab/automated-retail-checkout-aicity22,test/infer.py,2022-04-17T15:10:17Z,Inference Ready
github.com/istiakshihab/automated-retail-checkout-aicity22,test/infer.py,2022-04-16T16:46:22Z,Reorganize
github.com/rainbow-xiao/ECCV2022-ILR-workshop,GUIE/build_model.py,2022-10-16T09:06:46Z,GUIE-2022
github.com/shikiw/OPERA,transformers-4.29.2/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-11-30T11:07:38Z,new update
github.com/shikiw/OPERA,transformers-4.29.2/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-11-30T11:07:38Z,new update
github.com/shikiw/OPERA,transformers-4.29.2/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-11-30T11:07:38Z,new update
github.com/shikiw/OPERA,transformers-4.29.2/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-11-30T11:07:38Z,new update
github.com/shikiw/OPERA,transformers-4.29.2/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-11-30T11:07:38Z,new update
github.com/shikiw/OPERA,transformers-4.29.2/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-11-30T11:07:38Z,new update
github.com/shikiw/OPERA,transformers-4.29.2/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-11-30T11:07:38Z,new update
github.com/shikiw/OPERA,transformers-4.29.2/src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-11-30T11:07:38Z,new update
github.com/rodrigobaron/quick-deploy,examples/torch_timm/timm_resnet18_download.py,2022-01-17T16:17:57Z,"add: --quant-type and --custom-module args (#23)

* add: --quant-type and --custom-module args

* release 0.2.2"
github.com/rodrigobaron/quick-deploy,examples/torch_timm/timm_resnet18_download.py,2022-01-11T02:35:44Z,"fix: examples documentation (#22)

* fix: sklearn documentation

* fix: skl readme typo

* fix: tf mnist example

* fix: xgboost example

* fix: torch example

* fix: image in torch example

* fix: package typo torch example

* fix: torch readme flags"
github.com/VL-Group/Natural-Color-Fool,utils/models.py,2022-11-11T08:59:37Z,update
github.com/mddunlap924/StableDiffusion2-Image-to-Text,utils/training/vit.py,2023-06-24T14:33:58Z,Initial Push
github.com/SLDGroup/GradientFilter-CVPR23,segmentation/mmsegmentation/mmseg/models/backbones/timm_backbone.py,2023-06-06T23:06:43Z,init
github.com/Jun-Pu/PUENet,codes/models/vit.py,2022-03-22T21:06:30Z,Add files via upload
github.com/deeplearning-wisc/vit-spurious-robustness,train_vit.py,2022-11-30T02:13:24Z,Update train_vit.py
github.com/deeplearning-wisc/vit-spurious-robustness,train_vit.py,2022-03-17T21:14:36Z,Updated
github.com/deeplearning-wisc/vit-spurious-robustness,train_vit.py,2022-03-17T01:07:36Z,"Add files via upload

Initial Commit"
github.com/deeplearning-wisc/vit-spurious-robustness,cmnist_consistency.py,2022-03-17T21:14:36Z,Updated
github.com/deeplearning-wisc/vit-spurious-robustness,evaluation_utils/cal.py,2022-03-17T22:11:15Z,Updated
github.com/deeplearning-wisc/vit-spurious-robustness,evaluation_utils/cal.py,2022-03-17T01:11:49Z,Add files via upload
github.com/deeplearning-wisc/vit-spurious-robustness,waterbirds_consistency.py,2022-03-17T21:14:36Z,Updated
github.com/deeplearning-wisc/vit-spurious-robustness,evaluation_utils/evaluate_acc.py,2022-04-08T04:17:42Z,Update evaluate_acc.py
github.com/deeplearning-wisc/vit-spurious-robustness,evaluation_utils/evaluate_acc.py,2022-03-17T01:11:49Z,Add files via upload
github.com/deeplearning-wisc/vit-spurious-robustness,evaluation_utils/cmnist_consistency.py,2022-03-17T01:11:49Z,Add files via upload
github.com/deeplearning-wisc/vit-spurious-robustness,evaluation_utils/waterbirds_consistency.py,2022-03-17T01:11:49Z,Add files via upload
github.com/zerovl/ZeroVL,zerovl/models/backbones/mml/timm_builder.py,2022-01-18T10:55:39Z,init commit
github.com/Adonis-galaxy/DepthCLIP,DepthCLIP_code/dpt/vit.py,2022-05-16T02:52:59Z,first commit
github.com/mayorx/PointDETR,cvpods/cvpods/modeling/backbone/timm_backbone.py,2022-04-26T17:27:28Z,init repo
github.com/xubodhu/VisualPT-MoE,model/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-03-29T13:24:12Z,init commit
github.com/xubodhu/VisualPT-MoE,model/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-03-29T13:24:12Z,init commit
github.com/akhilvaid/HeartBEiT,load_checkpoint.py,2022-12-15T15:56:36Z,Add files via upload
github.com/Zhimin-C/Bridge3D,Pretrain/models/CrossModal.py,2024-01-15T19:25:08Z,add
github.com/CristianoPatricio/coherent-cbe-skin,modules/model_builder.py,2023-04-03T11:06:51Z,Add code
github.com/XmYx/ainodes_engine_base_nodes,ainodes_backend/cnet_preprocessors/midas/midas/vit.py,2023-03-12T16:43:36Z,backend function ops
github.com/camenduru/Rerender-hf,ControlNet/annotator/midas/midas/vit.py,2023-06-16T08:15:01Z,"merge (#1)


- first commit (eab2e368258e9e9b159c3ad6abbc89227cdf3976)"
github.com/camenduru/Rerender-hf,ControlNet/ldm/modules/midas/midas/vit.py,2023-06-16T08:15:01Z,"merge (#1)


- first commit (eab2e368258e9e9b159c3ad6abbc89227cdf3976)"
github.com/force-sight/forcesight,prediction/models.py,2023-10-11T23:44:20Z,"opensource forcesight, dataset pending

Signed-off-by: youliang <tan_you_liang@hotmail.com>"
github.com/griff4692/calibrating-summaries,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-05-09T17:27:20Z,Initial commit.
github.com/griff4692/calibrating-summaries,transformers/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-05-09T17:27:20Z,Initial commit.
github.com/griff4692/calibrating-summaries,transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-05-09T17:27:20Z,Initial commit.
github.com/griff4692/calibrating-summaries,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-05-09T17:27:20Z,Initial commit.
github.com/griff4692/calibrating-summaries,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-05-09T17:27:20Z,Initial commit.
github.com/griff4692/calibrating-summaries,transformers/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-05-09T17:27:20Z,Initial commit.
github.com/WildMeOrg/wildbook-ia,wbia/algo/detect/efficientnet.py,2024-01-04T22:57:20Z,Update efficientnet.py
github.com/WildMeOrg/wildbook-ia,wbia/algo/detect/efficientnet.py,2024-01-04T02:12:51Z,Update efficientnet.py
github.com/WildMeOrg/wildbook-ia,wbia/algo/detect/efficientnet.py,2024-01-03T18:37:33Z,Update efficientnet.py
github.com/WildMeOrg/wildbook-ia,wbia/algo/detect/efficientnet.py,2023-08-16T17:07:44Z,Update efficientnet.py
github.com/WildMeOrg/wildbook-ia,wbia/algo/detect/efficientnet.py,2023-08-03T13:00:56Z,"Update efficientnet.py

Including deer efficientnet"
github.com/WildMeOrg/wildbook-ia,wbia/algo/detect/efficientnet.py,2023-06-30T17:30:39Z,Update efficientnet config for snails
github.com/WildMeOrg/wildbook-ia,wbia/algo/detect/efficientnet.py,2023-06-16T14:04:47Z,fixes linting
github.com/WildMeOrg/wildbook-ia,wbia/algo/detect/efficientnet.py,2023-06-16T13:54:51Z,adds efficientnet labeler
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2023-09-01T13:35:10Z,"tidy eval.py

removed results_dict and  patient_results which didn't seem to do anything"
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2023-09-01T11:26:34Z,remove old debugging code
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2023-08-21T13:07:05Z,add ATEC23 splits
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2023-08-18T13:02:05Z,set up HIPT augmentations
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2023-08-01T09:38:59Z,update for using DGX
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2023-07-31T10:44:56Z,Work for ESGO and ATEC
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2023-07-17T11:08:37Z,"integrate HIPT

currently using HIPT_Â4K feature extraction for 4096x4096 patches and classifying these through ABMIL/CLAM"
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2023-07-10T15:32:46Z,"add HIPT feature extraction

the Hierarchical Image Pyramid Transformer is pretrained on 4096x4096 patches, and works using two layers of vision transformers, one a 256x256 and one a 4096x4096. More details at https://github.com/mahmoodlab/HIPT"
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2023-07-03T11:59:30Z,"initial working code for on-line augmentations

definitely isn't currently in its optimal form, can't use more than about 500 patches per slide without running out of memory, performance is bad, and it doesnt seem to be learning during training"
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2023-06-21T14:16:38Z,"attempt to implement online augmentations

aim to use this with DMMN patches"
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2022-11-23T00:09:21Z,changes for sampling tuning
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2022-11-14T17:39:55Z,"refactor train tuning functions

now only one main.py and removed core_utils_sampling_tuning. Not yet got CLAM working with tuning"
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2022-11-03T21:10:56Z,CLAMmb tuning changes
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2022-10-31T10:46:28Z,set patience to 40 and prepare for CLAM tuning
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2022-10-29T14:27:16Z,running tuning for longer
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2022-10-20T15:30:09Z,minor bugfixes
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2022-10-20T15:24:18Z,automatically calculate balanced ce weights
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2022-10-20T13:41:05Z,Removing limit on number of slides per epoch
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2022-10-15T14:49:09Z,Adding logging for early stopping
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2022-10-14T11:21:52Z,Preparing to tune to 100 epochs
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2022-10-13T17:25:38Z,Manual attempt to balance cross entropy
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2022-10-13T13:31:29Z,Fix bug in min_epochs
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2022-10-13T13:10:10Z,Add minimum number of training epochs
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2022-10-10T15:17:17Z,Change default early stopping to 20 epochs
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2022-05-20T19:42:52Z,Merge branch 'mahmoodlab:master' into master
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2022-05-19T18:08:28Z,"Remove outdated code

Remove reference to model_type 'clam', which is no longer functional, as explained in https://github.com/mahmoodlab/CLAM/issues/15."
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2022-02-24T10:41:36Z,"Add ability to load model checkpoint

This functionality likely only works for a single fold with the current implementation, and resets the epoch counter so may lead to overfitting if used carelessly."
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2021-08-17T22:42:52Z,Update core_utils.py
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2021-08-02T17:34:35Z,update import of smoothtop1svm in core_utils
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2021-08-02T17:28:22Z,update import of SmoothTop1SVM in core_utils
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2021-03-01T16:44:41Z,update fast patching/feature extraction pipeline
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2020-07-13T19:44:23Z,update
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2020-07-13T04:35:40Z,"Update core_utils.py

fix: duplicate code_block"
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2020-05-01T19:45:04Z,remove unneeded imports
github.com/scjjb/HIPT_ABMIL_ATEC23,utils/core_utils.py,2020-04-26T05:16:26Z,init
github.com/scjjb/HIPT_ABMIL_ATEC23,extract_features_fp.py,2023-09-07T22:53:57Z,"add blur transform option

also updated pad_slide to work with any patch size and reinstated the bit of code that allows numeric titles for slides"
github.com/scjjb/HIPT_ABMIL_ATEC23,extract_features_fp.py,2023-09-01T14:16:36Z,further tidy extract_features_fp.py
github.com/scjjb/HIPT_ABMIL_ATEC23,extract_features_fp.py,2023-09-01T14:13:10Z,tidy extract_features_fp.py
github.com/scjjb/HIPT_ABMIL_ATEC23,extract_features_fp.py,2023-08-22T18:03:18Z,add another augmentation option
github.com/scjjb/HIPT_ABMIL_ATEC23,extract_features_fp.py,2023-08-22T16:27:11Z,minor bugfix
github.com/scjjb/HIPT_ABMIL_ATEC23,extract_features_fp.py,2023-08-22T15:39:56Z,add another augment option
github.com/scjjb/HIPT_ABMIL_ATEC23,extract_features_fp.py,2023-08-21T19:22:16Z,add less extreme augmentation option
github.com/scjjb/HIPT_ABMIL_ATEC23,extract_features_fp.py,2023-08-18T13:02:05Z,set up HIPT augmentations
github.com/scjjb/HIPT_ABMIL_ATEC23,extract_features_fp.py,2023-07-17T11:08:37Z,"integrate HIPT

currently using HIPT_Â4K feature extraction for 4096x4096 patches and classifying these through ABMIL/CLAM"
github.com/scjjb/HIPT_ABMIL_ATEC23,extract_features_fp.py,2023-07-10T15:32:46Z,"add HIPT feature extraction

the Hierarchical Image Pyramid Transformer is pretrained on 4096x4096 patches, and works using two layers of vision transformers, one a 256x256 and one a 4096x4096. More details at https://github.com/mahmoodlab/HIPT"
github.com/scjjb/HIPT_ABMIL_ATEC23,extract_features_fp.py,2023-06-09T14:26:20Z,Add patching function for tumour-segmented slides
github.com/scjjb/HIPT_ABMIL_ATEC23,extract_features_fp.py,2023-05-06T12:08:58Z,"add macenko normalisation, tiny model, feature perturbs"
github.com/scjjb/HIPT_ABMIL_ATEC23,extract_features_fp.py,2022-10-28T14:31:31Z,further refactoring sampling functions
github.com/scjjb/HIPT_ABMIL_ATEC23,extract_features_fp.py,2022-10-26T11:45:44Z,refactor args.task
github.com/scjjb/HIPT_ABMIL_ATEC23,extract_features_fp.py,2022-09-01T10:23:09Z,"Add transformations and levit_128s

Also removed inconsistent tabs and replaced them with spaces. Also added a line to integrate with the current version of Whole_Slide_Bag_FP which requires a call to update_sample to load any data."
github.com/scjjb/HIPT_ABMIL_ATEC23,extract_features_fp.py,2022-05-11T18:02:12Z,Added histo pretraining capability
github.com/scjjb/HIPT_ABMIL_ATEC23,extract_features_fp.py,2022-02-14T15:17:53Z,"Add GPU check

Added a line to print whether torch is using cpu or cuda (gpu)"
github.com/scjjb/HIPT_ABMIL_ATEC23,extract_features_fp.py,2021-08-30T02:05:48Z,Update extract_features_fp.py
github.com/scjjb/HIPT_ABMIL_ATEC23,extract_features_fp.py,2021-05-24T19:24:06Z,add heatmap visualization
github.com/scjjb/HIPT_ABMIL_ATEC23,extract_features_fp.py,2021-03-01T16:44:41Z,update fast patching/feature extraction pipeline
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2023-09-07T22:53:57Z,"add blur transform option

also updated pad_slide to work with any patch size and reinstated the bit of code that allows numeric titles for slides"
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2023-08-21T13:07:05Z,add ATEC23 splits
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2023-08-18T10:57:38Z,"changes for ATEC

main things are tuning parameters, segmentations, and making it possible to pad slides for the test set slides that are too small"
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2023-07-31T10:44:56Z,Work for ESGO and ATEC
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2023-07-17T11:08:37Z,"integrate HIPT

currently using HIPT_Â4K feature extraction for 4096x4096 patches and classifying these through ABMIL/CLAM"
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2023-07-10T15:32:46Z,"add HIPT feature extraction

the Hierarchical Image Pyramid Transformer is pretrained on 4096x4096 patches, and works using two layers of vision transformers, one a 256x256 and one a 4096x4096. More details at https://github.com/mahmoodlab/HIPT"
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2023-07-03T11:59:30Z,"initial working code for on-line augmentations

definitely isn't currently in its optimal form, can't use more than about 500 patches per slide without running out of memory, performance is bad, and it doesnt seem to be learning during training"
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2023-06-21T14:16:38Z,"attempt to implement online augmentations

aim to use this with DMMN patches"
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2023-06-09T14:26:20Z,Add patching function for tumour-segmented slides
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2023-05-08T11:58:34Z,"change augmentation functionality for better comparisons

previous approach would train with all augmented versions of a slide every epoch, this approach uses only one version of each slide every epoch"
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2023-05-06T12:08:58Z,"add macenko normalisation, tiny model, feature perturbs"
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2022-12-28T13:05:28Z,"allow eval without coords_path

we believe its faster when using coords_path, but this is an alternative to instead use the h5 features file"
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2022-11-27T15:34:18Z,add useful splits for testing code
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2022-11-23T18:41:50Z,Merge branch 'master' of https://github.com/scjjb/CLAM-private
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2022-11-23T18:41:41Z,changes for DGX main
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2022-11-23T14:50:40Z,speeding up sampling work in progress
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2022-11-22T15:49:33Z,"Converting coords to pt files for speed

This will need adapting for the DGX as it currently wont be able to find coords"
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2022-10-20T15:30:09Z,minor bugfixes
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2022-10-20T15:24:18Z,automatically calculate balanced ce weights
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2022-10-10T16:15:41Z,Fix spacing
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2022-06-27T14:31:40Z,"Return slide_id when using h5

slide_id is useful in utils/eval_utils.py"
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2021-12-02T08:36:13Z,Isolate fix for datatype comparison bug
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2021-12-02T08:27:02Z,Get training working and fix a datatype comparison bug
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2021-03-01T16:44:41Z,update fast patching/feature extraction pipeline
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2020-05-15T00:38:13Z,fix support for passing custom test ids
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2020-05-01T19:34:38Z,remove unneeded imports
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2020-05-01T18:15:33Z,remove duplicate function call
github.com/scjjb/HIPT_ABMIL_ATEC23,datasets/dataset_generic.py,2020-04-26T05:16:26Z,init
github.com/bwconrad/flexivit,eval.py,2023-03-04T16:20:19Z,Combine eval and dataloading + fix imports
github.com/bwconrad/flexivit,eval.py,2023-02-27T18:15:47Z,Small refactor
github.com/bwconrad/flexivit,eval.py,2023-02-27T18:10:14Z,Refactor
github.com/bwconrad/flexivit,eval.py,2023-02-25T20:00:26Z,Add back log to print results
github.com/bwconrad/flexivit,eval.py,2023-02-25T18:36:11Z,Add option to write results to csv
github.com/bwconrad/flexivit,eval.py,2023-02-25T17:09:33Z,Remove unused imports
github.com/bwconrad/flexivit,eval.py,2023-02-24T22:16:28Z,Switch to loading weights from timm
github.com/bwconrad/flexivit,eval.py,2023-02-24T18:48:57Z,Init commit
github.com/yh-pengtu/GuidedMix-Net,mmseg/models/backbones/timm_backbone.py,2023-02-07T12:38:50Z,codes for guidedmix-net
github.com/jimmy15923/mit,models/unet_2d.py,2023-11-25T08:02:37Z,Refactor
github.com/jimmy15923/mit,models/unet_2d.py,2023-06-12T16:30:58Z,update
github.com/01BB01/eBayChallenge,src/models/components/torchvision_image_encoder.py,2022-06-02T08:47:09Z,[feat] added gem for resnet50
github.com/01BB01/eBayChallenge,src/models/components/torchvision_image_encoder.py,2022-06-02T08:47:09Z,[feat] added gem
github.com/01BB01/eBayChallenge,src/models/components/torchvision_image_encoder.py,2022-06-02T08:47:09Z,[fix] beit params
github.com/01BB01/eBayChallenge,src/models/components/torchvision_image_encoder.py,2022-06-02T08:47:09Z,[feat] add beit
github.com/01BB01/eBayChallenge,src/models/components/torchvision_image_encoder.py,2022-04-17T12:47:39Z,[fix] bug in drop
github.com/01BB01/eBayChallenge,src/models/components/torchvision_image_encoder.py,2022-04-17T11:15:00Z,[feat] add drop_path_rate
github.com/01BB01/eBayChallenge,src/models/components/torchvision_image_encoder.py,2022-03-18T11:54:11Z,[fix] bug in convnext
github.com/01BB01/eBayChallenge,src/models/components/torchvision_image_encoder.py,2022-03-18T11:54:11Z,[feat] add convnext
github.com/01BB01/eBayChallenge,src/models/components/torchvision_image_encoder.py,2022-03-15T19:55:17Z,[feat] add contrastive pipeline
github.com/01BB01/eBayChallenge,src/models/components/torchvision_image_encoder.py,2022-03-15T14:51:11Z,[feat] vit baseline running config
github.com/01BB01/eBayChallenge,src/models/components/torchvision_image_encoder.py,2022-03-14T14:49:18Z,added vit encoder
github.com/01BB01/eBayChallenge,src/models/components/torchvision_image_encoder.py,2022-03-13T20:18:00Z,[feat] training and val pipeline start to run
github.com/royukira/AIC22_Track1_MTMC_ID10,tracklet/ibot/analysis/backgrounds_challenge/tools/model_utils.py,2022-04-15T07:05:12Z,init
github.com/Rapisurazurite/Dynamic-sparse-rcnn,sparse_rcnn/model/sparseRCNN.py,2022-06-12T11:27:39Z,"Add files via upload

multi-GPUs support"
github.com/Rapisurazurite/Dynamic-sparse-rcnn,sparse_rcnn/model/sparseRCNN.py,2022-06-10T07:20:42Z,Add files via upload
github.com/Rapisurazurite/Dynamic-sparse-rcnn,sparse_rcnn/model/dynamicSparseRCNN.py,2022-06-12T11:27:39Z,"Add files via upload

multi-GPUs support"
github.com/Rapisurazurite/Dynamic-sparse-rcnn,sparse_rcnn/model/dynamicSparseRCNN.py,2022-06-10T07:20:42Z,Add files via upload
github.com/Rapisurazurite/Dynamic-sparse-rcnn,test/backbone_test.py,2022-06-10T07:17:55Z,Add files via upload
github.com/decemberzhou/TF_TAS,train.py,2022-06-20T06:37:12Z,first
github.com/fengql123/kaggle-vesuvius-10th-place-solution,model.py,2023-06-16T02:36:54Z,initial commit
github.com/Owais-Ansari/Unet3plus,utils/models.py,2023-08-04T10:09:04Z,Update models.py
github.com/Owais-Ansari/Unet3plus,utils/models.py,2023-08-04T10:01:48Z,"Update models.py

Added deepsupervision with convnext_tiny and convnext_small backbone"
github.com/Owais-Ansari/Unet3plus,utils/models.py,2023-06-16T12:25:15Z,Update models.py
github.com/Owais-Ansari/Unet3plus,utils/models.py,2023-05-14T15:11:45Z,"Update models.py

Updated model arguments.
updated arguments: n_classes , encoder"
github.com/Owais-Ansari/Unet3plus,utils/models.py,2023-05-02T06:46:20Z,"Git 

Unet3plus"
github.com/MCR-PEFT/C-MCR,cmcr/ULIP/models/ULIP_models.py,2023-10-13T13:33:32Z,init
github.com/badripatro/svt,main.py,2023-10-27T15:05:32Z,Add files via upload
github.com/River-Zhang/SIFU,lib/pare/pare/models/backbone/hrnet_legacy.py,2024-02-28T01:21:53Z,code release
github.com/aofrancani/DPT-VO,dpt/vit.py,2022-10-05T03:07:19Z,Initial commit
github.com/zhijie-group/LOVECon,annotator/midas/midas/vit.py,2023-10-09T14:56:40Z,lovecon
github.com/qaz670756/MMCD,models/SUNet18.py,2023-07-28T00:24:28Z,Initial commit
github.com/qaz670756/MMCD,models/.ipynb_checkpoints/SUNet18-checkpoint.py,2023-07-28T00:24:28Z,Initial commit
github.com/PeterouZh/HRInversion,hrinversion/models/vgg_conv_perceptual_loss.py,2022-07-03T12:34:50Z,Add usage.
github.com/PeterouZh/HRInversion,hrinversion/models/vgg_conv_perceptual_loss.py,2022-07-03T11:55:30Z,Add hrinversion.
github.com/wandb/SageMakerStudio,segmentation/model.py,2022-03-09T13:25:33Z,initial commit
github.com/HillZhang1999/ICD,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-12-23T08:01:08Z,add transformers
github.com/HillZhang1999/ICD,transformers/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-12-23T08:01:08Z,add transformers
github.com/HillZhang1999/ICD,transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-12-23T08:01:08Z,add transformers
github.com/HillZhang1999/ICD,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-12-23T08:01:08Z,add transformers
github.com/HillZhang1999/ICD,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-12-23T08:01:08Z,add transformers
github.com/HillZhang1999/ICD,transformers/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-12-23T08:01:08Z,add transformers
github.com/HillZhang1999/ICD,transformers/src/transformers/models/timm_backbone/modeling_timm_backbone.py,2023-12-23T08:01:08Z,add transformers
github.com/HillZhang1999/ICD,transformers/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-12-23T08:01:08Z,add transformers
github.com/HillZhang1999/ICD,transformers/src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-12-23T08:01:08Z,add transformers
github.com/cpystan/PSM,main_monuseg.py,2023-10-27T06:56:40Z,update
github.com/cpystan/PSM,main_monuseg.py,2023-10-27T05:42:21Z,update
github.com/cpystan/PSM,main_monuseg.py,2023-10-27T05:40:26Z,update
github.com/cpystan/PSM,main_monuseg.py,2022-10-13T07:30:29Z,my first commit
github.com/shiyuchengTJU/PAR,models/ensemble.py,2021-12-02T03:23:13Z,Add files via upload
github.com/hiennguyen9874/person-attribute-recognition,models/backbone/timm_extractor.py,2022-01-04T02:35:23Z,Fix package and chmod
github.com/hiennguyen9874/person-attribute-recognition,models/backbone/timm_extractor.py,2020-10-05T15:59:44Z,Refactor
github.com/hiennguyen9874/person-attribute-recognition,models/backbone/timm_extractor.py,2020-09-28T07:40:22Z,Update loss
github.com/hiennguyen9874/person-attribute-recognition,models/backbone/timm_extractor.py,2020-09-28T03:24:54Z,Add Tim (#10)
github.com/IBM/AutoVP,Baseline.py,2023-10-12T15:33:52Z,autovp
github.com/IBM/AutoVP,auto_vp/wrapper.py,2023-10-12T15:33:52Z,autovp
github.com/DorisBao/BMAD,anomalib/src/anomalib/models/fastflow/torch_model.py,2023-06-13T13:10:20Z,release
github.com/DorisBao/BMAD,anomalib/src/anomalib/models/components/feature_extractors/timm.py,2023-06-13T13:10:20Z,release
github.com/ffs333/2nd_place_GISLR,GISLR_utils/models.py,2023-05-02T01:25:38Z,Add files via upload
github.com/ffs333/2nd_place_GISLR,GISLR_utils/keras_models/transfer.py,2023-05-02T01:25:38Z,Add files via upload
github.com/Ascend/ModelZoo-PyTorch,PyTorch/dev/perf/Swin_Cifar10/train_cifar10.py,2023-05-23T01:25:21Z,"!4745 [dev/perf] Swin_Cifar10 修改torch.cuda.amp为apex.amp 级别O2， 同时去除noamp入参。
* replace torch.cuda.amp with apex O2"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/dev/perf/Swin_Cifar10/train_cifar10.py,2023-05-09T06:34:23Z,"!4646 修复swin bug，同时添加train脚本
* fixed swin bug and add train scripts"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/dev/perf/Swin_Cifar10/train_cifar10.py,2023-05-04T08:51:02Z,clean code check warning
github.com/Ascend/ModelZoo-PyTorch,PyTorch/dev/perf/Swin_Cifar10/train_cifar10.py,2023-05-04T08:00:04Z,Code refactoring for clean code
github.com/Ascend/ModelZoo-PyTorch,PyTorch/dev/perf/Swin_Cifar10/train_cifar10.py,2023-05-04T07:29:06Z,add npu adapter
github.com/Ascend/ModelZoo-PyTorch,PyTorch/dev/perf/Swin_Cifar10/train_cifar10.py,2023-04-28T06:46:49Z,mv Swin_Cifar10 raw code
github.com/Ascend/ModelZoo-PyTorch,PyTorch/dev/perf/Swin_Cifar10/train_cifar10.py,2023-04-28T06:24:15Z,add Swin_Cifar10 raw code
github.com/Ascend/ModelZoo-PyTorch,PyTorch/dev/perf/Swin_Cifar10/vision-transformers-cifar10/train_cifar10.py,2023-04-28T06:46:49Z,mv Swin_Cifar10 raw code
github.com/yegcjs/DiffusionLLM,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-08-24T15:00:43Z,first commit
github.com/yegcjs/DiffusionLLM,transformers/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-08-24T15:00:43Z,first commit
github.com/yegcjs/DiffusionLLM,transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-08-24T15:00:43Z,first commit
github.com/yegcjs/DiffusionLLM,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-08-24T15:00:43Z,first commit
github.com/yegcjs/DiffusionLLM,transformers/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-08-24T15:00:43Z,first commit
github.com/yegcjs/DiffusionLLM,transformers/src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-08-24T15:00:43Z,first commit
github.com/WangHewei16/CassavaNet-An-EfficientNet-Vision-Transforer-for-Real-Time-Leaf-Disease-Identification,tests/test_models.py,2021-08-29T04:58:43Z,Add files via upload
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/others/CLIP_for_PyTorch/transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-01-10T09:18:46Z,"!3426 [自研][Pytorch]CLIP模型移动到others目录
* CLIP模型移动到others目录"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/others/CLIP_for_PyTorch/transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-01-10T09:18:46Z,"!3426 [自研][Pytorch]CLIP模型移动到others目录
* CLIP模型移动到others目录"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/others/CLIP_for_PyTorch/transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-01-10T09:18:46Z,"!3426 [自研][Pytorch]CLIP模型移动到others目录
* CLIP模型移动到others目录"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/others/CLIP_for_PyTorch/transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-01-10T09:18:46Z,"!3426 [自研][Pytorch]CLIP模型移动到others目录
* CLIP模型移动到others目录"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/nlp/MT5_ID4146_for_PyTorch/transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-11-12T03:19:36Z,"!2568 【自研】【Pytorch】MT5模型 -- 提交分支有误，已修改
!2568 【自研】【Pytorch】MT5模型 -- 提交分支有误，已修改"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/nlp/MT5_ID4146_for_PyTorch/transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-11-12T03:19:36Z,"!2568 【自研】【Pytorch】MT5模型 -- 提交分支有误，已修改
!2568 【自研】【Pytorch】MT5模型 -- 提交分支有误，已修改"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/nlp/MT5_ID4146_for_PyTorch/transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-11-12T03:19:36Z,"!2568 【自研】【Pytorch】MT5模型 -- 提交分支有误，已修改
!2568 【自研】【Pytorch】MT5模型 -- 提交分支有误，已修改"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/nlp/MT5_ID4146_for_PyTorch/transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-11-12T03:19:36Z,"!2568 【自研】【Pytorch】MT5模型 -- 提交分支有误，已修改
!2568 【自研】【Pytorch】MT5模型 -- 提交分支有误，已修改"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/nlp/Bert_Chinese_ID3433_for_PyTorch/transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-06-01T09:07:15Z,"!608 [built-in][Bert_Chinese]提交Bert_Chinese_ID3433_for_PyTorch网络
!608 【模型调优】提交Bert_Chinese_ID3433_for_PyTorch网络"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/nlp/Bert_Chinese_ID3433_for_PyTorch/transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-06-01T09:07:15Z,"!608 [built-in][Bert_Chinese]提交Bert_Chinese_ID3433_for_PyTorch网络
!608 【模型调优】提交Bert_Chinese_ID3433_for_PyTorch网络"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/nlp/Bert_Chinese_ID3433_for_PyTorch/transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-06-01T09:07:15Z,"!608 [built-in][Bert_Chinese]提交Bert_Chinese_ID3433_for_PyTorch网络
!608 【模型调优】提交Bert_Chinese_ID3433_for_PyTorch网络"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/nlp/Bert_Chinese_ID3433_for_PyTorch/transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-06-01T09:07:15Z,"!608 [built-in][Bert_Chinese]提交Bert_Chinese_ID3433_for_PyTorch网络
!608 【模型调优】提交Bert_Chinese_ID3433_for_PyTorch网络"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/mlm/LAVIS/lavis/models/clip_models/model.py,2023-07-11T01:52:29Z,"!5165 【自研】【PyTorch】LAVIS套件代码首次提交
* 【自研】【PyTorch】【LAVIS_for_PyTorch】代码首次提交"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/mlm/LAVIS/lavis/models/clip_models/timm_model.py,2023-07-11T01:52:29Z,"!5165 【自研】【PyTorch】LAVIS套件代码首次提交
* 【自研】【PyTorch】【LAVIS_for_PyTorch】代码首次提交"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/mlm/LAVIS/lavis/common/annotator/midas/midas/vit.py,2023-08-19T04:03:19Z,"!5383 LAVIS原仓代码提交
* LAVIS first commit"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/diffusion/stablediffusion-2.1/ldm/modules/midas/midas/vit.py,2023-05-20T07:30:12Z,add license and change directore
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/cv/semantic_segmentation/BiseNetV1_for_PyTorch/mmseg/models/backbones/timm_backbone.py,2022-11-22T11:02:50Z,"!2673 [自研][Pytorch]BiseNetV1模型GPU版本初始化
!2673 [自研][Pytorch]BiseNetV1模型GPU版本初始化"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/nlp/Bert-text-classification_for_PyTorch/transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-02-13T06:55:38Z,修改文件名
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/nlp/Bert-text-classification_for_PyTorch/transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-02-13T06:55:38Z,修改文件名
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/nlp/Bert-text-classification_for_PyTorch/transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-02-13T06:55:38Z,修改文件名
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/nlp/Bert-text-classification_for_PyTorch/transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-02-13T06:55:38Z,修改文件名
github.com/isLinXu/TrainNetHub,YOLO/yolov5_master/kindle/modules/pretrained.py,2022-05-16T09:00:28Z,1.[YOLO][yolov5-master] add modules
github.com/isLinXu/TrainNetHub,YOLO/yolov5_master/kindle/generator/pretrained.py,2022-05-16T09:00:06Z,1.[YOLO][yolov5-master] generator
github.com/KyanChen/lightning_framework,mmseg/models/backbones/timm_backbone.py,2023-04-09T09:29:20Z,add
github.com/NJU-LHRS/official-CMID,Pretrain/models/pretrain_model.py,2023-04-15T02:28:51Z,First release
github.com/NJU-LHRS/official-CMID,Pretrain/models/backbone_wrapper.py,2023-04-15T02:28:51Z,First release
github.com/yegcjs/DiffusionLLM,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-08-24T15:00:43Z,first commit
github.com/yegcjs/DiffusionLLM,transformers/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-08-24T15:00:43Z,first commit
github.com/kamwoh/sdc,models/backbone/vit.py,2023-08-31T11:35:09Z,updated for official release
github.com/zyxxmu/LBC,DeiT-small/main.py,2023-01-11T13:28:22Z,update Deit
github.com/zyxxmu/LBC,DeiT-small/main.py,2022-06-14T03:33:35Z,initial
github.com/Deep-Spark/deepsparkhub,multimodal/diffusion/ControlNet/annotator/midas/midas/vit.py,2023-12-14T09:17:34Z,"move controlnet location

Signed-off-by: majorli <mingjiang.li@iluvatar.com>"
github.com/Deep-Spark/deepsparkhub,multimodal/diffusion/ControlNet/ldm/modules/midas/midas/vit.py,2023-12-14T09:17:34Z,"move controlnet location

Signed-off-by: majorli <mingjiang.li@iluvatar.com>"
github.com/Deep-Spark/deepsparkhub,cv/semantic_segmentation/stdc/pytorch/mmseg/models/backbones/timm_backbone.py,2023-06-07T08:24:28Z,"!127 add pytorch model STDC
* add pytorch model STDC"
github.com/sony/san,training/loss.py,2024-01-17T04:51:58Z,add training code for SAN
github.com/sony/san,training/loss.py,2023-07-12T07:22:46Z,delete training code for GAN
github.com/sony/san,training/loss.py,2022-04-26T04:24:03Z,Update loss.py
github.com/sony/san,training/loss.py,2022-04-25T06:52:13Z,restructure normalization
github.com/sony/san,training/loss.py,2022-04-01T12:00:53Z,fixed typo. added minimal env
github.com/sony/san,training/loss.py,2022-03-31T17:19:35Z,release
github.com/sony/san,run_inversion.py,2022-06-10T10:46:26Z,added inversion + PTI
github.com/sony/san,feature_networks/vit.py,2022-03-31T17:19:35Z,release
github.com/sony/san,feature_networks/pretrained_builder.py,2022-03-31T19:11:36Z,Update pretrained_builder.py
github.com/sony/san,feature_networks/pretrained_builder.py,2022-03-31T18:29:57Z,Update pretrained_builder.py
github.com/sony/san,feature_networks/pretrained_builder.py,2022-03-31T17:19:35Z,release
github.com/albertotrunk/ue-stable-diffusion,Content/Python/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-03-01T07:52:56Z,refactor repo ready to push 1.5
github.com/albertotrunk/ue-stable-diffusion,Content/Python/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-03-01T07:52:56Z,refactor repo ready to push 1.5
github.com/albertotrunk/ue-stable-diffusion,Content/Python/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-03-01T07:52:56Z,refactor repo ready to push 1.5
github.com/albertotrunk/ue-stable-diffusion,Content/Python/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-03-01T07:52:56Z,refactor repo ready to push 1.5
github.com/albertotrunk/ue-stable-diffusion,Content/Python/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-03-01T07:52:56Z,refactor repo ready to push 1.5
github.com/zhangbo2008/powerful_chinese_ASR,transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-08-04T09:30:44Z,no_comment
github.com/zhangbo2008/powerful_chinese_ASR,transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-08-04T09:30:44Z,no_comment
github.com/BIT-DA/ROMA,models/roma_model.py,2023-09-23T12:38:03Z,update
github.com/BIT-DA/ROMA,models/roma_single_model.py,2023-09-23T12:38:03Z,update
github.com/IVRL/MulT,src/SETR/tools/finetune_vit.py,2023-12-04T08:42:36Z,Src file upload
github.com/IVRL/MulT,src/SETR/tools/finetune_vgg.py,2023-12-04T08:42:36Z,Src file upload
github.com/sangminwoo/ActionMAE,lib/modeling/actionmae.py,2022-11-25T06:04:04Z,initial commit
github.com/sangminwoo/ActionMAE,lib/modeling/baseline_resnet_fusion.py,2022-11-25T06:04:04Z,initial commit
github.com/SusungHong/IF-DreamFusion,dpt.py,2023-05-03T15:37:50Z,first commit
github.com/AngusDujw/SAF,tests/test_utils.py,2022-12-05T07:23:59Z,First Commit
github.com/AngusDujw/SAF,tests/test_models.py,2022-12-05T07:23:59Z,First Commit
github.com/NVIDIA-AI-IOT/jetnet,jetnet/timm.py,2022-10-18T22:05:10Z,resnet50 to timm
github.com/NVIDIA-AI-IOT/jetnet,jetnet/timm.py,2022-10-18T21:32:21Z,add dla config
github.com/NVIDIA-AI-IOT/jetnet,jetnet/timm.py,2022-10-18T21:19:06Z,timm model
github.com/youmi-zym/TemporalStereo,architecture/modeling/backbone/TemporalStereo.py,2023-07-15T10:18:16Z,initial codebase
github.com/owenzlz/PAL4VST,mmsegmentation/mmseg/models/backbones/timm_backbone.py,2023-10-04T09:20:36Z,updated
github.com/owenzlz/PAL4VST,mmsegmentation/mmseg/models/backbones/timm_backbone.py,2023-10-04T09:16:30Z,updated
github.com/owenzlz/PAL4VST,mmsegmentation/mmseg/models/backbones/timm_backbone.py,2023-10-04T09:11:29Z,updated
github.com/Zongwei97/HIDANet,Code/lib/res2net_gba.py,2023-04-18T08:26:40Z,Add files via upload
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-31T16:12:59Z,add dense161
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-31T15:58:30Z,add swinv2
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-31T10:02:18Z,add dense
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-31T07:27:42Z,add rex50
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-31T07:22:57Z,add resnext
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-31T07:02:34Z,update homepath
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-31T06:57:48Z,move to home
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-29T09:43:35Z,update anomy detect
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-29T09:21:30Z,update comment
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-28T17:01:19Z,update color
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-28T16:49:09Z,add arch selection
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-19T16:29:16Z,uptimize BiFPN
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-18T06:02:46Z,update pretrain=True
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-16T06:03:56Z,update padding
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-16T04:18:17Z,update memory
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-16T03:25:04Z,add one more upsample
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-15T16:48:23Z,update BiFPN
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-11T13:09:27Z,use res34
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-11T11:31:02Z,remove redenduncy
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-11T10:55:47Z,move back resblock
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-04T17:11:51Z,update store
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-12-04T17:10:46Z,add contiguous
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-11-27T16:54:47Z,update Texture
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-11-27T15:56:25Z,update basic network
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-09-07T08:14:25Z,fix hr ca & enable ASPP
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-09-07T07:48:25Z,add ASPP test
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-09-06T15:25:27Z,update hrnet with channel attention
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-09-05T16:46:55Z,add more attention
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-09-04T15:35:04Z,add channel attention for texture
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-09-04T14:32:55Z,add se block
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-09-03T16:21:35Z,use 5x5 conv
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-09-03T10:36:57Z,hardtanh
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-09-03T06:55:05Z,add corner =Ture
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-06-20T05:17:06Z,update model
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-06-20T04:38:15Z,update demo
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-06-20T04:07:09Z,add more pretrained models
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-04-04T10:23:24Z,add ATR single image test
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-04-04T04:08:06Z,roll back the mask weight
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-04-03T15:18:21Z,enlarge the mask weight
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-04-03T11:25:53Z,back to 0.01
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-04-03T09:34:38Z,add nolpl
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-04-03T08:37:08Z,init small
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-04-03T07:47:20Z,update option
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-04-01T10:40:27Z,roll back
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-03-31T03:44:17Z,add different lrRate
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-03-30T19:01:37Z,init
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-03-30T18:57:15Z,small initial for the fourth channel
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-03-30T18:52:42Z,update test
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-03-30T07:12:49Z,update network
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-03-29T13:36:57Z,fix bug by adding instancenorm
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-03-29T13:13:33Z,add instance norm
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-03-29T08:45:44Z,back to 0.5
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-03-28T14:12:39Z,back to batchnorm
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-03-28T09:12:05Z,add weight decay
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-03-28T04:53:43Z,"update init & limit bias in -0.4,0.4"
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-03-06T17:14:05Z,add camera init
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-25T07:52:03Z,improve camera
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-23T17:26:13Z,add em=5 and makeup
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-22T09:18:03Z,update uv map
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-22T09:04:49Z,Update model_res.py
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-22T09:04:09Z,Update model_res.py
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-22T09:02:02Z,update makeup
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-19T15:39:11Z,remove loss
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-19T13:17:47Z,update init
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-19T11:30:31Z,update unet init
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-19T11:12:48Z,add hrnet option
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-19T11:06:35Z,update encoder
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-19T10:46:29Z,update hrnet
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-19T09:44:19Z,update hrnet
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-18T18:07:35Z,update unet
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-18T17:57:19Z,add unet
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-18T09:32:46Z,update rm tanh
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-17T18:01:15Z,use len
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-17T17:59:10Z,update len
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-17T16:47:36Z,residual for makeup
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-17T16:28:38Z,mute
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-17T13:53:36Z,update details
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-17T06:20:23Z,updae makeup
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-14T08:15:05Z,rand camera
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-13T07:01:25Z,update discriminator
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-12T16:37:19Z,add y biases
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-11T10:13:56Z,add biases
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-10T07:20:55Z,limit back to 0.5
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-10T07:13:46Z,free shape limit
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-08T05:58:53Z,add lpl
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-08T05:36:29Z,update lpl
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-07T13:32:53Z,add clamp
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-07T09:57:43Z,update makeup
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-07T09:45:35Z,update makeup
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-06T04:14:11Z,update ibn
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-06T03:36:30Z,remove init for makeup
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-05T02:17:40Z,Update model_res.py
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-04T15:21:18Z,fix bug for count=0
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-04T14:32:35Z,Update model_res.py
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-04T10:04:25Z,update camera network
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-04T07:53:45Z,update lrelu
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-04T06:53:07Z,Update model_res.py
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-04T06:50:00Z,Update model_res.py
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-03T05:07:00Z,add dropout
github.com/layumi/3D-Magic-Mirror,network/model_res.py,2022-02-02T18:19:12Z,update test
github.com/hsouri/bob-classification,linear_probe.py,2023-10-20T17:06:15Z,upload files
github.com/hsouri/bob-classification,models/midas/backbones/vit.py,2023-10-20T17:06:15Z,upload files
github.com/hsouri/bob-classification,models/midas/backbones/beit.py,2023-10-20T17:06:15Z,upload files
github.com/hsouri/bob-classification,models/midas/backbones/swin.py,2023-10-20T17:06:15Z,upload files
github.com/hsouri/bob-classification,models/midas/backbones/levit.py,2023-10-20T17:06:15Z,upload files
github.com/hsouri/bob-classification,models/midas/backbones/swin2.py,2023-10-20T17:06:15Z,upload files
github.com/hsouri/bob-classification,models/midas/backbones/next_vit.py,2023-10-20T17:06:15Z,upload files
github.com/hsouri/bob-classification,medical_chexpert/main_finetune_chestxray.py,2023-10-20T17:06:15Z,upload files
github.com/dahlian00/SegRCDB,mmsegmentation-0.28.0/mmseg/models/backbones/timm_backbone.py,2024-01-02T14:10:52Z,add mmsegmentation
github.com/Deep-Spark/deepsparkhub,cv/semantic_segmentation/apcnet/pytorch/mmseg/models/backbones/timm_backbone.py,2022-09-30T09:20:02Z,Initial Commit
github.com/Deep-Spark/deepsparkhub,cv/semantic_segmentation/ddrnet/pytorch/mmseg/models/backbones/timm_backbone.py,2023-06-07T08:23:25Z,"!136 add PyTorch model ddrnet
* add PyTorch model ddrnet"
github.com/Deep-Spark/deepsparkhub,cv/semantic_segmentation/pspnet/pytorch/mmseg/models/backbones/timm_backbone.py,2022-09-30T09:20:02Z,Initial Commit
github.com/Deep-Spark/deepsparkhub,cv/3d_detection/pointnet2/pytorch/mmdetection3d/mmseg/models/backbones/timm_backbone.py,2023-06-14T09:52:19Z,"!161 add pointnet2 pytorch model
* add pointnet2 pytorch model"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/video/C3D/mmaction/models/recognizers/base.py,2022-03-18T07:08:55Z,init
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/video/I3D/mmaction/models/recognizers/base.py,2022-03-18T07:08:55Z,init
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/video/TSM/mmaction/models/recognizers/base.py,2022-03-18T07:08:55Z,init
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/video/TSN/mmaction/models/recognizers/base.py,2022-03-18T07:08:55Z,init
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/video/NonLocal/mmaction/models/recognizers/base.py,2022-03-18T07:08:55Z,init
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/video/SlowFast/mmaction/models/recognizers/base.py,2022-03-18T07:08:55Z,init
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/semantic_segmentation/MMseg-swin/mmseg/models/backbones/timm_backbone.py,2023-01-19T08:16:34Z,"!2620 [东北大学][高校贡献][Pytorch][MMseg]--第一次提交
* 修改文件架名称
* 更新软件链接
* 更新readme
* deleted config readme
* add license
* 更新readme
* 修改readme&performance脚本
* 添加swin-mmseg"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/dev/cv/image_classification/DPN-68_ID1889_for_PyTorch/tests/test_models.py,2022-06-09T11:55:54Z,"!709 【PyTorch】【dev】【DPN-68_ID1889_for_PyTorch】模型移仓，准备精度入场
!709 【PyTorch】【dev】【DPN-68_ID1889_for_PyTorch】模型移仓，准备精度入场"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/dev/cv/image_classification/MNasNet_ID1723_for_PyTorch/tests/test_models.py,2022-05-30T06:55:30Z,"!581 【PyTorch】【dev】【MNasNet_ID1723_for_PyTorch】模型移仓，准备精度入场
!581 【PyTorch】【dev】【MNasNet_ID1723_for_PyTorch】模型移仓，准备精度入场"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/dev/cv/image_classification/CSPResNeXt-50_ID1888_for_PyTorch/tests/test_models.py,2022-06-09T02:57:24Z,"!691 【PyTorch】【dev】【CSPResNeXt-50_ID1888_for_PyTorch】模型移仓，准备精度入场
!691 【PyTorch】【dev】【CSPResNeXt-50_ID1888_for_PyTorch】模型移仓，准备精度入场"
github.com/Luodian/GenBench,vision_benchmark/evaluation/feature.py,2023-07-25T07:22:58Z,update genbench
github.com/k-zha14/Zoom-VQA,IQA/utils_single.py,2023-04-17T14:22:12Z,first release
github.com/k-zha14/Zoom-VQA,IQA/models/CPNetMulti.py,2023-04-17T14:22:12Z,first release
github.com/AILab-CVC/M2PT,Image/main_linprobe.py,2023-11-22T17:14:15Z,release
github.com/AILab-CVC/M2PT,Image/main_finetune.py,2023-11-22T17:14:15Z,release
github.com/AILab-CVC/M2PT,Video/run_class_finetuning.py,2023-11-22T17:14:15Z,release
github.com/AILab-CVC/M2PT,Audio/main_finetune_as_pathway.py,2023-11-22T17:14:15Z,release
github.com/AILab-CVC/M2PT,Point/segmentation/main_pathway.py,2023-11-22T17:14:15Z,release
github.com/AILab-CVC/M2PT,Point/tools/runner_finetune_pathway.py,2023-11-22T17:14:15Z,release
github.com/AILab-CVC/M2PT,Point/segmentation/main_from_scratch.py,2023-11-22T17:14:15Z,release
github.com/wangzhecheng/SkyScript,src/open_clip/timm_model.py,2023-12-31T07:33:11Z,minor updates.
github.com/wangzhecheng/SkyScript,src/open_clip/timm_model.py,2023-12-30T13:25:56Z,initial code commit
github.com/amiradridi/Job-Resume-Matching,venv/Lib/site-packages/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-08-17T16:06:35Z,skills semantic similarity implementation
github.com/amiradridi/Job-Resume-Matching,venv/Lib/site-packages/transformers/models/regnet/convert_regnet_to_pytorch.py,2022-08-17T16:06:35Z,skills semantic similarity implementation
github.com/amiradridi/Job-Resume-Matching,venv/Lib/site-packages/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-08-17T16:06:35Z,skills semantic similarity implementation
github.com/amiradridi/Job-Resume-Matching,venv/Lib/site-packages/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-08-17T16:06:35Z,skills semantic similarity implementation
github.com/amiradridi/Job-Resume-Matching,venv/Lib/site-packages/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-08-17T16:06:35Z,skills semantic similarity implementation
github.com/amiradridi/Job-Resume-Matching,venv/Lib/site-packages/transformers/models/levit/convert_levit_timm_to_pytorch.py,2022-08-17T16:06:35Z,skills semantic similarity implementation
github.com/eslambakr/HRS_benchmark,codes/t2i_models/sd_v2/ldm/modules/midas/midas/vit.py,2023-02-04T22:25:33Z,"add detection metric, meta-prompt generation codes, chatGPT codes, SD_v1, and SD_v2 codes"
github.com/eslambakr/HRS_benchmark,codes/t2i_models/CogView2/SwissArmyTransformer-main/examples/cait/config/cait_config.py,2023-02-23T09:26:03Z,add support to new txt2img models
github.com/eslambakr/HRS_benchmark,codes/t2i_models/CogView2/SwissArmyTransformer-main/examples/vit/config/vit_base_config.py,2023-02-23T09:26:03Z,add support to new txt2img models
github.com/eslambakr/HRS_benchmark,codes/t2i_models/CogView2/SwissArmyTransformer-main/examples/deit/config/deit_tiny_config.py,2023-02-23T09:26:03Z,add support to new txt2img models
github.com/eslambakr/HRS_benchmark,codes/t2i_models/CogView2/SwissArmyTransformer-main/examples/deit/config/deit_base_config.py,2023-02-23T09:26:03Z,add support to new txt2img models
github.com/eslambakr/HRS_benchmark,codes/t2i_models/CogView2/SwissArmyTransformer-main/examples/deit/config/deit_small_config.py,2023-02-23T09:26:03Z,add support to new txt2img models
github.com/bao18/open_earth_map,open_earth_map/networks/unetformer.py,2023-01-25T01:12:26Z,more updates
github.com/oke-aditya/pytorch_cnn_trainer,pytorch_cnn_trainer/model_factory.py,2020-09-21T17:15:30Z,"Adds profiler utility (#22)

* reformats and adds profiler utility

* removes .format with f strings"
github.com/oke-aditya/pytorch_cnn_trainer,pytorch_cnn_trainer/model_factory.py,2020-07-19T11:57:31Z,moved the code due to .git issue
github.com/owenzlz/EgoHOS,mmsegmentation/mmseg/models/backbones/timm_backbone.py,2022-05-13T20:07:28Z,add mmseg
github.com/VILA-Lab/SRe2L,CDA/recover_cda_in21k.py,2023-11-30T16:08:09Z,add CDA
github.com/adelacvg/ttts,ttts/diffusion/cldm/timm_model.py,2024-01-04T15:06:40Z,update diffusion architecture
github.com/adelacvg/ttts,ttts/diffusion/ldm/modules/midas/midas/vit.py,2024-01-04T15:06:40Z,update diffusion architecture
github.com/adelacvg/ttts,ttts/AA_diffusion_deprecated/cldm/timm_model.py,2024-01-04T15:06:40Z,update diffusion architecture
github.com/adelacvg/ttts,ttts/AA_diffusion_deprecated/ldm/modules/midas/midas/vit.py,2024-01-04T15:06:40Z,update diffusion architecture
github.com/karasawatakumi/pytorch-image-classification,train.py,2022-09-25T11:15:46Z,update typehints for python 3.10
github.com/karasawatakumi/pytorch-image-classification,train.py,2022-09-25T11:07:15Z,add black and isort
github.com/karasawatakumi/pytorch-image-classification,train.py,2022-09-25T10:46:17Z,update pytorch lightning args
github.com/karasawatakumi/pytorch-image-classification,train.py,2022-04-14T05:19:26Z,modify default arg
github.com/karasawatakumi/pytorch-image-classification,train.py,2022-04-13T06:41:56Z,fix dtype of epoch arg
github.com/karasawatakumi/pytorch-image-classification,train.py,2022-04-13T01:04:33Z,add print lines about training settings
github.com/karasawatakumi/pytorch-image-classification,train.py,2022-04-12T14:06:47Z,modify importing lines
github.com/karasawatakumi/pytorch-image-classification,train.py,2022-04-12T14:02:31Z,add typehints
github.com/karasawatakumi/pytorch-image-classification,train.py,2022-04-12T13:50:19Z,fix num-classes of model
github.com/karasawatakumi/pytorch-image-classification,train.py,2022-04-12T09:35:51Z,impl. train
github.com/wang22ti/OpenAUC,utils/model_utils.py,2023-03-22T15:29:41Z,fix
github.com/ictnlp/TruthX,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2024-02-27T13:46:43Z,first commit
github.com/ictnlp/TruthX,transformers/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2024-02-27T13:46:43Z,first commit
github.com/ictnlp/TruthX,transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2024-02-27T13:46:43Z,first commit
github.com/ictnlp/TruthX,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2024-02-27T13:46:43Z,first commit
github.com/ictnlp/TruthX,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2024-02-27T13:46:43Z,first commit
github.com/ictnlp/TruthX,transformers/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2024-02-27T13:46:43Z,first commit
github.com/ictnlp/TruthX,transformers/src/transformers/models/timm_backbone/modeling_timm_backbone.py,2024-02-27T13:46:43Z,first commit
github.com/ictnlp/TruthX,transformers/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2024-02-27T13:46:43Z,first commit
github.com/ictnlp/TruthX,transformers/src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2024-02-27T13:46:43Z,first commit
github.com/Ascend/ModelZoo-PyTorch,ACL_PyTorch/built-in/cv/EfficientNetV2_for_Pytorch/pth2onnx.py,2022-12-13T06:25:01Z,add EfficientNetV2
github.com/Ascend/ModelZoo-PyTorch,ACL_PyTorch/built-in/cv/SwinTransformer_for_Pytorch/pth2onnx.py,2022-08-25T11:34:48Z,feat: add acl_pytorch demo for swintransfromer model(timm)
github.com/Ascend/ModelZoo-PyTorch,AscendIE/TorchAIE/built-in/cv/classification/ViT-base/export.py,2023-11-11T08:14:07Z,[自研][推理引擎 AscendIE]ViT-base参考样例添加性能测试脚本
github.com/Ascend/ModelZoo-PyTorch,ACL_PyTorch/contrib/cv/classfication/TResNet/TResNet_pth2onnx.py,2022-03-18T07:08:55Z,init
github.com/Ascend/ModelZoo-PyTorch,ACL_PyTorch/built-in/cv/EfficientNetV2_for_Pytorch/preprocess.py,2022-12-13T06:25:01Z,add EfficientNetV2
github.com/Ascend/ModelZoo-PyTorch,ACL_PyTorch/built-in/cv/EfficientNetV2_for_Pytorch_poc/pth2onnx.py,2023-07-20T06:54:09Z,"!5257 [自研][PyTorch离线推理][cv]EfficientNetV2 for poc
* fix quantization config & preprocessing
* EfficientNetV2 add quantization&aipp"
github.com/Ascend/ModelZoo-PyTorch,ACL_PyTorch/contrib/cv/classfication/ViT_base/Vit_base_pth2onnx.py,2023-02-28T11:26:40Z,"!3966 [Pytorch][CV] ViT-base模型整改 加入多个模型配置
* Update readme
* Update readme
* Support multiple model configurations
* Rewrite a faster preprocessing script."
github.com/Ascend/ModelZoo-PyTorch,ACL_PyTorch/contrib/cv/classfication/ViT_base/Vit_base_pth2onnx.py,2022-12-28T01:49:07Z,"!3114 【众智】【PyTorch离线推理】【cv】ViT_base模型代码与资料整改
* ViT_base: fix code/readme format for CI
* ViT_base: fix version for requirements
* ViT_base: add input paras to support similar models
* ViT_base: optimize preprocess
* ViT_base: reformat evaluation code
* ViT_base: fix format && update performance
* Rename scripts for ViT_base
* Rename model name: vit_base_patch32_224->ViT_base"
github.com/Ascend/ModelZoo-PyTorch,ACL_PyTorch/contrib/cv/classfication/RegNetX-1.6GF/RegNetX_onnx.py,2022-03-18T07:08:55Z,init
github.com/Ascend/ModelZoo-PyTorch,ACL_PyTorch/contrib/cv/classfication/RegNetY-1.6GF/RegNetY_onnx.py,2022-03-18T07:08:55Z,init
github.com/Ascend/ModelZoo-PyTorch,ACL_PyTorch/built-in/cv/EfficientNetV2_for_Pytorch_poc/preprocess.py,2023-07-20T06:54:09Z,"!5257 [自研][PyTorch离线推理][cv]EfficientNetV2 for poc
* fix quantization config & preprocessing
* EfficientNetV2 add quantization&aipp"
github.com/Ascend/ModelZoo-PyTorch,AscendIE/TorchAIE/built-in/cv/classification/SwinTransformer/export.py,2023-11-14T01:50:33Z,clean code fix
github.com/Ascend/ModelZoo-PyTorch,AscendIE/TorchAIE/built-in/cv/classification/SwinTransformer/export.py,2023-11-11T08:14:07Z,[自研][推理引擎 AscendIE]ViT-base参考样例添加性能测试脚本
github.com/Ascend/ModelZoo-PyTorch,ACL_PyTorch/contrib/cv/classfication/CSPResneXt50/cspresnext_pth2onnx.py,2022-12-06T11:27:51Z,"!2753 CSPResneXt50模型整改
* model modify
* model modify
* model modify
* delete"
github.com/Ascend/ModelZoo-PyTorch,ACL_PyTorch/contrib/cv/classfication/CSPResneXt50/cspresnext_pth2onnx.py,2022-03-18T07:08:55Z,init
github.com/Ascend/ModelZoo-PyTorch,ACL_PyTorch/contrib/cv/classfication/pnasnet5large/pnasnet5large_onnx.py,2022-03-18T07:08:55Z,init
github.com/Ascend/ModelZoo-PyTorch,ACL_PyTorch/contrib/cv/classfication/spnasnet_100/spnasnet_100_pthtar2onnx.py,2022-12-27T12:53:46Z,"!2970 [ACL_Pytorch][Contrib][cv][classification]Spnasnet_100模型整改
* fix for review
* fix model spnasnet100"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/cv/classification/Gluon_ResNet50_v1d_for_PyTorch/pthtar2onnx.py,2022-09-08T09:16:41Z,"!1726 [浙江大学][高校贡献][Pytorch][gluon_resnet50_v1d]-高性能预训练模型提交+功能
!1726 [浙江大学][高校贡献][Pytorch][gluon_resnet50_v1d]-高性能预训练模型提交+功能"
github.com/Ascend/ModelZoo-PyTorch,ACL_PyTorch/contrib/cv/classfication/vit-small/vit_small_patch16_224_pth2onnx.py,2023-01-06T01:20:31Z,modify model
github.com/Ascend/ModelZoo-PyTorch,ACL_PyTorch/contrib/cv/classfication/vit-small/vit_small_patch16_224_pth2onnx.py,2022-11-03T03:46:22Z,"!2329 [自研][PyTorch离线推理][cv][vit-small] 代码及资料整改
* profiling some code and docs
* Modify vitsmall code and documentation"
github.com/Ascend/ModelZoo-PyTorch,ACL_PyTorch/contrib/cv/classfication/vit-small/vit_small_patch16_224_pth2onnx.py,2022-03-18T07:08:55Z,init
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/cv/classification/Gluon_ResNet50_v1c_for_PyTorch/pthtar2onnx.py,2022-09-05T02:46:22Z,"!1643 [浙江大学][高校贡献][Pytorch][gluon_resnet50_v1c]-高性能预训练模型提交+功能
!1643 [浙江大学][高校贡献][Pytorch][gluon_resnet50_v1c]-高性能预训练模型提交+功能"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/cv/classification/Gluon_ResNet50_v1b_for_PyTorch/pthtar2onnx.py,2022-09-15T11:17:15Z,"!1770 [东北大学][高校贡献][Pytorch][Gluon_ResNet50_v1b_for_PyTorch]-高性能预训练模型提交+ModelArts+SDK&MxBase
!1770 [东北大学][高校贡献][Pytorch][Gluon_ResNet50_v1b_for_PyTorch]-高性能预训练模型提交+ModelArts+SDK&MxBase"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/cv/classification/Gluon_ResNet50_v1b_for_PyTorch/modelarts/start.py,2022-09-15T11:17:15Z,"!1770 [东北大学][高校贡献][Pytorch][Gluon_ResNet50_v1b_for_PyTorch]-高性能预训练模型提交+ModelArts+SDK&MxBase
!1770 [东北大学][高校贡献][Pytorch][Gluon_ResNet50_v1b_for_PyTorch]-高性能预训练模型提交+ModelArts+SDK&MxBase"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/cv/classification/Resnet50_Cifar_for_PyTorch/mmcls/models/backbones/timm_backbone.py,2022-10-24T08:12:36Z,"!2254 [自研][PyTorch]Resnet50_cifar_for_PyTorch模型第一次提交
!2254 [自研][PyTorch]Resnet50_cifar_for_PyTorch模型第一次提交"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/cv/classification/Gluon_ResNet50_v1b_for_PyTorch/tests/test_models.py,2022-03-18T07:08:55Z,init
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/cv/classification/Gluon_ResNet50_v1c_for_PyTorch/tests/test_models.py,2022-03-18T07:08:55Z,init
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/cv/classification/Gluon_ResNet50_v1d_for_PyTorch/tests/test_models.py,2022-03-18T07:08:55Z,init
github.com/dihuangdh/HHOR,mmsegmentation/mmseg/models/backbones/timm_backbone.py,2023-01-09T03:14:44Z,Init commit
github.com/JunHeum/BiFormer,model/twins_encoder.py,2023-06-14T08:23:09Z,Add files via upload
github.com/dyzy41/ChangeCLIP,mmseg/models/backbones/clip_backbone.py,2024-01-19T07:34:28Z,open ChangeCLIP
github.com/dyzy41/ChangeCLIP,mmseg/models/backbones/timm_backbone.py,2024-01-19T07:34:28Z,open ChangeCLIP
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/classification/TResNet/demo.py,2023-07-07T01:39:48Z,"!5139 【pytorch】【contrib】【TResNet】模型公网地址整改
* 【pytorch】【contrib】【TResNet】模型公网地址整改"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/classification/TResNet/demo.py,2022-11-22T06:44:28Z,"!2644 [西安交通大学][高校贡献][Pytorch迁移1.8][TResNet]-初次提交
!2644 [西安交通大学][高校贡献][Pytorch迁移1.8][TResNet]-初次提交"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/classification/TResNet/demo.py,2022-03-18T07:08:55Z,init
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/classification/TResNet/train_finetune_1p.py,2022-11-22T06:44:28Z,"!2644 [西安交通大学][高校贡献][Pytorch迁移1.8][TResNet]-初次提交
!2644 [西安交通大学][高校贡献][Pytorch迁移1.8][TResNet]-初次提交"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/classification/TResNet/train_finetune_1p.py,2022-03-18T07:08:55Z,init
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/classification/SPNASNet_100_for_PyTorch/demo.py,2023-07-10T06:31:13Z,"!5151 【pytorch】【contrib】【cv】SPNASNet_100_for_PyTorch模型公网地址整改
* 【pytorch】【contrib】【cv】SPNASNet_100_for_PyTorch模型公网地址整改
* 【pytorch】【contrib】【cv】SPNASNet_100_for_PyTorch模型公网地址整改
* 【pytorch】【contrib】【cv】SPNASNet_100_for_PyTorch模型公网地址整改"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/classification/SPNASNet_100_for_PyTorch/demo.py,2022-03-18T07:08:55Z,init
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/classification/vit_base_patch32_224/vit_train.py,2023-04-17T11:53:42Z,"!4393 【PyTorch】【Swin-Transformer/vit_base/SSD-Resnet/stargan/UNet】适配auto profiling功能
* Swin-Transformer/vit_base/SSD-Resnet/stargan/UNet适配auto profiling功能"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/classification/vit_base_patch32_224/vit_train.py,2022-07-21T14:01:47Z,"!1208 [PyTorch]pytorch模型torch版本判断由“1.8.1”改为“1.8”
* 更正SimCLR模型LICENSE文件后缀
* pytorch模型torch版本判断由“1.8.1”改为“1.8”"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/classification/vit_base_patch32_224/vit_train.py,2022-06-21T01:14:22Z,"!840 [众智]PyTorch] vit_base_patch32_224模型适配torch1.8.1
!840 [众智]PyTorch] vit_base_patch32_224模型适配torch1.8.1"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/classification/vit_base_patch32_224/vit_train.py,2022-03-18T07:08:55Z,init
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/classification/Vit_small_patch16_224/pthtar2onnx.py,2022-03-18T07:08:55Z,init
github.com/Ascend/ModelZoo-PyTorch,PyTorch/built-in/others/OpenCLIP_for_PyTorch/src/open_clip/timm_model.py,2023-05-17T12:47:36Z,"!4706 [自研][PyTorch] [OpenClip For Pytorch] 初次提交
* 提交open clip原始代码"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/classification/SPNASNet_100_for_PyTorch/pthtar2onnx.py,2022-03-18T07:08:55Z,init
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/classification/SPNASNet_100_for_PyTorch/modelarts/train_start.py,2022-07-02T01:59:23Z,"!828 [浙江大学][高校贡献][Pytorch][SpansNet100]-高性能预训练模型提交+功能
!828 [浙江大学][高校贡献][Pytorch][SpansNet100]-高性能预训练模型提交+功能"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/classification/convmixer/tests/test_models.py,2022-08-12T09:43:26Z,"!1423 [南京理工大学][高校贡献][Pytorch][Convmixer]--初次提交
!1423 [南京理工大学][高校贡献][Pytorch][Convmixer]--初次提交"
github.com/Ascend/ModelZoo-PyTorch,PyTorch/contrib/cv/classification/SPNASNet_100_for_PyTorch/tests/test_models.py,2022-03-18T07:08:55Z,init
github.com/xcyao00/PRNet,models/prnet.py,2023-07-07T02:51:43Z,Add files via upload
github.com/xcyao00/PRNet,create_proto_feature_maps.py,2023-07-07T02:50:53Z,Add files via upload
github.com/Teragion/Sea-Thru-Impl,midas/vit.py,2022-07-23T06:13:09Z,Finish implementation
github.com/pdpino/medical-ai,medai/models/classification/efficientnet.py,2021-07-21T00:34:06Z,Add EfficientNet to models
github.com/ethanweber/nerfiller,nerfiller/guidance/feature_extractor.py,2023-12-30T01:31:34Z,Initial commit
github.com/OpenGVLab/DDPS,mmseg/models/backbones/timm_backbone.py,2023-07-26T13:18:13Z,release code
github.com/ajzhai/PEANUT,prediction/mmseg/models/backbones/timm_backbone.py,2023-08-18T19:16:24Z,initial commit
github.com/LarsDoorenbos/ccdm-stochastic-segmentation,ddpm/models/dino.py,2023-03-15T18:17:47Z,first commit
github.com/TRI-ML/prismatic-vlms,prismatic/models/backbones/vision/base_vision.py,2024-02-13T09:25:25Z,Initial commit
github.com/TRI-ML/prismatic-vlms,prismatic/models/backbones/vision/dinoclip_vit.py,2024-02-13T09:25:25Z,Initial commit
github.com/TRI-ML/prismatic-vlms,prismatic/models/backbones/vision/dinosiglip_vit.py,2024-02-13T09:25:25Z,Initial commit
github.com/ZhangYuanhan-AI/OmniBenchmark,linear_probe/models/timm_vit.py,2022-08-18T03:27:42Z,add OmniBenchmark V2
github.com/ZhangYuanhan-AI/OmniBenchmark,linear_probe/models/timm_vit.py,2022-07-12T13:17:45Z,first commit
github.com/ZhangYuanhan-AI/OmniBenchmark,linear_probe/models/timm_beit.py,2022-07-12T13:17:45Z,first commit
github.com/ZhangYuanhan-AI/OmniBenchmark,linear_probe/models/timm_rn101.py,2022-07-12T13:17:45Z,first commit
github.com/ZhangYuanhan-AI/OmniBenchmark,linear_probe/models/timm_effnet.py,2022-07-12T13:17:45Z,first commit
github.com/ZhangYuanhan-AI/OmniBenchmark,linear_probe/models/timm_mlp_mixer.py,2022-07-12T13:17:45Z,first commit
github.com/ZhangYuanhan-AI/OmniBenchmark,linear_probe/models/timm_inceptionv4.py,2022-07-12T13:17:45Z,first commit
github.com/ZhangYuanhan-AI/OmniBenchmark,linear_probe/models/timm_vit_modified.py,2022-08-18T03:27:42Z,add OmniBenchmark V2
github.com/ZhangYuanhan-AI/OmniBenchmark,linear_probe/models/timm_swinTransformer.py,2022-07-12T13:17:45Z,first commit
github.com/tsubota-kouga/ProjectedGAN,network.py,2022-03-15T04:29:25Z,add spectral normalization
github.com/tsubota-kouga/ProjectedGAN,network.py,2021-11-18T01:11:33Z,initial commit
github.com/Audio-WestlakeU/audiossl,audiossl/methods/atstframe/downstream/comparison_models/models/ssast.py,2023-11-09T09:20:35Z,remove the absolute paths in files
github.com/Audio-WestlakeU/audiossl,audiossl/methods/atstframe/downstream/comparison_models/models/ssast.py,2023-11-08T08:52:46Z,audiostrong test finished
github.com/Audio-WestlakeU/audiossl,audiossl/methods/atstframe/downstream/comparison_models/models/ssast.py,2023-11-08T02:43:44Z,update training files for audioset strong and dcase.
github.com/kiimmm/GenSCL,genscl.py,2022-06-23T08:13:45Z,initial code
github.com/ChantalMP/Rad-ReStruct,net/image_encoding.py,2023-07-11T12:04:10Z,"- updated results
- small fixes and cleaning"
github.com/ChantalMP/Rad-ReStruct,net/image_encoding.py,2023-07-04T07:12:22Z,Initial commit
github.com/tsinghua-fib-lab/UV-SAM,mmseg/models/backbones/timm_backbone.py,2023-12-18T08:46:30Z,upload file
github.com/jzsherlock4869/image-classification-pipeline,archs/timm_arch.py,2022-08-17T05:25:55Z,"rewrite the image classification pipeline, and make it a template"
github.com/iart-ai/prompt2prompt,stablediffusion/ldm/modules/midas/midas/vit.py,2022-11-25T12:18:58Z,add stable diffusion
github.com/valentyn1boreiko/DVCEs,utils_svces/Evaluator.py,2023-02-05T17:32:22Z,code refactoring
github.com/valentyn1boreiko/DVCEs,utils_svces/Evaluator.py,2022-09-08T07:17:00Z,init commit
github.com/valentyn1boreiko/DVCEs,blended_diffusion/utils_blended/Evaluator.py,2022-09-08T07:17:00Z,init commit
github.com/haotian-liu/transformers_llava,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/haotian-liu/transformers_llava,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/haotian-liu/transformers_llava,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/haotian-liu/transformers_llava,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-08-04T16:29:23Z,"Add BEiT (#12994)

* First pass

* Make conversion script work

* Improve conversion script

* Fix bug, conversion script working

* Improve conversion script, implement BEiTFeatureExtractor

* Make conversion script work based on URL

* Improve conversion script

* Add tests, add documentation

* Fix bug in conversion script

* Fix another bug

* Add support for converting masked image modeling model

* Add support for converting masked image modeling

* Fix bug

* Add print statement for debugging

* Fix another bug

* Make conversion script finally work for masked image modeling models

* Move id2label for datasets to JSON files on the hub

* Make sure id's are read in as integers

* Add integration tests

* Make style & quality

* Fix test, add BEiT to README

* Apply suggestions from @sgugger's review

* Apply suggestions from code review

* Make quality

* Replace nielsr by microsoft in tests, add docs

* Rename BEiT to Beit

* Minor fix

* Fix docs of BeitForMaskedImageModeling

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/haotian-liu/transformers_llava,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-04-12T22:07:10Z,"Add DeiT (PyTorch) (#11056)

* First draft of deit

* More improvements

* Remove DeiTTokenizerFast from init

* Conversion script works

* Add DeiT to ViT conversion script

* Add tests, add head model, add support for deit in vit conversion script

* Update model checkpoint names

* Update image_mean and image_std, set resample to bicubic

* Improve docs

* Docs improvements

* Add DeiTForImageClassificationWithTeacher to init

* Address comments by @sgugger

* Improve feature extractors

* Make fix-copies

* Minor fixes

* Address comments by @patil-suraj

* All models uploaded

* Fix tests

* Remove labels argument from DeiTForImageClassificationWithTeacher

* Fix-copies, style and quality

* Fix tests

* Fix typo

* Multiple docs improvements

* More docs fixes"
github.com/haotian-liu/transformers_llava,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-04-01T15:16:05Z,"Add Vision Transformer and ViTFeatureExtractor (#10950)

* Squash all commits into one

* Update ViTFeatureExtractor to use image_utils instead of torchvision

* Remove torchvision and add Pillow

* Small docs improvement

* Address most comments by @sgugger

* Fix tests

* Clean up conversion script

* Pooler first draft

* Fix quality

* Improve conversion script

* Make style and quality

* Make fix-copies

* Minor docs improvements

* Should use fix-copies instead of manual handling

* Revert ""Should use fix-copies instead of manual handling""

This reverts commit fd4e591bce4496d41406425c82606a8fdaf8a50b.

* Place ViT in alphabetical order

Co-authored-by: Lysandre <lysandre.debut@reseau.eseo.fr>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/haotian-liu/transformers_llava,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-02-22T08:14:54Z,Apply ruff flake8-comprehensions (#21694)
github.com/haotian-liu/transformers_llava,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/haotian-liu/transformers_llava,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/haotian-liu/transformers_llava,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2022-05-12T20:25:55Z,"Black preview (#17217)

* Black preview

* Fixup too!

* Fix check copies

* Use the same version as the CI

* Bump black"
github.com/haotian-liu/transformers_llava,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2022-04-07T19:58:00Z,"RegNet (#16188)

* base model done

* make style

* done

* added files

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Trigger doc build

* resolved conversations

* resolved conversations

* seer models

* minor changes

* minor changes

* make fixup

* glob variables

* minor changes

* fix copies

* config when possibile

* resolved conflicts

* resolved conflicts

* resolved conflicts

* CI

* conversion script for 10b param

* fixed for 10b model

* minor updates in the doc + make style

* removed unused code

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* removed unused code

* removed unused code

* updated modeling_utils from main

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <Sylvain.gugger@gmail.com>"
github.com/haotian-liu/transformers_llava,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-02-22T08:14:54Z,Apply ruff flake8-comprehensions (#21694)
github.com/haotian-liu/transformers_llava,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/haotian-liu/transformers_llava,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/haotian-liu/transformers_llava,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-05-12T20:25:55Z,"Black preview (#17217)

* Black preview

* Fixup too!

* Fix check copies

* Use the same version as the CI

* Bump black"
github.com/haotian-liu/transformers_llava,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/haotian-liu/transformers_llava,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-03-14T18:57:55Z,"[WIP] Resnet (#15770)

* first commit

* ResNet model correctly implemented.

basic modeling + weights conversion is done

removed unused doc

mdx file

doc and conversion script

added feature_extractor to auto

test

minor changes + style + quality

doc

test

Delete process.yml

A left over from my attempt of running circleci locally

* minor changes

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* new test format

* minor changes from conversations

* minor changes from conversations

* make style + quality

* readded the tests

* test + README

* minor changes from conversations

* error in README

* make fix-copies

* removed regression for classification head

* make quality

* fixed loss control flow

* fixed loss control flow

* resolved conversations

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* READMEs

* index.mdx

* minor changes

* updated tests and models

* unused import

* outputs

* Update docs/source/model_doc/resnet.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* added embeddings_size

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* conversation

* added push to hub

* test

* embedding_size

* make fix-copies

* resolved conversations

* CI

* changed organization

* minor changes

* CI

* minor changes

* conversations

* conversation

* doc

* tests

* removed unused docstring

* conversation

* removed unused outputs

* CI

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>
Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>"
github.com/haotian-liu/transformers_llava,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/haotian-liu/transformers_llava,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/haotian-liu/transformers_llava,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/haotian-liu/transformers_llava,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-08-04T16:29:23Z,"Add BEiT (#12994)

* First pass

* Make conversion script work

* Improve conversion script

* Fix bug, conversion script working

* Improve conversion script, implement BEiTFeatureExtractor

* Make conversion script work based on URL

* Improve conversion script

* Add tests, add documentation

* Fix bug in conversion script

* Fix another bug

* Add support for converting masked image modeling model

* Add support for converting masked image modeling

* Fix bug

* Add print statement for debugging

* Fix another bug

* Make conversion script finally work for masked image modeling models

* Move id2label for datasets to JSON files on the hub

* Make sure id's are read in as integers

* Add integration tests

* Make style & quality

* Fix test, add BEiT to README

* Apply suggestions from @sgugger's review

* Apply suggestions from code review

* Make quality

* Replace nielsr by microsoft in tests, add docs

* Rename BEiT to Beit

* Minor fix

* Fix docs of BeitForMaskedImageModeling

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/haotian-liu/transformers_llava,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-04-12T22:07:10Z,"Add DeiT (PyTorch) (#11056)

* First draft of deit

* More improvements

* Remove DeiTTokenizerFast from init

* Conversion script works

* Add DeiT to ViT conversion script

* Add tests, add head model, add support for deit in vit conversion script

* Update model checkpoint names

* Update image_mean and image_std, set resample to bicubic

* Improve docs

* Docs improvements

* Add DeiTForImageClassificationWithTeacher to init

* Address comments by @sgugger

* Improve feature extractors

* Make fix-copies

* Minor fixes

* Address comments by @patil-suraj

* All models uploaded

* Fix tests

* Remove labels argument from DeiTForImageClassificationWithTeacher

* Fix-copies, style and quality

* Fix tests

* Fix typo

* Multiple docs improvements

* More docs fixes"
github.com/haotian-liu/transformers_llava,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/haotian-liu/transformers_llava,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/haotian-liu/transformers_llava,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/haotian-liu/transformers_llava,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-01-21T11:10:41Z,"Add Swin Transformer (#15085)

* Add all files

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Updates

* Apply suggestions from review

* Fix failing tests

* Update __init__.py

* Update configuration_swin.py

* Update auto_factory.py

* Fix pytests

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Fix tests and default checkpoint

* Fix Recursion error

* Code quality

* Remove copied from

* Update modeling_swin.py

* Code quality

* Update modeling_swin.py

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

* Fix feature extractor

* Fix code quality

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

* Update configuration_swin.py

* Update default checkpoint

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/model_doc/swin.mdx

Co-authored-by: Mishig Davaadorj <mishig.davaadorj@coloradocollege.edu>

* Update conversion script

* Reformat conversion script

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>
Co-authored-by: Mishig Davaadorj <mishig.davaadorj@coloradocollege.edu>"
github.com/haotian-liu/transformers_llava,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/haotian-liu/transformers_llava,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-01-06T12:27:30Z,"fix levit timm conversion file (#20938)

* fix levit timm conversion file

* remove set_defaults"
github.com/haotian-liu/transformers_llava,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/haotian-liu/transformers_llava,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2022-06-01T15:06:20Z,"Adding LeViT Model by Facebook (#17466)

* levit files

* levit tests

* weights script

* weights script

* update

* style fixes

* few minor corrections

* Added teacher model

* edit docs

* fix-copies

* style fixes

* pr error resolved

* Update README.md

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/index.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/__init__.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/__init__.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/configuration_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/configuration_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* suggested pr changes

* style fixes

* minor bug

* update

* minor doc edit

* style

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update tests/models/levit/test_modeling_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* residual layer readable

* style

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update tests/models/levit/test_feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* change checkpoints and style

* update

* minor changes

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/haotian-liu/transformers_llava,src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/haotian-liu/transformers_llava,src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/haotian-liu/transformers_llava,src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2022-07-27T15:14:47Z,"Add swin transformer v2 (#17469)

* Add files generated using transformer-cli add-new-model-like command

* Add changes for swinv2 attention and forward method

* Add fixes

* Add modifications for weight conversion and remaining args in swin model

* Add changes for patchmerging

* Add changes for SwinV2selfattention

* Update conversion script

* Add final fixes for the swin_v2 model

* Add changes for conversion script for pretrained window size case

* Add pretrained window size value from config in SwinV2Encoder class

* Make fixup

* Add swinv2 to models_not_in_readme to utils/check_copies.py

* Modify Swinv2v2 to Swin Transformer V2

* Remove copied from, to run make fixup command

* Add updates to swinv2tf from main branch

* Add pretrained_window_size to config, to make tests pass

* Add modified weights from nandwalritik profile for swinv2

* Update model weights from swinv2 from nandwalritik profile

* Add fix for build_pr_documentation CI fix

* Add fixes for weight conversion

* Add change to make input with padding work

* Add fixes for test cases

* Add few changes from swin to swinv2 to pass test cases

* Remove tests for tensorflow as swinv2 for TF is not added yet

* Overide test_pt_tf_model_equivalence function as TF implementation for swinv2 is not added yet

* Add modeling_tf_swinv2 to _ignore_modules as test file is removed for this one right now.

* Update docs url for swinv2 in README.md

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Undo changes for check_repo

* Update url in readme.md

* Remove overrided function to test pt_tf_model_equivalence

* Remove TF model imports for Swinv2 as its not implemented in this PR

* Add changes for index.mdx

* Add swinv2 papers link,abstract and contributors details

* Rename cpb_mlp to continous_position_bias_mlp

* Add tips for swinv2 model

* Update src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Fix indentation for docstring example in src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update import order in src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add copyright statements in weights conversion script.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Remove Swinv2 from models_not_in_readme

* Reformat code

* Remove TF implementation file for swinv2

* Update start docstring.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add changes for docstring

* Update orgname for weights to microsoft

* Remove to_2tuple function

* Add copied from statements wherever applicable

* Add copied from to Swinv2ForMaskedImageModelling class

* Reformat code.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add unittest.skip(with reason.) for test_inputs_embeds test case.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add updates for test_modeling_swinv2.py

* Add @unittest.skip() annotation for clarity to create_and_test_config_common_properties function

* Add continuous_position_bias_mlp parameter to conversion script

* Add test for testing masked_image_modelling for swinv2

* Update Swinv2 to Swin Transformer v2 in docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update Swinv2 to Swin Transformer v2 in docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add suggested changes

* Add copied from to forward methods of Swinv2Stage and Swinv2Encoder

* Add push_to_hub flag to weight conversion script

* Change order or Swinv2DropPath class

* Add id2label mapping for imagenet 21k

* Add updated url for SwinV2 functions and classes used in implementation

* Update input_feature dimensions format, mentioned in comments.

Co-authored-by: Alara Dirik <8944735+alaradirik@users.noreply.github.com>

* Add suggested changes for modeling_swin2.py

* Update docs

* Remove create_and_test_config_common_properties function, as test_model_common_attributes is sufficient.

* Fix indentation.

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Add changes for making Nit objects in code style

* Add suggested changes

* Add suggested changes for test_modelling_swinv2

* make fix-copies

* Update docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Alara Dirik <8944735+alaradirik@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/haotian-liu/transformers_llava,src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/haotian-liu/transformers_llava,src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2022-12-07T10:03:39Z,"Add BiT + ViT hybrid (#20550)

* First draft

* More improvements

* Add backbone, first draft of ViT hybrid

* Add AutoBackbone

* More improvements

* Fix bug

* More improvements

* More improvements

* Convert ViT-hybrid

* More improvements

* add patch bit

* Fix style

* Improve code

* cleaned v1

* more cleaning

* more refactoring

* Improve models, add tests

* Add docs and tests

* Make more tests pass

* Improve default backbone config

* Update model_type

* Fix more tests

* Add more copied from statements

* More improvements

* Add push to hub to conversion scripts

* clean

* more cleanup

* clean

* replace to

* fix

* Update src/transformers/models/bit/configuration_bit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* fix base model prefix

* more cleaning

* get rid of stem

* clean

* replace flag

* Update src/transformers/models/bit/configuration_bit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/bit/configuration_bit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* add check

* another check

* fix for hybrid vit

* final fix

* update config

* fix class name

* fix `make fix-copies`

* remove `use_activation`

* Update src/transformers/models/bit/configuration_bit.py

* rm unneeded file

* Add BiT image processor

* rm unneeded file

* add doc

* Add image processor to conversion script

* Add ViTHybrid image processor

* Add resources

* Move bit to correct position

* Fix auto mapping

* Rename hybrid to Hybrid

* Fix name in toctree

* Fix READMEs'

* Improve config

* Simplify GroupNormActivation layer

* fix test + make style

* Improve config

* Apply suggestions from code review

Co-authored-by: Patrick von Platen <patrick.v.platen@gmail.com>

* remove comment

* remove comment

* replace

* replace

* remove all conv_layer

* refactor norm_layer

* revert x

* add copied from

* last changes + integration tests

* make fixup

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* fix name

* fix message

* remove assert and refactor

* refactor + make fixup

* refactor - add  + sfety checker

* fix docstring + checkpoint names

* fix merge issues

* fix function name

* fix copies

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* fix model checkpoint

* fix doctest output

* vit name on doc

* fix name on doc

* fix small nits

* fixed integration tests

* final changes - slow tests pass

Co-authored-by: Niels Rogge <nielsrogge@Nielss-MacBook-Pro.local>
Co-authored-by: younesbelkada <younesbelkada@gmail.com>
Co-authored-by: Younes Belkada <49240599+younesbelkada@users.noreply.github.com>
Co-authored-by: Patrick von Platen <patrick.v.platen@gmail.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/zuoyecihua/CSC,model/copy_transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-02-03T08:47:57Z,add code
github.com/zuoyecihua/CSC,model/copy_transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-02-03T08:37:57Z,update .gitignore
github.com/zuoyecihua/CSC,model/copy_transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-02-03T08:03:06Z,add code
github.com/zuoyecihua/CSC,model/copy_transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-02-03T08:47:57Z,add code
github.com/zuoyecihua/CSC,model/copy_transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-02-03T08:37:57Z,update .gitignore
github.com/zuoyecihua/CSC,model/copy_transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-02-03T08:03:06Z,add code
github.com/PKU-ML/ContraNorm,BERT_gleu/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-03-21T10:53:08Z,"full

full (+README)"
github.com/PKU-ML/ContraNorm,BERT_gleu/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-03-21T10:53:08Z,"full

full (+README)"
github.com/PKU-ML/ContraNorm,BERT_gleu/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-03-21T10:53:08Z,"full

full (+README)"
github.com/PKU-ML/ContraNorm,BERT_gleu/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-03-21T10:53:08Z,"full

full (+README)"
github.com/PKU-ML/ContraNorm,BERT_gleu/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-03-21T10:53:08Z,"full

full (+README)"
github.com/PKU-ML/ContraNorm,BERT_gleu/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-03-21T10:53:08Z,"full

full (+README)"
github.com/PKU-ML/ContraNorm,BERT_gleu/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-03-21T10:53:08Z,"full

full (+README)"
github.com/endo-yuki-t/MAG,ldm/modules/midas/midas/vit.py,2023-10-27T07:01:38Z,initial commit
github.com/sangwook236/SWDT,sw_dev/python/rnd/test/machine_learning/timm_test.py,2023-02-23T10:49:21Z,[New] A few tutorials were initially committed for PyTorch Image Models (TIMM) library.
github.com/ChengHan111/DNC,DNC_classification/mmcls/models/backbones/timm_backbone.py,2022-11-18T23:20:20Z,update configs and mmcls
github.com/Max-Fu/tvl,tvl_enc/tvl.py,2024-02-20T21:25:56Z,first commit
github.com/MrZihan/GridMM,VLN_CE/vlnce_baselines/models/duet/vilmodel.py,2023-09-01T05:30:18Z,Add files via upload
github.com/MrZihan/GridMM,VLN_CE/vlnce_baselines/models/gridmap/vilmodel.py,2023-09-01T05:30:18Z,Add files via upload
github.com/jmerullo/limber,image_encoders.py,2023-01-24T03:13:08Z,first commit
github.com/sMamooler/CLIP_Explainability,code/pytorch-grad-cam/usage_examples/swinT_example.py,2022-01-02T17:05:38Z,modularized the code
github.com/Luckydog-lhy/Tensorrt_Mask2Former,Torch-TensorRT-universe/tests/modules/hub.py,2022-06-27T09:54:49Z,torch_tensorrt_update
github.com/grasses/RemovalNet,model/inputx224/ViT.py,2023-08-25T06:33:42Z,add figure
github.com/dedoogong/ThunderNet-pytorch,tmp.py,2019-11-17T13:20:11Z,1st
github.com/tobna/WhatTransformerToFavor,models.py,2023-06-27T12:04:57Z,initial commit
github.com/drivendataorg/zamba,zamba/models/efficientnet_models.py,2023-05-12T17:10:42Z,"Specify map location when loading model (#272)

* specify map location when loading model

* more map_location

* use self.device instead

* cleanup

* specify cpu

* put back hparams

* remove comment

* remove newline

* simplfications

* cleanup"
github.com/drivendataorg/zamba,zamba/models/efficientnet_models.py,2023-02-11T00:40:12Z,"Support recent versions of black and lightning (#260)

* use most recent black release

* add needed attributes to dictionary for v1.9"
github.com/drivendataorg/zamba,zamba/models/efficientnet_models.py,2022-08-26T00:04:31Z,"Get model_name from model class on loading checkpoint (#221)

* bonus docs fix

* Get model_name from model class

* add tests

* formatting, linting, add format make command

* makefile docs

* when training from ckpt, model has name now

* fix test cleaning

* add save_dir as tmp_path for tests

* return copy of hparams from cache so new ref each time

* format

Co-authored-by: Emily Miller <ejm714@gmail.com>"
github.com/drivendataorg/zamba,zamba/models/efficientnet_models.py,2022-07-15T00:06:21Z,"New frame selection model (#195)

* new model and kwargs

* WIP load new model, remove old exp

* support video detection and postprocess as a single array

* black

* fix tests

* remove old object detection model

* fix tests

* use image size from config

* source for tiny exp

* first pass at distributed training

* use normal array

* remove padding and just resize

* resize instead of pad

* flake8

* remove extra code

* three boxes found for dog image

* cleanup

* fix test

* scale and pad

* fix tests

* black

* remove extra code

* torch.no_grad is super duper important

* iterate over batches of 64

* black

* spacing

* decrease batch size so this fits

* set crf to default

* act2 is now part of bn2

* update manifest

* set frame batch size as param

* preallocate

* add api reference for mdlite

* fix all object detection links

* update manifest

Co-authored-by: Ubuntu <ubuntu@ip-172-31-30-148.us-west-1.compute.internal>"
github.com/drivendataorg/zamba,zamba/models/efficientnet_models.py,2021-11-05T19:19:50Z,"Move yolox to object_detection module (#167)

* Move yolox to object_detection module and update references and docs

* Remove yolox from models docs"
github.com/drivendataorg/zamba,zamba/models/efficientnet_models.py,2021-10-30T17:42:12Z,"V2 (#123)

* delete v1

* remove hidden files

* Zamba v1 docs port (#108)

* workflow tests

* remove tests workflow from v2

* Great migration (#113)

* copy everything

* first round of deletion

* more deletions

* more deletions

* put everything under zamba

* remove old readme

* replace zamba_algorithms with zamba

* integrate makefile

* changed files

* updates from save dir overwrite

* add gitignore

* use gitignore from zamba algo

* remove load metadata

* remove old dirs

* lint

* remove load metadata

* remove load_metadata test

* fix datamodule tests

* simplify time dist model since there is only one

* flake8

* remove unused file

* put back lost code

* back to long name because that is was model is registered as

* species is no longer on model

* use models without species prefix and zamba backbone finetune params;

* rename time dist head since there is only one

* further remove species

* use lstrip instead

* passing tests

* add missing underscore

* update links to setup.cfg

* specify branches in workflow

* update setup.cfg

* Update setup.cfg

Co-authored-by: Peter Bull <pjbull@gmail.com>

* Update setup.cfg

Co-authored-by: Peter Bull <pjbull@gmail.com>

Co-authored-by: Peter Bull <pjbull@gmail.com>

* bug fix (#114)

* Skip on failure, actually drop duplicates, clarify logging (#115)

* skip on failure, actually drop duplicates, clarify logging

* correct comment

* only apply to root validators

* First draft of zamba v2 docs (#112)

* Update zamba predict in cli doc

* Update zamba train in cli doc

* Formatting

* Start updating index

* Update ungulate pic

* update to chimp image

* specify image sizes

* update image sizes

* add labels to images

* Format

* add labels to frames

* note about top div

* start updating inputs_outputs

* tweaks to index

* Use new vids in index

* use full size images

* remove some todo notes

* comments to cli md

* comments to cli md

* comments to cli md

* Add comments to index

* Comments to inputs_outputs

* Incorporate preliminary comments

* Start working on install

* Start working on algorithms

* Start reorganizing

* Redo quickstart to have a python section

* Add basics of slowfast

* Use better compressed images

* Try and view with new TOC

* Add more model info

* Start configuration documentation

* Add all configurations

* Update TOC with configurations doc page

* Add where output is saved

* Add placeholders for user tutorials

* v2 updates

* Add info about yolox

* Send us labeled videos

* Make available models top level

* TODO about model details

* Better explanation of YAML v CLI args

* Copy edits and formatting

* Update install page

* Add basic use to available models

* Update mkdocs.yml

* Start working on python package page

* Make TOC work correctly

* Add explanation of more of the parameter options

* Start user tutorials

* Update based on new default help text

* Copy editing

* Add where to reference for python package

* Remove repetitive parameter explanation from cli.md

* Update TOC names

* Update tutorial names

* Add python package and training to quickstart

* copy edits

* Status before big reorganization

* Restructure

* Write predict tutorial

* Other updates for restructuring

* YAML configs page

* Update homepage index

* Save path for CSV

* Update tutorials

* Update default video loading configs

* Record of extra code, then will delete

* Remove extra md files

* Save path updates

* delete more extra files

* copy edits

* Update args

* TODO updates

* New default save path

* Update megadetector explanation

* Better ffmpeg installation instructions

* Fix checkpoint saving behavior

* Typos

* Add troubleshooting sections and format python code blocks better

* Add video loading requirements to yaml-config.md

* Improve default model descriptions

* Begin incorporating feedback

* consistent FFmpeg capitalization

* index testing

* index testing

* More feedback

* Add debugging page

* yaml feedback

* Seprate common advanced options page

* beautiful magic tabs and more copy editing

* Tabs on model page

* Support training models with just two classes (#117)

* two class metric updates

* Update tests/conftest.py

Co-authored-by: Emily Miller <ejm714@gmail.com>

Co-authored-by: Emily Miller <ejm714@gmail.com>

* 32 not 31 species (#118)

* Add erdantic diagram (#121)

* add erdantic diagram

* add missing docs reqs

* unpin

* Write out splits + fix for videos that cannot be loaded (#119)

* write out splits

* write out zeros for videos that cannot be loaded

* create missing save dir

* typo

* Add OSes and codecov to github actions (#124)

* add oses and codecov

* try w/o windows

* msvc config

* test with env var

* Give up on Windows for now

* [V2] Clean up dev dependencies (#125)

* Remove unneeded dev dependencies

* Split out docs and lint deps for faster installation

Co-authored-by: Jay Qi <jayqi@users.noreply.github.com>

* [V2] Release and docs CI (#126)

* Add make command to build distributions

* Add --version command

* Add README

* Test built distributions; add failed build notify

* Reorder config to keep build metadata together at the top

* Rename docs-publish to docs-master

* Rename docs-master to docs-latest

* Add maintainers docs

* Add release workflow

* Add mike for versioned docs

* Run docs-latest on push to v2

* Remove code tags in nav

* Add __main__ for python -m entrypoint

Co-authored-by: Jay Qi <jayqi@users.noreply.github.com>

* Get default video loader config for models (#127)

* get default video loader for model

* get default vlc if not specified

* set save dir to tmp path so splits.csv is written to temp dir

* keep vlc in so we can use for training

* add evenly sample

* use loguru

* set num workers to 3

* remove cpu count

* revert change

* show ffmpeg error in debug mode

* add link to wiki

* Rename README.md to MAINTAINING.md (#128)

* API Reference with mkdocstrings (#129)

* Remove upload_models.py script

* Add API Reference with mkdocstrings

* Minor documentation tweaks to fix rendering

* Use sections instead of auto-expand

* Need to install zamba to use mkdocstrings

* Put back upload_models.py

* Wrap upload_models in if __name__ = '__main__'

Co-authored-by: Jay Qi <jayqi@users.noreply.github.com>

* Resized test assets (#130)

* add resized test assets

* resampled to fps=1

* update labels per new videos

* update with new video

* fix failed test

* start python tutorial

* Update v2 docs with new changes (#132)

* clarify labels filepath columns

* start updating video loader config list

* update configs

* Update video organization reqs

* video_width/height and num_workers

* filepaths

* default num_workers

* update num_workers in CLI

* writing out train_config and predict_config yamls

* splits.csv

* updates based on netlify preview

* add screencast video demo

* fix linting fail

* updates for caching PR 131

* typo

* use best terminal video from asciinema

* specific explanation of frame_selection_height

* correct default batch size

* add frame_selection_width v model_input_width

* talk about num_workers more

* flake8 fix

* PR feedback

* update home page language

* fix typo and change from sections to expand

* reduce toc depth to 2 to allow expand

* use megadetectorlite consistently

* move api reference to end

* add train data size recs

* Update docs/docs/train-tutorial.md

rephrase train data size rec

Co-authored-by: Emily Miller <ejm714@gmail.com>

* Enable nav index page for models

* make contribute section header

* Edit MDLite language

* put yolox back in

Co-authored-by: Emily Miller <ejm714@gmail.com>
Co-authored-by: Jay Qi <jayqi@users.noreply.github.com>

* Expose final three models (#133)

* add official models dir

* remove tf events

* move to outside template folder

* simplify model mapping; set batch size default to 2

* move official models into zamba

* add vlc for slowfast

* update manifest for official models

* update filename

* update filepath

* must import models for them to be in available_models

* remove config details used for training so these can be the baseline

* update config

* add backbone finetune config that was used in case defaults change

* update labels for time dist; remove slowfast until it is retrained

* update per new model

* formatting

* helper command

* already path

* Clarify caching (#131)

* set ability to turn off caching for prediction

* reomve cache dir from cli

* test cache dir is set but not used

* rename to MODEL_CACHE_DIR for consistency

* rename cache_dir to model_cache_dir

* move video cache dir into configs

* remove unneeded code as caching is off by default

* rename to video_cache_dir for clarity

* remove

* do not support setting in configs

* put back in settings

* lint and such

* rebase fix

* put cache_dir and cleanup option on video laoder config

* add tests for caching

* get empty vlc if none is passed

* put within func to avoid writing to real path

* add logging

* bug fix

* reomve old change

* loguru uses warning not warn

* load dotenv in init

* setup logger in init and rename to log_level for simplicity

* cleanup does not change hash

* fix test

* lint

* add regression test

* do not use load_dotenv

* Fix transform look up bug (#135)

* separate out weight lookup from class based dict

* fix lookup

* set split propotions to none if using split in labels

* tense

* shorten

* fix failing test

* add updated slowfast model

* add test for specifying checkpoint

* address deprectation warnings

* update templates to reflect final models

* fix imports

* lint

* fix make docs-serve

* Update link to models and contribute pages

* update erdantic schema

* Update references to other pages

* Add links to final github source code to docs (#141)

* add working links with v2 branch

* use master branch instead of v2

* refer to api docs instead of github

* Automated workflow for publishing models (#140)

* WIP

* update weight lookup and hash config to get model name

* use auto workflow

* auto workflow

* add logging

* rename to publish models

* auto workflow

* add code for handling finetuned models

* add docs for adding a new model

* checklist

* update model name

* put models in official models dir on s3

* add lookup function

* auto workflow

* use model dir which is clearer than ckpt

* update docs

* new slowfast model

* rglob needs list

* update euro config

* only hash once and have function do a lookup

* make this not model specific

* clarify comments

* remove checkpoint from train_config

* docs

* function to get only model params

* use function to subset train config

* update yamls based on exclude rather than include

* only set checkpoint if not from_scratch, otherwise look up hparams

* missing import

* lint

* checkpoint will now be none for training fromm scratch

* remove space

* docs-latest needs zamba (#143)

* Add densepose model (#142)

* Add densepose model

* Update densepose install and testing

* format

* remove errant test yml

* more generic codec

* append coverage

* Update README for v2 (#134)

* screencast video demo

* video not showing

* video show method

* autoplay vid

* vid

* updated terminal video

* test video embedding

* terminal video

* Embed video in README

* start updating text

* full draft of text

* delete vid and update text

* editing based on page rendering

* rephrase

* make same as index.md

* update monkey video

* edit README

* improve formatting

* add make docs-setup

* delete index.md raw page

* hybrid README

* update

* updates

* correct contribute link

* add changelog from HISTORY.md

* create changelog folder placeholder

* delete old changelog md

* Simplify caching (#145)

* simplify caching

* nest function

* simplify

* move

* alphabetize

* lint

* rename to cache path

* fix dataset

* Change default backbone finetuning, auto_lr_find, and fix persistent workers bug (#148)

* Default patience from 3 to 5

* Default for auto_lr_find to False

* Change default unfreeze_backbone_at_epoch to 5

* Fix persistent_workers bug

* Revert changes to templates

* 496 docs review (#150)

* add denspose and update save dir

* commit two autogenerated files

* changelog edits

* contribute edits

* WIP edits for models

* finish edits for models and separate out densepose

* full list of parks

* config options

* vscode format

* move config guide into tutorials

* extra options

* windows not tested

* tutorial edits

* remove extra nb

* put save path back

* quickstart edits

* vscode formatting

* finish quickstart edits

* train tutorial

* add template section

* logging

* ffpmeg install in readme

* finetuning

* capitalization

* remove ffmpmeg

* date

* add densepose

* tweak

* simplify

* fix densepose video link

* caps and tensorboard

* add help

* remove pythong piece since this is focused on yaml files

* more tweaks

* edit history not change log

* copy edits

* fix changelog

* table

* table

* typo

* alphabetize

* table bug

* table edits

* Simplify save_dir and some directory -> dir renames (#151)

* wip renames

* renames in docs

* readme

* data dir renamme in docs

* rename in code from data_directory to data_dir

* maintaining update

* fix capitalization

* further updates

* tweak

* do not overwrite

* add overwrite save dir

* add overwrite save dir to config

* update configs with all info

* use full train configuration

* only upload if does not exist

* tests for save

* overwrite param

* better set up and test for overwrite

* docs

* update docs with overwrite

* from overwrite_save_dir to overwrite

* missed rename

* remove machine specific from vlc

* unindent so test actually runs

* check for local and cached checkpoints

* should be and

* write out predict config before preds start like we do for train config

* update all configs and use only first 10 digits of hash

* dry run check after save is configured; more robust test

* reorder

* show save directory

* copy edits

* update template

* fix test

* lower case for consistency

* fix test

* Fix docs links (#155)

* update readme links

* update makefile

Co-authored-by: Emily Miller <ejm714@gmail.com>
Co-authored-by: ejm714 <emily@drivendata.org>
Co-authored-by: Katie Wetstone <46792169+klwetstone@users.noreply.github.com>
Co-authored-by: Jay Qi <2721979+jayqi@users.noreply.github.com>
Co-authored-by: Jay Qi <jayqi@users.noreply.github.com>
Co-authored-by: Katie Wetstone <klwetstone@gmail.com>
Co-authored-by: Robert Gibboni <robert@drivendata.org>"
github.com/ngxbac/Kaggle-Recursion-Cellular,src/models/resnet.py,2019-07-30T08:38:40Z,Train resnet50 with cut mix
github.com/ngxbac/Kaggle-Recursion-Cellular,src/models/resnet.py,2019-07-14T05:16:56Z,Add resnet
github.com/ngxbac/Kaggle-Recursion-Cellular,src/models/resnet.py,2019-07-02T08:34:57Z,First commit
github.com/YangXiaocui1215/MultiPoint,src/multimodal_models.py,2022-11-22T03:31:59Z,Add files via upload
github.com/OpenSolarPV/OpenPV,mmseg/models/backbones/timm_backbone.py,2022-09-13T13:59:09Z,mmseg
github.com/MadryLab/failure-directions,failure_directions/src/model_utils.py,2022-12-14T19:29:33Z,done with release
github.com/MadryLab/failure-directions,failure_directions/src/model_utils.py,2022-12-14T16:48:13Z,iclr update
github.com/MadryLab/failure-directions,failure_directions/src/model_utils.py,2022-09-14T17:53:49Z,get svm running and add MLPs
github.com/MadryLab/failure-directions,failure_directions/src/model_utils.py,2022-08-23T03:44:25Z,example code and pippable
github.com/1585231086/PAND-Precise-Action-Recognition-on-Naturalistic-Driving,Swin-transformer/Video-Swin-Transformer-master/mmaction/models/recognizers/base.py,2022-04-19T10:05:45Z,first commit
github.com/facebookresearch/clip-rocket,models.py,2023-06-08T15:46:16Z,code release
github.com/bryant1410/fitclip,aligner/encoder/slip.py,2023-01-24T13:46:46Z,Publish the code
github.com/DongSky/LPT,phase2_test/PromptModels/GetPromptModel.py,2022-10-05T15:57:01Z,testing code
github.com/DongSky/LPT,phase2_test/PromptModels_pool/GetPromptModel.py,2022-10-05T15:57:01Z,testing code
github.com/DongSky/LPT,phase2_test/PromptModels_pool_eval/GetPromptModel.py,2022-10-05T15:57:01Z,testing code
github.com/BaratiLab/ManufacturingNet,ManufacturingNet/models/vit.py,2023-04-04T23:45:03Z,published newest 0.0.7 version
github.com/BaratiLab/ManufacturingNet,ManufacturingNet/models/vit.py,2023-03-27T20:05:36Z,added new tutorials
github.com/BaratiLab/ManufacturingNet,ManufacturingNet/models/vit.py,2023-03-23T20:27:31Z,merged
github.com/BaratiLab/ManufacturingNet,ManufacturingNet/models/vit.py,2023-03-23T18:30:56Z,added pos embedding
github.com/BaratiLab/ManufacturingNet,ManufacturingNet/models/vit.py,2023-03-23T01:23:58Z,Vit running
github.com/BaratiLab/ManufacturingNet,ManufacturingNet/models/vit.py,2023-03-22T21:37:13Z,added vit
github.com/anilkagak2/DiSK_Distilling_Scaffolded_Knowledge,models.py,2023-02-21T21:54:24Z,added other experimental routing models : g
github.com/anilkagak2/DiSK_Distilling_Scaffolded_Knowledge,models.py,2023-02-16T22:31:14Z,cleaning up unnecessary code from the Hybrid Models codebase -- only keeping the essential DiSK (Distilling with Scaffolded Knowledge) functionality
github.com/naver-ai/cream,cream/model.py,2024-01-16T06:57:01Z,feat: commit with a codebase & update README & release PyPi package
github.com/locuslab/massive-activations,lib/load_model.py,2024-02-27T21:30:31Z,init
github.com/gakkiri/SGRUnet-pytorch,model/Dnet.py,2020-04-15T08:16:54Z,Add files via upload
github.com/gakkiri/SGRUnet-pytorch,model/Dnet.py,2020-04-10T12:58:05Z,Add files via upload
github.com/gakkiri/SGRUnet-pytorch,model/Dnet.py,2020-04-09T13:19:05Z,fix bug
github.com/gakkiri/SGRUnet-pytorch,model/Dnet.py,2020-04-07T14:31:39Z,add vgg family
github.com/gakkiri/SGRUnet-pytorch,model/Dnet.py,2020-04-07T13:51:12Z,"add VGG16, 19, 16bn, 19bn"
github.com/gakkiri/SGRUnet-pytorch,model/Dnet.py,2020-03-25T07:18:35Z,Add files via upload
github.com/Heathcliff-saku/ViewFool_,classifier/predict_4.py,2022-10-06T09:57:38Z,first
github.com/Heathcliff-saku/ViewFool_,classifier/predict_3.py,2022-10-06T09:57:38Z,first
github.com/Heathcliff-saku/ViewFool_,classifier/predict_2.py,2022-10-06T09:57:38Z,first
github.com/megvii-research/SimpleDG,ddp_training/model.py,2022-08-16T10:11:32Z,Add files via upload
github.com/lkk688/DeepDataMiningLearning,DeepDataMiningLearning/torchhubmodel.py,2023-08-23T18:27:20Z,add docs
github.com/MartinXM/TPS,mmaction/models/recognizers/base.py,2022-08-09T09:21:38Z,init commit
github.com/seefun/TorchUtils,torch_utils/advanced/dolg.py,2021-11-14T12:00:33Z,[feat] fix dolg
github.com/seefun/TorchUtils,torch_utils/advanced/dolg.py,2021-10-14T03:29:09Z,[feat] add anti_alias and unit test
github.com/seefun/TorchUtils,torch_utils/advanced/dolg.py,2021-10-10T16:47:49Z,[feat] update ref
github.com/seefun/TorchUtils,torch_utils/advanced/dolg.py,2021-10-10T16:39:17Z,[feat] update code & add sub-center arcface & add dolg
github.com/seefun/TorchUtils,torch_utils/models/backbone/timm_models.py,2021-11-11T11:44:02Z,[feat] fix unet when align corners
github.com/seefun/TorchUtils,torch_utils/models/backbone/timm_models.py,2021-10-10T16:39:17Z,[feat] update code & add sub-center arcface & add dolg
github.com/seefun/TorchUtils,torch_utils/models/backbone/timm_models.py,2021-10-06T06:54:01Z,[feat] adapted to PEP8
github.com/seefun/TorchUtils,torch_utils/models/backbone/timm_models.py,2021-09-10T08:53:34Z,[feat] add UNet
github.com/seefun/TorchUtils,torch_utils/models/cls_models/hybrid_cls_model.py,2021-11-12T04:55:29Z,[feat] add hybrid model
github.com/seefun/TorchUtils,torch_utils/models/cls_models/hybrid_cls_model.py,2021-11-10T08:37:06Z,[feat] CoordAttention
github.com/seefun/TorchUtils,torch_utils/models/cls_models/hybrid_cls_model.py,2021-10-17T09:11:16Z,[feat] update todo
github.com/somepago/dbViz,model.py,2021-11-22T20:28:53Z,cleanedup first version
github.com/somepago/dbViz,models/ViT_pt_interpolate.py,2021-11-22T20:28:53Z,cleanedup first version
github.com/TencentYoutuResearch/AnomalyDetection-SoftPatch,src/backbones.py,2023-03-06T09:55:07Z,upload
github.com/AlonzoLeeeooo/LCDG,ldm/modules/midas/midas/vit.py,2023-06-04T07:09:53Z,training and inference code
github.com/swj0419/in-context-pretraining,lib/huggingface_pytorch-transformers_main/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2024-01-13T23:12:12Z,lib
github.com/swj0419/in-context-pretraining,lib/huggingface_pytorch-transformers_main/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2024-01-13T23:12:12Z,lib
github.com/swj0419/in-context-pretraining,lib/huggingface_pytorch-transformers_main/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2024-01-13T23:12:12Z,lib
github.com/swj0419/in-context-pretraining,lib/huggingface_pytorch-transformers_main/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2024-01-13T23:12:12Z,lib
github.com/swj0419/in-context-pretraining,lib/huggingface_pytorch-transformers_main/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2024-01-13T23:12:12Z,lib
github.com/swj0419/in-context-pretraining,lib/huggingface_pytorch-transformers_main/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2024-01-13T23:12:12Z,lib
github.com/swj0419/in-context-pretraining,lib/huggingface_pytorch-transformers_main/src/transformers/models/timm_backbone/modeling_timm_backbone.py,2024-01-13T23:12:12Z,lib
github.com/swj0419/in-context-pretraining,lib/huggingface_pytorch-transformers_main/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2024-01-13T23:12:12Z,lib
github.com/swj0419/in-context-pretraining,lib/huggingface_pytorch-transformers_main/src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2024-01-13T23:12:12Z,lib
github.com/apple/ml-destseg,model/destseg.py,2023-05-24T07:15:03Z,"init

Co-authored-by: AllenZhangTHU <riolu@vip.qq.com>
Co-authored-by: westonli-thu <weston_li@apple.com>"
github.com/thudzj/ELLA,main.py,2022-08-05T11:56:26Z,for rebuttal
github.com/thudzj/ELLA,main.py,2022-05-17T03:37:09Z,refine
github.com/thudzj/ELLA,main.py,2022-05-10T15:37:57Z,Finish
github.com/thudzj/ELLA,main.py,2022-05-04T12:57:17Z,Add in-c
github.com/thudzj/ELLA,main.py,2022-05-04T03:37:10Z,Add baseline
github.com/thudzj/ELLA,main.py,2022-05-03T15:22:06Z,Finish in
github.com/thudzj/ELLA,main.py,2022-05-02T16:04:12Z,Fix
github.com/thudzj/ELLA,main.py,2022-05-02T15:48:52Z,Fix
github.com/thudzj/ELLA,main.py,2022-05-02T14:03:21Z,Fix
github.com/thudzj/ELLA,main.py,2022-05-02T13:58:01Z,Finish resnet
github.com/thudzj/ELLA,main.py,2022-04-28T15:22:07Z,F
github.com/thudzj/ELLA,main.py,2022-03-30T02:01:34Z,Init
github.com/thudzj/ELLA,mfvi_baseline.py,2022-08-05T11:56:26Z,for rebuttal
github.com/thudzj/ELLA,mfvi_baseline.py,2022-05-17T03:37:09Z,refine
github.com/thudzj/ELLA,mfvi_baseline.py,2022-05-10T15:37:57Z,Finish
github.com/thudzj/ELLA,laplace_baseline.py,2022-08-05T11:56:26Z,for rebuttal
github.com/thudzj/ELLA,laplace_baseline.py,2022-05-17T03:37:09Z,refine
github.com/thudzj/ELLA,laplace_baseline.py,2022-05-15T13:45:22Z,finish vit
github.com/thudzj/ELLA,laplace_baseline.py,2022-05-10T15:37:57Z,Finish
github.com/thudzj/ELLA,laplace_baseline.py,2022-05-04T12:57:17Z,Add in-c
github.com/thudzj/ELLA,laplace_baseline.py,2022-05-04T03:37:10Z,Add baseline
github.com/JunnYu/paddle_reformer,train/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-08-08T07:03:36Z,update
github.com/JunnYu/paddle_reformer,control/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-09-16T09:25:30Z,add control
github.com/JunnYu/paddle_reformer,train/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-08-08T07:03:36Z,update
github.com/JunnYu/paddle_reformer,control/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-09-16T09:25:30Z,add control
github.com/JunnYu/paddle_reformer,control_double_v100/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-09-27T12:36:01Z,增加v100 double比较
github.com/JunnYu/paddle_reformer,control_double_v100/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-09-27T12:36:01Z,增加v100 double比较
github.com/SpaceNetChallenge/SpaceNet8,03-sianalytics/code/mmsegmentation/mmseg/models/backbones/timm_backbone.py,2023-06-13T00:29:55Z,solutions
github.com/rmcong/Hybrid-Label-SOD_TCSVT2022,net.py,2022-11-23T02:05:33Z,Add files via upload
github.com/YuxinWenRick/canary-in-a-coalmine,models/utils.py,2022-10-20T00:47:34Z,initial commit
github.com/RPL-CS-UCL/UCL-AffCorrs,models/extractor.py,2022-09-08T09:37:15Z,first commit
github.com/enlighten0707/Symbol-LLM,utils/lavis/models/clip_models/model.py,2023-12-19T07:55:38Z,opensource
github.com/enlighten0707/Symbol-LLM,utils/lavis/models/clip_models/timm_model.py,2023-12-19T07:55:38Z,opensource
github.com/NICE-FUTURE/predict-gender-and-age-from-camera,models.py,2023-10-10T15:24:02Z,update
github.com/NICE-FUTURE/predict-gender-and-age-from-camera,models.py,2022-04-07T10:01:19Z,update
github.com/NICE-FUTURE/predict-gender-and-age-from-camera,models.py,2022-04-06T06:07:17Z,create project again
github.com/NICE-FUTURE/predict-gender-and-age-from-camera,models.py,2020-09-13T15:55:41Z,update model from alexnet-based to vgg16-based
github.com/YuzhongChen-98/DigitalTwin-CycleGAN,GAN/model.py,2022-10-19T01:48:04Z,Add files via upload
github.com/YuzhongChen-98/DigitalTwin-CycleGAN,Robot-FTC/model.py,2022-10-19T01:52:11Z,Add files via upload
github.com/YuzhongChen-98/DigitalTwin-CycleGAN,Robot-FTC/train_init.py,2022-10-19T01:52:11Z,Add files via upload
github.com/keyonvafa/sequential-rationales,huggingface/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-09-06T20:01:29Z,Initial commit
github.com/keyonvafa/sequential-rationales,huggingface/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-09-06T20:01:29Z,Initial commit
github.com/NVIDIA-AI-IOT/tao_byom_examples,classification/export_timm.py,2022-04-21T00:11:54Z,Initial commit
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-11-25T13:23:43Z,clean up
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-08-19T11:25:07Z,To load the saved data if it exists
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-08-13T13:18:46Z,cifar10 with extra augmentations to run it on cscs
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-08-13T12:46:10Z,cifar10 with extra augmentations to run it on cscs
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-08-12T18:59:12Z,cifar10 with extra augmentations to run it on cscs
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-08-12T18:24:05Z,Debug cifar10 to run it on cscs
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-08-12T15:25:47Z,Debug cifar10 to run it on cscs
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-08-12T12:52:55Z,Debug cifar10 to run it on cscs
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-08-12T12:26:09Z,Debug to run it on cscs
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-08-09T16:52:22Z,Added extra augmentations cifar-10 to improve the performance of the models on cifar-10 dataset.
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-08-09T16:52:01Z,Added extra augmentations cifar-10 to improve the performance of the models on cifar-10 dataset.
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-08-09T16:47:09Z,Added extra augmentations cifar-10 to improve the performance of the models on cifar-10 dataset.
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-07-07T15:10:44Z,Do not calculate class_weights if exists
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-07-07T15:06:18Z,temporary changes to classes for ensemble script
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-07-06T13:04:18Z,Debugged to save the trained models in trained_models/init_$
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-07-06T13:03:08Z,Debugged to save the trained models in trained_models/init_$
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-07-06T11:52:12Z,Debugged to save the trained models in trained_models/init_$
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-07-05T10:17:18Z,Stanford_dogs_data
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-07-04T20:33:33Z,cifar_10
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-07-04T17:07:07Z,Adding comments to make it easier to read
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-07-04T17:05:25Z,Adding comments to make it easier to read
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-07-04T16:57:17Z,Adding comments to make it easier to read
github.com/kspruthviraj/Plankiformer,utils/for_cifar10.py,2022-07-04T16:29:18Z,Adding comments to make it easier to read
github.com/kspruthviraj/Plankiformer,utils/for_cifar100.py,2022-11-25T13:23:43Z,clean up
github.com/kspruthviraj/Plankiformer,utils/for_cifar100.py,2022-11-02T23:03:53Z,to apply augmentation similar to paper.
github.com/kspruthviraj/Plankiformer,utils/for_cifar100.py,2022-11-02T16:42:13Z,Added cifar100 training
github.com/kspruthviraj/Plankiformer,utils/cifar10_mixup.py,2022-08-12T18:24:05Z,Debug cifar10 to run it on cscs
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-12-01T14:02:37Z,optimize imports
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-30T15:10:56Z,optimize imports
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-30T13:30:14Z,to choose gpu_id
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-24T14:08:04Z,push to dev branch: check the differences between predict_labelled and ensemble_predictions
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-24T14:01:32Z,push to dev branch: check the differences between predict_labelled and ensemble_predictions
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-24T14:01:10Z,push to dev branch: check the differences between predict_labelled and ensemble_predictions
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-24T13:56:35Z,push to dev branch: check the differences between predict_labelled and ensemble_predictions
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-24T12:55:27Z,push to dev branch: check the differences between predict_labelled and ensemble_predictions
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-24T12:47:21Z,push to dev branch: check the differences between predict_labelled and ensemble_predictions
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-24T10:32:12Z,push to dev branch: check the differences between predict_labelled and ensemble_predictions
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-24T10:25:57Z,push to dev branch: check the differences between predict_labelled and ensemble_predictions
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-24T10:20:08Z,Debug model_training.py to correct the differences between ensemble and predict_labelled predictions
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-24T10:03:28Z,Debug model_training.py to correct the differences between ensemble and predict_labelled predictions
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-24T09:54:46Z,Debug model_training.py to correct the differences between ensemble and predict_labelled predictions
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-23T17:35:20Z,Debug model_training.py to correct the differences between ensemble and predict_labelled predictions
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-23T17:31:34Z,Debug model_training.py to correct the differences between ensemble and predict_labelled predictions
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-23T15:15:59Z,Debug model_training.py to correct the differences between ensemble and predict_labelled predictions
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-23T15:12:11Z,Debug model_training.py to correct the differences between ensemble and predict_labelled predictions
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-23T14:29:15Z,Debug model_training.py to correct the differences between ensemble and predict_labelled predictions
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-23T14:26:15Z,Debug model_training.py to correct the differences between ensemble and predict_labelled predictions
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-23T14:14:03Z,Debug model_training.py to correct the differences between ensemble and predict_labelled predictions
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-23T14:03:06Z,Debug model_training.py
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-23T11:34:38Z,to do predictions without retraining
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-17T09:07:16Z,to do predictions without retraining
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-10T21:50:10Z,"cuda:1 to cuda:0

and

aug type"
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-10T20:59:41Z,cuda:1 to cuda:0
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-02T22:47:33Z,To use train f1 instead of test f1 and loss
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-02T21:56:56Z,To use train f1 instead of test f1 and loss
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-02T17:06:20Z,run irrespective of cuda device
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-02T17:03:51Z,run irrespective of cuda device
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-02T16:59:51Z,run irrespective of cuda device
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-02T16:42:13Z,Added cifar100 training
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-02T14:33:57Z,Debug Ensemble error
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-02T13:36:28Z,Debug Ensemble error
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-02T13:35:06Z,Debug Ensemble error
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-11-01T16:35:16Z,Debug Ensemble error
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-31T13:42:51Z,corrected minor debug
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-31T13:41:36Z,corrected minor debug
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-31T13:39:38Z,corrected minor debug
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-31T13:37:31Z,corrected minor debug
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-31T13:23:19Z,corrected minor debug
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-24T15:33:23Z,corrected minor debug
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-21T20:06:31Z,corrected minor debug
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-21T20:02:49Z,corrected minor debug
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-21T17:47:18Z,corrected minor debug
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-20T20:29:44Z,To save intermediate epoch models or not
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-20T20:28:25Z,To save intermediate epoch models or not
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-20T20:19:07Z,To save intermediate epoch models or not
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-20T12:26:25Z,To save intermediate epoch models or not
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-19T15:01:19Z,Do all final layers training
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-19T13:28:11Z,Choose either to resume training or not
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-18T16:35:12Z,Train only final 5 layers and then all layers during fine tuning
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-18T09:39:15Z,To match the paper parameters
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-18T09:35:56Z,To match the paper parameters
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-18T09:22:06Z,To match the paper parameters
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-17T16:10:20Z,Train_only final layers and then finetune all layers
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-17T15:20:20Z,Train_only final layers and then finetune all layers
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-17T14:33:16Z,Train_only final layers and then finetune all layers
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-05T13:55:52Z,Added inaturalist
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-10-05T13:54:39Z,Added inaturalist
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-09-14T22:11:55Z,Added CPU support both for training and prediction.
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-26T08:54:35Z,Save last epoch and every 10th epoch
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-26T08:52:25Z,Save last epoch and every 10th epoch
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-26T08:51:04Z,Save last epoch and every 10th epoch
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-26T08:48:23Z,Save last epoch and every 10th epoch
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-26T08:39:26Z,for debugging
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-26T08:37:46Z,for debugging
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-26T08:32:03Z,minor improvements
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-24T16:45:40Z,Cosine lr scheduler and repeat in 5 steps
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-24T16:26:58Z,Cosine lr scheduler and repeat in 5 steps
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-24T16:02:58Z,Cosine lr scheduler and repeat in 10 steps
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-24T15:31:37Z,To save the final model and removed random perspective augmentation
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-24T13:38:20Z,Save also the final epoch checkpoint -- because when several augmentation is used the training performance is lower.
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-23T15:39:29Z,Early stopping criteria to 100 epochs
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-19T12:12:30Z,To choose either to run it on cscs or siam server
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-19T12:04:09Z,To choose CNN or DeiT from the same script
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-19T12:03:13Z,To choose CNN or DeiT from the same script
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-19T11:50:12Z,To load the saved data if it exists
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-19T11:27:05Z,To load the saved data if it exists
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-19T10:17:46Z,debugged initialize model such that it loads the class_weights_tensor properly
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-19T10:13:30Z,debugged initialize model such that it loads the class_weights_tensor properly
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-18T15:45:01Z,clean up to resume training and minor debugs
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-18T15:44:24Z,clean up to resume training and minor debugs
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-18T15:07:50Z,clean up to resume training and minor debugs
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-18T15:01:16Z,clean up to resume training and minor debugs
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-18T14:28:13Z,clean up to resume training and minor debugs
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-18T14:25:30Z,clean up to resume training and minor debugs
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-18T14:20:51Z,clean up to resume training and minor debugs
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-18T13:52:10Z,clean up to resume training and minor debugs
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-18T13:49:31Z,clean up to resume training and minor debugs
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-18T13:47:41Z,clean up to resume training and minor debugs
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-18T13:44:32Z,clean up to resume training and minor debugs
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-18T13:34:13Z,clean up to resume training and minor debugs
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-18T13:31:51Z,clean up to resume training and minor debugs
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-18T13:28:24Z,clean up to resume training and minor debugs
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-18T13:25:06Z,clean up to resume training and minor debugs
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-18T13:12:56Z,clean up to resume training and minor debugs
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-18T13:11:52Z,clean up to resume training and minor debugs
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-18T13:02:57Z,clean up to resume training and minor debugs
github.com/kspruthviraj/Plankiformer,utils/model_training.py,2022-08-18T12:57:53Z,clean up to resume training and minor debugs
github.com/kspruthviraj/Plankiformer,utils/for_inaturalist.py,2022-11-25T13:23:43Z,clean up
github.com/kspruthviraj/Plankiformer,utils/for_inaturalist.py,2022-10-05T13:54:39Z,Added inaturalist
github.com/graphprojects/CM-GCL,scripts/modules_model.py,2023-01-15T07:45:17Z,Update modules_model.py
github.com/graphprojects/CM-GCL,scripts/modules_model.py,2023-01-14T12:52:42Z,Create modules_model.py
github.com/zahrag/BIOSCAN-1M,utils.py,2023-10-18T16:09:19Z,add copyright version
github.com/zahrag/BIOSCAN-1M,utils.py,2023-08-22T19:41:31Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-27T21:59:59Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-27T19:46:05Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-27T19:41:31Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-14T23:04:17Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-12T20:19:42Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-11T03:30:37Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-11T03:26:28Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-11T03:22:15Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-11T03:20:54Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-11T03:19:28Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-11T03:15:22Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-11T02:58:44Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-11T02:50:39Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-11T00:37:46Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-11T00:22:48Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-11T00:20:11Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-11T00:19:19Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-11T00:13:43Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-11T00:06:41Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-11T00:05:35Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-11T00:02:44Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-11T00:01:02Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-11T00:00:49Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-10T23:59:32Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-10T23:59:04Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-10T23:57:55Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-10T21:06:31Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-10T20:58:44Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-10T20:58:18Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-10T20:24:30Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-10T20:17:25Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-07T05:16:47Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-07T04:07:22Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-07T02:55:18Z,dataset adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-06T18:16:56Z,fix crop tool
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-05T19:51:06Z,add resize tool
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-05T19:39:36Z,add resize tool
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-05T02:11:35Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-07-05T02:09:37Z,minor adjustments
github.com/zahrag/BIOSCAN-1M,utils.py,2023-06-10T05:17:57Z,minor fixes
github.com/zahrag/BIOSCAN-1M,utils.py,2023-06-08T22:57:23Z,visualize results
github.com/zahrag/BIOSCAN-1M,utils.py,2023-05-11T05:31:55Z,fix code
github.com/zahrag/BIOSCAN-1M,utils.py,2023-05-11T05:20:29Z,fix code
github.com/zahrag/BIOSCAN-1M,utils.py,2023-05-03T23:35:54Z,Fix some small bugs.
github.com/zahrag/BIOSCAN-1M,utils.py,2023-04-30T18:19:59Z,fix configs
github.com/zahrag/BIOSCAN-1M,utils.py,2023-04-28T02:25:59Z,minor
github.com/zahrag/BIOSCAN-1M,utils.py,2023-04-28T01:37:34Z,Fix some small bugs
github.com/zahrag/BIOSCAN-1M,utils.py,2023-04-20T21:03:15Z,Add focal loss as an option.
github.com/zahrag/BIOSCAN-1M,utils.py,2023-04-12T06:26:18Z,minor
github.com/zahrag/BIOSCAN-1M,utils.py,2023-04-06T22:14:31Z,fix path
github.com/zahrag/BIOSCAN-1M,utils.py,2023-04-03T23:41:25Z,handling HDF4 data format
github.com/zahrag/BIOSCAN-1M,utils.py,2023-03-30T23:18:10Z,init commit
github.com/oleksost/latent_CL,Models/model.py,2022-04-30T19:31:53Z,added classifier training and end2end finetuning
github.com/oleksost/latent_CL,Models/model.py,2022-04-10T21:41:13Z,first commit
github.com/oleksost/latent_CL,Models/encoders.py,2022-04-30T19:31:53Z,added classifier training and end2end finetuning
github.com/oleksost/latent_CL,Models/encoders.py,2022-04-10T21:41:13Z,first commit
github.com/oleksost/latent_CL,Models/MIIL/factory.py,2022-04-10T21:41:13Z,first commit
github.com/shimacos37/kaggle-trends-3rd-place-solution,src/factories/model_factory.py,2020-07-04T07:14:46Z,Initial commit
github.com/kakaobrain/nvs-adapter,sgm/modules/nvsadapter/midas/midas/vit.py,2024-01-16T05:21:47Z,"initial commit

Co-authored-by: Yoonwoo Jeong <jeongyw12382@postech.ac.kr>
Co-authored-by: Jinwoo Lee <chopper.lee@kakaobrain.com>
Co-authored-by: Chiheon Kim <chiheon.kim@kakaobrain.com>
Co-authored-by: Minsu Cho <mscho@postech.ac.kr>
Co-authored-by: Doyup Lee <doyup@runwayml.com>"
github.com/wusize/CLIM,src/open_clip/timm_model.py,2023-12-18T16:08:09Z,init
github.com/wusize/CLIM,src/open_clip/eva_clip/timm_model.py,2023-12-18T16:08:09Z,init
github.com/hunto/image_classification_sota,lib/models/builder.py,2022-05-27T08:55:59Z,add: kd
github.com/hunto/image_classification_sota,lib/models/builder.py,2022-03-24T07:44:29Z,add support for vit (deit)
github.com/hunto/image_classification_sota,lib/models/builder.py,2022-03-11T09:25:28Z,initial commit
github.com/Allen0307/AdapterBias,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-04-28T11:29:26Z,src
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2022-11-17T16:58:22Z,modify license
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2022-05-14T16:25:52Z,"gip: update, good result"
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2022-05-13T01:55:04Z,gip: update
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2022-05-09T12:09:22Z,gip: add proposed method
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2022-05-04T11:41:54Z,feat: add prompt by attn
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2022-04-25T12:35:57Z,feat: modify default value
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2022-04-23T16:32:18Z,feat: add vit training
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2022-04-23T16:09:14Z,feat: complete resnet50 training
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2021-04-22T14:04:33Z,Fixes
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2021-04-22T13:56:09Z,"Merge pull request #47 from YugeTen/fish

first commit to fish"
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2021-04-22T13:52:33Z,"rename network class for fish, rm fishsmooth hp"
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2021-04-22T09:21:14Z,this is my commit message
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2021-04-21T16:18:43Z,"Removing Sprial dataset for now, disabling nonlinear classifiers for
repro."
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2021-04-21T09:42:15Z,"Merge pull request #45 from jc-audet/master

Added Algorithms ""ANDMask"" and ""IGA"" along with the ""Spirals"" dataset"
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2021-03-25T14:31:04Z,Cleanup
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2021-03-24T17:01:18Z,"Fixed bug where MLP was of fixed hidden layer size of 128, independant of the hparam associated with the parameter"
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2021-03-17T15:51:21Z,Fuse batch_norm and --hparams_from sweep parameter
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2021-02-20T13:26:30Z,"Nonlinear classifiers.

Nonlinear classifiers."
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2020-09-14T12:32:40Z,cleanup imports
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2020-09-12T03:55:11Z,Cleanup of ResNet and MLP
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2020-09-12T03:48:56Z,Cleanup print statements
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2020-09-12T03:41:21Z,Implement RSC algorithm
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2020-09-08T20:45:42Z,"Fixes to SagNet, removing Debug from sweep, cleaning ResNet"
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2020-09-04T09:10:20Z,"Implementing MTL, SagNet, ARM"
github.com/zhengzangw/DoPrompt,domainbed/networks.py,2020-07-20T17:38:36Z,Repackaging code in domainbed/ and running tests.
github.com/3dlg-hcvc/generalizing_shape_retrieval,gcmic/model/layers/encoder.py,2023-12-16T19:05:31Z,init
github.com/HeliosZhao/ControlNet-Stable-UnCLIP,data_preprocess/annotator/midas/midas/vit.py,2023-06-19T07:15:21Z,code upload
github.com/TailUFPB/storIA,venv/Lib/site-packages/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-07-19T13:06:57Z,Story_generator class created
github.com/TailUFPB/storIA,venv/Lib/site-packages/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-07-19T13:06:57Z,Story_generator class created
github.com/dipamgoswami/FeCAM,utils/inc_net.py,2023-09-08T12:05:35Z,Add files via upload
github.com/dipamgoswami/FeCAM,NCM_vit_core50.py,2023-09-08T12:03:49Z,Add files via upload
github.com/dipamgoswami/FeCAM,FeCAM_vit_core50.py,2023-09-08T12:03:49Z,Add files via upload
github.com/dipamgoswami/FeCAM,NCM_vit_cifar100_.py,2023-09-08T12:03:49Z,Add files via upload
github.com/dipamgoswami/FeCAM,FeCAM_vit_cifar100.py,2023-09-08T12:03:49Z,Add files via upload
github.com/dipamgoswami/FeCAM,NCM_vit_imagenet-r.py,2023-09-08T12:03:49Z,Add files via upload
github.com/dipamgoswami/FeCAM,FeCAM_vit_imagenet-r.py,2023-09-08T12:03:49Z,Add files via upload
github.com/Grasshlw/SNN-Neural-Similarity-Static,similarity/extraction.py,2023-08-16T09:21:21Z,add r_sew_resnet18 and replace experiment
github.com/Grasshlw/SNN-Neural-Similarity-Static,similarity/extraction.py,2023-08-03T17:42:24Z,update extraction
github.com/Grasshlw/SNN-Neural-Similarity-Static,similarity/extraction.py,2023-08-01T04:05:36Z,remake similarity
github.com/Richar-Du/LAMOC,lavis/models/clip_models/model.py,2023-05-23T14:03:23Z,Initial commit
github.com/Richar-Du/LAMOC,lavis/models/clip_models/timm_model.py,2023-05-23T14:03:23Z,Initial commit
github.com/xbmxb/RAG-query-rewriting,rl/RL4LMs/rl4lms/envs/text_generation/transformersllm/models/vit/convert_vit_timm_to_pytorch.py,2023-10-21T10:47:12Z,morecode
github.com/xbmxb/RAG-query-rewriting,rl/RL4LMs/rl4lms/envs/text_generation/transformersllm/models/regnet/convert_regnet_to_pytorch.py,2023-10-21T10:47:12Z,morecode
github.com/xbmxb/RAG-query-rewriting,rl/RL4LMs/rl4lms/envs/text_generation/transformersllm/models/resnet/convert_resnet_to_pytorch.py,2023-10-21T10:47:12Z,morecode
github.com/xbmxb/RAG-query-rewriting,rl/RL4LMs/rl4lms/envs/text_generation/transformersllm/models/deit/convert_deit_timm_to_pytorch.py,2023-10-21T10:47:12Z,morecode
github.com/xbmxb/RAG-query-rewriting,rl/RL4LMs/rl4lms/envs/text_generation/transformersllm/models/swin/convert_swin_timm_to_pytorch.py,2023-10-21T10:47:12Z,morecode
github.com/xbmxb/RAG-query-rewriting,rl/RL4LMs/rl4lms/envs/text_generation/transformersllm/models/levit/convert_levit_timm_to_pytorch.py,2023-10-21T10:47:12Z,morecode
github.com/xbmxb/RAG-query-rewriting,rl/RL4LMs/rl4lms/envs/text_generation/transformersllm/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-10-21T10:47:12Z,morecode
github.com/xbmxb/RAG-query-rewriting,rl/RL4LMs/rl4lms/envs/text_generation/transformersllm/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-10-21T10:47:12Z,morecode
github.com/M-3LAB/Real3D-AD,M3DM/models.py,2023-06-14T14:16:04Z,update benchmark
github.com/M-3LAB/Real3D-AD,patchcore/backbones.py,2023-06-14T14:16:04Z,update benchmark
github.com/M-3LAB/Real3D-AD,feature_extractors/features.py,2023-06-14T14:16:04Z,update benchmark
github.com/M-3LAB/Real3D-AD,feature_extractors/pc_features.py,2023-06-14T14:16:04Z,update benchmark
github.com/Celestial-Bai/INHERIT,INHERIT/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-09-24T13:14:07Z,Collect files
github.com/Celestial-Bai/INHERIT,INHERIT/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-09-24T13:14:07Z,Collect files
github.com/drivendataorg/the-biomassters,1st-place/src/models.py,2023-03-29T21:40:02Z,"Added winner files

added mathworks bonus

rm data"
github.com/vinbigdata-medical/endocv2020-seg,lib/modeling/backbone/efficientnet.py,2020-06-25T16:12:40Z,"add dataset, model, optimizer and utils code"
github.com/Wanggcong/FreeNeRF_plus_SparseNeRF,DietNeRF-pytorch/dietnerf/run_nerf.py,2023-08-20T12:45:30Z,freenerf+sparsenerf
github.com/SivanDoveh/TSVLC,src/open_clip/timm_model.py,2023-04-25T10:15:42Z,code
github.com/amazon-science/object-centric-learning-framework,ocl/feature_extractors/timm.py,2023-04-28T13:54:53Z,Initial commit of public code
github.com/ChenDarYen/Key-Locked-Rank-One-Editing-for-Text-to-Image-Personalization,clipseg/models/vitseg.py,2023-08-11T20:06:52Z,upload
github.com/asromahin/fline,fline/models/encoders/timm.py,2021-07-01T02:17:51Z,add some
github.com/asromahin/fline,fline/models/encoders/timm.py,2021-06-01T10:17:23Z,init first changes
github.com/asromahin/fline,examples/kaggle/gwd_box_verify.py,2021-07-01T02:17:51Z,add some
github.com/asromahin/fline,examples/fakes/fake_gen_classifier.py,2021-07-01T02:17:51Z,add some
github.com/asromahin/fline,examples/fakes/fake_photo_classifier.py,2021-07-01T02:17:51Z,add some
github.com/asromahin/fline,fline/models/models/research/history/connected_model.py,2021-07-01T02:17:51Z,add some
github.com/shaoshitong/G_VBSM_Dataset_Condensation,Branch_full_ImageNet_1k/train/train_FKD_parallel.py,2023-10-28T05:48:36Z,add DataLoaderX
github.com/shaoshitong/G_VBSM_Dataset_Condensation,Branch_full_ImageNet_1k/train/train_FKD_parallel.py,2023-10-24T04:46:12Z,first commit
github.com/fengbingchun/PyTorch_Test,src/mmsegmentation/mmseg/models/backbones/timm_backbone.py,2022-08-28T07:31:27Z,"Add openmmlab test code: mmclassification, mmsegmentation"
github.com/fengbingchun/PyTorch_Test,src/mmclassification/mmcls/models/backbones/timm_backbone.py,2022-08-28T07:31:27Z,"Add openmmlab test code: mmclassification, mmsegmentation"
github.com/mwalmer-umd/vit_analysis,wrapper_timm.py,2022-12-07T18:18:40Z,code release
github.com/mwalmer-umd/vit_analysis,timm_vit_modified/pytorch-image-models/tests/test_utils.py,2022-12-07T18:18:40Z,code release
github.com/mwalmer-umd/vit_analysis,timm_vit_modified/pytorch-image-models/tests/test_models.py,2022-12-07T18:18:40Z,code release
github.com/james77777778/keras-image-models,tools/convert_vgg_from_timm.py,2024-02-01T12:19:54Z,"Add `MobileOne` (#36)

* Update export scripts

* Add `MobileOne`

* Update version

* Update README

* Fix tests

* Remove explicit naming"
github.com/james77777778/keras-image-models,tools/convert_vgg_from_timm.py,2024-01-26T13:34:27Z,"Add `InceptionNeXt` and `MobileViTV2` and change naming of `MobileNet*V2` and `MobileNet*V3` (#30)

* Add `InceptionNeXt`

* Add `MobileViTV2`

* Fix tests

* Fix test

* Fix format

* Fix github runner

* Fix requirements

* Update version and nit"
github.com/james77777778/keras-image-models,tools/convert_vgg_from_timm.py,2024-01-17T15:33:08Z,Add `VGG` and `Xception` (#14)
github.com/james77777778/keras-image-models,tools/convert_vit_from_timm.py,2024-02-01T12:19:54Z,"Add `MobileOne` (#36)

* Update export scripts

* Add `MobileOne`

* Update version

* Update README

* Fix tests

* Remove explicit naming"
github.com/james77777778/keras-image-models,tools/convert_vit_from_timm.py,2024-01-26T13:34:27Z,"Add `InceptionNeXt` and `MobileViTV2` and change naming of `MobileNet*V2` and `MobileNet*V3` (#30)

* Add `InceptionNeXt`

* Add `MobileViTV2`

* Fix tests

* Fix test

* Fix format

* Fix github runner

* Fix requirements

* Update version and nit"
github.com/james77777778/keras-image-models,tools/convert_vit_from_timm.py,2024-01-17T02:07:07Z,"Add `DenseNet`, `InceptionV3` and refactor `BaseModel` (#11)

* Fix export name

* Add `DenseNet`

* Cleanup

* Add `InceptionV3`

* Refactor `BaseModel`

* Refactor `BaseModel`

* Simplify `build_preprocessing` and `build_top`

* Simplify code

* Format

* Mark serialization and skip them by default"
github.com/james77777778/keras-image-models,tools/convert_vit_from_timm.py,2024-01-09T09:46:03Z,Init
github.com/james77777778/keras-image-models,tools/convert_resnet_from_timm.py,2024-02-01T12:19:54Z,"Add `MobileOne` (#36)

* Update export scripts

* Add `MobileOne`

* Update version

* Update README

* Fix tests

* Remove explicit naming"
github.com/james77777778/keras-image-models,tools/convert_resnet_from_timm.py,2024-01-26T13:34:27Z,"Add `InceptionNeXt` and `MobileViTV2` and change naming of `MobileNet*V2` and `MobileNet*V3` (#30)

* Add `InceptionNeXt`

* Add `MobileViTV2`

* Fix tests

* Fix test

* Fix format

* Fix github runner

* Fix requirements

* Update version and nit"
github.com/james77777778/keras-image-models,tools/convert_resnet_from_timm.py,2024-01-17T02:07:07Z,"Add `DenseNet`, `InceptionV3` and refactor `BaseModel` (#11)

* Fix export name

* Add `DenseNet`

* Cleanup

* Add `InceptionV3`

* Refactor `BaseModel`

* Refactor `BaseModel`

* Simplify `build_preprocessing` and `build_top`

* Simplify code

* Format

* Mark serialization and skip them by default"
github.com/james77777778/keras-image-models,tools/convert_resnet_from_timm.py,2024-01-11T06:58:26Z,"Add `MobileNetV2` and `MobileNetV3` (#3)

* Fix features and add mobilenet_v2

* Fix se block naming

* Add mobilenet v3

* Add mobilenet v3 large minimal model"
github.com/james77777778/keras-image-models,tools/convert_resnet_from_timm.py,2024-01-09T09:46:03Z,Init
github.com/james77777778/keras-image-models,tools/convert_repvgg_from_timm.py,2024-01-29T14:51:27Z,"Add `RepVGG` (#32)

* Add `RepVGG`

* Update tests

* Add test for `get_reparameterized_model`

* Update README

* Minor update

* Fix test

* Fix readme

* Fix readme"
github.com/james77777778/keras-image-models,tools/convert_regnet_from_timm.py,2024-02-01T12:19:54Z,"Add `MobileOne` (#36)

* Update export scripts

* Add `MobileOne`

* Update version

* Update README

* Fix tests

* Remove explicit naming"
github.com/james77777778/keras-image-models,tools/convert_regnet_from_timm.py,2024-01-26T13:34:27Z,"Add `InceptionNeXt` and `MobileViTV2` and change naming of `MobileNet*V2` and `MobileNet*V3` (#30)

* Add `InceptionNeXt`

* Add `MobileViTV2`

* Fix tests

* Fix test

* Fix format

* Fix github runner

* Fix requirements

* Update version and nit"
github.com/james77777778/keras-image-models,tools/convert_regnet_from_timm.py,2024-01-17T10:29:32Z,Add `RegNet` (#13)
github.com/james77777778/keras-image-models,tools/convert_densenet_from_timm.py,2024-02-01T12:19:54Z,"Add `MobileOne` (#36)

* Update export scripts

* Add `MobileOne`

* Update version

* Update README

* Fix tests

* Remove explicit naming"
github.com/james77777778/keras-image-models,tools/convert_densenet_from_timm.py,2024-01-26T13:34:27Z,"Add `InceptionNeXt` and `MobileViTV2` and change naming of `MobileNet*V2` and `MobileNet*V3` (#30)

* Add `InceptionNeXt`

* Add `MobileViTV2`

* Fix tests

* Fix test

* Fix format

* Fix github runner

* Fix requirements

* Update version and nit"
github.com/james77777778/keras-image-models,tools/convert_densenet_from_timm.py,2024-01-17T02:07:07Z,"Add `DenseNet`, `InceptionV3` and refactor `BaseModel` (#11)

* Fix export name

* Add `DenseNet`

* Cleanup

* Add `InceptionV3`

* Refactor `BaseModel`

* Refactor `BaseModel`

* Simplify `build_preprocessing` and `build_top`

* Simplify code

* Format

* Mark serialization and skip them by default"
github.com/james77777778/keras-image-models,tools/convert_convnext_from_timm.py,2024-02-01T12:19:54Z,"Add `MobileOne` (#36)

* Update export scripts

* Add `MobileOne`

* Update version

* Update README

* Fix tests

* Remove explicit naming"
github.com/james77777778/keras-image-models,tools/convert_convnext_from_timm.py,2024-01-26T13:34:27Z,"Add `InceptionNeXt` and `MobileViTV2` and change naming of `MobileNet*V2` and `MobileNet*V3` (#30)

* Add `InceptionNeXt`

* Add `MobileViTV2`

* Fix tests

* Fix test

* Fix format

* Fix github runner

* Fix requirements

* Update version and nit"
github.com/james77777778/keras-image-models,tools/convert_convnext_from_timm.py,2024-01-19T13:21:12Z,"Add `ConvNeXt` and refactor `BaseModel` (#16)

* Add `ConvNeXt`

* Update `requirements.txt`

* Refactor `BaseModel` to reduce redundant code"
github.com/james77777778/keras-image-models,tools/convert_ghostnet_from_timm.py,2024-02-01T12:19:54Z,"Add `MobileOne` (#36)

* Update export scripts

* Add `MobileOne`

* Update version

* Update README

* Fix tests

* Remove explicit naming"
github.com/james77777778/keras-image-models,tools/convert_ghostnet_from_timm.py,2024-01-26T13:34:27Z,"Add `InceptionNeXt` and `MobileViTV2` and change naming of `MobileNet*V2` and `MobileNet*V3` (#30)

* Add `InceptionNeXt`

* Add `MobileViTV2`

* Fix tests

* Fix test

* Fix format

* Fix github runner

* Fix requirements

* Update version and nit"
github.com/james77777778/keras-image-models,tools/convert_ghostnet_from_timm.py,2024-01-17T02:07:07Z,"Add `DenseNet`, `InceptionV3` and refactor `BaseModel` (#11)

* Fix export name

* Add `DenseNet`

* Cleanup

* Add `InceptionV3`

* Refactor `BaseModel`

* Refactor `BaseModel`

* Simplify `build_preprocessing` and `build_top`

* Simplify code

* Format

* Mark serialization and skip them by default"
github.com/james77777778/keras-image-models,tools/convert_ghostnet_from_timm.py,2024-01-11T06:58:26Z,"Add `MobileNetV2` and `MobileNetV3` (#3)

* Fix features and add mobilenet_v2

* Fix se block naming

* Add mobilenet v3

* Add mobilenet v3 large minimal model"
github.com/james77777778/keras-image-models,tools/convert_ghostnet_from_timm.py,2024-01-09T09:46:03Z,Init
github.com/james77777778/keras-image-models,tools/convert_convmixer_from_timm.py,2024-02-01T12:19:54Z,"Add `MobileOne` (#36)

* Update export scripts

* Add `MobileOne`

* Update version

* Update README

* Fix tests

* Remove explicit naming"
github.com/james77777778/keras-image-models,tools/convert_convmixer_from_timm.py,2024-01-26T13:34:27Z,"Add `InceptionNeXt` and `MobileViTV2` and change naming of `MobileNet*V2` and `MobileNet*V3` (#30)

* Add `InceptionNeXt`

* Add `MobileViTV2`

* Fix tests

* Fix test

* Fix format

* Fix github runner

* Fix requirements

* Update version and nit"
github.com/james77777778/keras-image-models,tools/convert_convmixer_from_timm.py,2024-01-18T03:43:31Z,"Add `ConvMixer` (#15)

* Add `ConvMixer`

* Merge model tests into one file

* Fix format"
github.com/james77777778/keras-image-models,tools/convert_mobileone_from_timm.py,2024-02-01T12:19:54Z,"Add `MobileOne` (#36)

* Update export scripts

* Add `MobileOne`

* Update version

* Update README

* Fix tests

* Remove explicit naming"
github.com/james77777778/keras-image-models,tools/convert_mobilevit_from_timm.py,2024-01-26T13:34:27Z,"Add `InceptionNeXt` and `MobileViTV2` and change naming of `MobileNet*V2` and `MobileNet*V3` (#30)

* Add `InceptionNeXt`

* Add `MobileViTV2`

* Fix tests

* Fix test

* Fix format

* Fix github runner

* Fix requirements

* Update version and nit"
github.com/james77777778/keras-image-models,tools/convert_mobilevit_from_timm.py,2024-01-17T02:07:07Z,"Add `DenseNet`, `InceptionV3` and refactor `BaseModel` (#11)

* Fix export name

* Add `DenseNet`

* Cleanup

* Add `InceptionV3`

* Refactor `BaseModel`

* Refactor `BaseModel`

* Simplify `build_preprocessing` and `build_top`

* Simplify code

* Format

* Mark serialization and skip them by default"
github.com/james77777778/keras-image-models,tools/convert_mobilevit_from_timm.py,2024-01-12T18:44:11Z,"Add `MobileViT` (#8)

* Add `MobileViT`

* Improve `MobileViT`"
github.com/james77777778/keras-image-models,tools/convert_inception_v3_from_timm.py,2024-01-26T13:34:27Z,"Add `InceptionNeXt` and `MobileViTV2` and change naming of `MobileNet*V2` and `MobileNet*V3` (#30)

* Add `InceptionNeXt`

* Add `MobileViTV2`

* Fix tests

* Fix test

* Fix format

* Fix github runner

* Fix requirements

* Update version and nit"
github.com/james77777778/keras-image-models,tools/convert_inception_v3_from_timm.py,2024-01-20T11:16:21Z,"Fix `InceptionV3` and add Codecov (#20)

* Fix `InceptionV3`

* Update README

* Add Codecov

* Update Codecov

* Add Codecov badge"
github.com/james77777778/keras-image-models,tools/convert_inception_v3_from_timm.py,2024-01-20T02:27:33Z,"Defaults to `weights=imagenet` if possible (#19)

* Nit

* Add pretrained weights

* Fix InceptionV3

* Fix `MobileNet100V3Large`

* Update version"
github.com/james77777778/keras-image-models,tools/convert_inception_v3_from_timm.py,2024-01-17T02:07:07Z,"Add `DenseNet`, `InceptionV3` and refactor `BaseModel` (#11)

* Fix export name

* Add `DenseNet`

* Cleanup

* Add `InceptionV3`

* Refactor `BaseModel`

* Refactor `BaseModel`

* Simplify `build_preprocessing` and `build_top`

* Simplify code

* Format

* Mark serialization and skip them by default"
github.com/james77777778/keras-image-models,tools/convert_mobilenet_v2_from_timm.py,2024-02-01T12:19:54Z,"Add `MobileOne` (#36)

* Update export scripts

* Add `MobileOne`

* Update version

* Update README

* Fix tests

* Remove explicit naming"
github.com/james77777778/keras-image-models,tools/convert_mobilenet_v2_from_timm.py,2024-01-26T13:34:27Z,"Add `InceptionNeXt` and `MobileViTV2` and change naming of `MobileNet*V2` and `MobileNet*V3` (#30)

* Add `InceptionNeXt`

* Add `MobileViTV2`

* Fix tests

* Fix test

* Fix format

* Fix github runner

* Fix requirements

* Update version and nit"
github.com/james77777778/keras-image-models,tools/convert_mobilenet_v2_from_timm.py,2024-01-17T02:07:07Z,"Add `DenseNet`, `InceptionV3` and refactor `BaseModel` (#11)

* Fix export name

* Add `DenseNet`

* Cleanup

* Add `InceptionV3`

* Refactor `BaseModel`

* Refactor `BaseModel`

* Simplify `build_preprocessing` and `build_top`

* Simplify code

* Format

* Mark serialization and skip them by default"
github.com/james77777778/keras-image-models,tools/convert_mobilenet_v2_from_timm.py,2024-01-11T06:58:26Z,"Add `MobileNetV2` and `MobileNetV3` (#3)

* Fix features and add mobilenet_v2

* Fix se block naming

* Add mobilenet v3

* Add mobilenet v3 large minimal model"
github.com/james77777778/keras-image-models,tools/convert_mobilenet_v3_from_timm.py,2024-02-01T12:19:54Z,"Add `MobileOne` (#36)

* Update export scripts

* Add `MobileOne`

* Update version

* Update README

* Fix tests

* Remove explicit naming"
github.com/james77777778/keras-image-models,tools/convert_mobilenet_v3_from_timm.py,2024-01-26T13:34:27Z,"Add `InceptionNeXt` and `MobileViTV2` and change naming of `MobileNet*V2` and `MobileNet*V3` (#30)

* Add `InceptionNeXt`

* Add `MobileViTV2`

* Fix tests

* Fix test

* Fix format

* Fix github runner

* Fix requirements

* Update version and nit"
github.com/james77777778/keras-image-models,tools/convert_mobilenet_v3_from_timm.py,2024-01-20T02:27:33Z,"Defaults to `weights=imagenet` if possible (#19)

* Nit

* Add pretrained weights

* Fix InceptionV3

* Fix `MobileNet100V3Large`

* Update version"
github.com/james77777778/keras-image-models,tools/convert_mobilenet_v3_from_timm.py,2024-01-17T02:07:07Z,"Add `DenseNet`, `InceptionV3` and refactor `BaseModel` (#11)

* Fix export name

* Add `DenseNet`

* Cleanup

* Add `InceptionV3`

* Refactor `BaseModel`

* Refactor `BaseModel`

* Simplify `build_preprocessing` and `build_top`

* Simplify code

* Format

* Mark serialization and skip them by default"
github.com/james77777778/keras-image-models,tools/convert_mobilenet_v3_from_timm.py,2024-01-15T03:21:05Z,"Add `LCNet` and fix model serialization (#10)

* Merge `apply_depthwise_separation_block`

* Add `LCNet`

* Speed up gpu test

* Cleanup

* Update `add_model_to_registry`

* Fix model serialization"
github.com/james77777778/keras-image-models,tools/convert_mobilenet_v3_from_timm.py,2024-01-12T04:39:40Z,"Add efficientnet family including efficient, efficientlite and efficientv2 (#4)

* Fix tf pretrained model

* Code cleanup

* Add comments

* Add draft efficientnet

* Add unit test for efficientnet

* Add efficientnet lite

* Improve unit tests

* Merge efficientnet lite into efficientnet

* Add efficientnet v2"
github.com/james77777778/keras-image-models,tools/convert_mobilenet_v3_from_timm.py,2024-01-11T06:58:26Z,"Add `MobileNetV2` and `MobileNetV3` (#3)

* Fix features and add mobilenet_v2

* Fix se block naming

* Add mobilenet v3

* Add mobilenet v3 large minimal model"
github.com/james77777778/keras-image-models,tools/convert_efficientnet_from_timm.py,2024-02-01T12:19:54Z,"Add `MobileOne` (#36)

* Update export scripts

* Add `MobileOne`

* Update version

* Update README

* Fix tests

* Remove explicit naming"
github.com/james77777778/keras-image-models,tools/convert_efficientnet_from_timm.py,2024-01-26T13:34:27Z,"Add `InceptionNeXt` and `MobileViTV2` and change naming of `MobileNet*V2` and `MobileNet*V3` (#30)

* Add `InceptionNeXt`

* Add `MobileViTV2`

* Fix tests

* Fix test

* Fix format

* Fix github runner

* Fix requirements

* Update version and nit"
github.com/james77777778/keras-image-models,tools/convert_efficientnet_from_timm.py,2024-01-17T02:07:07Z,"Add `DenseNet`, `InceptionV3` and refactor `BaseModel` (#11)

* Fix export name

* Add `DenseNet`

* Cleanup

* Add `InceptionV3`

* Refactor `BaseModel`

* Refactor `BaseModel`

* Simplify `build_preprocessing` and `build_top`

* Simplify code

* Format

* Mark serialization and skip them by default"
github.com/james77777778/keras-image-models,tools/convert_efficientnet_from_timm.py,2024-01-12T09:15:22Z,"Add `TinyNet` and `list_models` (#5)

* Fix efficientv2 b3

* Add `list_models`"
github.com/james77777778/keras-image-models,tools/convert_efficientnet_from_timm.py,2024-01-12T04:39:40Z,"Add efficientnet family including efficient, efficientlite and efficientv2 (#4)

* Fix tf pretrained model

* Code cleanup

* Add comments

* Add draft efficientnet

* Add unit test for efficientnet

* Add efficientnet lite

* Improve unit tests

* Merge efficientnet lite into efficientnet

* Add efficientnet v2"
github.com/james77777778/keras-image-models,tools/convert_inception_next_from_timm.py,2024-02-01T12:19:54Z,"Add `MobileOne` (#36)

* Update export scripts

* Add `MobileOne`

* Update version

* Update README

* Fix tests

* Remove explicit naming"
github.com/james77777778/keras-image-models,tools/convert_inception_next_from_timm.py,2024-01-26T13:34:27Z,"Add `InceptionNeXt` and `MobileViTV2` and change naming of `MobileNet*V2` and `MobileNet*V3` (#30)

* Add `InceptionNeXt`

* Add `MobileViTV2`

* Fix tests

* Fix test

* Fix format

* Fix github runner

* Fix requirements

* Update version and nit"
github.com/ISCAS007/torchseg,tools/research/imagenet_models.py,2020-12-30T03:19:16Z,update requriements.txt for virtualenv
github.com/ISCAS007/torchseg,torchseg/models/motionseg/motion_backbone.py,2020-12-28T10:18:48Z,add weight init code and remove timm imagenet models
github.com/ISCAS007/torchseg,torchseg/models/motionseg/motion_backbone.py,2020-12-28T08:19:13Z,local model > timm model
github.com/ISCAS007/torchseg,torchseg/models/motionseg/motion_backbone.py,2020-12-28T08:11:09Z,add timm imagenet models
github.com/ISCAS007/torchseg,torchseg/models/motionseg/motion_backbone.py,2020-12-25T02:20:10Z,update doc and requirement
github.com/ISCAS007/torchseg,torchseg/models/motionseg/motion_backbone.py,2020-12-24T12:05:16Z,finish path bugs
github.com/ISCAS007/torchseg,torchseg/models/motionseg/motion_backbone.py,2020-12-24T11:27:22Z,packaging and scripting
github.com/xinntao/HandyInfer,handyinfer/depth_estimation/DPT_BEiT_L_384_arch.py,2023-03-15T14:14:48Z,add depth estimation
github.com/OpenNLPLab/FAVDBench,AVLFormer/src/layers/bert/modeling_bert.py,2023-06-06T02:24:23Z,Init upload
github.com/xmed-lab/CLIPN,src/open_clip/timm_model.py,2023-08-23T13:10:40Z,update codes
github.com/xmed-lab/CLIPN,hand-crafted/src/open_clip/timm_model.py,2023-12-02T14:47:55Z,"Upload

Upload codes for hand-crafted version."
github.com/TexasInstruments/edgeai-tidl-tools,examples/osrt_python/tvm_dlr/tvm_compilation_timm_example.py,2023-07-14T05:22:14Z,"TVM: update tests

- refactor for use with SOC environment variable
- specify c7x_codegen to prepare for change in default
- enable mxnet example on am62a
- switch mobilenetv3 example from mxnet to timm"
github.com/tien-d/EgoDepthNormal,networks/midas/vit.py,2022-06-30T19:06:07Z,add initial files
github.com/changzheng123/L-CAD,ldm/modules/midas/midas/vit.py,2023-12-07T11:16:50Z,init
github.com/pfnet-research/kaggle-alaska2-3rd-place-solution,alaska2/models.py,2020-08-07T02:30:41Z,Initial import
github.com/YushengZhao/TD-STP,preprocess/precompute_img_features_vit.py,2022-08-21T13:49:47Z,init
github.com/yiren-jian/NonLing-CSE,AudioCSE/src/models.py,2022-10-09T02:47:54Z,update
github.com/4paradigm-CV/SE-STAD,mmaction2/mmaction/models/recognizers/base.py,2023-01-03T07:22:49Z,add baseline part
github.com/Haidra-Org/hordelib,hordelib/nodes/comfy_controlnet_preprocessors/midas/midas/vit.py,2023-04-10T10:34:56Z,"feat: add controlnet support (#46)

* build: change the way we load custom nodes

* build: exclude packaged custom nodes from black

* build: try harder to patch comfyui correctly

* build: adds custom 3rd party nodes for face fixing and controlnet

* feat: add basic controlnet pipelines

* fix: number of pipelines test

* test: fix pytest, move config into pyproject.toml and tox.ini

* feat: initial basic working prototype for controlnet

* feat: support all control net types

* feat: controlnet custom model loader hack"
github.com/jianlong-yuan/semi-mmseg,mmseg/models/backbones/timm_backbone.py,2022-08-25T08:49:51Z,MKD
github.com/adambielski/move-seg,discriminators/pg_modules/projector.py,2022-11-25T13:28:08Z,inital release
github.com/LiuGalaxy/ScaleControlAgent,DRL/myModel.py,2024-01-04T12:50:25Z,init
github.com/genp/kaizen,extract.py,2022-11-02T20:06:50Z,fixed power_norm problem. alpha param must be set in fs definition
github.com/genp/kaizen,extract.py,2022-11-01T19:13:25Z,"added TimmModel feature extractor, removed legacy caffe CNN extractor, added unit tests for new feature extractor"
github.com/genp/kaizen,extract.py,2022-10-29T17:06:00Z,added feature extractor to extract.py for models from timm library.
github.com/genp/kaizen,extract.py,2022-09-06T18:39:13Z,blacken extract.py
github.com/genp/kaizen,extract.py,2022-08-08T17:47:27Z,update 2022
github.com/genp/kaizen,extract.py,2016-07-28T01:03:01Z,finally. memory problem managed. periodically deleting networks.
github.com/genp/kaizen,extract.py,2016-07-27T20:20:02Z,iterators in analyze_blob
github.com/genp/kaizen,extract.py,2016-07-27T19:53:13Z,error in extract many for input > batch size fixed
github.com/genp/kaizen,extract.py,2016-07-22T16:29:59Z,changes for breaking up analyze blob into mini-batches (memory reasons) and test analyze patch. camelyon test dataset upload still not working. build may be broken
github.com/genp/kaizen,extract.py,2016-07-22T15:31:58Z,storing USE_GPU in config.py
github.com/genp/kaizen,extract.py,2016-07-21T23:13:06Z,merge
github.com/genp/kaizen,extract.py,2016-07-21T20:54:33Z,moved caffe imports for celery agreement
github.com/genp/kaizen,extract.py,2016-07-21T16:10:16Z,Don't die if caffe unavailable.  Will still die if caffe features used.
github.com/genp/kaizen,extract.py,2016-07-20T21:43:44Z,warnings in extract
github.com/genp/kaizen,extract.py,2016-07-20T20:59:48Z,set up caffe ami machines
github.com/genp/kaizen,extract.py,2016-07-20T15:23:23Z,corrections for new CNN object structure
github.com/genp/kaizen,extract.py,2016-07-20T15:19:43Z,corrections for new CNN object structure
github.com/genp/kaizen,extract.py,2016-07-20T14:36:08Z,Initialize networks in a cache
github.com/genp/kaizen,extract.py,2016-07-20T14:00:36Z, different transformers
github.com/genp/kaizen,extract.py,2016-07-20T13:48:28Z,Merge branch 'master' of https://github.com/genp/kaizen
github.com/genp/kaizen,extract.py,2016-07-19T22:47:55Z,ttest
github.com/genp/kaizen,extract.py,2016-07-19T22:28:38Z,use the new reducing technique in extract_many
github.com/genp/kaizen,extract.py,2016-07-19T22:08:32Z,tmp
github.com/genp/kaizen,extract.py,2016-07-19T20:06:57Z,problem with having to eval ReducibleFeature params in reduce() in extract.py
github.com/genp/kaizen,extract.py,2016-07-19T18:57:10Z,extract.maybe_reduce tested OK
github.com/genp/kaizen,extract.py,2016-07-19T18:29:00Z,changed ReducibleFeature reduce classmethod to top level decorator in extract.py
github.com/genp/kaizen,extract.py,2016-07-19T18:05:47Z,Merged
github.com/genp/kaizen,extract.py,2016-07-19T18:04:18Z,merging
github.com/genp/kaizen,extract.py,2016-07-19T14:49:09Z,fixed set_params in extract to use super class func instead of decorator
github.com/genp/kaizen,extract.py,2016-07-19T01:51:52Z,changes to cnn extract and extract many
github.com/genp/kaizen,extract.py,2016-07-18T18:16:47Z,reduce functionality passes unit tests
github.com/genp/kaizen,extract.py,2016-07-18T17:34:25Z,testing comments in extract
github.com/genp/kaizen,extract.py,2016-07-18T17:23:59Z,tmp
github.com/genp/kaizen,extract.py,2016-07-18T17:23:11Z,tmp
github.com/genp/kaizen,extract.py,2016-07-18T17:21:41Z,fixed extract script to not subsample images
github.com/genp/kaizen,extract.py,2016-07-16T02:23:38Z,added reduce tests to unit_test.py
github.com/genp/kaizen,extract.py,2016-07-15T23:56:14Z,added reduce tests to unit_test.py
github.com/genp/kaizen,extract.py,2016-07-15T22:17:27Z,added reduce params to BaseFeature set params -- not tested but compiles
github.com/genp/kaizen,extract.py,2016-07-15T21:54:21Z,added reduce params to BaseFeature set params
github.com/genp/kaizen,extract.py,2016-07-15T17:50:02Z,"made reduce a decorator, moved caffe log env var to config"
github.com/genp/kaizen,extract.py,2016-07-15T16:48:04Z,added powernorm
github.com/genp/kaizen,extract.py,2016-07-13T20:43:56Z,merged
github.com/genp/kaizen,extract.py,2016-07-13T20:41:55Z,finalized extract dim reduce code
github.com/genp/kaizen,extract.py,2016-07-13T19:14:17Z,correction to elif in extract
github.com/genp/kaizen,extract.py,2016-07-13T19:12:24Z,Merge branch 'master' of https://github.com/genp/kaizen
github.com/genp/kaizen,extract.py,2016-07-13T19:12:21Z,tmp
github.com/genp/kaizen,extract.py,2016-07-13T02:35:23Z,merged extract
github.com/genp/kaizen,extract.py,2016-07-13T02:34:40Z,minor changes to extract
github.com/genp/kaizen,extract.py,2016-07-12T22:50:09Z,trying to sync up so we can fix the caffe constructor bug
github.com/genp/kaizen,extract.py,2016-07-11T19:40:26Z,Merge branch 'master' of https://github.com/genp/kaizen
github.com/genp/kaizen,extract.py,2016-07-11T19:40:11Z,added adapter for numpy to sql data types
github.com/genp/kaizen,extract.py,2016-07-10T23:17:59Z,minor changes
github.com/genp/kaizen,extract.py,2016-07-10T16:21:52Z,Merge branch 'master' of https://github.com/genp/kaizen
github.com/genp/kaizen,extract.py,2016-07-10T16:21:43Z,added PROTECT_parsing script and modified extract.py
github.com/genp/kaizen,extract.py,2016-07-10T16:15:11Z," cnn net init disabled, currently debugging"
github.com/genp/kaizen,extract.py,2016-07-09T20:23:08Z,fix for c++ string matching
github.com/genp/kaizen,extract.py,2016-07-09T19:31:02Z,added extract_many() to BaseFeature in extract.py
github.com/genp/kaizen,extract.py,2016-07-09T19:11:56Z,minor changes to CNN extract
github.com/genp/kaizen,extract.py,2016-07-09T18:48:56Z,added unit tests for extract.py and added extract_many_pad() to CNN in extract.py
github.com/genp/kaizen,extract.py,2016-07-09T14:30:56Z,changes to extract.py CNN class
github.com/genp/kaizen,extract.py,2016-07-08T21:11:17Z,added CNN to extract.py complete with extract() and extract_many(). Also added three different models (download weights separately)
github.com/genp/kaizen,extract.py,2015-11-15T21:29:29Z,merge flatten func in extract
github.com/genp/kaizen,extract.py,2015-11-15T21:27:02Z,made flatten func to convert images to greyscale for use with celery
github.com/genp/kaizen,extract.py,2015-11-15T19:43:25Z,Make new featurespecs properly.  Not supporting params yet.
github.com/genp/kaizen,extract.py,2015-11-15T18:39:29Z,Initial detection/test interface
github.com/genp/kaizen,extract.py,2015-11-14T22:45:09Z,added simple features HoG (skimage) and TinyImage
github.com/genp/kaizen,extract.py,2015-11-14T16:10:51Z,example feature spec with params
github.com/genp/kaizen,extract.py,2015-11-02T02:40:59Z,Initial checkin
github.com/kaland313/SSL-MedSeg,self_supervised/timm_encoder.py,2023-03-23T20:54:35Z,Add support of custom datasets to SSL training
github.com/epic-kitchens/epic-sounds-annotations,src/slowfast/models/ssast.py,2023-01-16T20:43:08Z,Fixed SSAST loading
github.com/epic-kitchens/epic-sounds-annotations,src/slowfast/models/ssast.py,2023-01-16T11:43:50Z,Added baseline src
github.com/megvii-research/protoclip,src/open_clip/timm_model.py,2022-06-22T07:58:12Z,initial commit
github.com/LAION-AI/watermark-detection,training/eval_watermark.py,2022-05-31T15:01:09Z,add watermark model training code
github.com/LAION-AI/watermark-detection,training/train_watermark.py,2022-05-31T15:01:09Z,add watermark model training code
github.com/caoyunkang/CPMF,feature_extractors/features.py,2023-11-08T19:12:14Z,update code
github.com/SepidehHosseinian/Python-Essentials-for-MLOps,venv/lib/python3.7/site-packages/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-05-23T15:15:56Z,install transformers
github.com/SepidehHosseinian/Python-Essentials-for-MLOps,venv/lib/python3.7/site-packages/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-05-23T15:15:56Z,install transformers
github.com/ChaosCodes/ProPETL,propetl-roberta/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-05-23T07:31:19Z,merge t5 and roberta
github.com/ChaosCodes/ProPETL,propetl-roberta/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-05-23T07:31:19Z,merge t5 and roberta
github.com/ChaosCodes/ProPETL,propetl-roberta/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-05-23T07:31:19Z,merge t5 and roberta
github.com/ChaosCodes/ProPETL,propetl-roberta/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-05-23T07:31:19Z,merge t5 and roberta
github.com/ChaosCodes/ProPETL,propetl-roberta/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-05-23T07:31:19Z,merge t5 and roberta
github.com/ChaosCodes/ProPETL,propetl-roberta/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-05-23T07:31:19Z,merge t5 and roberta
github.com/Ground-A-Video/Ground-A-Video,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/vit.py,2024-01-13T16:31:51Z,Add files via upload
github.com/Ground-A-Video/Ground-A-Video,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/beit.py,2024-01-13T16:31:51Z,Add files via upload
github.com/Ground-A-Video/Ground-A-Video,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin.py,2024-01-13T16:31:51Z,Add files via upload
github.com/Ground-A-Video/Ground-A-Video,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/levit.py,2024-01-13T16:31:51Z,Add files via upload
github.com/Ground-A-Video/Ground-A-Video,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/swin2.py,2024-01-13T16:31:51Z,Add files via upload
github.com/Ground-A-Video/Ground-A-Video,annotator/zoe/zoedepth/models/base_models/midas_repo/midas/backbones/next_vit.py,2024-01-13T16:31:51Z,Add files via upload
github.com/lijuncheng16/AudioTaggingDoneRight,src/models/ast_models.py,2022-03-09T02:55:43Z,update modifier
github.com/lijuncheng16/AudioTaggingDoneRight,src/models/ast_models.py,2022-03-09T00:51:47Z,added the necessary transpose
github.com/lijuncheng16/AudioTaggingDoneRight,src/models/ast_models.py,2022-03-07T20:21:05Z,probe FNET
github.com/lijuncheng16/AudioTaggingDoneRight,src/models/ast_models.py,2021-12-22T04:13:55Z,initialize from AST
github.com/wagner-group/reap-benchmark,adv_patch_bench/models/__init__.py,2023-02-23T09:33:30Z,Fix bug with timm classifier
github.com/wagner-group/reap-benchmark,adv_patch_bench/models/__init__.py,2022-10-29T01:25:33Z,Init repo with cleaned code and annotation for Detectron2
github.com/cdsnlab/AIoTVirt,restore_degradation/models/dpt/vit.py,2023-12-04T13:43:16Z,dpt vit
github.com/ken2576/vision-nerf,network/vit.py,2022-10-15T23:16:13Z,First commit.
github.com/SepidehHosseinian/Python-Essentials-for-MLOps,venv/lib/python3.7/site-packages/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-05-23T15:15:56Z,install transformers
github.com/SepidehHosseinian/Python-Essentials-for-MLOps,venv/lib/python3.7/site-packages/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-05-23T15:15:56Z,install transformers
github.com/SepidehHosseinian/Python-Essentials-for-MLOps,venv/lib/python3.7/site-packages/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-05-23T15:15:56Z,install transformers
github.com/SepidehHosseinian/Python-Essentials-for-MLOps,venv/lib/python3.7/site-packages/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-05-23T15:15:56Z,install transformers
github.com/SepidehHosseinian/Python-Essentials-for-MLOps,venv/lib/python3.7/site-packages/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-05-23T15:15:56Z,install transformers
github.com/SepidehHosseinian/Python-Essentials-for-MLOps,venv/lib/python3.7/site-packages/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-05-23T15:15:56Z,install transformers
github.com/mybabyyh/InstructPix2NeRF,models/classification.py,2024-01-25T08:04:39Z,update
github.com/w5688414/EfficientNet-ViolenceDetection,test.py,2020-06-01T13:21:23Z,add files for voilence detection
github.com/Sense-X/UniNet,main.py,2022-10-25T20:35:22Z,update source code
github.com/jind11/utterance-rewriting,transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-08-30T03:49:23Z,add the transformers folder
github.com/jind11/utterance-rewriting,transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-08-30T03:49:23Z,add the transformers folder
github.com/jind11/utterance-rewriting,transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-08-30T03:49:23Z,add the transformers folder
github.com/VegB/Diagnose_VLN,rxr/model/VLN-HAMT/preprocess/precompute_img_features_vit.py,2022-04-30T09:14:23Z,(1) add instruction processing scripts; (2) add original agent code
github.com/tlpss/keypoint-detection,keypoint_detection/models/backbones/maxvit_unet.py,2023-08-31T12:40:18Z,add Maxvit pico encoder
github.com/tlpss/keypoint-detection,keypoint_detection/models/backbones/maxvit_unet.py,2023-08-28T06:31:52Z,add final upsampling block on original resolution and remove reducing conv in upsampling block
github.com/tlpss/keypoint-detection,keypoint_detection/models/backbones/maxvit_unet.py,2023-08-21T15:11:53Z,"make detector fully deterministic by default (#30)

* make pytorch use deterministic algorithms

* change all upsample layers from bilinear to NN  to make them determinstic"
github.com/tlpss/keypoint-detection,keypoint_detection/models/backbones/maxvit_unet.py,2022-10-14T15:42:58Z,cleanup of feature layers for maxvit
github.com/tlpss/keypoint-detection,keypoint_detection/models/backbones/maxvit_unet.py,2022-10-14T12:39:49Z,add MaxViT backbone
github.com/tlpss/keypoint-detection,keypoint_detection/models/backbones/mobilenetv3.py,2023-08-21T15:11:53Z,"make detector fully deterministic by default (#30)

* make pytorch use deterministic algorithms

* change all upsample layers from bilinear to NN  to make them determinstic"
github.com/tlpss/keypoint-detection,keypoint_detection/models/backbones/mobilenetv3.py,2023-03-26T20:18:28Z,"Add MobileNetV3 backbone (#24)

* added image_size argument

* added mnv3 backbone

* Added another branch by accident, removing the changes

* Re-added datamodule.py

* re-used convnext UpSamplingBlock

* format

---------

Co-authored-by: tlpss <thomas17.lips@gmail.com>"
github.com/tlpss/keypoint-detection,keypoint_detection/models/backbones/convnext_unet.py,2023-08-29T10:43:04Z,"Faster keypoint extraction on GPU with Pytorch (#31)

5x-70x speedup of keypoint extraction from heatmaps by switching from scipy.peak_local_max to a GPU implementation with Pytorch

* faster heatmap extraction with pytorch

* fix jit issue

* faster heatmap extraction & testing/benchmarking

* reduce logging and use new keypoint extraction method

* fix bug in keypoint extraction"
github.com/tlpss/keypoint-detection,keypoint_detection/models/backbones/convnext_unet.py,2023-08-28T06:31:52Z,add final upsampling block on original resolution and remove reducing conv in upsampling block
github.com/tlpss/keypoint-detection,keypoint_detection/models/backbones/convnext_unet.py,2023-08-21T15:11:53Z,"make detector fully deterministic by default (#30)

* make pytorch use deterministic algorithms

* change all upsample layers from bilinear to NN  to make them determinstic"
github.com/tlpss/keypoint-detection,keypoint_detection/models/backbones/convnext_unet.py,2022-10-08T11:04:57Z,"COCO dataset format + major Refactoring (#8)

* add integration test to compare numerical results and fix logging dir

* fix test issue

* coco keypoint dataset parser

* refactor blender dataset loader and simplify loader for unlabeled data

* format

* coco dataset and datamodule

* unit tests are passing again with new COCO Dataset

* parsing of new keypoint channel config

* refactor util functions

* refactor backbone factory using manual class registry

* refactor & document

* update env dependencies

* cvat image 1.1 example + parser

* cvat to coco : no multi-instance categories or semantic types

* cvat to coco multi object/type instances

* fix bug in dataset preparation

* document labeling workflow

* update readme

* fix bug in visualization function

* remove prints

* update visualization of detected keypoints

* update readme to new dataset format and to add labeling workflow

* update pytest CI

* better name for conda env

* trigger

* change dataset format from relative to absolute pixel coordinates

* fix bug with device of empty heatmaps

* truncate long keypoint_channel names

* check whether keypoint_channel is a list

* fix mistake

* fix test crash due to length 1 lists

* fix: pixel_distances is already list when loading from artifact

* fix: add xmltodict as dependency

* fix crash when only one category was labeled in cvat

* script for cropping coco datasets

* use setup.py to install dependencies

* add pre-commit + reformat

* explicitly install wandb to avoid gh actions issue

* reduce gh action test trigger

* Test Dataset integration (#10)

* test set integration

* visualization data to cpu

* return type for logging label

* fix validation metrics and test image logging bugs

* pull Refactor + coco (#11)

* use setup.py to install dependencies

* add pre-commit + reformat

* explicitly install wandb to avoid gh actions issue

* integrate dataset creation in datamodule and some small PR updates

Co-authored-by: Thomas Lips <37955681+tlpss@users.noreply.github.com>
Co-authored-by: tlpss <thomas17.lips@gmail.com>

Co-authored-by: victorlouisdg <victorlouisdg@gmail.com>"
github.com/tlpss/keypoint-detection,keypoint_detection/models/backbones/convnext_unet.py,2022-08-08T12:48:12Z,add pretrained convnext backbone
github.com/Expedit-LargeScale-Vision-Transformer/Expedit-DPT,dpt/vit.py,2023-03-21T09:23:19Z,init
github.com/Expedit-LargeScale-Vision-Transformer/Expedit-DPT,dpt/evit.py,2023-03-21T09:23:19Z,init
github.com/Expedit-LargeScale-Vision-Transformer/Expedit-DPT,dpt/act_vit.py,2023-03-21T09:23:19Z,init
github.com/Expedit-LargeScale-Vision-Transformer/Expedit-DPT,dpt/tome_vit.py,2023-03-21T09:23:19Z,init
github.com/Expedit-LargeScale-Vision-Transformer/Expedit-DPT,dpt/hourglass_vit.py,2023-03-21T09:23:19Z,init
github.com/LucaCorvitto/RealFaces_w_StableDiffusion,binary_classifiers.py,2024-02-29T15:38:22Z,"Update binary_classifiers.py

Avoids code to open non-image files and compress non-png images"
github.com/LucaCorvitto/RealFaces_w_StableDiffusion,binary_classifiers.py,2023-01-12T16:30:38Z,Rename classifiers-16dic.py to binary_classifiers.py
github.com/LucaCorvitto/RealFaces_w_StableDiffusion,5_classes_classifiers.py,2023-01-15T20:26:59Z,Add files via upload
github.com/LucaCorvitto/RealFaces_w_StableDiffusion,5_classes_classifiers.py,2023-01-15T20:26:50Z,Delete 5_classes_classifiers.py
github.com/LucaCorvitto/RealFaces_w_StableDiffusion,5_classes_classifiers.py,2023-01-15T20:23:55Z,Update 5_classes_classifiers.py
github.com/LucaCorvitto/RealFaces_w_StableDiffusion,5_classes_classifiers.py,2023-01-12T17:18:47Z,Add files via upload
github.com/LucaCorvitto/RealFaces_w_StableDiffusion,5_classes_classifiers.py,2023-01-12T16:32:47Z,Delete 5_classes_classifiers.py
github.com/LucaCorvitto/RealFaces_w_StableDiffusion,5_classes_classifiers.py,2023-01-12T16:31:22Z,Rename classifiers-21dic_GAN.py to 5_classes_classifiers.py
github.com/eshoyuan/taop2021-3rd-solution,train.py,2021-11-15T04:00:31Z,first commit
github.com/eshoyuan/taop2021-3rd-solution,load_model.py,2021-11-15T04:00:31Z,first commit
github.com/eshoyuan/taop2021-3rd-solution,train_kfold.py,2021-11-15T04:00:31Z,first commit
github.com/cedrickchee/transformers-llama,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/cedrickchee/transformers-llama,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/cedrickchee/transformers-llama,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/cedrickchee/transformers-llama,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-08-04T16:29:23Z,"Add BEiT (#12994)

* First pass

* Make conversion script work

* Improve conversion script

* Fix bug, conversion script working

* Improve conversion script, implement BEiTFeatureExtractor

* Make conversion script work based on URL

* Improve conversion script

* Add tests, add documentation

* Fix bug in conversion script

* Fix another bug

* Add support for converting masked image modeling model

* Add support for converting masked image modeling

* Fix bug

* Add print statement for debugging

* Fix another bug

* Make conversion script finally work for masked image modeling models

* Move id2label for datasets to JSON files on the hub

* Make sure id's are read in as integers

* Add integration tests

* Make style & quality

* Fix test, add BEiT to README

* Apply suggestions from @sgugger's review

* Apply suggestions from code review

* Make quality

* Replace nielsr by microsoft in tests, add docs

* Rename BEiT to Beit

* Minor fix

* Fix docs of BeitForMaskedImageModeling

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/cedrickchee/transformers-llama,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-04-12T22:07:10Z,"Add DeiT (PyTorch) (#11056)

* First draft of deit

* More improvements

* Remove DeiTTokenizerFast from init

* Conversion script works

* Add DeiT to ViT conversion script

* Add tests, add head model, add support for deit in vit conversion script

* Update model checkpoint names

* Update image_mean and image_std, set resample to bicubic

* Improve docs

* Docs improvements

* Add DeiTForImageClassificationWithTeacher to init

* Address comments by @sgugger

* Improve feature extractors

* Make fix-copies

* Minor fixes

* Address comments by @patil-suraj

* All models uploaded

* Fix tests

* Remove labels argument from DeiTForImageClassificationWithTeacher

* Fix-copies, style and quality

* Fix tests

* Fix typo

* Multiple docs improvements

* More docs fixes"
github.com/cedrickchee/transformers-llama,src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-04-01T15:16:05Z,"Add Vision Transformer and ViTFeatureExtractor (#10950)

* Squash all commits into one

* Update ViTFeatureExtractor to use image_utils instead of torchvision

* Remove torchvision and add Pillow

* Small docs improvement

* Address most comments by @sgugger

* Fix tests

* Clean up conversion script

* Pooler first draft

* Fix quality

* Improve conversion script

* Make style and quality

* Make fix-copies

* Minor docs improvements

* Should use fix-copies instead of manual handling

* Revert ""Should use fix-copies instead of manual handling""

This reverts commit fd4e591bce4496d41406425c82606a8fdaf8a50b.

* Place ViT in alphabetical order

Co-authored-by: Lysandre <lysandre.debut@reseau.eseo.fr>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/cedrickchee/transformers-llama,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-02-22T08:14:54Z,Apply ruff flake8-comprehensions (#21694)
github.com/cedrickchee/transformers-llama,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/cedrickchee/transformers-llama,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/cedrickchee/transformers-llama,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2022-05-12T20:25:55Z,"Black preview (#17217)

* Black preview

* Fixup too!

* Fix check copies

* Use the same version as the CI

* Bump black"
github.com/cedrickchee/transformers-llama,src/transformers/models/regnet/convert_regnet_to_pytorch.py,2022-04-07T19:58:00Z,"RegNet (#16188)

* base model done

* make style

* done

* added files

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Trigger doc build

* resolved conversations

* resolved conversations

* seer models

* minor changes

* minor changes

* make fixup

* glob variables

* minor changes

* fix copies

* config when possibile

* resolved conflicts

* resolved conflicts

* resolved conflicts

* CI

* conversion script for 10b param

* fixed for 10b model

* minor updates in the doc + make style

* removed unused code

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* removed unused code

* removed unused code

* updated modeling_utils from main

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <Sylvain.gugger@gmail.com>"
github.com/cedrickchee/transformers-llama,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-02-22T08:14:54Z,Apply ruff flake8-comprehensions (#21694)
github.com/cedrickchee/transformers-llama,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/cedrickchee/transformers-llama,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/cedrickchee/transformers-llama,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-05-12T20:25:55Z,"Black preview (#17217)

* Black preview

* Fixup too!

* Fix check copies

* Use the same version as the CI

* Bump black"
github.com/cedrickchee/transformers-llama,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/cedrickchee/transformers-llama,src/transformers/models/resnet/convert_resnet_to_pytorch.py,2022-03-14T18:57:55Z,"[WIP] Resnet (#15770)

* first commit

* ResNet model correctly implemented.

basic modeling + weights conversion is done

removed unused doc

mdx file

doc and conversion script

added feature_extractor to auto

test

minor changes + style + quality

doc

test

Delete process.yml

A left over from my attempt of running circleci locally

* minor changes

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* new test format

* minor changes from conversations

* minor changes from conversations

* make style + quality

* readded the tests

* test + README

* minor changes from conversations

* error in README

* make fix-copies

* removed regression for classification head

* make quality

* fixed loss control flow

* fixed loss control flow

* resolved conversations

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* READMEs

* index.mdx

* minor changes

* updated tests and models

* unused import

* outputs

* Update docs/source/model_doc/resnet.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* added embeddings_size

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* conversation

* added push to hub

* test

* embedding_size

* make fix-copies

* resolved conversations

* CI

* changed organization

* minor changes

* CI

* minor changes

* conversations

* conversation

* doc

* tests

* removed unused docstring

* conversation

* removed unused outputs

* CI

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>
Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>"
github.com/cedrickchee/transformers-llama,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/cedrickchee/transformers-llama,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/cedrickchee/transformers-llama,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/cedrickchee/transformers-llama,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-08-04T16:29:23Z,"Add BEiT (#12994)

* First pass

* Make conversion script work

* Improve conversion script

* Fix bug, conversion script working

* Improve conversion script, implement BEiTFeatureExtractor

* Make conversion script work based on URL

* Improve conversion script

* Add tests, add documentation

* Fix bug in conversion script

* Fix another bug

* Add support for converting masked image modeling model

* Add support for converting masked image modeling

* Fix bug

* Add print statement for debugging

* Fix another bug

* Make conversion script finally work for masked image modeling models

* Move id2label for datasets to JSON files on the hub

* Make sure id's are read in as integers

* Add integration tests

* Make style & quality

* Fix test, add BEiT to README

* Apply suggestions from @sgugger's review

* Apply suggestions from code review

* Make quality

* Replace nielsr by microsoft in tests, add docs

* Rename BEiT to Beit

* Minor fix

* Fix docs of BeitForMaskedImageModeling

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/cedrickchee/transformers-llama,src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-04-12T22:07:10Z,"Add DeiT (PyTorch) (#11056)

* First draft of deit

* More improvements

* Remove DeiTTokenizerFast from init

* Conversion script works

* Add DeiT to ViT conversion script

* Add tests, add head model, add support for deit in vit conversion script

* Update model checkpoint names

* Update image_mean and image_std, set resample to bicubic

* Improve docs

* Docs improvements

* Add DeiTForImageClassificationWithTeacher to init

* Address comments by @sgugger

* Improve feature extractors

* Make fix-copies

* Minor fixes

* Address comments by @patil-suraj

* All models uploaded

* Fix tests

* Remove labels argument from DeiTForImageClassificationWithTeacher

* Fix-copies, style and quality

* Fix tests

* Fix typo

* Multiple docs improvements

* More docs fixes"
github.com/cedrickchee/transformers-llama,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/cedrickchee/transformers-llama,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/cedrickchee/transformers-llama,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-03-28T09:43:39Z,`cached_download ∘ hf_hub_url` is `hf_hub_download` (#16375)
github.com/cedrickchee/transformers-llama,src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2022-01-21T11:10:41Z,"Add Swin Transformer (#15085)

* Add all files

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Updates

* Apply suggestions from review

* Fix failing tests

* Update __init__.py

* Update configuration_swin.py

* Update auto_factory.py

* Fix pytests

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Fix tests and default checkpoint

* Fix Recursion error

* Code quality

* Remove copied from

* Update modeling_swin.py

* Code quality

* Update modeling_swin.py

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

* Fix feature extractor

* Fix code quality

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

* Update configuration_swin.py

* Update default checkpoint

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Apply suggestions from code review

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/model_doc/swin.mdx

Co-authored-by: Mishig Davaadorj <mishig.davaadorj@coloradocollege.edu>

* Update conversion script

* Reformat conversion script

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>
Co-authored-by: Mishig Davaadorj <mishig.davaadorj@coloradocollege.edu>"
github.com/cedrickchee/transformers-llama,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/cedrickchee/transformers-llama,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-01-06T12:27:30Z,"fix levit timm conversion file (#20938)

* fix levit timm conversion file

* remove set_defaults"
github.com/cedrickchee/transformers-llama,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/cedrickchee/transformers-llama,src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2022-06-01T15:06:20Z,"Adding LeViT Model by Facebook (#17466)

* levit files

* levit tests

* weights script

* weights script

* update

* style fixes

* few minor corrections

* Added teacher model

* edit docs

* fix-copies

* style fixes

* pr error resolved

* Update README.md

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/index.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/__init__.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/__init__.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/configuration_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/configuration_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* suggested pr changes

* style fixes

* minor bug

* update

* minor doc edit

* style

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update tests/models/levit/test_modeling_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* residual layer readable

* style

* Update docs/source/en/model_doc/levit.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update tests/models/levit/test_feature_extraction_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* change checkpoints and style

* update

* minor changes

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/levit/modeling_levit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/cedrickchee/transformers-llama,src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/cedrickchee/transformers-llama,src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2022-09-26T13:50:48Z,"Use repo_type instead of deprecated datasets repo IDs (#19202)

* Use repo_type instead of deprecated datasets repo IDs

* Add missing one in doc"
github.com/cedrickchee/transformers-llama,src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2022-07-27T15:14:47Z,"Add swin transformer v2 (#17469)

* Add files generated using transformer-cli add-new-model-like command

* Add changes for swinv2 attention and forward method

* Add fixes

* Add modifications for weight conversion and remaining args in swin model

* Add changes for patchmerging

* Add changes for SwinV2selfattention

* Update conversion script

* Add final fixes for the swin_v2 model

* Add changes for conversion script for pretrained window size case

* Add pretrained window size value from config in SwinV2Encoder class

* Make fixup

* Add swinv2 to models_not_in_readme to utils/check_copies.py

* Modify Swinv2v2 to Swin Transformer V2

* Remove copied from, to run make fixup command

* Add updates to swinv2tf from main branch

* Add pretrained_window_size to config, to make tests pass

* Add modified weights from nandwalritik profile for swinv2

* Update model weights from swinv2 from nandwalritik profile

* Add fix for build_pr_documentation CI fix

* Add fixes for weight conversion

* Add change to make input with padding work

* Add fixes for test cases

* Add few changes from swin to swinv2 to pass test cases

* Remove tests for tensorflow as swinv2 for TF is not added yet

* Overide test_pt_tf_model_equivalence function as TF implementation for swinv2 is not added yet

* Add modeling_tf_swinv2 to _ignore_modules as test file is removed for this one right now.

* Update docs url for swinv2 in README.md

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Undo changes for check_repo

* Update url in readme.md

* Remove overrided function to test pt_tf_model_equivalence

* Remove TF model imports for Swinv2 as its not implemented in this PR

* Add changes for index.mdx

* Add swinv2 papers link,abstract and contributors details

* Rename cpb_mlp to continous_position_bias_mlp

* Add tips for swinv2 model

* Update src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Fix indentation for docstring example in src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update import order in src/transformers/models/swinv2/configuration_swinv2.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add copyright statements in weights conversion script.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Remove Swinv2 from models_not_in_readme

* Reformat code

* Remove TF implementation file for swinv2

* Update start docstring.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add changes for docstring

* Update orgname for weights to microsoft

* Remove to_2tuple function

* Add copied from statements wherever applicable

* Add copied from to Swinv2ForMaskedImageModelling class

* Reformat code.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add unittest.skip(with reason.) for test_inputs_embeds test case.

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add updates for test_modeling_swinv2.py

* Add @unittest.skip() annotation for clarity to create_and_test_config_common_properties function

* Add continuous_position_bias_mlp parameter to conversion script

* Add test for testing masked_image_modelling for swinv2

* Update Swinv2 to Swin Transformer v2 in docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update Swinv2 to Swin Transformer v2 in docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Add suggested changes

* Add copied from to forward methods of Swinv2Stage and Swinv2Encoder

* Add push_to_hub flag to weight conversion script

* Change order or Swinv2DropPath class

* Add id2label mapping for imagenet 21k

* Add updated url for SwinV2 functions and classes used in implementation

* Update input_feature dimensions format, mentioned in comments.

Co-authored-by: Alara Dirik <8944735+alaradirik@users.noreply.github.com>

* Add suggested changes for modeling_swin2.py

* Update docs

* Remove create_and_test_config_common_properties function, as test_model_common_attributes is sufficient.

* Fix indentation.

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* Add changes for making Nit objects in code style

* Add suggested changes

* Add suggested changes for test_modelling_swinv2

* make fix-copies

* Update docs/source/en/model_doc/swinv2.mdx

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>
Co-authored-by: Alara Dirik <8944735+alaradirik@users.noreply.github.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/cedrickchee/transformers-llama,src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-02-06T23:10:56Z,"Update quality tooling for formatting (#21480)

* Result of black 23.1

* Update target to Python 3.7

* Switch flake8 to ruff

* Configure isort

* Configure isort

* Apply isort with line limit

* Put the right black version

* adapt black in check copies

* Fix copies"
github.com/cedrickchee/transformers-llama,src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2022-12-07T10:03:39Z,"Add BiT + ViT hybrid (#20550)

* First draft

* More improvements

* Add backbone, first draft of ViT hybrid

* Add AutoBackbone

* More improvements

* Fix bug

* More improvements

* More improvements

* Convert ViT-hybrid

* More improvements

* add patch bit

* Fix style

* Improve code

* cleaned v1

* more cleaning

* more refactoring

* Improve models, add tests

* Add docs and tests

* Make more tests pass

* Improve default backbone config

* Update model_type

* Fix more tests

* Add more copied from statements

* More improvements

* Add push to hub to conversion scripts

* clean

* more cleanup

* clean

* replace to

* fix

* Update src/transformers/models/bit/configuration_bit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* fix base model prefix

* more cleaning

* get rid of stem

* clean

* replace flag

* Update src/transformers/models/bit/configuration_bit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* Update src/transformers/models/bit/configuration_bit.py

Co-authored-by: NielsRogge <48327001+NielsRogge@users.noreply.github.com>

* add check

* another check

* fix for hybrid vit

* final fix

* update config

* fix class name

* fix `make fix-copies`

* remove `use_activation`

* Update src/transformers/models/bit/configuration_bit.py

* rm unneeded file

* Add BiT image processor

* rm unneeded file

* add doc

* Add image processor to conversion script

* Add ViTHybrid image processor

* Add resources

* Move bit to correct position

* Fix auto mapping

* Rename hybrid to Hybrid

* Fix name in toctree

* Fix READMEs'

* Improve config

* Simplify GroupNormActivation layer

* fix test + make style

* Improve config

* Apply suggestions from code review

Co-authored-by: Patrick von Platen <patrick.v.platen@gmail.com>

* remove comment

* remove comment

* replace

* replace

* remove all conv_layer

* refactor norm_layer

* revert x

* add copied from

* last changes + integration tests

* make fixup

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* fix name

* fix message

* remove assert and refactor

* refactor + make fixup

* refactor - add  + sfety checker

* fix docstring + checkpoint names

* fix merge issues

* fix function name

* fix copies

* Apply suggestions from code review

Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>

* fix model checkpoint

* fix doctest output

* vit name on doc

* fix name on doc

* fix small nits

* fixed integration tests

* final changes - slow tests pass

Co-authored-by: Niels Rogge <nielsrogge@Nielss-MacBook-Pro.local>
Co-authored-by: younesbelkada <younesbelkada@gmail.com>
Co-authored-by: Younes Belkada <49240599+younesbelkada@users.noreply.github.com>
Co-authored-by: Patrick von Platen <patrick.v.platen@gmail.com>
Co-authored-by: Sylvain Gugger <35901082+sgugger@users.noreply.github.com>"
github.com/aliasgharkhani/Masktune,src/models/resnet50.py,2022-07-30T20:11:17Z,initial commit
github.com/wrh14/Learning_to_Invert,breaching/cases/models/model_preparation.py,2023-07-31T03:57:57Z,"reproducing main tables

Update README.md

track large file"
github.com/baaivision/MUSE-Pytorch,open_clip/timm_model.py,2023-05-05T08:22:38Z,MUSE-Pytorch init
github.com/VQAssessment/BVQI,pyiqa/archs/iqt_arch.py,2023-01-16T05:20:44Z,renew code
github.com/VQAssessment/BVQI,pyiqa/archs/ahiq_arch.py,2023-01-16T05:20:44Z,renew code
github.com/VQAssessment/BVQI,pyiqa/archs/nima_arch.py,2023-01-16T05:20:44Z,renew code
github.com/VQAssessment/BVQI,pyiqa/archs/maniqa_arch.py,2023-01-16T05:20:44Z,renew code
github.com/VQAssessment/BVQI,pyiqa/archs/hypernet_arch.py,2023-01-16T05:20:44Z,renew code
github.com/1M50RRY/dfdc-kaggle-solution,inference/inference.py,2020-04-24T14:58:08Z,convert inference into script
github.com/Event-AHU/TSCFormer,mmaction/models/recognizers/base.py,2023-12-21T03:40:37Z,Add files via upload
github.com/NVIDIA-AI-IOT/clip-distillation,export_onnx.py,2023-07-25T17:32:24Z,add license
github.com/NVIDIA-AI-IOT/clip-distillation,export_onnx.py,2023-06-27T21:38:18Z,remove intro
github.com/NVIDIA-AI-IOT/clip-distillation,demo_pytorch.py,2023-07-25T17:32:24Z,add license
github.com/NVIDIA-AI-IOT/clip-distillation,demo_pytorch.py,2023-06-27T21:38:18Z,remove intro
github.com/NVIDIA-AI-IOT/clip-distillation,predict_pytorch.py,2023-07-25T17:32:24Z,add license
github.com/NVIDIA-AI-IOT/clip-distillation,predict_pytorch.py,2023-06-27T21:38:18Z,remove intro
github.com/NVIDIA-AI-IOT/clip-distillation,distil_model_embeddings.py,2023-07-25T17:32:24Z,add license
github.com/NVIDIA-AI-IOT/clip-distillation,distil_model_embeddings.py,2023-06-27T21:38:18Z,remove intro
github.com/dwardzheng/MFFN_COD,methods/MFFN/MFFN.py,2023-05-31T00:39:44Z,Update MFFN.py
github.com/dwardzheng/MFFN_COD,methods/MFFN/MFFN.py,2023-02-13T12:43:26Z,Add files via upload
github.com/dwardzheng/MFFN_COD,methods/classic_methods/MINet.py,2023-02-13T12:43:26Z,Add files via upload
github.com/dwardzheng/MFFN_COD,methods/classic_methods/HDFNet.py,2023-02-13T12:43:26Z,Add files via upload
github.com/waterhorse1/ChessGPT,chessclip/src/open_clip/timm_model.py,2023-06-13T02:00:33Z,first commit
github.com/liuweibupt/DLAFNet,mmseg/models/backbones/timm_backbone.py,2023-11-11T09:04:20Z,new code
github.com/chanlilong/4D_NET_pytorch,detector_models.py,2022-06-07T01:12:10Z,"bifpn now receives c1-c5 from resnet, added eval notebook"
github.com/chanlilong/4D_NET_pytorch,detector_models.py,2022-06-02T05:10:11Z,bug fix: correct meshgrid output for loss function formulation bySECOND
github.com/chanlilong/4D_NET_pytorch,detector_models.py,2022-06-01T00:44:20Z,"fixed bug: fixed anchors being wrongly sorted, anchors are sorted so that c3,c4,c5 operates on correct objects (small to large), regression targets now follow SECOND"
github.com/chanlilong/4D_NET_pytorch,detector_models.py,2022-04-08T01:56:55Z,added deform conv option
github.com/chanlilong/4D_NET_pytorch,detector_models.py,2022-04-06T09:16:43Z,"Static Anchors,RGB bbox Visualization, Dataset Targets bug fix"
github.com/chanlilong/4D_NET_pytorch,detector_models.py,2022-04-04T02:03:19Z,"Changed 3DIOU Calculation to mmdetection3d, changed to 3 anchors 3 scale"
github.com/chanlilong/4D_NET_pytorch,detector_models.py,2022-04-03T13:50:11Z,Initial Commit
github.com/ActiveVisionLab/LearningToCountAnything,models/backbone_vit.py,2023-04-04T09:05:17Z,removed list_token
github.com/ActiveVisionLab/LearningToCountAnything,models/backbone_vit.py,2022-09-27T12:46:07Z,v2 Release
github.com/ActiveVisionLab/LearningToCountAnything,models/backbone_vit.py,2022-07-01T18:04:07Z,first commit
github.com/BICLab/Spike-Driven-Transformer-V2,segmentation/mmseg/models/backbones/timm_backbone.py,2024-02-15T08:07:44Z,add: code of detecttion and segmentation
github.com/Event-AHU/SSTFormer,SSTFormer/mmaction/models/recognizers/base.py,2024-02-05T04:48:04Z,Add files via upload
github.com/NASA-IMPACT/2023-igarss-tutorial,chapter-1/mmsegmentation/mmseg/models/backbones/timm_backbone.py,2023-07-12T20:52:58Z,Add mmsegmentation folder.
github.com/NASA-IMPACT/2023-igarss-tutorial,chapter-2/code/mmsegmentation/mmseg/models/backbones/timm_backbone.py,2023-07-15T17:48:58Z,Add mmsegmentation folder.
github.com/abdohelmy/D-3Former,T/tests/test_models.py,2022-07-20T12:47:13Z,initial commit
github.com/wanghr-git/TransUnetCD,model/encoders/timm_universal.py,2023-12-11T11:47:32Z,add traing codes
github.com/amazon-science/assaying-ood,src/ood_inspector/models/timm.py,2023-06-30T13:35:51Z,Initial code commit
github.com/pengsongyou/lseg_feature_extraction,modules/models/lseg_vit.py,2023-10-27T15:43:16Z,init commit
github.com/pengsongyou/lseg_feature_extraction,modules/models/lseg_vit_zs.py,2023-10-27T15:43:16Z,init commit
github.com/riiid/PPAP,guided_diffusion/script_util.py,2023-07-15T12:27:04Z,Generate Synthetic data from deepfloyd-IF
github.com/riiid/PPAP,guided_diffusion/script_util.py,2023-07-05T05:42:09Z,First commit
github.com/workforai/SCAN,open_clip_training/src/open_clip/timm_model.py,2024-03-02T18:28:58Z,SCAN first commit
github.com/kosuke1701/AnimeCV,src/animecv/general/optuna_metric_learning_model.py,2021-02-06T00:36:57Z,Reflected updates in optuna-metric-learning.
github.com/kosuke1701/AnimeCV,src/animecv/general/optuna_metric_learning_model.py,2020-12-27T09:16:25Z,Bug fix.
github.com/kosuke1701/AnimeCV,src/animecv/general/optuna_metric_learning_model.py,2020-12-27T09:12:24Z,Bug fix.
github.com/kosuke1701/AnimeCV,src/animecv/general/optuna_metric_learning_model.py,2020-12-27T08:46:56Z,Add OML_ImageFolder model.
github.com/amitpuri/Ask-picturize-it,notebooks/i-Code-V3/core/models/audioldm/clap/open_clip/timm_model.py,2023-07-01T17:28:41Z,Update
github.com/AI4Bharat/INCLUDE,models/cnn.py,2021-03-29T02:24:14Z,major refactor
github.com/EdVince/whisper-trtllm,transformers/src/transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-08-22T07:50:00Z,add:transformers
github.com/EdVince/whisper-trtllm,transformers/src/transformers/models/regnet/convert_regnet_to_pytorch.py,2023-08-22T07:50:00Z,add:transformers
github.com/EdVince/whisper-trtllm,transformers/src/transformers/models/resnet/convert_resnet_to_pytorch.py,2023-08-22T07:50:00Z,add:transformers
github.com/EdVince/whisper-trtllm,transformers/src/transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-08-22T07:50:00Z,add:transformers
github.com/EdVince/whisper-trtllm,transformers/src/transformers/models/swin/convert_swin_timm_to_pytorch.py,2023-08-22T07:50:00Z,add:transformers
github.com/EdVince/whisper-trtllm,transformers/src/transformers/models/levit/convert_levit_timm_to_pytorch.py,2023-08-22T07:50:00Z,add:transformers
github.com/EdVince/whisper-trtllm,transformers/src/transformers/models/timm_backbone/modeling_timm_backbone.py,2023-08-22T07:50:00Z,add:transformers
github.com/EdVince/whisper-trtllm,transformers/src/transformers/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-08-22T07:50:00Z,add:transformers
github.com/EdVince/whisper-trtllm,transformers/src/transformers/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-08-22T07:50:00Z,add:transformers
github.com/HKUDS/HiGPT,higpt/model/heteclip_models/model.py,2024-02-23T13:50:20Z,up
github.com/HKUDS/HiGPT,HG_grounding/models/clip_models/model.py,2024-02-24T08:22:41Z,data
github.com/HKUDS/HiGPT,higpt/model/heteclip_models/timm_model.py,2024-02-23T13:50:20Z,up
github.com/HKUDS/HiGPT,HG_grounding/models/clip_models/homo_clip.py,2024-02-24T08:22:41Z,data
github.com/HKUDS/HiGPT,HG_grounding/models/clip_models/timm_model.py,2024-02-24T08:22:41Z,data
github.com/hirune924/lightning-hydra,model/model.py,2020-07-09T08:53:47Z,quick fix
github.com/hirune924/lightning-hydra,model/model.py,2020-07-09T08:44:53Z,quick fix
github.com/hirune924/lightning-hydra,model/model.py,2020-06-19T13:48:28Z,add try
github.com/hirune924/lightning-hydra,model/model.py,2020-06-19T07:07:34Z,add custom config
github.com/hirune924/lightning-hydra,model/model.py,2020-06-18T07:17:24Z,add custom head
github.com/hirune924/lightning-hydra,model/model.py,2020-06-17T09:47:20Z,add timm custom model
github.com/hirune924/lightning-hydra,model/model.py,2020-06-17T09:39:04Z,add timm custom model
github.com/hirune924/lightning-hydra,model/model.py,2020-06-17T09:17:26Z,add timm custom model
github.com/hirune924/lightning-hydra,model/model.py,2020-06-09T07:47:52Z,add se_net
github.com/hirune924/lightning-hydra,model/model.py,2020-06-07T10:11:33Z,change config
github.com/hirune924/lightning-hydra,model/model.py,2020-06-06T13:20:59Z,bug fix
github.com/hirune924/lightning-hydra,model/model.py,2020-06-06T13:10:54Z,fix ssl error
github.com/hirune924/lightning-hydra,model/model.py,2020-06-06T13:00:28Z,add config
github.com/hirune924/lightning-hydra,model/model.py,2020-06-03T09:24:45Z,add cyclicLR
github.com/hirune924/lightning-hydra,model/model.py,2020-05-30T06:57:10Z,format
github.com/hirune924/lightning-hydra,model/model.py,2020-05-27T13:10:00Z,応急処置
github.com/hirune924/lightning-hydra,model/model.py,2020-05-27T13:01:53Z,応急処置
github.com/hirune924/lightning-hydra,model/model.py,2020-05-27T10:04:54Z,bug fix
github.com/hirune924/lightning-hydra,model/model.py,2020-05-27T08:41:55Z,add seresnet50
github.com/hirune924/lightning-hydra,model/model.py,2020-05-27T08:06:03Z,add valid pattern
github.com/hirune924/lightning-hydra,model/model.py,2020-05-26T02:08:21Z,tmp commit
github.com/isaaccorley/resize-is-all-you-need,src/models.py,2023-05-17T20:08:50Z,fix mosaiks seed
github.com/isaaccorley/resize-is-all-you-need,src/models.py,2023-05-16T15:01:13Z,add mosaiks and update run scripts
github.com/isaaccorley/resize-is-all-you-need,src/models.py,2023-05-09T00:43:46Z,Add eurosat and ucm
github.com/isaaccorley/resize-is-all-you-need,src/models.py,2023-05-08T04:32:09Z,update so2sat and sat-6 experiments
github.com/isaaccorley/resize-is-all-you-need,src/models.py,2023-05-07T02:51:09Z,add bigearthnet and compute stats files
github.com/isaaccorley/resize-is-all-you-need,src/models.py,2023-05-04T13:57:44Z,init
github.com/SiyuanYan1/EPVT-and-Skin-DG-benchamrk,domainbed/networks.py,2023-03-08T11:21:46Z,add info
github.com/Eyr3/TextCRS,textattacknew/models/transformers1/models/vit/convert_vit_timm_to_pytorch.py,2023-08-01T12:42:37Z,init
github.com/Eyr3/TextCRS,textattacknew/models/transformers1/models/regnet/convert_regnet_to_pytorch.py,2023-08-01T12:42:37Z,init
github.com/Eyr3/TextCRS,textattacknew/models/transformers1/models/resnet/convert_resnet_to_pytorch.py,2023-08-01T12:42:37Z,init
github.com/Eyr3/TextCRS,textattacknew/models/transformers1/models/deit/convert_deit_timm_to_pytorch.py,2023-08-01T12:42:37Z,init
github.com/Eyr3/TextCRS,textattacknew/models/transformers1/models/swin/convert_swin_timm_to_pytorch.py,2023-08-01T12:42:37Z,init
github.com/Eyr3/TextCRS,textattacknew/models/transformers1/models/levit/convert_levit_timm_to_pytorch.py,2023-08-01T12:42:37Z,init
github.com/Eyr3/TextCRS,textattacknew/models/transformers1/models/swinv2/convert_swinv2_timm_to_pytorch.py,2023-08-01T12:42:37Z,init
github.com/Eyr3/TextCRS,textattacknew/models/transformers1/models/vit_hybrid/convert_vit_hybrid_timm_to_pytorch.py,2023-08-01T12:42:37Z,init
github.com/victorup/CHAE,transformers/models/vit/convert_vit_timm_to_pytorch.py,2023-01-31T10:43:52Z,first commit
github.com/victorup/CHAE,transformers/models/deit/convert_deit_timm_to_pytorch.py,2023-01-31T10:43:52Z,first commit
github.com/endaaman/dotfiles,python/site-packages/iic.py,2024-03-04T08:35:38Z,add batch arg
github.com/endaaman/dotfiles,python/site-packages/iic.py,2024-02-28T08:45:53Z,use cli2
github.com/endaaman/dotfiles,python/site-packages/iic.py,2024-02-28T08:19:33Z,update
github.com/endaaman/dotfiles,python/site-packages/iic.py,2024-02-27T11:07:20Z,update
github.com/endaaman/dotfiles,python/site-packages/iic.py,2024-02-27T08:19:59Z,update
github.com/endaaman/dotfiles,python/site-packages/iic.py,2024-02-27T06:19:15Z,iic
github.com/endaaman/dotfiles,python/site-packages/iic.py,2024-02-26T05:49:38Z,cluster
github.com/endaaman/dotfiles,python/site-packages/iic.py,2024-02-25T14:37:38Z,iic
github.com/endaaman/dotfiles,python/site-packages/iic.py,2024-02-23T14:40:11Z,iic
github.com/endaaman/dotfiles,python/site-packages/iic.py,2024-02-23T03:40:32Z,iic
github.com/endaaman/dotfiles,python/site-packages/iic.py,2024-02-22T17:04:52Z,iic2
github.com/endaaman/dotfiles,python/site-packages/iic.py,2023-12-12T08:25:38Z,update
github.com/endaaman/dotfiles,python/site-packages/iic.py,2023-11-29T09:26:04Z,update
github.com/endaaman/dotfiles,python/site-packages/iic.py,2023-11-29T08:45:57Z,update
github.com/endaaman/dotfiles,python/site-packages/iic.py,2023-11-29T03:38:13Z,update
github.com/endaaman/dotfiles,python/site-packages/iic.py,2023-11-28T15:04:13Z,update
github.com/endaaman/dotfiles,python/site-packages/cam.py,2024-02-28T08:45:53Z,use cli2
github.com/endaaman/dotfiles,python/site-packages/cam.py,2024-02-06T09:45:11Z,cam
github.com/endaaman/dotfiles,python/site-packages/cam.py,2024-02-05T07:40:50Z,update
github.com/endaaman/dotfiles,python/site-packages/cam.py,2024-02-05T05:32:43Z,use cli2
github.com/endaaman/dotfiles,python/site-packages/cam.py,2023-11-20T07:47:31Z,update
github.com/endaaman/dotfiles,python/site-packages/cam.py,2023-06-26T07:39:44Z,update
github.com/endaaman/dotfiles,python/site-packages/cam.py,2023-06-24T15:14:13Z,cam
github.com/endaaman/dotfiles,python/site-packages/cam.py,2023-06-24T14:54:12Z,packaged as ml
github.com/endaaman/dotfiles,python/site-packages/cam.py,2023-06-23T10:04:41Z,cam
github.com/endaaman/dotfiles,python/site-packages/cam.py,2023-06-22T10:04:13Z,update
github.com/endaaman/dotfiles,python/site-packages/cam.py,2023-06-19T10:27:03Z,update
github.com/endaaman/dotfiles,python/site-packages/cam.py,2023-06-14T15:09:36Z,cam
github.com/kelvincjr/shared,bdci_cpt/dep/transformers/models/vit/convert_vit_timm_to_pytorch.py,2021-11-17T07:55:40Z,kelvin commit 20211117pm2
github.com/kelvincjr/shared,bdci_cpt/dep/transformers/models/deit/convert_deit_timm_to_pytorch.py,2021-11-17T07:55:40Z,kelvin commit 20211117pm2
