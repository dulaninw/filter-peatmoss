repo_url,filepath,commit_date,message
github.com/stanfordnlp/stanza,demo/semgrex.py,2022-08-03T08:43:40Z,Rough outline of a semgrex interface demo program
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2020-08-11T19:15:55Z,"Merge pull request #422 from stanfordnlp/master

Back-merge documentation changes from master to dev"
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2020-06-22T23:32:20Z,Rename stanza.resource to stanza.resources; rename resources.py to common.py
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2020-06-22T22:49:38Z,Move all resources related scripts to stanza/resource
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2020-06-11T06:04:53Z,Fix demo script
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2020-03-06T07:45:58Z,renaming stanfordnlp to stanza!!
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-02-19T08:18:42Z,Use sys.exit in place of exit
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-31T02:24:01Z,Revert temporary fix for download logic
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-31T02:18:05Z,Fix download logic; Fix help message in demo script
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-31T01:53:22Z,Quick fix for demo script
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-26T05:33:04Z,Separate the classes for Tokens and syntactic Words
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-25T09:25:55Z,Undo changes to use_gpu argument
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-25T09:16:37Z,Modify the way devices are specified in pipeline
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-25T00:25:14Z,Swap French demo input with one that has MWT in the first sentence
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-24T22:22:28Z,Accommodate Vietnamese in the pipeline tokenizer processor; Add a Vietnamese example to demo script
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-23T08:51:06Z,Demo script goes multi-lingual; don't confirm overwrite by default (by do it in the demo script)
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-23T08:51:06Z,Change demo to match logic of new download function: existence of models is checked in download() now; Add easy toggle for other demo languages
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-22T23:48:13Z,Modernizing and reusing build_default_config; Path fix in demo pipeline construction
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-22T23:31:32Z,Modernizing the demo script; make the download interface more user-friendly
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-20T08:10:41Z,update and simplify basic demo
github.com/stanfordnlp/stanza,demo/pipeline_demo.py,2019-01-11T23:37:09Z,add demo
github.com/stanfordnlp/stanza,stanza/server/semgrex.py,2023-10-17T01:22:41Z,"Add an Enhanced graph option to the python semgrex interface

Adds a method for adding a networkx graph as a DependencyGraph proto
Includes a test that the result on a simple graph is as expected

We then read in enhanced graphs, then send that graph to the CoreNLP semgrex rather than the basic dependencies

A couple specific changes:

When adding a token to a semgrex protobuf, add index for regular words, add index and emptyIndex for empty words
Attachs the tokens from a sentence to the networkx graph when building the DependencyGraph proto from a Sentence

Currently hard to add a test for this, since it requires some extensive CoreNLP changes"
github.com/stanfordnlp/stanza,stanza/server/semgrex.py,2023-04-09T02:36:57Z,Add a flag to semgrex to read patterns from a file instead of command line
github.com/stanfordnlp/stanza,stanza/server/semgrex.py,2023-04-07T01:14:49Z,"Make echoing the input an option, not the default, in the Semgrex command line tool"
github.com/stanfordnlp/stanza,stanza/server/semgrex.py,2023-03-14T05:27:12Z,"Instead of dumping out a completely inscrutable semgrex result, add comments to the doc to explain where the sentences matched"
github.com/stanfordnlp/stanza,stanza/server/semgrex.py,2023-03-14T04:38:31Z,"Add flags to semgrex.py to load a conllu file and execute the semgrex on it, possibly changing the semgrex used.  Add a sample file for demoing the semgrex"
github.com/stanfordnlp/stanza,stanza/server/semgrex.py,2022-08-21T07:21:51Z,Add a bit of documentation to the process method of a semgrex context
github.com/stanfordnlp/stanza,stanza/server/semgrex.py,2022-04-23T04:36:46Z,Update an incorrect doc in the semgrex context manager
github.com/stanfordnlp/stanza,stanza/server/semgrex.py,2021-04-18T23:31:20Z,Add a context which connects to the multi-request semgrex
github.com/stanfordnlp/stanza,stanza/server/semgrex.py,2021-03-30T21:57:57Z,Separate out some common functions from the semgrex interface
github.com/stanfordnlp/stanza,stanza/server/semgrex.py,2021-03-30T20:23:09Z,Update the sample to something which triggers obj in the current models
github.com/stanfordnlp/stanza,stanza/server/semgrex.py,2020-12-01T08:03:46Z,Add doc to the semgrex module
github.com/stanfordnlp/stanza,stanza/server/semgrex.py,2020-08-13T01:12:53Z,Use CORENLP_HOME or whatever when running the semgrex client
github.com/stanfordnlp/stanza,stanza/server/semgrex.py,2020-08-13T01:12:53Z,Refactor the function that runs the actual java program
github.com/stanfordnlp/stanza,stanza/server/semgrex.py,2020-08-04T07:14:45Z,"Update the semgrex tool to send across lemma, ner, tag & cpos as well"
github.com/stanfordnlp/stanza,stanza/server/semgrex.py,2020-07-29T01:11:56Z,Python interface to the semgrex processor
github.com/stanfordnlp/stanza,stanza/models/mwt/utils.py,2023-09-13T15:52:25Z,Add a tiny bit of doc to the resplit_mwt util
github.com/stanfordnlp/stanza,stanza/models/mwt/utils.py,2022-10-02T17:13:03Z,Add a bit more doc
github.com/stanfordnlp/stanza,stanza/models/mwt/utils.py,2022-09-30T20:33:25Z,"Add a utility function to resplit raw tokens into MWT using a tokenize/mwt Pipeline.  As requested in #95

Includes an option to keep or ignore existing token boundaries"
github.com/stanfordnlp/stanza,stanza/server/ud_enhancer.py,2023-04-15T05:21:09Z,"Use the default path rather than a specified CLASSPATH by default, including in a couple tests which work with the latest CoreNLP versions"
github.com/stanfordnlp/stanza,stanza/server/ud_enhancer.py,2021-07-13T07:26:08Z,This small hack is not needed now that a new version of CoreNLP has been released
github.com/stanfordnlp/stanza,stanza/server/ud_enhancer.py,2021-04-18T23:31:20Z,"Temporarily use $CLASSPATH, since this feature isn't in a released version yet"
github.com/stanfordnlp/stanza,stanza/server/ud_enhancer.py,2021-04-18T23:31:20Z,Tool that connects to the Java UD enhancer
github.com/stanfordnlp/stanza,stanza/server/tokensregex.py,2021-04-07T06:21:30Z,"Count all words, not just tokens"
github.com/stanfordnlp/stanza,stanza/server/tokensregex.py,2021-04-07T04:22:32Z,Refactor the add_sentence logic
github.com/stanfordnlp/stanza,stanza/server/tokensregex.py,2021-03-31T05:48:52Z,Add a test for matching an NER trait and add a link to the tokensregex doc
github.com/stanfordnlp/stanza,stanza/server/tokensregex.py,2021-03-30T22:35:35Z,Add an interface between stanza docs and corenlp tokensregex
github.com/stanfordnlp/stanza,stanza/pipeline/demo/demo_server.py,2022-04-23T04:36:46Z,Update demo code to include constituency parsing
github.com/stanfordnlp/stanza,stanza/pipeline/demo/demo_server.py,2020-03-12T23:49:27Z,Update language list and misc updates
github.com/stanfordnlp/stanza,stanza/pipeline/demo/demo_server.py,2020-03-06T07:46:58Z,move stanfordnlp dir to stanza!!
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2024-03-01T03:41:09Z,Add some debug logging when building a retag_pipeline - goal is to make sure it's calling the correct POS model
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2024-02-24T07:41:20Z,Add an option to turn off saving the optimizer when saving each constituency model
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2024-02-24T07:41:20Z,Add flags to control how often the save_each models get saved.  Intent is to make it so that we can skip 10 models at a time and use a series of these to measure the variance in a silver dataset's scores
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2024-02-24T07:41:20Z,Remove unnecessary repetition of existing save_each argument
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2024-02-22T01:31:45Z,Set the trainer logging level to DEBUG when starting a constituency training run.  Switch out a bunch of training log calls to use the training logger specifically to make it easier to log things like the optimizer creation
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2024-02-22T01:31:45Z,"Integrate peft with the constituency parser.

Add a test that the two stage peft is correctly turning off finetuning for the second half of training"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2024-02-03T03:35:51Z,"Add several resolutions of ambiguous transitions to the top down dynamic oracle.
Also, add a flag which turns on selective oracle transitions, and
automatically ignore transitions after UNKNOWN unless --oracle_level is set

Add an immediate close version of the close/open error.

Add an immediate close version of the close/shift error.

Add an alternate version of the close/shift and close/open resolutions - close at the end of the outer constituent

Proposed fix of Open/Open: turn the new Open into a Unary

Add a fix where open/open is closed at the end of the outer constituent

Add a shift/open ambiguous fix - turn them into Unary

Put the Close for a shift/open at the end, rather than earlier

Includes stats for dev & test scores for various ambiguous transitions"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2024-01-22T23:47:58Z,Add oracle_level as a parameter to the save name
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-12-13T07:27:13Z,Add a flag to not check the transitions or constituents in the dev set
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-09-17T00:03:44Z,Add a bit to the name expansion for when to begin finetuning a transformer
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-09-02T17:52:46Z,Use the fancy new savename constructions in the run_constituency script
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-08-30T18:40:03Z,Comments on an experiment which didn't work out for mixing bert layers
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-08-25T05:45:01Z,Add a log of the tensor sizes
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-08-14T22:07:08Z,Refactor build_model_filename for run_constituency
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-08-14T22:00:12Z,"Add the constituency parser arguments to the run_constituency script, similar to what is done for the lemmatizer & charlm"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-07-24T21:52:49Z,Make a bit of a generalized save name - will add more options as they come up
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-06-04T19:13:59Z,Model names were being created with blank spaces in them :/
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-05-24T07:30:26Z,"Update con learning rates using a reduce-on-plateau scheme instead of the warmup

The warmup never did anything, so we leave it non-functional for now"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-05-03T21:42:11Z,Add a parameter which attempts to download a saved model for futher processing
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-04-04T16:44:09Z,Add a --tokenized_dir argument to the conparser and ensemble scripts which tokenizes all of the text files in a directory in one invocation.  The VLSP group wanted a text repo parsed
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-03-27T08:16:55Z,Add notes on an experiment that did nothing in the conparser
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-03-24T16:01:17Z,Add a long description of some experiments with low LR for bert and adamw as the second stage optimizer
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-03-22T22:04:48Z,"backprop into the transformer...

Add parameters to decide whether or not finetune the transformer
By default, train Bert with a low LR and very low WD to avoid it overreacting to the training data

Check bert_finetune when loading models.  Set it to false if not in the model so that we can preserve old models
Also, check bert_finetune for whether or not to use the foundation_cache when building a new model

Also backprop phobert, xlnet, and bart

Skip the first N steps for finetuning the transformer based on a parameter
Add an endpoint for the bert finetuning as well (another option would be separate initial phase and second phase values)
Add a separate argument for stage1_bert_finetuning
Includes functionality to finetune a limited number of layers

Instead of using the FoundationCache, we need to Load a new copy of
the bert_model if the bert_model was saved in the constituency file
(otherwise, the cached model would be clobered for any other users of
the model)

Add a single epoch test of the bert finetuning

Add a multiepoch test which checks that the weights are or aren't close to the final model in a manner expected by the bert training

Add a per-layer test of the bert backprop - check that if bert_finetune_layers is set, it only backprops the number of layers requested

Include xlnet versions of a couple of the bert tests.  These tests use a copied
tiny-random-xlnet so that the numbers aren't expected to change between iterations

Add a tiny test of the Bart training in conparser
phobert uses a different tokenizer, so we can't directly test it the same way we test the others

A few notes are left behind on things TODO:

TODO: Experiment with a low level of finetuning when using adamw
It would not work well with madgrad yet, since there is an issue where LR==0 still results in learning
https://github.com/facebookresearch/madgrad/issues/16

TODO: when saving a trainer which had its own transformer copy in it,
we need to resave the transformer - currently it gets put into
unsaved_modules if the model wasn't training the transformer
We even leave behind a test which covers that situation, commented out

TODO: when creating an LSTMModel in the Trainer for training a new model,
we need to use a non-cached version of it.  In particular, reusing the
POS tagger later on in training would be a problem
(except we currently don't do that)"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-03-15T20:25:13Z,Fix a comment on the experimental differences
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-02-11T01:53:25Z,"Add a flag for reversing the treebanks.  The model will reverse the sentences when making initial word queues, so that the bert & charlm models work as expected

Add a parameter to build_treebank to reverse the trees when building sequences.  Will facilitate parsing in reverse

Reverse sentences at the end of parsing in reverse mode so that we get the correct order back

Reverse sentences when verifying the transitions

Test reversing a sentence when building the transition sequence"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2023-02-01T07:51:06Z,Clarify some comments on a conparser argument
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-12-07T07:06:06Z,"Start passing around device instead of use_cuda

All models now work via the pipeline.  Need to double check that they work everywhere"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-12-05T20:41:18Z,Determine if cuda() is available and use that to set the random seed rather than making that an argument
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-12-01T19:20:16Z,Add a reference to more info on nonlinearity
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-12-01T19:20:13Z,"Add a maxout linear such as in

https://arxiv.org/pdf/1302.4389v4.pdf

.get() the arg to keep old models alive

Includes some comments on accuracy with maxout"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-30T23:43:27Z,"Add large_margin as an option for the loss.

Add a note on a large margin experiment (no improvement)"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-25T07:25:04Z,"Add a focal loss option using an external library

Unfortunately, it doesn't seem to improve results"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-22T22:07:41Z,Add a bunch of comments on the file layout for the model.  Add a missing citation
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-22T19:26:01Z,"Default to multistage w/ madgrad if available, adamw if not

Don't set training defaults if we're not training"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-17T15:40:32Z,Add an --oracle_level flag which optionally restricts which level to use for the oracle
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-15T00:12:17Z,Refactor adjusting the prediction string format
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-14T16:50:55Z,"Add an option to not delete duplicate trees.  Relevant in the case of Vietnamese trees including multiple copies of quad, for example"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-14T05:57:59Z,"Add nonlinearity experiments numbers

Update numbers for the tests on nonlinearity. The numbers for the optimizers will follow later."
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-14T02:40:06Z,Add a format specifier which includes the index for the Vietnamese bakeoff
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-07T20:56:04Z,"Add a variant of multihead attention where there's one key or one key per label
Seems competitive with MAX but not a big improvement of any kind

Adds an optional position encoding to the KEY / UNTIED_KEY constituency compositions
(using reduce_position as a parameter for the size, 0 -> no position)

reduce_position needs to be an unsaved module so that it doesn't barf if it gets reloaded later with a different size

Incudes comments on a couple variants that didn't work - linear after the attention or a double position vector"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-01T16:03:20Z,Add an argument for partitioning / not partitioning lattn
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-11-01T01:14:11Z,"Use some words from the silver dataset (currently |gold| words are added, even if that means some overlaps)"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-10-30T08:16:34Z,"Add a separate argument for --silver_epoch_size, just in case people want that"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-10-30T06:20:37Z,"Rough draft of using silver trees.

Mostly untested.  Includes an unfinished test of the silver data"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-10-29T02:20:00Z,"refactor predict dir,file,format args so they can be used elsewhere if needed"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-10-29T00:33:40Z,Add functionality to turn a tokenized text file into a file of parse trees
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-10-28T01:49:18Z,Refactor the retagging args & pipeline creation into a separate modeule
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-10-25T15:45:13Z,Add a --predict_format option which will allow the user to specify how to write trees when outputting the model predictions
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-10-23T19:02:18Z,"By default, turn off pattn & lattn (at least until we figure out how to extract value from them)"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-10-07T16:38:34Z,Add a flag to control the learning rate in the adadelta portion of --multistage
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-10-07T16:20:35Z,Add learning_ in front of momentum and weight_decay to make it clear those parameters are for the optimizer
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-09-26T17:11:39Z,"Add a learned weighting between bert layers

Make the number of hidden layers an option and start from zeros
Generalize the num_layers for Phobert and XLNet.  Keep old models alive

Includes an option to use the layers from the older versions of conparse"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-09-25T05:30:49Z,"Add a TREE_LSTM node combination method.

Instead of using a complicated bi-lstm or the much simpler max method,
combine children into a new item using a max-tree-lstm

Attempts to integrate this method with the other combination methods

Notes on variants

Attempts to preserve old models & old model behavior - arguments are
set to be like the original defaults

Attempt to come up with an initial tree_cx for the TREE_LSTM method
Support both TREE_LSTM and the version with the CX, TREE_LSTM_CX"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-09-25T02:56:28Z,Add an option to choose an exact model path for retagging in the conparser
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-09-25T02:56:28Z,pos_package was not the correct flag for the retag_pipeline to choose a different package
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-09-22T02:33:21Z,"Transformer stack using MHA instead of LSTM as an option for the transitions and constituents

Begin integrating the TransformerTreeStack into the parser
Add arguments for converting transformer_stack and constituent_stack into ATTN
Uses a position encoding vector in the TransformerTreeStack

Keep old models alive by setting StackHistory when loading a model

Add a length_limit option to the TransformerTreeStack (currently not used)

Use the positions list to remember the length of a stack, since the stack might be shorter than expected when using length_limit

May want to save memory in some way for the stacked key and value fields.

Unfortunately, in general this doesn't seem like an
improvement... maybe there's a bug in it, or maybe there's a set of
hyperparameters which will work better, or maybe the LSTM is just
better in general."
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-09-12T20:21:40Z,Don't double save_dir if the user gives save_dir as part of the model filename
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-09-12T06:26:56Z,Fix remove_optimizer mode
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-09-10T02:06:46Z,"Always save checkpoints.  Always load from a checkpoint if one exists.

Build the constituency optimizer using knowledge of how far you are in the training process - multistage part 1 gets Adadelta, for example
Test that a multistage training process builds the correct optimizers, including when reloading

When continuing training from a checkpoint, use the existing epochs_trained
Restart epochs count when doing a finetune"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-08-26T20:15:37Z,"Grad clipping in the constituency parser.  Not a clear benefit yet, so just leaving this as an option."
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-08-23T03:57:52Z,Notes on a couple updates to defaults
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-08-22T23:15:24Z,Reorganize --optim flag to under the optimizer parameters
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-08-22T21:31:27Z,Make momentum an argument for the optimizer
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-08-17T21:08:37Z,Add a brief comment on beta2
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-08-17T20:47:27Z,Add a couple more nonlinearity options.  Simplify the creation of the nonlinearity layers
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-08-17T17:48:23Z,Fix some doc and some defaults
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-08-17T07:26:33Z,Add a projection to a smaller dimension to the lattn inputs
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-08-10T07:10:03Z,A couple notes on other options in the conparser training
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-07-31T22:27:29Z,Making combining the input the default for the lattn layer
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-06-24T06:19:05Z,"Add an option to build the lattn out of the entire input, not just pattn

Fudging a flag when reading in the models makes existing models work with the new argument"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-06-24T06:17:44Z,"AdaDelta warmup for the conparser.  Motivation: AdaDelta results in
higher scores overall, but learns 0s for the weights of the pattn and
lattn layers.  AdamW learns weights for pattn, and the models are more
accurate than models trained without pattn using AdamW, but the models
are lower scores overall than the AdaDelta models.

This improves that by first running AdaDelta, then switching.

Now, if --multistage is set, run AdaDelta for half the epochs with no
pattn or lattn.  Then start the specified optimizer for the rest of
the time with the full model.  If pattn and lattn are both present,
the model is 1/2 no attn, 1/4 pattn, 1/4 pattn and lattn

Included is a test of both the two and three step versions

Also add a false version of the option - we may very well want to make
--multistage the default"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-06-24T06:17:44Z,move some defaults from constituency_parser to utils (will be useful for using them elsewhere)
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-06-20T21:34:23Z,currently lattn positional dim is assumed to be 1/2 of pattn
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-06-20T18:57:07Z,Save all conparser models if a particular command line option is set
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-06-16T22:14:52Z,"Adding an LR warmup to the optimizer

save & load scheduler as part of the trainer files"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-06-16T07:14:14Z,"Finetune a model that was learned with no pattn to now use pattn

Finally, a method that successfully trains pattn layers (seriously, the scores go up compared to adadelta or adamw by themselves)"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-06-14T08:17:21Z,Fix broken conparse finetune :/
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-06-08T08:03:33Z,Automagically fix xpos being None for the POS tagger used for a conparser retagging
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-06-05T00:18:21Z,"Very simple wandb integration for NER, tokenizer, mwt, lemma, depparse, pos, charlm, classifier, conparse"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-05-26T20:03:05Z,Add arguments for epsilon and beta2 to initializing an AdamW optimizer
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-05-08T21:28:59Z,Another note on a failed experiment
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-05-08T02:46:23Z,Add some notes on an MLP experiment which didn't work
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-05-06T20:58:48Z,ATTN method to build larger constituents out of smaller constituents
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-05-02T13:51:13Z,This comment is wrong - it was fixed a long time ago!
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,A couple minor changes that came up when removing optimizers from conparser models
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,Add a note on a failed experiment
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,"Remove the specialized unary transform

Add a note on the use of TOP_DOWN_UNARY"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,One last comment on a possible bilstm modification
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,Remove an unused option which hurts scores.  (Not having this option makes other subsequent changes easier.)  Leave a bunch of comments explaining how it hurt the scores
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,"Init the embeddngs at a scale closer to the scale the Adadelta learns

In most cases the model mostly throws away the initial values and learns new ones, especially for the delta_embedding
However, there is a slight but noticeable improvement in scores
For example, ja_alt at 200 iterations goes from 0.8980 to 0.8985"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,This WD seems to work better?  needs more testing
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,Some notes on an adamw hill climb
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,Add a regex to output the norms and grads of a subset of weights if requested
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,Update notes on failed experiments with a couple results
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,Log norms of matrices in the model when given a flag
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,"Always use the output dimension of the pattn layer for the input of the lattn layer, since nothing else currently works anyway"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,Add a comment and a citation on what label_attention does
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,"add an initial label attention to the lstm_model.py

incorporates the labeled representation into the input

uses command line options for label attention

everything is in a single label_attention_module that can be reused, as long as the embeddings and the appropriate maskings are available"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,"When combining children nodes, take the max value instead of applying a fancy LSTM

This seems to perform better in some test cases

Keeps an old version of the constituent building around as an options
Adds a test of different constituency composition functions"
github.com/stanfordnlp/stanza,stanza/models/constituency_parser.py,2022-04-23T04:36:46Z,"changes to the partitioned transformer so that it's more compact

partitioned attention is separated as a module so that it can be easily reused

also, add an option for bias (defaults to false)"
github.com/stanfordnlp/stanza,stanza/server/dependency_converter.py,2023-01-11T16:01:20Z,"Add an interface for the CoreNLP conversion from English constituencies to dependencies.  Only works for English.  Not currently unit tested (obviously tested during development) because it requires a new CoreNLP release first

Return the doc after processing - makes it more pipelineable"
github.com/stanfordnlp/stanza,stanza/utils/datasets/ner/convert_amt.py,2022-08-19T21:32:12Z,Ignore punc as part of the labels
github.com/stanfordnlp/stanza,stanza/utils/datasets/ner/convert_amt.py,2022-08-19T21:30:14Z,Add flags to the convert_amt script to ignore or remap certain labels
github.com/stanfordnlp/stanza,stanza/utils/datasets/ner/convert_amt.py,2022-08-19T20:55:15Z,Add a little doc
github.com/stanfordnlp/stanza,stanza/utils/datasets/ner/convert_amt.py,2022-08-18T04:34:23Z,Add a tool to convert from an AMT annotation file to a bio/json NER file for Stanza
github.com/stanfordnlp/stanza,stanza/utils/visualization/semgrex_app.py,2023-03-10T22:53:19Z,"Semgrex visualization features:

- ipynb notebook
- streamlit app!
- utility methods shared between the two

other notes:

- Highlights colors use colorblind-friendly scheme
- Added support for visualizing xpos when desired
- Included addition to xpos toggle, clarifying use of upos in the case of unavailable xpos tags
- Added ability to view windows of semgrex search hits instead of rendering all at once

squash by AngledLuffa, in case it is relevant:

 + 1100c93e...f0b2d8d1 semgrex_search_vis_2 -> semgrex_search_vis_2 (forced update)
 + f0b2d8d1...c77db680 semgrex_search_vis_2 -> semgrex_search_vis_2 (forced update)"
github.com/stanfordnlp/stanza,stanza/utils/datasets/ner/misc_to_date.py,2023-06-14T07:41:19Z,"For archival purposes, add a script which converted Misc to Date (mostly, some hand correcting needed)"
github.com/stanfordnlp/stanza,stanza/utils/datasets/ner/convert_bsnlp.py,2021-05-31T18:52:41Z,"Script to process bsnlp 2019 ner datasets.  Includes the ability to split the dataset into two pieces randomly

Orders queries from longest to smallest when searching for the regex expressions in the Bulgarian data files.  This way, smaller NER don't clobber the bigger ones, plus missed matches are less common if we look for previously matched NER tags before rejecting a partial match

Lowercase entities when searching.  Finds a few hits without special casing

Also includes a map of special cases which seem to be typos in the dataset

Stubs are left for the other bsnlp languages.  Currently only BG is handled."
github.com/stanfordnlp/stanza,stanza/models/tokenization/tokenize_files.py,2023-04-30T08:42:52Z,"Split the input text into chunks to make it easier to process in memory.  This also makes it faster, actually, perhaps because the memory usage is less intensive"
github.com/stanfordnlp/stanza,stanza/models/tokenization/tokenize_files.py,2023-02-13T00:00:10Z,"Move get_tqdm() to a separate utils file so that all the places which want tqdm() don't need to import all of torch.  Part of separating things to make it easier to install the CoreNLP by itself, such as in #1192"
github.com/stanfordnlp/stanza,stanza/models/tokenization/tokenize_files.py,2022-12-07T07:06:06Z,"Pass around device instead of use_gpu when running a Pipeline or MultilingualPipeline.

There is one downside to this approach, which is that existing custom
processors which were a subclass of an existing processor and used the
initializer with use_gpu will need to be updated.  Hopefully this is a
very small problem - most processor variants would be independent of
the previous use_gpu system

Theoretically this would let us make Pipelines on an ""mps"" if we
wanted, but the torch 1.13.0 MPS backend has a bug which specifically
makes bidirectional LSTMs with batch_first unusable, so .... yeah"
github.com/stanfordnlp/stanza,stanza/models/tokenization/tokenize_files.py,2022-10-04T01:13:34Z,"Add a script to tokenize data files one sentence per line

Uses tokenizer processors directly instead of Trainers or Pipeline so that we can easily take advantage of the code to process bulk items.

Digs into zip files when converting text data

Includes a small test"
github.com/stanfordnlp/stanza,stanza/utils/datasets/ner/convert_my_ucsy.py,2022-04-23T04:36:46Z,Myanmar NER processing of a dataset provided by UCSY
github.com/stanfordnlp/stanza,stanza/utils/datasets/ner/convert_hy_armtdp.py,2023-05-12T18:59:51Z,Fix error with default when building HY NER
github.com/stanfordnlp/stanza,stanza/utils/datasets/ner/convert_hy_armtdp.py,2023-04-18T19:19:00Z,Add a flag to not download the Armenian pipeline when producing an Armenian NER dataset.  Addresses https://github.com/stanfordnlp/stanza/commit/1a5cfd0b7b41521cf49dcb540023c9959c4b704b#r109444184
github.com/stanfordnlp/stanza,stanza/utils/datasets/ner/convert_hy_armtdp.py,2023-03-16T02:51:27Z,"convert_hy_armtdp was creating an Armenian pipeline on import, which should be turned off"
github.com/stanfordnlp/stanza,stanza/utils/datasets/ner/convert_hy_armtdp.py,2023-03-13T23:11:06Z,Added code for hy_armtdp - Armenian NER dataset
github.com/AIGC-Audio/AudioGPT,NeuralSeq/modules/syntaspeech/syntactic_graph_buider.py,2023-03-31T08:57:17Z,update
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/selftrain.py,2023-06-18T07:37:06Z,len(docs) == 0 can happen if all the docs in a wikipedia file are those little links to some other doc
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/selftrain.py,2023-02-13T00:00:10Z,"Move get_tqdm() to a separate utils file so that all the places which want tqdm() don't need to import all of torch.  Part of separating things to make it easier to install the CoreNLP by itself, such as in #1192"
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/selftrain.py,2022-12-02T07:26:53Z,Move TextTooLongError to the bert_embedding module where it is used
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/selftrain.py,2022-11-05T07:14:23Z,Discard Devanagari text from the VI wikipedia
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/selftrain.py,2022-11-05T01:33:44Z,Also chuck some sentences with long words
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/selftrain.py,2022-11-05T00:58:23Z,throw out long JA sentences as well when tokenizing Wikipedia
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/selftrain.py,2022-11-04T22:08:14Z,Specifically exclude one sentence from VI Wikipedia which makes Bert sad
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/selftrain.py,2022-11-04T19:18:54Z,Refactor the tokenization method from tokenize_wiki.py  Reuse it to add an option to selftrain_vi_quad which only tokenizes the data without parsing it
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/selftrain.py,2022-10-20T17:57:04Z,"A couple upgrades to the IT silver script and the silver scripts in general - allow printing trees in PTB format, allow skipping a large dataset for testing purposes, use FoundationCache to save on GPU memory"
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/selftrain.py,2022-04-23T04:36:46Z,Initial version of a script to process some IT datasets
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/selftrain.py,2022-04-23T04:36:46Z,Remove empty documents and empty chunks when building selftrain datasets
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/selftrain.py,2022-04-23T04:36:46Z,"Prototype process single file

Attempt to filter long sentences directly in selftrain_single_file

Chunks the use of the sentence splitter

Split the text into chunks for tqdm and writing interim results"
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/selftrain.py,2022-04-23T04:36:46Z,"Refactor the wiki selftrain script so most of the pieces can be reused for vi quad

Adjust maxlen to be smaller?  Lots of files are causing cuda errors

Turn off shuffle of docs and files using a flag

Also, throw an exception for text too long in the parser, skipping those sentences when building a silver dataset

VI quad dataset filter non-SQ sentences.

Adds a simple test for parsing the vi_quad data"
github.com/stanfordnlp/stanza,stanza/utils/visualization/ner_visualization.py,2022-07-16T18:10:17Z,"Document visualization with Spacy.  Processes completed docs or raw strings

Includes right-to-left support (in the NER viz in particular, tags are flipped, for example)

Added more documentation for usage, including necessary spaCy installations

Includes Jupyter examples for visualization; spacy.render() functions well here
Adding new Jupyter examples with support for new functions to visualize several strings with the same language pipeline"
github.com/stanfordnlp/stanza,stanza/utils/datasets/coref/convert_ontonotes.py,2023-12-01T05:13:08Z,Add Karel's method to reattach heads using the conjunction - here we use CCONJ instead of CC (upos)
github.com/stanfordnlp/stanza,stanza/utils/datasets/coref/convert_ontonotes.py,2023-12-01T05:12:44Z,Initial version of script to convert OntoNotes from HF using Stanza's depparse
github.com/stanfordnlp/stanza,stanza/utils/visualization/semgrex_visualizer.py,2023-03-10T22:53:19Z,"Semgrex visualization features:

- ipynb notebook
- streamlit app!
- utility methods shared between the two

other notes:

- Highlights colors use colorblind-friendly scheme
- Added support for visualizing xpos when desired
- Included addition to xpos toggle, clarifying use of upos in the case of unavailable xpos tags
- Added ability to view windows of semgrex search hits instead of rendering all at once

squash by AngledLuffa, in case it is relevant:

 + 1100c93e...f0b2d8d1 semgrex_search_vis_2 -> semgrex_search_vis_2 (forced update)
 + f0b2d8d1...c77db680 semgrex_search_vis_2 -> semgrex_search_vis_2 (forced update)"
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_utils.py,2023-03-23T03:29:53Z,Add a corona text classification dataset
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_utils.py,2023-02-06T20:44:08Z,"Add constituency items to SentimentDatums (convert from namedtuple to a simple class)

Use the new _asdict method when writing a dataset
Read trees back from the classifier data files.
Add a test of the tree reading by adding trees to one of the test datasets.

Move the fake datasets to test_data.py for better organization - now they are all with the reading test code"
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_utils.py,2022-10-20T00:42:07Z,Add some more description in the event of an IndexError
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_utils.py,2022-10-19T22:09:05Z,Extend read_snippets for sentiment datasets to read multiple columns and combine them into a single sentiment value
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_utils.py,2022-10-04T17:49:54Z,Move SentimentDatum to classifiers/data.py and make the reading code read in SentimentDatum
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_utils.py,2022-10-04T17:49:54Z,Add a couple tests of the building block methods from the Sentiment conversion tools
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_utils.py,2022-07-30T18:02:33Z,Rename Fragment -> SentimentDatum to make a more understandable name for potential external users
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_utils.py,2022-07-30T06:34:51Z,Further refactor - put the utility method in the utility methods file
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_utils.py,2022-06-05T18:29:25Z,Add a processing for the MR l3cube sentiment
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_utils.py,2022-06-05T18:29:25Z,Generalize the sentiment csv reading code and move it to process_utils
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_utils.py,2022-06-05T18:29:25Z,"Instead of blank items, remove http altogether in the sentiment preprocessing"
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_utils.py,2022-04-30T00:12:32Z,Read & write sentiment datasets as json
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_utils.py,2022-04-29T06:09:12Z,Pass around lists of tokens instead of single strings.  Will make it easier to switch the input/output to a json format
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_utils.py,2022-04-27T02:24:43Z,Refactor out the PTB retokenization
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_utils.py,2022-04-26T06:28:38Z,move the scripts/sentiment python scripts to stanza/utils/datasets/sentiment
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_scare.py,2022-10-04T17:49:54Z,Move SentimentDatum to classifiers/data.py and make the reading code read in SentimentDatum
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_scare.py,2022-07-30T18:02:33Z,Rename Fragment -> SentimentDatum to make a more understandable name for potential external users
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_scare.py,2022-05-02T13:51:13Z,"Switch all sentiment data scripts to use .json as the output name, not .txt"
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_scare.py,2022-04-29T06:09:12Z,Pass around lists of tokens instead of single strings.  Will make it easier to switch the input/output to a json format
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_scare.py,2022-04-29T05:46:35Z,Convert the .sh prep_sentiment script to .py
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_scare.py,2022-04-26T06:28:38Z,move the scripts/sentiment python scripts to stanza/utils/datasets/sentiment
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_corona.py,2023-03-23T03:29:53Z,Add a corona text classification dataset
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/tokenize_wiki.py,2024-02-24T07:41:20Z,"Refactor a couple parsing functions in trainer.py  Use this to build a new silver dataset producing script which uses two ensembles at once to directly find the matching trees along with counting the number of parsers which agree on the best tree

Add a script which extracts the trees we want of a certain match level

Sample command line for the wiki tokenization script"
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/tokenize_wiki.py,2024-02-11T08:41:42Z,Add arguments for choosing the tokenizer model and download method to the wikipedia tokenization script
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/tokenize_wiki.py,2023-02-13T00:00:10Z,"Move get_tqdm() to a separate utils file so that all the places which want tqdm() don't need to import all of torch.  Part of separating things to make it easier to install the CoreNLP by itself, such as in #1192"
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/tokenize_wiki.py,2022-11-06T04:32:35Z,Add a flag to remove all sentences which don't fit in a bert tokenizer when processing Wikipedia
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/tokenize_wiki.py,2022-11-04T19:18:54Z,Refactor the tokenization method from tokenize_wiki.py  Reuse it to add an option to selftrain_vi_quad which only tokenizes the data without parsing it
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/tokenize_wiki.py,2022-11-03T07:40:11Z,"Add min_len and max_len args to tokenize_wiki.py.  Skip one line wiki docs, since those are likely to be useless"
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/tokenize_wiki.py,2022-10-28T23:53:21Z,"ignore em dashes in Wikipedia, as that seems to be lists"
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/tokenize_wiki.py,2022-10-28T21:32:52Z,A script for tokenizing a Wikipedia file and writing it out
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/add_constituency.py,2024-02-06T08:15:23Z,"Temporary (?) patch for the batch_size, since some models were trained with the older dataloader code and a batch size of 5000"
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/add_constituency.py,2023-02-06T20:44:08Z,"A script to add constituencies to a classifier dataset.

Resplits MWT (based on a command line flag) and then parses trees
Guess the language based on either the dataset name or the filename (could be wrong, which will likely crash)

Allows for different retag package & a specific constituency model save file

Write the output files elsewhere based on an option"
github.com/modelscope/modelscope,modelscope/preprocessors/nlp/space_T_en/fields/common_utils.py,2022-10-25T04:26:25Z,"[to #42322933] NLP 1030 Refactor 

Features:
1. Refactor the directory structure of nlp models. All model files are placed into either the model folder or the task_model folder
2. Refactor all the comments to google style
3. Add detail comments to important tasks and nlp models, to list the description of the model, and its preprocessor&trainer
4. Model Exporting now supports a direct all to TorchModelExporter(no need to derive from it)
5. Refactor model save_pretrained method to support direct running(independent from trainer)
6. Remove the judgement of Model in the pipeline base class, to support outer register models running in our pipelines
7. Nlp trainer now has a NLPTrainingArguments class , user can pass arguments into the dataclass, and use it as a normal cfg_modify_fn, to simplify the operation of modify cfg.
8. Merge the BACKBONES and the MODELS, so user can get a backbone with the Model.from_pretrained call
9. Model.from_pretrained now support a task argument, so user can use a backbone and load it with a specific task class.
10. Support Preprocessor.from_pretrained method
11. Add standard return classes to important nlp tasks, so some of the pipelines and the models are independent now, the return values of the models will always be tensors, and the pipelines will take care of the conversion to numpy and the following stuffs.
12. Split the file of the nlp preprocessors, to make the dir structure more clear.

Bugs Fixing:
1. Fix a bug that lr_scheduler can be called earlier than the optimizer's step
2. Fix a bug that the direct call of Pipelines (not from pipeline(xxx)) throws error
3. Fix a bug that the trainer will not call the correct TaskDataset class
4. Fix a bug that the internal loading of dataset will throws error in the trainer class
        Link: https://code.alibaba-inc.com/Ali-MaaS/MaaS-lib/codereview/10490585"
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/convert_it_turin.py,2022-04-23T04:36:46Z,"Also, eliminate some single word trees from it_turin"
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/convert_it_turin.py,2022-04-23T04:36:46Z,"Start to integrate it_turin as a conversion script

This includes fixing a broken tag"
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/convert_it_turin.py,2021-09-24T23:40:05Z,"Processing script for the IT Turin treebank

Remaps and/or replaces some weird constituency labels

Refactor some, get a bunch of the filtering applied to the test set.  Turns out there's at least one miswritten test tree as well

Prune NONE ... turns out a lot of those are showing up.  Also double check that no train trees are in the test set, although that was not a problem

Splits train into train & dev

Remaps words as well so that [] is back the way it should be

Skips a broken tree based on its preterminal

Resplits a bunch of the tokens when processing it_turin"
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_es_tass2020.py,2022-10-04T17:49:54Z,Move SentimentDatum to classifiers/data.py and make the reading code read in SentimentDatum
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_es_tass2020.py,2022-08-20T17:21:06Z,"Wrapper for converting Spanish TASS2020 for sentiment
Conversion script for the dataset - reads data directly from the .zip files"
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_ren_chinese.py,2022-10-04T17:49:54Z,Move SentimentDatum to classifiers/data.py and make the reading code read in SentimentDatum
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_ren_chinese.py,2022-07-30T18:02:33Z,Rename Fragment -> SentimentDatum to make a more understandable name for potential external users
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_ren_chinese.py,2022-05-02T13:51:13Z,"Switch all sentiment data scripts to use .json as the output name, not .txt"
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_ren_chinese.py,2022-04-29T06:09:12Z,Pass around lists of tokens instead of single strings.  Will make it easier to switch the input/output to a json format
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_ren_chinese.py,2022-04-29T05:46:35Z,Convert the .sh prep_sentiment script to .py
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_ren_chinese.py,2022-04-26T06:28:38Z,move the scripts/sentiment python scripts to stanza/utils/datasets/sentiment
github.com/stanfordnlp/stanza,stanza/utils/visualization/dependency_visualization.py,2022-07-16T18:10:17Z,"Document visualization with Spacy.  Processes completed docs or raw strings

Includes right-to-left support (in the NER viz in particular, tags are flipped, for example)

Added more documentation for usage, including necessary spaCy installations

Includes Jupyter examples for visualization; spacy.render() functions well here
Adding new Jupyter examples with support for new functions to visualize several strings with the same language pipeline"
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/selftrain_vi_quad.py,2022-11-04T19:18:54Z,Refactor the tokenization method from tokenize_wiki.py  Reuse it to add an option to selftrain_vi_quad which only tokenizes the data without parsing it
github.com/stanfordnlp/stanza,stanza/utils/datasets/constituency/selftrain_vi_quad.py,2022-04-23T04:36:46Z,"Refactor the wiki selftrain script so most of the pieces can be reused for vi quad

Adjust maxlen to be smaller?  Lots of files are causing cuda errors

Turn off shuffle of docs and files using a flag

Also, throw an exception for text too long in the parser, skipping those sentences when building a silver dataset

VI quad dataset filter non-SQ sentences.

Adds a simple test for parsing the vi_quad data"
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_usage_german.py,2022-10-04T17:49:54Z,Move SentimentDatum to classifiers/data.py and make the reading code read in SentimentDatum
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_usage_german.py,2022-07-30T18:02:33Z,Rename Fragment -> SentimentDatum to make a more understandable name for potential external users
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_usage_german.py,2022-05-02T13:51:13Z,"Switch all sentiment data scripts to use .json as the output name, not .txt"
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_usage_german.py,2022-04-29T06:09:12Z,Pass around lists of tokens instead of single strings.  Will make it easier to switch the input/output to a json format
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_usage_german.py,2022-04-26T06:28:38Z,move the scripts/sentiment python scripts to stanza/utils/datasets/sentiment
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_it_sentipolc16.py,2022-10-20T04:10:29Z,Also add an option to save the data to a different filename so that the script can conveniently be used to do pos & neg as separate test cases
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_it_sentipolc16.py,2022-10-20T03:06:41Z,Add an argument to the IT sentiment preparation to split the mixed class in various ways
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_it_sentipolc16.py,2022-10-20T00:46:36Z,Add an Italian dataset
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_vsfc_vietnamese.py,2022-10-04T17:49:54Z,Move SentimentDatum to classifiers/data.py and make the reading code read in SentimentDatum
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_vsfc_vietnamese.py,2022-07-30T18:02:33Z,Rename Fragment -> SentimentDatum to make a more understandable name for potential external users
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_vsfc_vietnamese.py,2022-04-30T01:44:39Z,Switch the VI model to use words tokenized from the stanza tokenizer rather than white space split.  For some reason this causes my GPU to melt
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/process_vsfc_vietnamese.py,2022-04-26T06:28:38Z,move the scripts/sentiment python scripts to stanza/utils/datasets/sentiment
github.com/stanfordnlp/stanza,stanza/models/constituency/score_converted_dependencies.py,2023-01-12T16:19:25Z,Initial version of a script to score the constituency parser as a dependency parser
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/convert_italian_poetry_classification.py,2024-02-06T06:32:06Z,Update for new version of the poetry data
github.com/stanfordnlp/stanza,stanza/utils/datasets/sentiment/convert_italian_poetry_classification.py,2023-02-06T20:44:08Z,Script to turn Prof. Delmonte's poetry text into a sentiment dataset
github.com/stanfordnlp/stanza,stanza/tests/mwt/test_utils.py,2023-08-18T16:10:52Z,the updated GUM MWT model behaves a bit better than the previous one
github.com/stanfordnlp/stanza,stanza/tests/mwt/test_utils.py,2022-09-30T20:33:25Z,"Add a utility function to resplit raw tokens into MWT using a tokenize/mwt Pipeline.  As requested in #95

Includes an option to keep or ignore existing token boundaries"
github.com/stanfordnlp/stanza,stanza/tests/common/test_doc.py,2023-11-13T04:31:07Z,This is embarrassing... perhaps adding in the CoNLL data will fix it
github.com/stanfordnlp/stanza,stanza/tests/common/test_doc.py,2023-10-23T08:25:04Z,"Add a doc_id field to the Sentence object, by request"
github.com/stanfordnlp/stanza,stanza/tests/common/test_doc.py,2023-10-23T08:07:42Z,Update so that specifically setting sent_id as a comment sets the Sentence object's sent_id as well
github.com/stanfordnlp/stanza,stanza/tests/common/test_doc.py,2023-02-14T22:21:34Z,Add a method to reindex sentences.  Use it to keep the sent_id increasing even when using a 'stream' of documents
github.com/stanfordnlp/stanza,stanza/tests/common/test_doc.py,2023-01-12T04:59:07Z,Use comments to store the sentiment values as well
github.com/stanfordnlp/stanza,stanza/tests/common/test_doc.py,2023-01-12T02:51:30Z,"When a comment is added to a sentence with a constituency tree, parse that comment into the tree object

This involves refactoring the StanzaObject, since it is used in both doc and parse_tree"
github.com/stanfordnlp/stanza,stanza/tests/common/test_doc.py,2023-01-11T23:51:44Z,"Add comments to the serialized format when saving a document.  This will keep any user added comments, but at the cost of making the files larger because they now have the text in a couple different places."
github.com/stanfordnlp/stanza,stanza/tests/common/test_doc.py,2023-01-02T02:50:45Z,"Add a constituency comment to sentences in the doc

This adds the constituency tree to the CoNLL format as a comment

If there's somehow a newline in the parse tree, we convert \n to *NL*
to not make the CoNLL comments horribly broken - not sure this is
ideal, but hopefully \n doesn't come up often"
github.com/stanfordnlp/stanza,stanza/tests/common/test_doc.py,2022-04-23T04:36:46Z,Rearrange most of the tests in stanza/tests
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2023-11-10T00:15:59Z,Add mwt to expected results for several more EN downloads
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2023-10-03T04:17:33Z,Update NER packages to reflect the new ontonotes_charlm default NER
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2023-02-04T07:43:37Z,Pick a language name we know won't exist for the test of an unknown language
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2023-02-04T07:30:22Z,"Allow for loading a pipeline for a language that doesn't exist, as long as everything is specified"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2022-07-05T18:34:58Z,Add a test that download_method=None doesn't clobber the wrong model
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2022-07-05T18:34:55Z,Allow strings for the DownloadMethod.  Will hopefully make the interface simpler for people
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2022-05-30T07:32:52Z,"Notes on which embeddings are used for which NER, in the form of a map of default pretrains

Use the default pretrains when using run_ner.py

Update prepare_resources to use the new ner embedding info"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2022-05-13T21:59:08Z,write temp directories to test working dir not present dir
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2022-04-23T04:36:46Z,Allow for selectively using processors.  Answers #945
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2022-04-23T04:36:46Z,"Download missing models when creating a pipeline

Less noisy logging when creating a pipeline from already downloaded items
Filters variants before trying to download them
Doesn't try to download models for annotators which don't exist
Attempt to download a missing resources.json
Downloads missing resources if REUSE_RESOURCES is set

Adds tests of the reuse_resources and download_resources options
including checks using mod times to verify that downloads occurred,
and checks that various download methods will overwrite an incorrect model"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_core.py,2022-04-23T04:36:46Z,Move a bunch of tests to more appropriate homes
github.com/stanfordnlp/stanza,stanza/tests/ner/test_ner_tagger.py,2023-11-13T03:37:20Z,Use the correct pretrain path for the new NER default
github.com/stanfordnlp/stanza,stanza/tests/ner/test_ner_tagger.py,2023-10-18T15:10:19Z,Return entity F1 for each entity as part of the score_by_entity function in the scorer
github.com/stanfordnlp/stanza,stanza/tests/ner/test_ner_tagger.py,2023-10-03T04:17:33Z,Update NER packages to reflect the new ontonotes_charlm default NER
github.com/stanfordnlp/stanza,stanza/tests/ner/test_ner_tagger.py,2023-09-30T12:21:48Z,Unnecessary print at the end of a test
github.com/stanfordnlp/stanza,stanza/tests/ner/test_ner_tagger.py,2022-10-26T00:03:10Z,Mark this test with travis - not sure that is still relevant
github.com/stanfordnlp/stanza,stanza/tests/ner/test_ner_tagger.py,2022-08-25T01:07:44Z,Add a flag to output all the NER results to a file when evaluating
github.com/stanfordnlp/stanza,stanza/tests/ner/test_ner_tagger.py,2022-08-25T01:07:44Z,Add a simple test of ner_tagger.evaluate()
github.com/stanfordnlp/stanza,stanza/tests/ner/test_ner_tagger.py,2022-04-23T04:36:46Z,Rearrange NER tests to their own directory
github.com/stanfordnlp/stanza,stanza/tests/ner/test_convert_amt.py,2022-08-19T23:30:41Z,Add a test for not capturing . at the end of a sentence if it was part of an AMT label
github.com/stanfordnlp/stanza,stanza/tests/ner/test_convert_amt.py,2022-08-19T20:40:31Z,"Oops, finish an incomplete comment"
github.com/stanfordnlp/stanza,stanza/tests/ner/test_convert_amt.py,2022-08-18T04:34:23Z,Add a tool to convert from an AMT annotation file to a bio/json NER file for Stanza
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2023-10-03T04:17:33Z,Update NER packages to reflect the new ontonotes_charlm default NER
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2023-03-22T03:12:50Z,"Add a utility method for extracting the resources for a specific language, possibly following 'alias' links"
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2022-08-02T06:30:14Z,Add a piece of doc
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2022-06-16T22:14:52Z,Change a bunch of tempdirs to be under TEST_WORKING_DIR
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2022-05-30T07:32:52Z,"Notes on which embeddings are used for which NER, in the form of a map of default pretrains

Use the default pretrains when using run_ner.py

Update prepare_resources to use the new ner embedding info"
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2022-04-23T04:36:46Z,"Add the ability to use an alternate_md5 to accept a file.  Will allow resource files to denote an older md5 which we allow when downloading a file.  In particular, that lets us get around the non-atomic nature of putting up a new resources.json file while the models are still uploading to huggingface"
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2022-04-23T04:36:46Z,Use ValueError and FileNotFoundError instead of assert for unexpected md5
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2022-04-23T04:36:46Z,Allow specifying multiple packages of NER to download at the same time
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2022-04-23T04:36:46Z,Add a test for the download of a single model and its dependencies
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2022-04-23T04:36:46Z,"Allow the package parameter to be a dict when specifying a list of processors.  Will make it easier to limit exactly which processors to choose, as package=None is no longer necessary"
github.com/stanfordnlp/stanza,stanza/tests/resources/test_common.py,2021-09-08T21:22:41Z,Separate tests of different components into different files
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_depparse.py,2022-09-14T02:52:32Z,Squeeze a little bit more - only use depparse in the depparse pipeline
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_depparse.py,2022-04-23T04:36:46Z,depparse requires lemmatization to get the right results
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_depparse.py,2022-04-23T04:36:46Z,Move a couple tests into their own pipeline directory
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_tokenizer.py,2023-11-29T05:52:28Z,"MWT expansion with MEXP attribute tags

uses an enum to signify the manual MWT processing

manual MWT information is in a field instead of the misc field

default of the manual expansion is `None`"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_tokenizer.py,2023-11-10T01:30:23Z,spaCy tokenizer won't have MWT
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_tokenizer.py,2023-11-10T00:21:17Z,Update the postprocessing test for the new English MWT default
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_tokenizer.py,2023-11-09T23:51:44Z,Update a couple tests for the MWT change
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_tokenizer.py,2023-10-02T20:59:27Z,"Adds a tokenization postprocessor for manual token cleanup (#1290)

If a postprocessor is provided, the tokenizer passes the candidate tokenization before finalizing the document construction.  This allows for a postprocessor which fixes certain known errors or simply adjusts the tokenization to better match the user's downstream preferences"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_tokenizer.py,2022-04-23T04:36:46Z,Add unittest for char offset in skip_newline; fix over-scoped unittest; Fix further length calculation edge cases
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_tokenizer.py,2022-04-23T04:36:46Z,Move a bunch of tests to more appropriate homes
github.com/stanfordnlp/stanza,stanza/tests/server/test_ud_enhancer.py,2022-04-23T04:36:46Z,Move a bunch of tests to a separate directory specifically for the corenlp client
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_decorators.py,2023-09-14T05:13:00Z,I guess it's pretty close if the models learn another has a feature of Art or not
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_decorators.py,2023-08-20T18:35:46Z,Update unit tests to match the newly trained POS models
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_decorators.py,2022-12-07T07:06:06Z,"Pass around device instead of use_gpu when running a Pipeline or MultilingualPipeline.

There is one downside to this approach, which is that existing custom
processors which were a subclass of an existing processor and used the
initializer with use_gpu will need to be updated.  Hopefully this is a
very small problem - most processor variants would be independent of
the previous use_gpu system

Theoretically this would let us make Pipelines on an ""mps"" if we
wanted, but the torch 1.13.0 MPS backend has a bug which specifically
makes bidirectional LSTMs with batch_first unusable, so .... yeah"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_decorators.py,2022-04-23T04:36:46Z,Rearrange most of the tests in stanza/tests
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_lemmatizer.py,2024-02-18T09:20:19Z,Update the caseless test to reflect the new models.  Example (or should we say Excerpt) chosen from EWT Dev
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_lemmatizer.py,2024-02-03T03:34:40Z,"Potentially lowercase the data in a lemmatizer if all of the training data (or a user flag) requested it

Testing additions:

Add a basic unit test of the all_lowercase function
Add a test of the caseless lemmatizer in the Pipeline
Test that the Latin ITTB lemmatizer is marked as caseless.  Check that the results for capitalized text is as expected

Addresses https://github.com/stanfordnlp/stanza/issues/1330"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_lemmatizer.py,2023-07-19T06:59:17Z,"Add a flag to the pipeline lemmatizer which tells it to remember word,pos combinations it has seen before.  https://github.com/stanfordnlp/stanza/issues/1263"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_lemmatizer.py,2022-04-23T04:36:46Z,Move a bunch of tests to more appropriate homes
github.com/stanfordnlp/stanza,stanza/tests/common/test_data_objects.py,2023-11-13T04:33:25Z,Also embarrassing.  It should be able to recognize single word names
github.com/stanfordnlp/stanza,stanza/tests/common/test_data_objects.py,2022-09-14T02:20:10Z,"Turn some pipelines getting built over and over into fixtures.  Will make them take up less GPU memory, even if the cleanup isn't reliable"
github.com/stanfordnlp/stanza,stanza/tests/common/test_data_objects.py,2022-04-23T04:36:46Z,Update a broken doc
github.com/stanfordnlp/stanza,stanza/tests/common/test_data_objects.py,2022-04-23T04:36:46Z,Rearrange most of the tests in stanza/tests
github.com/stanfordnlp/stanza,stanza/tests/tokenization/test_spaces.py,2023-12-16T04:01:07Z,"Refactor spaces_after and spaces_before so they are actual members of the Token, not just stuck on the MISC field"
github.com/stanfordnlp/stanza,stanza/tests/tokenization/test_spaces.py,2023-12-16T04:01:07Z,Add a couple test cases of SpacesBefore and Space[s]After
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_requirements.py,2023-11-09T23:51:44Z,Update a couple tests for the MWT change
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_requirements.py,2022-04-23T04:36:46Z,Move a bunch of tests to more appropriate homes
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_classifier.py,2024-01-27T03:06:01Z,Update test to reflect changed defaults
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_classifier.py,2024-01-27T03:06:01Z,"Add a PEFT wrapper for the Sentiment training.

Works quite well on English, actually, even without splitting the optimizer or implementing any form of scheduling.
With no finetuning, adding electra-large to the 3 class English dataset (SST plus a few other pieces) gets 70 Macro F1.
The base finetuning gets between 74-75 macro F1 on sstplus, but frequently fails to successfully train, getting somewhere around 60 F1
Training with PEFT gets in the 74-75 F1 range each time, with no failures observed so far.

Adds a chunk of test to the sentiment training which starts the Pipeline with a peft-trained model"
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_classifier.py,2024-01-19T06:30:52Z,Add finetuning of the transformer to the CNN Classifier.  Include a couple tests using the tiny bert model from HF
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_classifier.py,2023-02-06T20:44:08Z,"Add constituency items to SentimentDatums (convert from namedtuple to a simple class)

Use the new _asdict method when writing a dataset
Read trees back from the classifier data files.
Add a test of the tree reading by adding trees to one of the test datasets.

Move the fake datasets to test_data.py for better organization - now they are all with the reading test code"
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_classifier.py,2023-02-06T18:05:02Z,"Move the fake_embeddings fixture to make it easier to reuse elsewhere, eg other tests which need the fake embeddings"
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_classifier.py,2022-10-11T16:58:10Z,Remove unneeded import
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_classifier.py,2022-10-04T17:49:54Z,Refactor test_data.py - will be a good home for more classifier data tests
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_classifier.py,2022-10-04T15:32:24Z,"Rename classifier_args -> utils.  Annoying to rebuild the models, but maybe worth the hassle to make things a bit cleaner"
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_classifier.py,2022-09-13T23:26:06Z,Try to reduce the scope on various pipelines to make the test suite less likely to run out of GPU memory.  Not sure this is the correct approach
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_classifier.py,2022-08-31T20:38:43Z,Make saved models smaller in the classifier test.  Will hopefully save disk space and time
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_classifier.py,2022-08-31T19:46:20Z,Update a couple defaults based on recent experiments
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_classifier.py,2022-08-31T06:18:26Z,"Add a checkpoint mechanism to sentiment

pass checkpoint_file to train_model in the unittest, but TODO: need to add tests for checkpointing"
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_classifier.py,2022-08-31T05:43:23Z,"Simplify the load mechanism in classifier Trainer so that the load() call loads the pretrain, charlm, etc"
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_classifier.py,2022-08-31T01:59:57Z,"Refactor a Trainer object out of the classifier.py main program.  In addition to the model, this saves and loads the optimizer and the number of epochs trained.  Purpose: to make it so that it is easy to checkpoint model training the same way the charlm is checkpointed"
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_classifier.py,2022-08-31T00:44:10Z,Refactor a bunch of data manipulation methods to data.py
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_classifier.py,2022-08-22T16:49:47Z,Add the ability to add a list of filter output sizes instead of just one-size-fits-all
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_classifier.py,2022-08-15T00:11:01Z,"2d conv.  Uses the width of a conv feature to rescale the output
channels, making it possible to combine the original full-width
features with the smaller conv features

Adds some logging for how big each filter is"
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_classifier.py,2022-08-14T05:44:11Z,"Begin writing a test for the classifier

Tests building a model, saving & loading, iterating a couple times on
a couple varieties of models, and some of the utility methods

Tests bilstm & maxpool widths"
github.com/stanfordnlp/stanza,stanza/tests/resources/test_installation.py,2022-06-16T22:14:52Z,Change a bunch of tempdirs to be under TEST_WORKING_DIR
github.com/stanfordnlp/stanza,stanza/tests/resources/test_installation.py,2021-10-04T05:11:13Z,Merge branch 'main' into dev
github.com/stanfordnlp/stanza,stanza/tests/resources/test_installation.py,2021-09-08T21:22:41Z,Separate tests of different components into different files
github.com/stanfordnlp/stanza,stanza/tests/resources/test_installation.py,2021-09-08T21:22:41Z,Move the installation test to its own directory
github.com/XiangLi1999/Diffusion-LM,improved-diffusion/scripts/infill.py,2022-06-06T22:38:39Z,first commit
github.com/microsoft/presidio,presidio-analyzer/presidio_analyzer/nlp_engine/stanza_nlp_engine.py,2023-10-19T10:58:04Z,Integrating spacy-huggingface-pipelines and refactoring NlpEngine logic (#1159)
github.com/microsoft/presidio,presidio-analyzer/presidio_analyzer/nlp_engine/stanza_nlp_engine.py,2021-05-23T10:03:50Z,updated call to stanza via spacy-stanza (#711)
github.com/microsoft/presidio,presidio-analyzer/presidio_analyzer/nlp_engine/stanza_nlp_engine.py,2021-02-08T12:34:25Z,Configurable logging (#469)
github.com/microsoft/presidio,presidio-analyzer/presidio_analyzer/nlp_engine/stanza_nlp_engine.py,2021-02-03T23:00:55Z,revert
github.com/microsoft/presidio,presidio-analyzer/presidio_analyzer/nlp_engine/stanza_nlp_engine.py,2021-02-03T22:55:12Z,new logging
github.com/microsoft/presidio,presidio-analyzer/presidio_analyzer/nlp_engine/stanza_nlp_engine.py,2021-01-21T13:05:11Z,Linting updates for the analyzer given the new flake8 rules (#412)
github.com/microsoft/presidio,presidio-analyzer/presidio_analyzer/nlp_engine/stanza_nlp_engine.py,2021-01-13T13:40:20Z,Remove pylint
github.com/microsoft/presidio,presidio-analyzer/presidio_analyzer/nlp_engine/stanza_nlp_engine.py,2021-01-13T10:38:30Z,"Omri374/analyzer v2 (#392)

* Removed all previous dependencies from NOTICE

* 1. Removed pyre2

2. Removed the GRPC app.py and pb2 files
3. Added type hints
4. Removed recognizer store API calls
5. Added batch calls to the analyzer engine (simple implementation)
6. Used black to format all files
7. SpacyNlpEngine now returns spacy tokens and not just the text tokens
8. Fixed bug in us SSN recognizer
9. Remove duplicates is now per recognizer (if the recognizer identifies the same text as entity by multiple different logics, e.g. regex patterns then only the one with the highest confidence is kept.
9. Fixed tests to support 1-9
10. Demo test now compares actual anonymized text with expected anonymized text (more representative of the real demo website)

* updated setup.py

* fixed logging across, new README

* minor fixes

* Set up CI with Azure Pipelines

* removed analyzer_batch and added analyzer.get_supported_entities

* Update azure-pipelines.yml for Azure Pipelines

* Removed all previous dependencies from NOTICE

* 1. Removed pyre2

2. Removed the GRPC app.py and pb2 files
3. Added type hints
4. Removed recognizer store API calls
5. Added batch calls to the analyzer engine (simple implementation)
6. Used black to format all files
7. SpacyNlpEngine now returns spacy tokens and not just the text tokens
8. Fixed bug in us SSN recognizer
9. Remove duplicates is now per recognizer (if the recognizer identifies the same text as entity by multiple different logics, e.g. regex patterns then only the one with the highest confidence is kept.
9. Fixed tests to support 1-9
10. Demo test now compares actual anonymized text with expected anonymized text (more representative of the real demo website)

* updated setup.py

* fixed logging across, new README

* minor fixes

* removed analyzer_batch and added analyzer.get_supported_entities

* removed setup.cfg for now

* readding setup.cfg with flake8 max-line-width

* removed duplicate word

* Added internal link to customization"
github.com/microsoft/presidio,presidio-analyzer/presidio_analyzer/nlp_engine/stanza_nlp_engine.py,2020-07-22T14:58:44Z,"[WIP] analyzer - multiple languages and nlp engines (#312)

* analyzer - multiple languages and nlp engines

Initially this was my attempt to use stanza, which is an nlp engine by
Stanford.  But generally, it's an update to allow for one to add NLP
engines and custom recognizers more easily.  Specifically, I
standardized the format of the recognizers, removed use of global
variables when possible, and removed a lot of hard-coding of defaults.

I am thinking of using presidio for several non-english projects at work
and these are several of the changes that I made.

Below is a list of the changes in list form:

* make spacy and/or stanza optional
  * remove requirement of en_core_web_lg from install
* allow predefined recognizers to take parameters
  * this allows for easily using these as non-english recognizers
* create config files for different NLP engines
* create tests for stanza
* make all spacy and stanza tests optional
* create a Dockerfile for an anaconda-based image
  * pytorch is built with MKL and is much faster on cpu from conda
* completely rewrote the IBAN recognizer
  * the current version only recognizes IBANs if they are the entirety
    of the string.  This version will find IBANs in sentences.
* fixed some tests
* created a `run.sh` file, so just run dockers without rebuilding them

""Breaking"" Changes:

* I would like to use [black](https://github.com/psf/black), but it's
  not super friendly with pylint.  My suggestion is to drop pylint and
  use black instead.
* Default spacy model is `en` rather than `en_core_web_lg` and no spacy
  models are downloaded by default.  The idea is to let the user choose
  which models they want.  For non-english users, it saves a lot of time
  at installation because you don't need to install the large spacy
  model that you aren't using.

Signed-off-by: David Pollack <d.pollack@solvemate.com>

* spacy required, spacy-stanza, update tests

* made spacy required
* using spacy-stanza for stanza models
* refactor tests to use pytest
* make one test reliant on big model optional

* refactor tests to pytest

All tests have been refactored to use pytest.  Previously, there was a
mix of unittest, pytest and miscellaneous global initializations.  This
commit moves everything to pytest.  There is now extensive use of
fixtures instead of global variables and parametrized tests instead of
duplicated code for each test.  The major difference is that
parametrized tests are not individually named.

* changes based on PR comments

* fixes to Dockerfiles

* remove sys.path.append

* fix pipeline errors (i.e. install spacy model)

this installs the big spacy model by default in the Docker and the Azure
pipeline.

* fix rebase errors

* use Pattern class

* update docs

* use PresidioLogger

* linting fixes

* move imports to top level

* edits based on PR-review

* add documentation and doc strings
* change yaml field names to be more logical

* fix pipelines based on PR comments"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_french_pipeline.py,2023-12-16T04:01:07Z,Fix up the unit tests now that the output formats expect to have the Spaces annotations on the MISC columns
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_french_pipeline.py,2023-09-21T07:06:38Z,"Some changes in the unit test from using the combined model instead of the gsd model for French.  The obl:mod looks a little sus given how many obl:arg there are for public in the training data, but overall the combined model is still highly accurate on GSD and is much more accurate on the other three datasets in its collection"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_french_pipeline.py,2023-08-25T00:00:43Z,"Latest model updates this to a fixed instead of advmod.  It's not clear (to me) which is correct.  Alors almost always has fixed for incoming dependencies, but encore almost always has advmod for outgoing dependencies"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_french_pipeline.py,2022-12-07T07:06:06Z,Add a test which checks that all models from a pipeline are on the expected device
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_french_pipeline.py,2022-10-11T04:09:44Z,"Update FR depparse test.  Not sure which label is correct, but overall the new model is more accurate"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_french_pipeline.py,2022-07-27T03:05:56Z,Latest POS models change this word to NOUN
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_french_pipeline.py,2022-04-23T04:36:46Z,Move a couple tests into their own pipeline directory
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_arabic_pipeline.py,2023-10-06T04:33:17Z,Add a small test of Arabic MWT and POS
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_english_pipeline.py,2023-12-16T04:01:07Z,Fix up the unit tests now that the output formats expect to have the Spaces annotations on the MISC columns
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_english_pipeline.py,2023-08-29T04:58:37Z,Fix an empty bulk process not processing correctly (#1278)
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_english_pipeline.py,2023-02-14T22:21:34Z,Add a method to reindex sentences.  Use it to keep the sent_id increasing even when using a 'stream' of documents
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_english_pipeline.py,2023-02-14T17:44:16Z,"Add a streaming interface, as requested in #550"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_english_pipeline.py,2023-02-14T17:15:35Z,Add a bulk_process method which does the Document wrapping for the user - try to make the interface a bit simpler for the user
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_english_pipeline.py,2023-01-12T04:59:07Z,Use comments to store the sentiment values as well
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_english_pipeline.py,2023-01-02T02:50:45Z,"Add a constituency comment to sentences in the doc

This adds the constituency tree to the CoNLL format as a comment

If there's somehow a newline in the parse tree, we convert \n to *NL*
to not make the CoNLL comments horribly broken - not sure this is
ideal, but hopefully \n doesn't come up often"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_english_pipeline.py,2022-12-23T00:01:22Z,Move the token to conll text functionality to doc.py.  Use this to create C (with comments) and c (no comments) formats for Document and Sentence.
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_english_pipeline.py,2022-12-07T07:06:06Z,Add a test which checks that all models from a pipeline are on the expected device
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_english_pipeline.py,2022-04-23T04:36:46Z,New models get the features correct
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_english_pipeline.py,2022-04-23T04:36:46Z,"Write NER tags to conll docs

don't put NER on the word misc field"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_english_pipeline.py,2022-04-23T04:36:46Z,"Process sentence ids from the corpus, if available.

There is now a sentence.sent_id field on the Sentences which takes the
value of the sent_id field from a document comments, if available, or
reuses the sentence id set during document creation

Also, there is now a warning that .id will be deprecated (it's a
keyword, after all) in favor of .index.  Documentation is updated to
no longer suggest that .index is 1 indexed, since it wasn't"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_english_pipeline.py,2022-04-23T04:36:46Z,"Add a #text comment to each sentence in a doc if it doesn't already exist

Add #text markers to the unit tests where expected"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_english_pipeline.py,2022-04-23T04:36:46Z,Move a couple tests into their own pipeline directory
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_process_utils.py,2023-02-06T20:44:08Z,"Add constituency items to SentimentDatums (convert from namedtuple to a simple class)

Use the new _asdict method when writing a dataset
Read trees back from the classifier data files.
Add a test of the tree reading by adding trees to one of the test datasets.

Move the fake datasets to test_data.py for better organization - now they are all with the reading test code"
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_process_utils.py,2022-10-19T22:09:05Z,Extend read_snippets for sentiment datasets to read multiple columns and combine them into a single sentiment value
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_process_utils.py,2022-10-04T17:49:54Z,Move SentimentDatum to classifiers/data.py and make the reading code read in SentimentDatum
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_process_utils.py,2022-10-04T17:49:54Z,Add a couple tests of the building block methods from the Sentiment conversion tools
github.com/stanfordnlp/stanza,stanza/tests/tokenization/test_tokenize_data.py,2022-06-30T01:29:33Z,"Fix that it takes forever to tokenize a really long non-numeric token

Bug very helpfully reported by
Sk Adnan Hassan (VT) and Zainab Aamir (Stony Brook)"
github.com/stanfordnlp/stanza,stanza/tests/tokenization/test_tokenize_data.py,2022-06-24T04:01:42Z,Add a few tests of the NUMERIC_RE
github.com/stanfordnlp/stanza,stanza/tests/tokenization/test_tokenize_data.py,2022-05-16T20:00:40Z,Add the skip_newlines test to the file reading version of the tokenizer data as well
github.com/stanfordnlp/stanza,stanza/tests/tokenization/test_tokenize_data.py,2022-05-16T19:48:53Z,Abstract away labels() rather than having the eval code know the format of the data object
github.com/stanfordnlp/stanza,stanza/tests/tokenization/test_tokenize_data.py,2022-05-16T06:53:53Z,"For the MWT test, use the fake tokenizer files rather than putting in the fake data format"
github.com/stanfordnlp/stanza,stanza/tests/tokenization/test_tokenize_data.py,2022-05-16T06:51:18Z,Factor out a method to write the input to temp files in a tokenizer test
github.com/stanfordnlp/stanza,stanza/tests/tokenization/test_tokenize_data.py,2022-05-16T06:33:51Z,Add a tiny bit of doc
github.com/stanfordnlp/stanza,stanza/tests/tokenization/test_tokenize_data.py,2022-05-16T04:07:02Z,Run some basic tests on the dictionary in the ZH tokenizer
github.com/stanfordnlp/stanza,stanza/tests/tokenization/test_tokenize_data.py,2022-05-15T07:06:47Z,"Add a test which pokes the DataLoader object to make sure it is processing data as expected

Add a small test case for reading data from a file

Add a test of the skip_newline ability used in the Chinese tokenizer"
github.com/stanfordnlp/stanza,stanza/tests/tokenization/test_tokenize_data.py,2022-04-23T04:36:46Z,Move a bunch of tests to more appropriate homes
github.com/explosion/projects,benchmarks/speed/scripts/run_nlp.py,2022-08-05T12:14:31Z,"Update speed benchmark (#120)

* Update speed benchmark

* Restore install command without torch URL"
github.com/explosion/projects,benchmarks/speed/scripts/run_nlp.py,2021-02-01T13:34:47Z,"Update speed benchmarking project (#29)

* add token_splitter to spacy's trf model for speed benchmarking

* update readme, clarify private files

* limit Stanza's GPU memory usage

* add depparse_batch_size

* fix comment

* add textcat_multilabel fix"
github.com/explosion/projects,benchmarks/speed/scripts/run_nlp.py,2020-10-15T14:33:09Z,Fix transformer CPU
github.com/explosion/projects,benchmarks/speed/scripts/run_nlp.py,2020-10-15T14:13:27Z,"Use 10k texts, not 1k"
github.com/explosion/projects,benchmarks/speed/scripts/run_nlp.py,2020-10-15T12:42:17Z,Fix spacy batch size
github.com/explosion/projects,benchmarks/speed/scripts/run_nlp.py,2020-10-15T12:06:31Z,Upd benchmark
github.com/explosion/projects,benchmarks/speed/scripts/run_nlp.py,2020-10-15T11:09:29Z,Format
github.com/explosion/projects,benchmarks/speed/scripts/run_nlp.py,2020-10-15T11:08:33Z,Fix speed
github.com/explosion/projects,benchmarks/speed/scripts/run_nlp.py,2020-10-14T19:49:32Z,Fix import
github.com/explosion/projects,benchmarks/speed/scripts/run_nlp.py,2020-10-14T19:41:41Z,Fix batching
github.com/explosion/projects,benchmarks/speed/scripts/run_nlp.py,2020-10-14T19:36:37Z,Fix batching
github.com/explosion/projects,benchmarks/speed/scripts/run_nlp.py,2020-10-14T19:25:01Z,Update scripts
github.com/explosion/projects,benchmarks/speed/scripts/run_nlp.py,2020-09-29T08:10:23Z,add spacy transformers
github.com/explosion/projects,benchmarks/speed/scripts/run_nlp.py,2020-09-29T07:23:07Z,add udpipe
github.com/explosion/projects,benchmarks/speed/scripts/run_nlp.py,2020-09-28T20:14:09Z,refactor
github.com/explosion/projects,benchmarks/speed/scripts/run_nlp.py,2020-09-28T19:24:51Z,add flair models
github.com/explosion/projects,benchmarks/speed/scripts/run_nlp.py,2020-09-28T15:36:03Z,run each lib in separate python call to avoid mem accumulation
github.com/explosion/projects,benchmarks/speed/scripts/run_nlp.py,2020-09-28T13:03:46Z,run stanza
github.com/explosion/projects,benchmarks/speed/scripts/run_nlp.py,2020-09-28T09:41:50Z,fix HF model
github.com/explosion/projects,benchmarks/speed/scripts/run_nlp.py,2020-09-24T23:48:08Z,add requirements
github.com/explosion/projects,benchmarks/speed/scripts/run_nlp.py,2020-09-24T23:21:04Z,setup benchmarking project
github.com/stanfordnlp/stanza,stanza/tests/tokenization/test_tokenize_utils.py,2023-12-16T04:01:07Z,Fix up the unit tests now that the output formats expect to have the Spaces annotations on the MISC columns
github.com/stanfordnlp/stanza,stanza/tests/tokenization/test_tokenize_utils.py,2023-11-29T05:52:28Z,"MWT expansion with MEXP attribute tags

uses an enum to signify the manual MWT processing

manual MWT information is in a field instead of the misc field

default of the manual expansion is `None`"
github.com/stanfordnlp/stanza,stanza/tests/tokenization/test_tokenize_utils.py,2023-10-14T21:44:37Z,Add a (brief) test of turning a tokenizer training file into a lexicon
github.com/stanfordnlp/stanza,stanza/tests/tokenization/test_tokenize_utils.py,2023-10-02T20:59:27Z,"Adds a tokenization postprocessor for manual token cleanup (#1290)

If a postprocessor is provided, the tokenizer passes the candidate tokenization before finalizing the document construction.  This allows for a postprocessor which fixes certain known errors or simply adjusts the tokenization to better match the user's downstream preferences"
github.com/stanfordnlp/stanza,stanza/tests/tokenization/test_tokenize_utils.py,2022-05-15T07:06:44Z,Separate the next() functionality which advances an unfinished batch into a separate function.  Add a test that the separate function is being called
github.com/stanfordnlp/stanza,stanza/tests/tokenization/test_tokenize_utils.py,2022-04-23T04:36:46Z,"Add a utility method for constructing a Document from pretokenized sentences and an original text

Consistently throws ValueError for problems with the pretokenization
Includes a test of a couple basic examples

Addresses #967"
github.com/stanfordnlp/stanza,stanza/tests/tokenization/test_tokenize_utils.py,2022-04-23T04:36:46Z,Move a bunch of tests to more appropriate homes
github.com/AlibabaResearch/DAMO-ConvAI,proton/preprocess/cu.py,2022-08-06T11:43:17Z,add: proton
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_pipeline_mwt_expander.py,2022-04-23T04:36:46Z,Rearrange most of the tests in stanza/tests
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_pipeline_ner_processor.py,2023-10-03T04:17:33Z,Update NER packages to reflect the new ontonotes_charlm default NER
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_pipeline_ner_processor.py,2022-09-13T23:26:06Z,Try to reduce the scope on various pipelines to make the test suite less likely to run out of GPU memory.  Not sure this is the correct approach
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_pipeline_ner_processor.py,2022-09-08T18:30:47Z,NER get_known_tags possibly applies to multiple models
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_pipeline_ner_processor.py,2022-04-23T04:36:46Z,"Add a field for multiple NER annotations in a tuple

Add a test for the new multi_ner field in the pipeline"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_pipeline_ner_processor.py,2022-04-23T04:36:46Z,"At long last, add a mechanism for using multiple NER models at once

Download ncbi_disease as part of the testing infrastructure.  Use it to run two NER models at once"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_pipeline_ner_processor.py,2022-04-23T04:36:46Z,Move a couple tests into their own pipeline directory
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_pipeline_pos_processor.py,2023-10-06T04:32:08Z,No need to download the resources every time this test is run - it should already be downloaded from setup.py
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_pipeline_pos_processor.py,2022-07-06T23:59:48Z,Add getting all possible values for each feat
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_pipeline_pos_processor.py,2022-07-02T00:20:50Z,"Add methods for getting the xpos, upos, and feats from a pos model in the pos_processor.  If needed, we can always add it to the trainer or model as well."
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_pipeline_pos_processor.py,2022-04-23T04:36:46Z,Rearrange most of the tests in stanza/tests
github.com/argosopentech/argos-translate,argostranslate/translate.py,2023-10-17T23:51:16Z,Cleanup
github.com/argosopentech/argos-translate,argostranslate/translate.py,2023-10-17T23:51:16Z,"Add BPE encoding, prefix/suffix tokens, target suffix support"
github.com/argosopentech/argos-translate,argostranslate/translate.py,2023-10-17T23:51:16Z,Add tokenizer class
github.com/argosopentech/argos-translate,argostranslate/translate.py,2023-09-03T16:59:02Z,Formatting
github.com/argosopentech/argos-translate,argostranslate/translate.py,2023-06-23T00:20:23Z,store cached translations
github.com/argosopentech/argos-translate,argostranslate/translate.py,2023-03-25T19:09:49Z,"Fix sort order in CompositeTranslation

All of the hypotheses scores from CTranslate2 are negative with
higher scores being better. This sorts in descending order to select
the translations with the best scores.

https://github.com/argosopentech/argos-translate/issues/328"
github.com/argosopentech/argos-translate,argostranslate/translate.py,2022-11-29T23:31:03Z,Fix Improve imports #297
github.com/argosopentech/argos-translate,argostranslate/translate.py,2022-11-26T20:38:44Z,"Bug fix

- https://github.com/argosopentech/argos-translate/issues/298"
github.com/argosopentech/argos-translate,argostranslate/translate.py,2022-10-14T23:08:28Z,Error handling translate.get_language_from_code
github.com/argosopentech/argos-translate,argostranslate/translate.py,2022-10-14T23:07:58Z,Formatting
github.com/argosopentech/argos-translate,argostranslate/translate.py,2022-10-14T22:11:52Z,remove types in comments
github.com/argosopentech/argos-translate,argostranslate/translate.py,2022-10-14T22:11:52Z,remove comments & add missing types
github.com/argosopentech/argos-translate,argostranslate/translate.py,2022-10-14T22:11:52Z,add types & fix
github.com/argosopentech/argos-translate,argostranslate/translate.py,2022-10-14T22:11:52Z,add more types & fix a typo
github.com/argosopentech/argos-translate,argostranslate/translate.py,2022-10-14T22:11:52Z,add types for translate
github.com/argosopentech/argos-translate,argostranslate/translate.py,2022-09-16T22:39:02Z,Bug fix
github.com/argosopentech/argos-translate,argostranslate/translate.py,2022-09-11T19:01:15Z,Formatting
github.com/argosopentech/argos-translate,argostranslate/translate.py,2022-05-26T13:30:10Z,Add translate function
github.com/argosopentech/argos-translate,argostranslate/translate.py,2022-05-26T13:14:45Z,Add translate documentation
github.com/argosopentech/argos-translate,argostranslate/translate.py,2022-05-26T13:09:56Z,Document translation by code helper functions
github.com/argosopentech/argos-translate,argostranslate/translate.py,2022-05-26T12:59:35Z,"doesnt return false, let the errors to be throw"
github.com/argosopentech/argos-translate,argostranslate/translate.py,2022-05-26T12:59:35Z,rename function
github.com/argosopentech/argos-translate,argostranslate/translate.py,2022-05-26T12:59:35Z,add two helpers functions
github.com/argosopentech/argos-translate,argostranslate/translate.py,2022-02-09T23:03:41Z,remove repetition_penalty (#235)
github.com/argosopentech/argos-translate,argostranslate/translate.py,2022-02-08T11:37:13Z,add repetition_penalty (#234)
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-08-06T12:06:23Z,"Tag translation improvements

- Fix spaces formatting
- Enable tag blacklist"
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-08-05T00:06:40Z,Simplfied tag logic
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-08-04T12:38:33Z,Fixed tag translation formatting
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-07-13T22:09:55Z,Formatting
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-07-13T12:42:49Z,Fewshot sbd
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-06-21T12:34:21Z,Implemented fewshot translation
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-06-20T14:01:43Z,Support for LibreTranslate model
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-06-20T13:26:49Z,Reorganize sbd code
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-06-17T12:31:42Z,Reorganize argostranslate.models
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-06-17T12:22:30Z,Formatting
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-06-15T23:16:29Z,"Upgraded to CTranslate2 2.0

- https://github.com/argosopentech/argos-translate/issues/133
- https://github.com/OpenNMT/CTranslate2/releases/tag/v2.0.0"
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-06-13T13:14:38Z,Added LibreTranslate translation
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-06-06T19:02:04Z,Fixed unit tests
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-06-02T02:39:59Z,Bug fix
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-06-02T02:24:56Z,Improved logging
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-06-02T01:58:35Z,"Set min beam size of 4

- https://github.com/argosopentech/argos-translate/issues/121"
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-06-02T01:53:47Z,Formatting
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-06-01T11:20:25Z,Update stanza check
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-06-01T11:20:25Z,Fix None check
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-06-01T11:20:25Z,Fix logging statements
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-06-01T11:20:25Z,Minor improvements
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-05-19T12:21:22Z,Filter available packages by sbd available
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-05-18T11:58:20Z,Filter installed languages for sbd
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-05-17T22:10:23Z,"Added code formatting with black

- https://github.com/argosopentech/argos-translate/issues/6"
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-05-16T12:23:27Z,Auto download sbd package
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-05-15T01:01:38Z,Improved sentence boundary detection
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-05-04T00:30:03Z,Renamed warning log to match Python std lib
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-04-27T12:44:29Z,"Use CTranslate2 to split batches

- https://github.com/argosopentech/argos-translate/issues/97
- https://github.com/argosopentech/argos-translate/commit/0827bebb28c10915814ced9b3de9c56b1c25fe5d#commitcomment-50047147"
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-04-27T00:36:11Z,"Break long translations over multiple batches

- https://github.com/argosopentech/argos-translate/issues/97"
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-04-24T20:29:35Z,Sentence boundary detection
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-04-07T11:12:28Z,Added argos_experimental setting
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-03-27T12:11:06Z,Deprecated translate.load_installed_languages
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-03-21T14:51:37Z,"Use list-comprehension instead of `[]*` (multiple reference)

This avoids potential confusions, and also avoids shallow-copying
the class-object."
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-03-21T14:51:37Z,Add `@staticmethod` to static methods of `ITranslation`
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-03-21T12:48:02Z,"Port the new combine-results loop from CachedTranslation to PackageTranslation

This prevents potential reference/mem unwanted overwrites, as explained
in 55ee8cd13d"
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-03-21T12:48:02Z,"Fix wrong output issue for CachedTranslation.hypotheses()

There were two problems observed on the output when using this function
with multi-line input:

* One was wrong indices (`hypotheses_to_return[j]`) being assigned
For multi-line inputs the result always was [..., Hypothesis('', 0)] except
for the first member of the list.
* Second, the += operation was causing single-line results, ignoring all
'\n's that it should add.
* While here take care of extra '\n'-prefix (produced when using ('', 0) objs
to prevent shallow-copy problem)"
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-03-21T12:48:02Z,"Bugfix: Invalidate cache after `num_hypotheses` changes

After the `num_hypotheses` changes, we possibly have cached translations that
are searched with different beam_search parameters, and also stored in
the lists with different lengths.
The latter becomes problem when combining paragraphs.
So in this case we re-do the search with new parameter(s), and cache the result."
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-03-21T12:48:02Z,Use a more precise and easier-to-read way for Hypothesis.__str__
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-03-21T12:48:02Z,"Fix typo in method signature

Just like `split_into_paragraphs()` the `combine_paragraphs()` also
appears being used statically, so the syntax is fixed here."
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-03-20T18:48:02Z,Fixed rebasing bug
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-03-20T18:39:05Z,"Implement __str__ and __repr__ for Hypothesis

This makes it easier to debug/represent the objects of this type"
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-03-20T18:38:03Z,Renamed Hypothesis.output Hypothesis.value
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-03-20T18:09:29Z,Supported Hypothesis's for CachedTranslation
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-03-20T17:00:08Z,Implemented Hypothesis's for CompositeTranslations
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-03-20T15:48:11Z,Documentation for translation module
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-03-20T14:19:57Z,Added score to hypotheses
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-03-18T23:23:03Z,Added assertion that sentences within batch size
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-03-18T23:22:14Z,"Renamed multi_translation

- https://github.com/argosopentech/argos-translate/pull/52
- Formatting"
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-03-18T22:39:16Z,"Keep the API backwards compatible

Have `translate()` in which we call `multi_translate()` and return the first result."
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-03-18T22:39:16Z,"Make it possible to return more than one 'hypothetical' translations

This change makes it possible to pass `num_hypotheses` and `beam_size`
to CTranslate and have multiple results returned
Results will be combined and compiled into a list and returned"
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-03-16T01:23:16Z,Improved logging
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-03-07T21:39:41Z,"Added more debug statements

- https://github.com/argosopentech/argos-translate/issues/42"
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-02-19T02:53:04Z,Added DEBUG flag and debugging print statements
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-02-02T23:58:51Z,Replaced unknowns with source tokens
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-02-02T23:55:21Z,Factored out tokenization logic
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-01-23T23:34:37Z,Fixed typo in docs
github.com/argosopentech/argos-translate,argostranslate/translate.py,2021-01-02T16:32:39Z,"Changed CTranslate length_penalty to 0.2

- https://forum.opennmt.net/t/suggested-value-for-length-penalty/4134
- https://github.com/argosopentech/argos-translate/issues/4"
github.com/argosopentech/argos-translate,argostranslate/translate.py,2020-11-01T21:39:26Z,Minor bug fixes
github.com/argosopentech/argos-translate,argostranslate/translate.py,2020-11-01T18:01:10Z,Defaulted to English as the from language
github.com/argosopentech/argos-translate,argostranslate/translate.py,2020-10-31T14:46:08Z,Cached CTranslate Translators
github.com/argosopentech/argos-translate,argostranslate/translate.py,2020-10-22T02:13:08Z,"Switched to properly using CTranslate batches.

As described: https://forum.opennmt.net/t/gui-and-package-system-built-on-opennmt-pretrained-models/3992/6"
github.com/argosopentech/argos-translate,argostranslate/translate.py,2020-09-29T00:30:28Z,Fixed bug in pivoting
github.com/argosopentech/argos-translate,argostranslate/translate.py,2020-09-24T02:39:47Z,Added caching layer
github.com/argosopentech/argos-translate,argostranslate/translate.py,2020-09-24T02:03:20Z,Cleaned up the logic for splitting paragraphs
github.com/argosopentech/argos-translate,argostranslate/translate.py,2020-09-24T01:23:03Z,Swithed translation.Translation to a better interface system
github.com/argosopentech/argos-translate,argostranslate/translate.py,2020-09-20T16:47:33Z,Fixed bug with space at the start of every paragraph
github.com/argosopentech/argos-translate,argostranslate/translate.py,2020-09-20T16:10:47Z,Fixed bug in composite and identity translation
github.com/argosopentech/argos-translate,argostranslate/translate.py,2020-09-17T23:22:14Z,Added support for maintaining newlines into translated text
github.com/argosopentech/argos-translate,argostranslate/translate.py,2020-09-13T21:11:21Z,"Improved documentation

- Fixed this https://github.com/readthedocs/readthedocs.org/issues/2569
error in ReadTheDocs"
github.com/argosopentech/argos-translate,argostranslate/translate.py,2020-09-12T18:10:03Z,Removed excess logging
github.com/argosopentech/argos-translate,argostranslate/translate.py,2020-09-12T17:59:12Z,Refactored translate.py
github.com/argosopentech/argos-translate,argostranslate/translate.py,2020-09-12T15:39:26Z,Fixed bug in translating with multiple packages installed
github.com/argosopentech/argos-translate,argostranslate/translate.py,2020-09-10T01:48:40Z,Improved documentation and some refactoring.
github.com/stanfordnlp/stanza,stanza/tests/tokenization/test_replace_long_tokens.py,2023-11-12T23:29:49Z,"Update the base test to be a bit quicker.  Also, test setting the max length with a flag"
github.com/stanfordnlp/stanza,stanza/tests/tokenization/test_replace_long_tokens.py,2022-10-11T04:16:18Z,"Check for and replace excessively long tokens with ""UNK""; addresses issue 1137 (#1140)

Check for and replace excessively long tokens with ""UNK""; addresses issue 1137.

Added simple test for tokenizer maxlen check
move length check to post tokenization stage"
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_constituency_classifier.py,2023-02-06T20:44:08Z,Add a test that a fake constituency classifier can be loaded into the pipeline and run on a sentence
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_constituency_classifier.py,2023-02-06T20:44:08Z,"Add an option to the constituency classifier which uses all words instead of just first/last

The classifier itself uses a max() to pick just one dim to pay attention to"
github.com/stanfordnlp/stanza,stanza/tests/classifiers/test_constituency_classifier.py,2023-02-06T20:44:08Z,"Learn classifier layers on top of a constituency parser as a new classifier model.

Includes a flag to backprop into the constituency parser's weights.
Makes the classifier much more accurate (and slower to train)

Also test saving & loading a model
Add a basic test of the forward pass for the constituency classifier.

In the constituency classifier, extract one layer down instead of ROOT as an option
Also, run 1 head attn over all the nodes as an option

TreeEmbedding is separate from ConstituencyClassifier

This allows reusing the tree embedding as an input to a constituency
classifier (so that a secondary model can give embeddings to the
primary model) or elsewhere as an embedding over words / sentences"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_pipeline_depparse_processor.py,2022-09-13T23:26:06Z,Try to reduce the scope on various pipelines to make the test suite less likely to run out of GPU memory.  Not sure this is the correct approach
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_pipeline_depparse_processor.py,2022-06-28T16:59:08Z,"Add a method to extract the known relations from a dependency parser in a pipeline.  This was already possible using the vocab, but this is significantly easier for a user to find.  #1066"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_pipeline_sentiment_processor.py,2022-04-23T04:36:46Z,Move a couple tests into their own pipeline directory
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_pipeline_constituency_processor.py,2023-01-02T02:50:45Z,"Add a constituency comment to sentences in the doc

This adds the constituency tree to the CoNLL format as a comment

If there's somehow a newline in the parse tree, we convert \n to *NL*
to not make the CoNLL comments horribly broken - not sure this is
ideal, but hopefully \n doesn't come up often"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_pipeline_constituency_processor.py,2022-09-17T19:33:13Z,"Maybe save a little GPU memory (fragmentation, at least) by reusing some large data structures"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_pipeline_constituency_processor.py,2022-09-08T20:06:30Z,"Add a method to get the constituents known by a conparser, as requested in #1066"
github.com/stanfordnlp/stanza,stanza/tests/pipeline/test_pipeline_constituency_processor.py,2022-04-23T04:36:46Z,Order the items in a constituency query correctly.  Fixes #882
github.com/XiangLi1999/Diffusion-LM,improved-diffusion/control_gen/eval_control.py,2022-06-06T22:38:39Z,first commit
github.com/facebookresearch/minihack,minihack/wiki.py,2021-09-27T23:37:57Z,Initial commit
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/datasets.py,2021-01-12T00:08:22Z,Add method for generating words only
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/datasets.py,2020-05-18T00:00:17Z,More UD
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/datasets.py,2020-05-16T19:09:16Z,Urban dictionary prep
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/datasets.py,2020-05-16T03:26:23Z,"Clean notebooks, prepare for urban dictionary run"
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/datasets.py,2020-05-15T22:13:13Z,Switch cache to 100K words from 20K
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/datasets.py,2020-05-13T04:46:11Z,"Fix full-width CSS, twitter card, filter definitions < 3 words, add favicons"
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/datasets.py,2020-05-13T00:55:36Z,Fix twitter bot
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/datasets.py,2020-05-09T07:25:23Z,"Word generation: add a hail mary when failing, only do one pass"
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/datasets.py,2020-05-07T20:48:32Z,"Wire up basic word service, move word generator interface to own file"
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/datasets.py,2020-05-05T18:10:49Z,Use custom inference in twitter bot
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/datasets.py,2020-05-05T17:52:32Z,Get rid of example expansion
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/datasets.py,2020-05-05T07:52:29Z,Add custom modeling utils with early exit for blacklist / end of sentence
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/datasets.py,2020-05-05T05:28:41Z,Upgrade CSS
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/datasets.py,2020-05-04T05:42:41Z,"Add twitter card to website, move to training script with creativity evaluation"
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/datasets.py,2020-05-03T07:09:26Z,"Move directories, gitignore, dockerize twitter bot"
github.com/AlibabaResearch/DAMO-ConvAI,s2sql/preprocess/common_utils.py,2022-10-18T07:39:05Z,add: s2sql
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2023-01-17T10:00:30Z,"fix pretokenized input format

Now, a list of tokens is not valid input anymore"
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2022-04-04T12:14:58Z,make style
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2022-04-04T12:11:49Z,add create_spacy_disable_sentence_segmentation as entrypoint
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2022-04-04T12:03:37Z,move merge_dicts_strict to utils
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2022-03-05T19:57:36Z,Allow disable_sbd for stanza
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2022-03-05T16:26:10Z,"Allow users to disable spacy components and fix disable_sbd issue

Fixes #17"
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2021-09-05T08:52:39Z,ignore import quality checks
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2021-06-29T13:48:38Z,avoid duplicate arguments: pop
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2021-06-29T13:11:02Z,make style
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2021-06-29T11:23:52Z,Update utils.py
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2021-06-29T10:04:58Z,remove default spacy parser
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2021-06-25T13:58:50Z,move parsing code to dataclass
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2021-06-23T16:04:23Z,auto-download udpipe models
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2021-06-23T15:41:12Z,update to spacy v3 pipeline
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2021-06-23T09:29:25Z,make style
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-05-11T16:47:25Z,make style && make quality
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-05-11T16:44:28Z,add ability to use is_tokenized for udpipe
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-05-05T16:48:44Z,docstring & typing
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-05-05T16:36:09Z,"replace tokens_from_list by custom tokenizer

Since tokens_from_list is deprecated, switch to a custom tokenizer when `is_tokenized` is requested. Input can be a string to be split on whitespace or a list of tokens. Works only for spaCy. Inspired by adrianeboyd https://github.com/explosion/spaCy/issues/5399#issuecomment-623593208"
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-05-03T15:39:12Z,style and quality
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-05-03T15:15:14Z,rename pipeline_opts to parser_opts
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-05-01T16:51:59Z,allow pipeline_opts and kwargs in init_parser
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-05-01T13:22:57Z,require keywords for less important kwargs
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-04-30T12:26:27Z,add kwargs
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-04-30T11:12:16Z,re-order arguments in init_nlp
github.com/BramVanroy/spacy_conll,spacy_conll/utils.py,2020-04-29T13:13:32Z,"restructure and improve entrypoint

- move ConllFormatter to separate file
- add utils and expose init_parser (might be useful for users)
- improve entrypoint usage"
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2024-01-13T02:59:55Z,"Settings: Settings - Part-of-speeach Tagging - Tagsets - Mapping Settings - Allow editing of tagset mapping of Stanza's Armenian (Eastern), Armenian (Western), Basque, Buryat (Russia), Danish, French, Greek (Modern), Hebrew (Modern), Hungarian, Ligurian, Manx, Marathi, Nigerian Pidgin, Pomak, Portuguese, Russian, Sanskrit, Sindhi, Sorbian (Upper), and Telugu part-of-speech taggers"
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2024-01-05T07:57:03Z,Misc: Update copyright year
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2024-01-02T12:47:42Z,Dependencies: Add VADER; Utils: Add VADER's sentiment analyzers
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-12-30T10:49:39Z,Dependencies: Upgrade Stanza to 1.7.0; Utils: Add Stanza's Sindhi part-of-speech tagger
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-10-02T14:14:35Z,Dependencies: Upgrade spaCy to 3.7.2; Utils: Fix downloading of Stanza models
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-09-27T10:45:09Z,Dependencies: Upgrade PyInstaller to 6.0
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-09-23T11:43:01Z,Utils: Update spaCy's sentencizer
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-09-10T09:30:26Z,Utils: Add Stanza's French (Old) lemmatizer
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-09-10T08:49:05Z,"Utils: Remove Stanza's Swedish Sign Language sentence tokenizer, word tokenizer, part-of-speech tagger, and dependency parser"
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-09-10T08:43:01Z,"Dependencies: Upgrade Stanza to 1.5.1; Utils: Add Stanza's Hebrew (Ancient), Kyrgyz, Manx, and Pomak sentence tokenizers / word tokenizers / part-of-speech taggers / lemmatizers / dependency parsers"
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-09-04T13:45:52Z,Utils: Add Stanza's sentiment analyzers
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-09-03T18:08:00Z,"Dependencies: Add Stanza; Utils: Add Stanza's sentence tokenizers, word tokenizers, part-of-speech taggers, lemmatizers, and dependency parsers"
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-08-17T17:46:36Z,Misc: Update translations
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-08-11T16:36:09Z,Dependencies: Add Dostoevsky; Settings: Add Settings - Sentiment Analysis; Utils: Add Dostoevsky's Russian sentiment analyzer
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-08-08T13:51:22Z,"Utils: Update spaCy's sentence recognizers, word tokenizers, part-of-speech taggers, lemmatizers, and dependency parsers"
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-07-23T06:44:18Z,"Utils: Add spaCy's Slovenian sentence recognizer, part-of-speech tagger, lemmatizer, and dependency parser"
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-07-22T17:31:56Z,"Utils: Add spaCy's Korean sentence recognizer, word tokenizer, part-of-speech tagger, lemmatizer, and dependency parser"
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-03-13T19:09:27Z,Dependencies: Add python-mecab-ko; Utils: Add python-mecab-ko's MeCab
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-02-10T13:24:56Z,Releases: Update packaging script
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-02-08T15:13:01Z,Dependencies: 1. Add pymorphy3 2. Remove pymorphy2
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-02-02T06:42:01Z,Settings: Update global settings - measures
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-01-30T16:05:14Z,Utils: Speed up n-gram/skip-gram generation
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2023-01-19T16:15:38Z,Misc: Update copyright year
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-10-30T15:50:33Z,Work Area: Add Dependency Parser
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-10-09T20:25:53Z,"Utils: Update spaCy's sentence tokenizers, word tokenizers, part-of-speech taggers, and lemmatizers"
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-10-06T19:35:05Z,Utils: Update spaCy's sentence recognizers
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-09-23T19:51:17Z,Releases: Update packaging script
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-09-20T19:50:34Z,Utils: Add spaCy's Ukrainian part-of-speech tagger and lemmatizer
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-09-04T13:36:51Z,Utils: Add spaCy's Finnish part-of-speech tagger and lemmatizer
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-09-03T18:31:20Z,Utils: Add spaCy's Croatian and Swedish part-of-speech taggers
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-09-03T14:08:35Z,Utils: 1. Add spaCy's Sorbian (Lower) word tokenizer and stop word list 2. Add spaCy's Sorbian (Upper) word tokenizer and stop word list
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-09-02T18:45:32Z,Utils: Add Pyphen's Catalan syllable tokenizer
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-08-25T16:55:28Z,Utils: Add NLTK's legality syllable tokenizer and sonority sequencing syllable tokenizer
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-08-25T09:29:24Z,Tests: Add CI - SonarCloud
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-08-23T08:58:22Z,Utils: Add NLTK's regular-expression tokenizer
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-08-22T10:35:55Z,Dependencies: 1. Add spacy-pkuseg 2. Remove pkuseg
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-08-21T14:09:14Z,Work Area: Add Profiler - Count of Sentence Segments / Paragraph Length in Sentence Segments / Sentence Segment Length in Tokens / Count of n-length Sentence Segments
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-08-11T20:10:54Z,Doc: Add README - Pylint badge
github.com/BLKSerene/Wordless,wordless/wl_nlp/wl_nlp_utils.py,2022-08-10T19:50:25Z,Tests: Relocate test files
github.com/stanford-oval/WikiChat,wikiextractor/split_passages.py,2023-12-06T03:19:45Z,Add code and instructions
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2022-04-30T07:16:44Z,WIP
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2022-01-22T21:11:59Z,"Various improvements, clients and clients docs."
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-11-19T17:33:01Z,"Updated pythondocs, clean up code"
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-09-12T18:30:33Z,Fix #130
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-06-26T08:44:58Z,Better stanza token conversion
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-06-26T08:37:19Z,Working AnnStanza.pipe
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-06-26T07:31:08Z,"Require newer Stanza, test for Stanza pipe"
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-03-19T07:52:03Z,Fix some code style issues
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-03-17T08:04:55Z,Address #69
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-02-19T17:58:08Z,Add support for space tokens.
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-02-19T17:28:43Z,Proper MWTs.
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-02-19T16:55:34Z,Better squeezing of multiword tokens
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2021-02-16T16:28:25Z,Better error handling in the executor
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-11-22T08:33:27Z,black reformatting
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-11-18T19:19:53Z,WIP
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-11-13T21:06:43Z,"Require min version for bs4.
Otherwise the suppression of the parser warning does not work."
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-10-17T11:21:32Z,Use pdoc3 for documentation.
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-10-14T20:16:50Z,WIP
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-10-14T19:01:58Z,WIP
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-08-20T12:07:12Z,"Fix stanza lib problem.
Oddly something seems to have changed in how stanza represents ids.
Apparently this was string before and is int now. Just to be safe,
we always convert to string for now."
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-08-19T13:26:37Z,A few more for the changed annset.add method.
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-08-19T09:35:27Z,More API changes.
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-08-18T17:50:26Z,"Re-implementation of Features, updated documentation."
github.com/GateNLP/python-gatenlp,gatenlp/lib_stanza.py,2020-04-29T17:16:07Z,Add support for Stanford Stanza
github.com/AlibabaResearch/DAMO-ConvAI,proton/preprocess/common_utils.py,2022-08-06T11:43:17Z,add: proton
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2022-02-06T11:04:17Z,Fixes #158
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2021-06-26T08:37:19Z,Working AnnStanza.pipe
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2021-06-26T07:31:08Z,"Require newer Stanza, test for Stanza pipe"
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2021-04-14T11:33:20Z,Stanza unit test: do not use GPU
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2021-04-14T11:26:38Z,"Improve unit tests.
Add basic test for GateWorker"
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2021-04-10T07:21:43Z,Cleanup code.
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2021-03-19T07:52:03Z,Fix some code style issues
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2021-02-06T17:27:45Z,"Add unit tests, fix bugs, regenerate PythonDoc."
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2021-01-30T13:14:19Z,And yet another!
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2021-01-30T13:11:41Z,And yet another
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2020-11-22T08:33:27Z,black reformatting
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2020-10-27T22:22:25Z,Avoid downloading the model if it is already there.
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2020-10-27T15:58:10Z,Try to make the test work on travis
github.com/GateNLP/python-gatenlp,tests/test_stanza.py,2020-10-27T14:01:19Z,"Fix bug in setup, remove stanfordnlp.
Add instead a test for stanza"
github.com/AlibabaResearch/DAMO-ConvAI,sunsql/preprocess/common_utils.py,2022-09-19T01:42:32Z,add: sunsql
github.com/XiangLi1999/Diffusion-LM,transformers/examples/pytorch/language-modeling/run_clm.py,2022-08-25T22:09:55Z,Update run_clm.py
github.com/XiangLi1999/Diffusion-LM,transformers/examples/pytorch/language-modeling/run_clm.py,2022-06-06T22:38:39Z,first commit
github.com/marian-nmt/marian-examples,forced-translation/scripts/lemmatize.py,2022-02-23T19:00:33Z,"Forced translation

* add forced-translation examples
* Update .gitignore
* Update README.md
* remove glossary tokenization
* add eval scripts
* Update EXPERIMENTS.md

    Added information regarding the two new testsets used for en-ro and
    en-nb, that contained a specific domained, annotated with a glossary
    with terms only specific to that domain to mimic better the Tilde's
    ATS testset and glossary, used for en-lv and en-de. Also added the
    human evaluation results for this two LPs.

* Add time estimations to run end-2-end pipeline

Co-authored-by: Pedro Coelho <pedro.coelho@unbabel.com>
Co-authored-by: Toms Bergmanis <tomsbergmanis@gmail.com>"
github.com/marian-nmt/marian-examples,forced-translation/scripts/eval_lemmatized_glossary.py,2022-02-23T19:00:33Z,"Forced translation

* add forced-translation examples
* Update .gitignore
* Update README.md
* remove glossary tokenization
* add eval scripts
* Update EXPERIMENTS.md

    Added information regarding the two new testsets used for en-ro and
    en-nb, that contained a specific domained, annotated with a glossary
    with terms only specific to that domain to mimic better the Tilde's
    ATS testset and glossary, used for en-lv and en-de. Also added the
    human evaluation results for this two LPs.

* Add time estimations to run end-2-end pipeline

Co-authored-by: Pedro Coelho <pedro.coelho@unbabel.com>
Co-authored-by: Toms Bergmanis <tomsbergmanis@gmail.com>"
github.com/marian-nmt/marian-examples,forced-translation/scripts/add_target_lemma_annotations.py,2022-02-23T19:00:33Z,"Forced translation

* add forced-translation examples
* Update .gitignore
* Update README.md
* remove glossary tokenization
* add eval scripts
* Update EXPERIMENTS.md

    Added information regarding the two new testsets used for en-ro and
    en-nb, that contained a specific domained, annotated with a glossary
    with terms only specific to that domain to mimic better the Tilde's
    ATS testset and glossary, used for en-lv and en-de. Also added the
    human evaluation results for this two LPs.

* Add time estimations to run end-2-end pipeline

Co-authored-by: Pedro Coelho <pedro.coelho@unbabel.com>
Co-authored-by: Toms Bergmanis <tomsbergmanis@gmail.com>"
github.com/dh-miami/narratives_covid19,scripts/topic_modelling/topic_modelling.py,2020-08-31T22:08:37Z,add NER and parallelization
github.com/dh-miami/narratives_covid19,scripts/topic_modelling/topic_modelling.py,2020-08-04T02:21:44Z,topic modelling update
github.com/rali-udem/jsRealB,demos/UDregenerator/text2ud.py,2022-10-29T20:17:57Z,text2ud: show progress during Stanza parsing
github.com/rali-udem/jsRealB,demos/UDregenerator/text2ud.py,2022-09-12T18:11:25Z,"Version 4.5 - Code reorganization

No new features but the implementation now use ""real"" JavaScript classes and modules.
- building relies on webpack which integrates JSON lexicons in the source. This simplifies greatly the integration process that previously used a series of scripts with a Makefile
- demos have been ported to this organization
- documentation has been updated
- source files now have jsdoc comments
- src/jsdoc is now available"
github.com/rali-udem/jsRealB,demos/UDregenerator/text2ud.py,2021-05-19T01:02:10Z,Add variationsFromText to UDgenerator
github.com/weixi-feng/Structured-Diffusion-Guidance,scripts/txt2img_demo.py,2022-12-09T19:40:58Z,first commit
github.com/rali-udem/jsRealB,demos/Bilinguo/makeBilinguoData.py,2023-06-03T19:29:14Z,"Many improvements to the Bilinguo demo

- improve generation from Python
- fixes to conjugation table number for some verbs in lexicon-en.json"
github.com/rali-udem/jsRealB,demos/Bilinguo/makeBilinguoData.py,2023-05-29T21:09:17Z,Bilinguo: add Python generator + README.md
github.com/rali-udem/jsRealB,demos/UDregenerator/text2ud-new.py,2023-05-17T20:58:21Z,add showTree for variationsFromText
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2023-05-10T10:53:55Z,Use the dict merge operation supported by 3.8
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2023-05-10T10:53:55Z,Fix potential bugs of `add_tokens`
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2023-05-10T10:53:55Z,Support vocab extension
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2023-05-10T10:53:55Z,Strip tokenized tokens in extended vocab
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2023-05-10T10:53:55Z,Consider added tokens as well
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-10-20T13:19:18Z,Add `tokens` property
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-10-05T12:56:26Z,Syntax sugars for dist training
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-09-27T12:22:06Z,Handle tok with `ByteLevel` pre_tokenizer properly
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-07-30T13:47:07Z,Try loading local transformers files first
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-07-30T13:47:07Z,Handle unk case for `TransformerTokenizer`
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-07-30T13:47:07Z,Skip special tokens and keep spaces while decoding
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-07-30T13:47:07Z,Fix potential bugs
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-07-30T13:47:07Z,Fix vocab bug within BPE decoding
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-07-30T13:47:07Z,Support subword-nmt backend
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-07-30T13:47:07Z,Provide `min_freq` for BPE Tokenizer
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-07-30T13:46:55Z,More usable BPE tokenizers
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-07-01T07:09:51Z,Specify word suffix for BPE Trainer
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-06-25T06:29:43Z,Wrapper for BPE Tokenizer
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-06-24T09:52:29Z,Syntactic sugar for Transformer tokenizers
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-04-01T05:39:07Z,Minor revisions
github.com/yzhangcs/parser,supar/utils/tokenizer.py,2022-04-01T05:39:07Z,Integrated tokenizer (#47)
github.com/jim-schwoebel/allie,features/text_features/helpers/blabla/blabla/document_processor.py,2020-12-03T03:04:48Z,"added allosaurus, surfboard, and blabla featurizers"
github.com/zhijing-jin/ARTS_TestSet,code/utils.py,2020-06-14T20:06:18Z,first commit
github.com/ServiceNow/duorat,duorat/utils/tokenization.py,2020-10-23T01:48:17Z,first commit
github.com/zzsfornlp/zmsp,msp2/scripts/wiki/raw2tok.py,2022-10-12T18:51:22Z,Updates
github.com/zzsfornlp/zmsp,mspx/tools/annotate/ann_stanza.py,2023-06-20T01:13:08Z,Add some more.
github.com/zzsfornlp/zmsp,msp2/tools/annotate/ann_stanza.py,2022-10-12T18:51:22Z,Updates
github.com/zzsfornlp/zmsp,msp2/tools/annotate/ann_stanza.py,2021-06-06T20:35:18Z,Update for srl_span with msp2.
github.com/zzsfornlp/zmsp,msp2/scripts/event/prep/s2_tokenize.py,2022-10-12T18:51:22Z,Updates
github.com/zzsfornlp/zmsp,msp2/tasks/zmtl3/mat/prep/brat2json.py,2022-10-12T18:51:22Z,Updates
github.com/zzsfornlp/zmsp,msp2/tasks/zmtl3/scripts/misc/query_gpt3.py,2022-10-12T18:51:22Z,Updates
github.com/zzsfornlp/zmsp,msp2/tasks/zmtl3/scripts/srl/sz_read_c09zhf.py,2022-10-12T18:51:22Z,Updates
github.com/zzsfornlp/zmsp,msp2/tasks/zmtl3/scripts/srl/sz_collect_onto.py,2022-10-12T18:51:22Z,Updates
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/word_generator.py,2020-05-17T04:13:56Z,"UD in word service, bug fixes"
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/word_generator.py,2020-05-12T09:00:07Z,Add word already exists warning
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/word_generator.py,2020-05-09T07:52:13Z,even better hail maries
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/word_generator.py,2020-05-09T07:36:44Z,Bug fixzzz
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/word_generator.py,2020-05-09T07:25:23Z,"Word generation: add a hail mary when failing, only do one pass"
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/word_generator.py,2020-05-08T23:29:03Z,"Webpack, website that queries backend"
github.com/turtlesoupy/this-word-does-not-exist,title_maker_pro/word_generator.py,2020-05-07T20:48:32Z,"Wire up basic word service, move word generator interface to own file"
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2023-09-25T04:56:14Z,for backslash-escape
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2023-09-24T13:36:07Z,revert
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2023-09-24T12:06:15Z,https://github.com/KoichiYasuoka/UniDic2UD/issues/2
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2023-04-17T15:55:15Z,近現代口語小説UniDic
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2023-04-17T14:54:13Z,cwj-3.1.1 and csj-3.1.1
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2022-04-24T13:52:06Z,use UniDic-202203
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2022-04-24T10:33:27Z,ChamameWebAPI changed
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2022-04-15T14:55:30Z,URL update
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2021-11-07T04:59:15Z,URL changed
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2021-04-04T00:59:04Z,force download UniDic
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2021-04-03T06:37:59Z,gendai and spoken URLs changed
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2021-03-06T14:27:15Z,bug fix
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2021-02-21T08:58:06Z,Chamame moved to chamame.ninjal.ac.jp
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2021-02-20T14:05:29Z,Stanza==1.2 support
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2021-02-04T03:48:40Z,unidic-lite support
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2021-02-01T15:12:07Z,progressbar outputs sys.stderr
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2021-01-25T05:03:26Z,flush=True
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2021-01-23T13:54:49Z,AUX improved
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-12-28T03:38:53Z,ipadic support
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-11-23T10:20:15Z,bug fix
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-09-21T06:35:26Z,bug fix
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-09-19T05:06:35Z,use deplacy.PACKAGE_DIR
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-08-12T12:49:54Z,形容詞-非自立可能 improved
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-08-12T08:46:24Z,動詞-非自立可能 improved
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-07-29T05:32:35Z,stanza_ja support
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-07-25T15:59:49Z,名詞-助動詞語幹 support
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-07-08T05:39:49Z,unidic2ud.deprelja -> deplacy.deprelja
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-07-07T12:58:46Z,mecab-python3 1.0 support
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-07-02T01:46:35Z,to_tree(CatenaAnalysis) support
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-06-25T03:09:00Z,to_tree() uses deplacy
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-04-12T06:47:16Z,progress bar improved
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-03-31T04:30:21Z,to_tree() changed into BOX DRAWINGS DOUBLE
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-03-26T01:18:01Z,version 2.0.0
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-03-26T01:09:31Z,version 1.9.9
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-03-21T01:14:07Z,version 1.9.8
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-03-20T16:18:43Z,version 1.9.7
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-02-10T06:13:01Z,version 1.9.3
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-02-09T07:13:24Z,version 1.9.2
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-02-08T13:12:18Z,version 1.9.0
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-02-08T05:50:13Z,version 1.8.9
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-01-17T05:20:21Z,version 1.8.5
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-01-14T16:43:47Z,ipadic deleted from distribution
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-01-14T15:15:03Z,japanese-modern supported
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-01-13T06:39:34Z,unidic-csj-3.0.1 supported
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2020-01-03T00:42:30Z,version 1.7.6
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-12-29T01:48:04Z,version 1.7.3
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-12-27T08:44:07Z,version 1.6.8
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-12-27T06:35:22Z,fugashi.GenericTagger supported
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-12-26T14:15:50Z,version 1.6.6
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-12-20T10:32:53Z,version 1.6.2
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-12-18T07:40:06Z,version 1.5.9
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-12-14T23:51:39Z,version 1.5.8
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-12-10T06:46:38Z,version 1.5.3
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-11-22T05:42:52Z,to_tree(Japanese) supported
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-11-21T14:31:08Z,version 1.4.7
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-11-14T02:32:09Z,to_tree() released
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-11-13T03:00:10Z,濁点/半濁点 process
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-11-10T14:47:36Z,PUNCT for ipadic
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-10-20T03:42:30Z,dictlist supported
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-09-15T07:00:41Z,version 1.1.4
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-09-15T06:38:16Z,to_svg(item) enhanced
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-09-14T23:20:56Z,to_svg() supported
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-31T23:12:40Z,bug fix for フィラー of ipadic
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-31T23:00:16Z,bug fix for Translit
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-31T22:38:28Z,bug fix for U+3000
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-29T04:18:55Z,unidic2ud.spacy supported
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-28T08:39:07Z,version 0.9.8 raw option supported
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-27T09:39:00Z,index for UDPipeEntry supported
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-27T05:49:26Z,"bug fix for Translit of ""spoken"""
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-27T05:06:43Z,"bug fix for Translit of ""gendai"""
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-27T04:50:26Z,"bug fix for ""gendai"""
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-27T02:20:01Z,UDPipe models renamed
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-27T01:56:01Z,bug fix
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-26T22:22:32Z,UniDic=None as default
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-26T16:10:59Z,bug fix
github.com/KoichiYasuoka/UniDic2UD,unidic2ud/unidic2ud.py,2019-08-26T15:45:01Z,initial release
github.com/zhjohnchan/PTUnifier,ptunifier/metrics/jb_scorers/RadEntityMatchExact/RadEntityMatchExact.py,2023-08-10T06:54:38Z,init
github.com/primeqa/primeqa,primeqa/qg/models/hybrid_qg/path_sampler.py,2023-01-17T09:26:50Z,adding more comments and documentation
github.com/primeqa/primeqa,primeqa/qg/models/hybrid_qg/path_sampler.py,2022-09-26T08:40:56Z,adding a new dir for path sampling scripts
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2022-10-18T14:04:19Z,remove flair modules
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2022-10-17T20:05:39Z,README
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2022-10-06T20:35:23Z,fixes for keeping \n in text
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2022-09-30T17:12:48Z,add binyan lookup for any VERB without binyan prediction
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2022-09-10T02:39:05Z,"Merge branch 'dev'

sync"
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2022-09-08T05:11:05Z,bugfix
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2022-09-08T05:02:50Z,fix formatting indentation
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2022-09-08T04:45:36Z,integrated with the pipeline
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2022-08-24T17:43:04Z,update models URL
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2022-08-19T05:32:46Z,mtl with feats
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2022-08-16T18:02:56Z,integrated feats
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2022-08-15T18:24:17Z,feats
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2022-08-08T15:42:15Z,sbd plus pos. branching
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2022-08-03T19:04:06Z,bugfix
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2022-08-03T18:28:13Z,final results; integration pending
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2022-07-28T20:58:53Z,v1 pipeline
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2021-09-03T18:44:24Z,support Windows cp1255 Hebrew encoding
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2021-09-03T18:43:31Z,binyan postprocessing
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2021-07-29T20:02:06Z,add neural morphology+lemmatization
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2021-07-12T13:51:03Z,add neural POS tagger
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2021-06-14T14:46:53Z,"hardwire unicode punctuation
  * some punctuation glyphs are not found in training data
  * hardwire tagging as punctuation"
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2021-06-14T14:41:18Z,manage GPU memory for large single files
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2021-06-14T14:37:15Z,"add `--from_pipes` option
  * Allows input from text file with already segmented subwords
  * Useful for segmenting data first, then manually correcting segmentation, then continuing with rest of NLP"
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2021-05-26T17:43:33Z,add neural sentence splitter
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2021-05-26T17:41:17Z,add python neural parser
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2021-05-26T17:39:46Z,add plain text preservation
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2020-05-26T16:26:21Z,Allow relative import
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2020-05-26T16:18:31Z,Make module
github.com/amir-zeldes/HebPipe,hebpipe/heb_pipe.py,2020-05-26T15:55:08Z,restructure for pypi
github.com/hoochanlon/scripts,d-python/get_resou_today_s.py,2023-06-22T09:26:12Z,yes
github.com/hoochanlon/scripts,d-python/get_resou_today_s.py,2023-05-14T14:49:00Z,Update get_resou_today_s.py
github.com/hoochanlon/scripts,d-python/get_resou_today_s.py,2023-05-14T11:45:45Z,Update get_resou_today_s.py
github.com/hoochanlon/scripts,d-python/get_resou_today_s.py,2023-05-14T07:53:57Z,Add files via upload
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-10-06T12:41:49Z,"Rework data loading and processing design

This change separates data loading from processing so that any dataset
in the appropriate format can be used for generating questions and to
allow for simple extension to other modalities.

 - There are now separate processors depending on the modality.

 - Also, the tests have been updated accordingly."
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-07-29T17:56:41Z,include id for passage qg
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-07-06T15:07:45Z,Updated inference notebook for PassageQG
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-07-05T07:09:29Z,PassageQG can  take answers as input
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-07-01T11:40:25Z,Merge branch 'passageqg' into tableqg
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-07-01T08:52:39Z,Stanza added to setup.py
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-06-30T18:47:05Z,minor changes from code review suggestions-2
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-06-30T14:10:22Z,"Answer sampler uses NERs  from Stanza: en, ru, ar, fi"
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-06-29T10:44:31Z,Inference notebooks for TableQG and TyDi
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-06-26T21:41:12Z,PassageQG inference works. en_core_web_sm downloades with setup
github.com/primeqa/primeqa,primeqa/qg/models/passage_qg/answer_sampler.py,2022-06-26T20:51:20Z,inference for passage QG
github.com/nipunsadvilkar/pySBD,benchmarks/genia_benchmark.py,2020-07-19T17:25:34Z,⚡️  Benchmarks scripts - genia & bigtext file
github.com/nipunsadvilkar/pySBD,benchmarks/genia_benchmark.py,2020-07-12T17:58:12Z,"use format, delete other scripts"
github.com/nipunsadvilkar/pySBD,benchmarks/genia_benchmark.py,2020-07-11T21:59:57Z,my benchmarks
github.com/openredact/nerwhal,nerwhal/nlp_utils.py,2020-08-18T15:39:02Z,Add and improve PyDocs
github.com/openredact/nerwhal,nerwhal/nlp_utils.py,2020-08-17T14:22:47Z,Fix caught error
github.com/openredact/nerwhal,nerwhal/nlp_utils.py,2020-07-31T06:37:48Z,Catch Exception instead of FileNotFoundError
github.com/openredact/nerwhal,nerwhal/nlp_utils.py,2020-07-31T05:30:00Z,Clean tokenizer and nlp interfaces
github.com/openredact/nerwhal,nerwhal/nlp_utils.py,2020-07-30T17:05:26Z,Use context words to boost score
github.com/openredact/nerwhal,nerwhal/nlp_utils.py,2020-07-29T13:58:20Z,Use spaCy tokenizer because stanza's mwts alter the original text
github.com/openredact/nerwhal,nerwhal/nlp_utils.py,2020-07-28T15:37:51Z,Refactor and fix bugs WIP
github.com/consuldemocracy/consuldemocracy,public/machine_learning/scripts/budgets_related_content_and_tags_nmf.py,2022-11-11T00:40:04Z,"Use a different machine learning folder per tenant

We're using the ""tenants"" subfolder for consistency with the folder
structure we use in ActiveStorage and because some CONSUL installations
might have folders inside the `data` folder which might conflict with
the folders created by tenants.

Note that the Python scripts have a lot of duplication, meaning we need
to change all of them. I'm not refactoring them because I'm not familiar
enough with these scripts (or with Python, for that matter).

Also note that the scripts folder is still shared by all tenants,
meaning it isn't possible to have different scripts for different
tenants. I'm not sure how this situation should be handled; again, I'm
not familiar enough with this feature."
github.com/consuldemocracy/consuldemocracy,public/machine_learning/scripts/budgets_related_content_and_tags_nmf.py,2021-09-07T16:18:47Z,Update machine learning scripts with NNMF and TextRank-GloVe techniques
github.com/consuldemocracy/consuldemocracy,public/machine_learning/scripts/budgets_related_content_and_tags_nmf.py,2021-08-16T14:31:04Z,Add experimental machine learning
github.com/consuldemocracy/consuldemocracy,public/machine_learning/scripts/proposals_related_content_and_tags_nmf.py,2022-11-11T00:40:04Z,"Use a different machine learning folder per tenant

We're using the ""tenants"" subfolder for consistency with the folder
structure we use in ActiveStorage and because some CONSUL installations
might have folders inside the `data` folder which might conflict with
the folders created by tenants.

Note that the Python scripts have a lot of duplication, meaning we need
to change all of them. I'm not refactoring them because I'm not familiar
enough with these scripts (or with Python, for that matter).

Also note that the scripts folder is still shared by all tenants,
meaning it isn't possible to have different scripts for different
tenants. I'm not sure how this situation should be handled; again, I'm
not familiar enough with this feature."
github.com/consuldemocracy/consuldemocracy,public/machine_learning/scripts/proposals_related_content_and_tags_nmf.py,2021-09-07T16:18:47Z,Update machine learning scripts with NNMF and TextRank-GloVe techniques
github.com/consuldemocracy/consuldemocracy,public/machine_learning/scripts/proposals_related_content_and_tags_nmf.py,2021-08-16T14:31:04Z,Add experimental machine learning
github.com/deeppavlov/dream,annotators/bot_emotion_classifier/server.py,2023-11-16T08:59:51Z,"Dream emotion dist (#568)

* add dream_emotion dist with annotators

* add component cards

* fix codestyle flake8

* fix codestyle

* another codestyle fix

* PR fixes

* fixed batches

* move preprocessing to annotator

* fix codestyle black

* minor fixes

* removed unnecessary api_configs

* changed type of annotator to bot utts annotator

* fixed component file

* fixed service.yml files

* fixed formatters

* fixed emotional response server and dist files

* moved prompt into separate file

* fixed annotators

* fixed annotators again

* fixed emotion response selector

* fixed emotion dist and components

* fixed codestyle

* fixed codestyle again

* fixed codestyle black

* fixed naming of emotion response selector

* fixed emotional_bot_response component

* fixed emotion response selector server

* added prev_services in annotator in pipeline_conf

* fixed result formatting of bot_emo_cls

* fixed codestyle

* fixed codestyle again

* changed description of emo_bot_response

* added necessary component cards

* fix: timeout

* fix: timeout

---------

Co-authored-by: Dilyara Zharikova (Baymurzina) <dilyara.rimovna@gmail.com>"
github.com/rstodden/TS_annotation_tool,data/models.py,2023-08-11T11:51:46Z,pre-aligned pair upload: upload one pair per annotator
github.com/rstodden/TS_annotation_tool,data/models.py,2023-08-11T11:07:43Z,fix bug uploading pre-aligned & pre-split n:m pairs
github.com/rstodden/TS_annotation_tool,data/models.py,2023-08-11T10:57:08Z,fix bug error annotation
github.com/rstodden/TS_annotation_tool,data/models.py,2022-11-17T14:39:11Z,align documents with different simplified versions (references) and export them
github.com/rstodden/TS_annotation_tool,data/models.py,2022-10-06T12:30:04Z,"bug fix: counting sentence ids of pre-split data

addressing #1"
github.com/rstodden/TS_annotation_tool,data/models.py,2022-05-16T10:01:42Z,bugfixes
github.com/rstodden/TS_annotation_tool,data/models.py,2022-04-14T12:02:50Z,update webcrawling
github.com/rstodden/TS_annotation_tool,data/models.py,2022-04-05T14:13:21Z,bug fixing
github.com/rstodden/TS_annotation_tool,data/models.py,2022-03-07T16:57:02Z,downgrade to spacy 2.3.7 (from 3.2.0) II
github.com/rstodden/TS_annotation_tool,data/models.py,2022-03-07T16:40:43Z,downgrade to spacy 2.3.7 (from 3.2.0)
github.com/rstodden/TS_annotation_tool,data/models.py,2022-03-05T13:16:11Z,"""show most similar sentence""-button for alignment support"
github.com/rstodden/TS_annotation_tool,data/models.py,2022-03-03T17:55:29Z,remove add_par_nr
github.com/rstodden/TS_annotation_tool,data/models.py,2022-03-03T17:53:33Z,uncomment add_par_nr
github.com/rstodden/TS_annotation_tool,data/models.py,2022-01-18T14:05:40Z,export document level (aligned and not-aligned)
github.com/rstodden/TS_annotation_tool,data/models.py,2022-01-14T15:58:19Z,add right-to-left reading support
github.com/rstodden/TS_annotation_tool,data/models.py,2021-12-30T17:38:13Z,improvement of export functions
github.com/rstodden/TS_annotation_tool,data/models.py,2021-12-30T12:45:28Z,"huge update including user fields, local and web import, IAA alignment, config files annotation, web scraping"
github.com/rstodden/TS_annotation_tool,data/models.py,2021-04-16T13:04:41Z,manual simplification module
github.com/rstodden/TS_annotation_tool,data/models.py,2021-04-07T17:59:33Z,add data with copyright threshold
github.com/rstodden/TS_annotation_tool,data/models.py,2021-04-07T12:35:50Z,add overview of all corpora and overview per corpus
github.com/rstodden/TS_annotation_tool,data/models.py,2021-04-06T18:12:10Z,remove django-language
github.com/rstodden/TS_annotation_tool,data/models.py,2021-04-06T10:39:54Z,add pre aligned data
github.com/rstodden/TS_annotation_tool,data/models.py,2021-03-01T14:34:40Z,import title in file header
github.com/rstodden/TS_annotation_tool,data/models.py,2021-03-01T11:02:55Z,fix reading file ending
github.com/rstodden/TS_annotation_tool,data/models.py,2021-02-25T17:34:33Z,visibiliy changes
github.com/rstodden/TS_annotation_tool,data/models.py,2021-02-04T14:07:53Z,add possible to align button
github.com/rstodden/TS_annotation_tool,data/models.py,2021-02-04T13:33:02Z,report malformed sentence
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-22T14:18:42Z,disable stanza download
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-22T13:36:26Z,"new url structure, prev and next button, better HTML structure, change_log"
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-15T13:49:38Z,add downloading stanza model
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-15T13:39:41Z,change spacy to stanza
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-15T12:15:51Z,automatic transformations in evaluation added
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-13T14:20:25Z,code clean up (new model structure) Part II
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-12T19:53:51Z,code clean up (new model structure) Part I
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-12T11:25:01Z,document table overview
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-08T15:57:05Z,upload parallel documents without sentence alignment
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-07T15:19:02Z,save and edit alignments
github.com/rstodden/TS_annotation_tool,data/models.py,2021-01-05T20:19:30Z,separate transformations and rating
github.com/rstodden/TS_annotation_tool,data/models.py,2020-10-09T08:37:39Z,overview of alignment and rating
github.com/rstodden/TS_annotation_tool,data/models.py,2020-10-07T15:42:36Z,alignment changing and rating
github.com/rstodden/TS_annotation_tool,data/models.py,2020-10-02T17:30:49Z,option to upload records
github.com/rstodden/TS_annotation_tool,data/models.py,2020-09-30T15:49:20Z,added app per task
github.com/nipunsadvilkar/pySBD,benchmarks/benchmark_sbd_tools.py,2020-07-19T17:25:34Z,⚡️  Benchmarks scripts - genia & bigtext file
github.com/AlibabaResearch/DAMO-ConvAI,star/LGESQL/cosql/preprocess/common_utils.py,2022-11-14T06:09:25Z,add: star
github.com/AlibabaResearch/DAMO-ConvAI,star/LGESQL/sparc/preprocess/common_utils.py,2022-11-14T06:09:25Z,add: star
github.com/nipunsadvilkar/pySBD,benchmarks/bigtext_speed_benchmark.py,2020-07-19T17:25:34Z,⚡️  Benchmarks scripts - genia & bigtext file
github.com/AlibabaResearch/DAMO-ConvAI,graphix/data_all_in/preprocess/common_utils.py,2023-06-05T01:35:55Z,update: graphix
github.com/primeqa/primeqa,primeqa/qg/processors/hybrid_qg/hybridqa_processor.py,2023-01-20T09:06:48Z,fixed wrong indendation
github.com/primeqa/primeqa,primeqa/qg/processors/hybrid_qg/hybridqa_processor.py,2023-01-17T09:26:50Z,adding more comments and documentation
github.com/primeqa/primeqa,primeqa/qg/processors/hybrid_qg/hybridqa_processor.py,2022-10-20T06:01:12Z,Resolved conflicts
github.com/primeqa/primeqa,primeqa/qg/processors/hybrid_qg/hybridqa_processor.py,2022-09-26T08:33:14Z,Adding data processing script for hybridqg training.
github.com/honghanhh/ner-combining-contextual-and-global-features,enconll03_baselines/conll_stanza.py,2020-05-06T15:31:08Z,"double check stanza, flair and evaluate results"
github.com/honghanhh/ner-combining-contextual-and-global-features,enconll03_baselines/conll_stanza.py,2020-04-25T17:43:47Z,Evaluate Flair/Stanza on eng.test.2.examples.txt
github.com/honghanhh/ner-combining-contextual-and-global-features,enconll03_baselines/conll_stanza.py,2020-04-24T16:04:19Z,Update working status and stanza
github.com/honghanhh/ner-combining-contextual-and-global-features,enconll03_baselines/conll_stanza.py,2020-04-24T16:02:29Z,"Test with stanza, reconfig downloaded model to fix error"
github.com/honghanhh/ner-combining-contextual-and-global-features,enconll03_baselines/conll_stanza.py,2020-04-24T14:38:06Z,"Test with flair embeddings, error pipeline in stanza"
github.com/honghanhh/ner-combining-contextual-and-global-features,enconll03_baselines/conll_stanza.py,2020-04-20T08:08:20Z,Update task 3 and baseline code using stanza and flair
github.com/mudabek/encoding-cxr-report-gen,ner_reports.py,2022-11-24T13:17:45Z,full
github.com/ncbi/GNorm2,GeneNER_SpeAss_run.py,2023-01-31T01:02:11Z,Add files via upload
github.com/ncbi/GNorm2,src_python/GeneNER/BIO_format.py,2023-09-05T22:16:40Z,Add files via upload
github.com/ncbi/GNorm2,src_python/SpeAss/SA_Pubtator_Conll.py,2023-09-05T22:16:40Z,Add files via upload
github.com/gregorycrane/Homerica,stanza-greek.py,2021-09-28T15:16:18Z,base workflow
github.com/AlibabaResearch/DAMO-ConvAI,graphix/data_all_in/preprocess/common_utils_proton.py,2023-06-05T01:35:55Z,update: graphix
github.com/hltcoe/patapsco,patapsco/text.py,2022-12-19T21:04:18Z,fixes issues caused by pymorphy and unnamed unicode characters
github.com/hltcoe/patapsco,patapsco/text.py,2022-05-25T18:12:12Z,fixed pep8 issues
github.com/hltcoe/patapsco,patapsco/text.py,2021-11-03T22:52:24Z,changed stanza chinese processing to use neural model
github.com/hltcoe/patapsco,patapsco/text.py,2021-11-03T22:38:06Z,finished jieba integration
github.com/hltcoe/patapsco,patapsco/text.py,2021-11-03T12:33:51Z,standalone jieba tokenizer
github.com/hltcoe/patapsco,patapsco/text.py,2021-10-19T20:55:32Z,temporarily adds jieba back through stanza - stanza model loading and downloading needs work
github.com/hltcoe/patapsco,patapsco/text.py,2021-10-18T18:14:14Z,Fixes #2 removes hard coded locations for models
github.com/hltcoe/patapsco,patapsco/text.py,2021-10-18T18:04:54Z,update text processing to remove dependencies on install locations
github.com/hltcoe/patapsco,patapsco/text.py,2021-07-20T13:18:26Z,using named arguments
github.com/hltcoe/patapsco,patapsco/text.py,2021-07-11T12:59:14Z,adds updated parsivar dependency for Farsi stemming
github.com/hltcoe/patapsco,patapsco/text.py,2021-07-09T00:00:02Z,adds farsi stemmer
github.com/hltcoe/patapsco,patapsco/text.py,2021-06-29T17:50:09Z,catches recursion error in porter stemmer and passes the token through unchanged
github.com/hltcoe/patapsco,patapsco/text.py,2021-06-23T18:17:25Z,cleaned up lowercase normalization
github.com/hltcoe/patapsco,patapsco/text.py,2021-06-09T21:59:24Z,limit stanza to a single thread for now
github.com/hltcoe/patapsco,patapsco/text.py,2021-06-09T21:09:27Z,stanza also needs to the package turned off when using jieba to prevent it from loading the kitchen sink
github.com/hltcoe/patapsco,patapsco/text.py,2021-06-08T19:24:48Z,only download resources when not already there for stanza
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-28T14:26:40Z,"Merge branch 'load_psq_table' into 'master'

Handles loading PSQ translation tables

See merge request research/scale2021!124"
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-28T12:44:30Z,can use ~ in model path
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-28T11:54:24Z,fixed error message that had old config path
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-27T23:30:26Z,put most of the infrastructure in place to generate PSQs
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-27T19:48:38Z,adds pre and post functions for normalization
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-25T20:20:04Z,delay loading nlp models until the pipeline begins
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-25T20:16:05Z,cleaned up inheritance for text processing
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-24T22:16:42Z,only load some nlp libraries when needed
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-22T19:31:53Z,Fixes #101 stop words works with stemming now
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-22T18:07:08Z,removed multiplex support from patapsco
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-22T15:49:29Z,switch to ISO 639-3
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-22T14:40:10Z,better construction of tokenizers and stemmers
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-22T13:08:46Z,porter stemming shouldn't also lowercase the stems
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-21T20:21:12Z,first part of porter stemmer implementation
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-21T19:33:09Z,improve configuration of text processing including model path
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-21T18:56:50Z,removed a debugging statement
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-20T12:29:47Z,adds stemming for spaCy
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-20T11:26:31Z,adds tests for stanza lemmatization and fixes issue with Arabic
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-19T22:52:47Z,restructure how tokenizers are built
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-19T20:25:38Z,"Merge branch 'master' into 'normalize_text'

# Conflicts:
#   infrastructure/pipeline/environment.yml
#   infrastructure/pipeline/patapsco/text.py
#   infrastructure/pipeline/setup.py"
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-19T14:58:49Z,adds character ngrams
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-19T13:13:25Z,adds moses tokenizer
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-18T13:10:57Z,correctly using model name or path to model directory in loader
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-18T12:36:57Z,fixed style issue and set spacy version
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-18T12:35:02Z,update model locations
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-18T12:16:03Z,updated spacy code and tests
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-18T11:35:06Z,adds spacy tokenization
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-15T23:23:46Z,switch to our own normalization code
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-11T00:21:16Z,fixed typo on stanza location on grid
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-10T22:59:41Z,the model path for stanza can be set now
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-04T13:00:11Z,"Merge branch 'master' into 'add_stanza'

# Conflicts:
#   infrastructure/pipeline/patapsco/text.py"
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-04T12:53:19Z,adds chinese tokenization using jieba
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-04T12:00:10Z,better logging for stanza
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-04T11:34:16Z,fixes spelling mistake
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-04T11:29:53Z,added StanzaTokenizer for english
github.com/hltcoe/patapsco,patapsco/text.py,2021-05-04T11:08:15Z,Refs #9 integrates scriptnorm
github.com/hltcoe/patapsco,patapsco/text.py,2021-04-24T16:05:51Z,better name for mock stemmer
github.com/hltcoe/patapsco,patapsco/text.py,2021-04-24T15:45:54Z,moved config schema into a single file
github.com/hltcoe/patapsco,patapsco/text.py,2021-04-23T18:03:56Z,better validation of config with unit tests for building the pipelines
github.com/hltcoe/patapsco,patapsco/text.py,2021-04-23T13:55:30Z,standardizes text processing config
github.com/hltcoe/patapsco,patapsco/text.py,2021-04-20T12:50:19Z,fixed bug with a single split
github.com/hltcoe/patapsco,patapsco/text.py,2021-04-19T20:35:27Z,adds splitter for text processing
github.com/hltcoe/patapsco,patapsco/text.py,2021-04-19T19:26:27Z,adds stop words
github.com/hltcoe/patapsco,patapsco/text.py,2021-04-16T22:52:22Z,renamed the pipeline package to patapsco
github.com/smartcontractsyn/iSyn,ContractToSmartContract-python/rule_based_extraction.py,2022-01-20T13:34:12Z,Init artifact repo
github.com/huggingface/api-inference-community,docker_images/stanza/app/pipelines/token_classification.py,2023-04-19T12:57:59Z,"[Diffusers] Add text-guided image to image (#223)

* [Diffusers] Add image to image

* fix some stuff

* make style

* make style

* Update docker_images/diffusers/app/pipelines/image_to_image.py

Co-authored-by: Nicolas Patry <patry.nicolas@protonmail.com>

* Fixing diffusers.

* Apply suggestions from code review

Co-authored-by: Omar Sanseviero <osanseviero@gmail.com>

* Apply suggestions from code review

* up

* make style

* Apply suggestions from code review

* finalize

---------

Co-authored-by: Nicolas Patry <patry.nicolas@protonmail.com>
Co-authored-by: Omar Sanseviero <osanseviero@gmail.com>"
github.com/huggingface/api-inference-community,docker_images/stanza/app/pipelines/token_classification.py,2022-03-16T10:53:41Z,MNT move api-inference-community to root of the repo
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-20T22:29:11Z,fixes and readme updated
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-15T18:05:11Z,working on web app
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-13T16:15:06Z,mtree fixes
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-13T14:52:21Z,fix
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-13T14:43:32Z,fix stanza bug
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-13T12:48:50Z,stanza edits
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-13T12:48:21Z,fix
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-11T03:48:52Z,major text obj improvements
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-10T21:08:22Z,updates
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-09T17:13:55Z,updates
github.com/quadrismegistus/cadence,cadence/parsers/stanzanlp.py,2022-01-08T22:42:37Z,updates
github.com/alexandrainst/danlp,examples/benchmarks/pos_benchmarks.py,2021-09-29T11:39:16Z,"Fixing errors for the documentation page (Tasks, Datasets, Frameworks) (#139)

* Fix Windows compatibility error

* Fix Windows compatibility error 2

* added test script to gitignore

* Accidentally pushed local test artifacts.

* Fix Windows compatibility error 3

* Removed a parentheses

* Fix windows Compatibility error 4

* Updated comments and changed input string

* Updated another comment

* Removed unexpected key word arguments

* example sentences for Frameworks flair 'Your dataset'

* Fixed typo and updated documentation to fit with flair 0.8

* Now includes line to download the required stanza model

* Avoiding division by zero

* added comment that describes how to run the dacy benchmark functions

* removed relative import, which doesn't work for Windows and Mac

* Updated version of pyicu

* Updated print on how to download and where to place model

* added line that downloads needed resources

* compatibility with flair 0.8

* Windows compatibility

* reverting gitignore

* fix pycache ignore

* compatibility with flair 0.8

* coherence between model_path and output

* coherence between model_path and output

* removed relative import

* Revert changed version of PyICU

* Fixed comments

Co-authored-by: Oliver Kinch <oliver@alex5925.local>"
github.com/alexandrainst/danlp,examples/benchmarks/pos_benchmarks.py,2021-04-20T09:31:13Z,"Add Stanza benchmark (#128)

* Add stanza benchmarking

* Update benchmark requirements

* Add documentation"
github.com/alexandrainst/danlp,examples/benchmarks/pos_benchmarks.py,2021-04-07T14:23:11Z,"adding dacy to danlp (#118)

* adding dacy to danlp

* rem test and fixed req

* updated ner

* updated pos

* added dep

* added dacy benchmark to main as a comment

* removed dacy small from NER

* added version to DaCy models

Co-authored-by: KennethEnevoldsen <kennethcenevolsen@gmail.com>"
github.com/alexandrainst/danlp,examples/benchmarks/pos_benchmarks.py,2021-02-05T14:08:41Z,Add NER benchmark evaluation with NERDA
github.com/alexandrainst/danlp,examples/benchmarks/pos_benchmarks.py,2020-10-18T15:28:25Z,Fix import error in benchmarks
github.com/alexandrainst/danlp,examples/benchmarks/pos_benchmarks.py,2020-10-15T13:58:54Z,Move metrics to benchmark utils
github.com/alexandrainst/danlp,examples/benchmarks/pos_benchmarks.py,2020-10-14T15:30:44Z,Add printing of speed (sentences per second) to benchmarks (utils)
github.com/alexandrainst/danlp,examples/benchmarks/pos_benchmarks.py,2020-10-13T12:25:39Z,update use of metrics in benchmarks
github.com/alexandrainst/danlp,examples/benchmarks/pos_benchmarks.py,2020-09-09T14:11:02Z,"fixing the calculation of scores for POS-tagging
* accuracy instead of F1
* corrected output for the polyglot model"
github.com/alexandrainst/danlp,examples/benchmarks/pos_benchmarks.py,2020-03-31T09:25:58Z,"Update pos with benchmark and docs

 Fix #26 and update function name in loading flair pos tagger"
github.com/gazelle93/Transformer-Various-Positional-Encoding,text_processing.py,2022-05-27T19:39:47Z,Create text_processing.py
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/coreference/v1/utilities.py,2023-04-03T09:36:57Z,Fixed initialize_coreference_components: added possibility to specify resources_root_dir
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/coreference/v1/utilities.py,2023-03-30T15:12:28Z,Added EstonianCoreferenceSystem (v1.0.0) to estnltk_neural
github.com/explosion/spacy-stanza,tests/test_language.py,2022-05-27T14:12:39Z,Extend to stanza v1.4
github.com/explosion/spacy-stanza,tests/test_language.py,2021-11-09T09:18:13Z,"Fallback to upos instead of to feats (#77)

* fallback to upos instead of to feats

* Use test data from UD train set

* more future-proof test for Spanish

* delete comment

* make black"
github.com/explosion/spacy-stanza,tests/test_language.py,2021-11-09T08:50:11Z,"Updates for stanza v1.3.0, set version to v1.0.1 (#79)

* Extend to stanza v1.3.x

* Set version to v1.0.1

* Update tests for more recent models"
github.com/explosion/spacy-stanza,tests/test_language.py,2021-03-02T13:10:15Z,Fix trailing whitespace token handling (#64)
github.com/explosion/spacy-stanza,tests/test_language.py,2021-03-02T09:01:16Z,"Refactor for spaCy v3.0 (#58)

* Refactor for spaCy v3.0

* Implement the stanza processing as a custom registered tokenizer
`spacy_stanza.PipelineAsTokenizer.v1`
  * Include all `stanza.Pipeline` settings in the tokenizer config block
  * Move the custom user hooks into the tokenizer processing

* Add the helper method `spacy_stanza.blank()` for pipeline
initialization, which sets up the custom tokenizer in the config and
passes the config on to `spacy.blank()`

* Update README

* Update README [ci skip]

* Simplify config setup

* Clean up and reformat

* Use plain pip install in README

* Fix dir Pipeline arg

* Add test that loads directly from a minimal config

* Support kwargs directly in pipeline init method

Support passing kwargs directly from pipeline init method rather than
requiring them to be set in `[nlp.tokenizer.kwargs]`.

* Follow Pipeline API instead of spacy.blank API

Rename `spacy_stanza.blank` to `spacy_stanza.load_pipeline`.

* Set version to 1.0.0 and update contact in setup"
github.com/explosion/spacy-stanza,tests/test_language.py,2021-02-03T15:50:16Z,"Update for spacy v3 (#55)

* Update for spacy v3.0.0

* Update requirements in requirements.txt

* Sync requirements.txt and setup.py

* Update for spacy v3.0 and stanza v1.2"
github.com/explosion/spacy-stanza,tests/test_language.py,2020-09-02T11:10:11Z,"Fix alignment for spacy tokenizer (#44)

Fix the alignment when spacy is used as the tokenizer and may return
whitespace tokens."
github.com/explosion/spacy-stanza,tests/test_language.py,2020-06-26T08:38:04Z,"Rewrite alignment to preserve whitespace tokens (#41)

Rewrite the alignment algorithm to create the words and spaces using a
copy of `spacy.util.get_words_and_spaces` and align the stanza
annotation to the `Doc`, adjusting the positions and offsets around the
additional whitespace tokens."
github.com/explosion/spacy-stanza,tests/test_language.py,2020-03-19T09:27:43Z,Show warning if entities don't map to tokens
github.com/explosion/spacy-stanza,tests/test_language.py,2020-03-17T18:15:17Z,"StanfordNLP -> Stanza (#26)

* stanfordnlp -> stanza

* Create azure-pipelines.yml

* Update README.md

* Try to fix PyTorch installation for windows

* Don't test on Windows for now

* Update README.md

* Fix typo [ci skip]"
github.com/explosion/spacy-stanza,tests/test_language.py,2019-05-31T09:56:50Z,"Relax version requirement for stanfordnlp to include v0.2.0. (#15)

* For compatibility with native Spacy language classes allow passing of empty text strings. This will produce 0-length docs, rather than raising an exception.

* Increment minor version.

* Relax version requirement for stanfordnlp to include new 0.2.0.

* Make tests pass with stanfordnlp 0.2.0. Some POS tag predictions have flipped in ambiguous cases (e.g. DET/PRON, VERB/AUX)."
github.com/explosion/spacy-stanza,tests/test_language.py,2019-01-31T14:24:22Z,Update test_language.py
github.com/explosion/spacy-stanza,tests/test_language.py,2019-01-31T14:19:04Z,Move tests
github.com/language-ml/parsi.io,parsi_io/modules/stockmarket_event_extractor/stockmarket_event_extractor.py,2022-10-27T20:42:58Z,Update stockmarket_event_extractor.py
github.com/language-ml/parsi.io,parsi_io/modules/stockmarket_event_extractor/stockmarket_event_extractor.py,2022-10-14T11:00:46Z,add stockmarket_event_extractor
github.com/cltk/cltk,src/cltk/dependency/stanza_wrapper.py,2024-02-06T01:48:11Z,"Add typing (#1242)

* misc typing fixes

* more cleanup

* more cleanup

* rm mkdocs

* formatting changes

* add typing to corpora latin

* add types to stanza wrapper

* rm check of spacy vers from build

* add more types

* change all old Dict[] List[] Tuple[] types

* change deepcopy to copy for 3.11 error

* more type improvements

* change all type annotations to hints

* change all type annotations to hints

* fix four errors after code analysis"
github.com/cltk/cltk,src/cltk/dependency/stanza_wrapper.py,2023-12-27T07:55:02Z,"Updates to Clemsciences's spacy process (#1239)

* Added spaCy process

* Improved spaCy to CLTK wrapper

* Use correct Token attributes

* Use spaCy download function instead of shell command

* Update poetry.lock

* Removed unrelated changes

* Fixed SpacyWrapper, StanzaWrapper and download_all_models.py

* Improved SpacyWrapper

* update dependencies

* demo notebook not working

* Added spaCy process

* Improved spaCy to CLTK wrapper

* Use correct Token attributes

* Use spaCy download function instead of shell command

* Removed unrelated changes

* Fixed SpacyWrapper, StanzaWrapper and download_all_models.py

* Improved SpacyWrapper

* Improved SpacyWrapper

* Renamed spacy_dep.py to spacy_wrapper.py and lint fixes

* add morphology from spacy to cltk Doc

* downgrade spacy to 3.6.1

* Download spaCy model if the model is absent

* update dev dependencies, improve spacy wrapper

* spacy wrapper working

* fix .get_dependencies()

* make e2e work with LatinCy

* re-add Latin Stops Process

* add spacy dl to build script

* trigger CI rerun

* load spacy directly

* dl spacy model with subprocess

* load model after dl

* load w/ spacy (wrapper seems to err

* don't check only dl

* bump spacy

* why old spacy on ci?

* deepcopy to copy

* basic lat tests pass

* rewrite bad UD types from Mood to VerbForm

* finish more cleanup or LatinCy release

* add citation printing

* rename latincy proc

---------

Co-authored-by: Clément Besnier <clemsciences@aol.com>
Co-authored-by: Clément Besnier <clem@clementbesnier.fr>"
github.com/cltk/cltk,src/cltk/dependency/stanza_wrapper.py,2023-11-04T10:15:39Z,Fixed type in stanza_wrapper.py that prevented using stanza
github.com/cltk/cltk,src/cltk/dependency/stanza_wrapper.py,2023-11-04T10:15:39Z,Version 1.1.6a1
github.com/cltk/cltk,src/cltk/dependency/stanza_wrapper.py,2023-11-04T10:15:39Z,Make path cross-platform
github.com/cltk/cltk,src/cltk/dependency/stanza_wrapper.py,2023-11-04T10:15:39Z,Improved annotations and let less tasks to dataclasses
github.com/thunlp/OpenBackdoor,openbackdoor/data/plain_dataset.py,2022-04-07T06:06:28Z,fix trojanlm
github.com/thunlp/OpenBackdoor,openbackdoor/data/plain_dataset.py,2022-03-28T16:21:58Z,add plain dataset
github.com/alexandrainst/danlp,examples/benchmarks/dependency_benchmarks.py,2021-09-29T11:39:16Z,"Fixing errors for the documentation page (Tasks, Datasets, Frameworks) (#139)

* Fix Windows compatibility error

* Fix Windows compatibility error 2

* added test script to gitignore

* Accidentally pushed local test artifacts.

* Fix Windows compatibility error 3

* Removed a parentheses

* Fix windows Compatibility error 4

* Updated comments and changed input string

* Updated another comment

* Removed unexpected key word arguments

* example sentences for Frameworks flair 'Your dataset'

* Fixed typo and updated documentation to fit with flair 0.8

* Now includes line to download the required stanza model

* Avoiding division by zero

* added comment that describes how to run the dacy benchmark functions

* removed relative import, which doesn't work for Windows and Mac

* Updated version of pyicu

* Updated print on how to download and where to place model

* added line that downloads needed resources

* compatibility with flair 0.8

* Windows compatibility

* reverting gitignore

* fix pycache ignore

* compatibility with flair 0.8

* coherence between model_path and output

* coherence between model_path and output

* removed relative import

* Revert changed version of PyICU

* Fixed comments

Co-authored-by: Oliver Kinch <oliver@alex5925.local>"
github.com/alexandrainst/danlp,examples/benchmarks/dependency_benchmarks.py,2021-04-20T09:31:13Z,"Add Stanza benchmark (#128)

* Add stanza benchmarking

* Update benchmark requirements

* Add documentation"
github.com/arianhosseini/negation-learning,transformers/examples/get_conll.py,2020-09-27T16:25:48Z,stable version emnlp
github.com/arianhosseini/negation-learning,transformers/examples/new_get_conll.py,2020-09-27T16:25:48Z,stable version emnlp
github.com/deeppavlov/dream,annotators/bot_emotion_classifier/dscript_scheme_classifier.py,2023-11-16T08:59:51Z,"Dream emotion dist (#568)

* add dream_emotion dist with annotators

* add component cards

* fix codestyle flake8

* fix codestyle

* another codestyle fix

* PR fixes

* fixed batches

* move preprocessing to annotator

* fix codestyle black

* minor fixes

* removed unnecessary api_configs

* changed type of annotator to bot utts annotator

* fixed component file

* fixed service.yml files

* fixed formatters

* fixed emotional response server and dist files

* moved prompt into separate file

* fixed annotators

* fixed annotators again

* fixed emotion response selector

* fixed emotion dist and components

* fixed codestyle

* fixed codestyle again

* fixed codestyle black

* fixed naming of emotion response selector

* fixed emotional_bot_response component

* fixed emotion response selector server

* added prev_services in annotator in pipeline_conf

* fixed result formatting of bot_emo_cls

* fixed codestyle

* fixed codestyle again

* changed description of emo_bot_response

* added necessary component cards

* fix: timeout

* fix: timeout

---------

Co-authored-by: Dilyara Zharikova (Baymurzina) <dilyara.rimovna@gmail.com>"
github.com/zide05/AdvFact,adversarial_transformation/Antonyms_stress_test.py,2021-02-02T10:51:33Z,Add files via upload
github.com/zide05/AdvFact,adversarial_transformation/Named_entity_stress_test.py,2021-02-02T10:51:33Z,Add files via upload
github.com/zide05/AdvFact,adversarial_transformation/Numerical_inference_strss_test.py,2021-02-02T10:51:33Z,Add files via upload
github.com/qijimrc/ROBUST,src/analysis/hws_distance.py,2023-10-19T11:59:12Z,init
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/coreference/v1/coreference_api.py,2023-04-03T09:36:57Z,Fixed initialize_coreference_components: added possibility to specify resources_root_dir
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/coreference/v1/coreference_api.py,2023-03-31T14:56:09Z,Bugfix in coreference_api: do not predict on empty input
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/coreference/v1/coreference_api.py,2023-03-30T15:12:28Z,Added EstonianCoreferenceSystem (v1.0.0) to estnltk_neural
github.com/ly19965/CVPR_Anti_UAV,modelscope/preprocessors/nlp/space_T_en/fields/common_utils.py,2023-01-18T12:38:53Z,add baseline
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2023-03-09T09:39:14Z,Refactored StanzaSyntax(Ensemble)Tagger: moved prepare_input_doc & feats_to_ordereddict to common_utils
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2023-03-08T16:16:18Z,Refactored & fixed StanzaSyntax(Ensemble)Tagger's input preparation: should now also work on detached layers
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2023-01-27T13:58:15Z,Updated StanzaSyntax(Ensemble)Tagger: added guarding exceptions against processing too long sentences with GPU / CUDA
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2023-01-19T12:05:04Z,Updated StanzaSyntax(Ensemble)Tagger: relocated initialization of Random obj into the constructor. Also made ensemble_tagger's random choice of max score dependency parses configurable by seed
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2023-01-18T09:54:46Z,Updated StanzaSyntax(Ensemble)Tagger: made random pick seed of ambiguous analyses configurable
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2022-04-22T10:41:17Z,"Fixed StanzaSyntax(Ensemble)Tagger's conf_param (removed missing parameters, set default values to None)"
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2022-04-22T09:15:51Z,Made StanzaSyntax(Ensemble)Tagger to automatically download missing resources + removed usage of environment variables
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2022-03-30T15:01:35Z,Fixed estnltk_neural setup: added missing stanza_resources json file
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2022-03-30T14:37:16Z,Made StanzaSyntax(Ensemble)Tagger to use STANZA_SYNTAX_MODELS_PATH & added smoke test for ensemble_tagger
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2021-11-17T13:57:32Z,Updated StanzaSyntaxTagger's docstring and added check for mismatching input_type and input_morph_layer
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2021-11-17T09:57:04Z,"Relocated morph_analysis, text_segmentation, syntax, ner, timexes into estnltk.taggers.standard"
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/stanza_tagger.py,2021-10-22T15:24:58Z,estnltk neural additions and moving around other files
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2023-04-24T08:16:32Z,Updated StanzaSyntaxEnsembleTagger: added majority_voting aggregation algorithm
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2023-03-09T09:39:14Z,Refactored StanzaSyntax(Ensemble)Tagger: moved prepare_input_doc & feats_to_ordereddict to common_utils
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2023-03-08T16:16:18Z,Refactored & fixed StanzaSyntax(Ensemble)Tagger's input preparation: should now also work on detached layers
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2023-01-27T13:58:15Z,Updated StanzaSyntax(Ensemble)Tagger: added guarding exceptions against processing too long sentences with GPU / CUDA
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2023-01-19T12:05:04Z,Updated StanzaSyntax(Ensemble)Tagger: relocated initialization of Random obj into the constructor. Also made ensemble_tagger's random choice of max score dependency parses configurable by seed
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2023-01-18T09:54:46Z,Updated StanzaSyntax(Ensemble)Tagger: made random pick seed of ambiguous analyses configurable
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2022-04-22T10:41:17Z,"Fixed StanzaSyntax(Ensemble)Tagger's conf_param (removed missing parameters, set default values to None)"
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2022-04-22T09:15:51Z,Made StanzaSyntax(Ensemble)Tagger to automatically download missing resources + removed usage of environment variables
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2022-03-30T14:37:16Z,Made StanzaSyntax(Ensemble)Tagger to use STANZA_SYNTAX_MODELS_PATH & added smoke test for ensemble_tagger
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2022-03-05T09:03:17Z,Import fixes in estnltk_neural + added missing package_data
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2021-11-17T09:57:04Z,"Relocated morph_analysis, text_segmentation, syntax, ner, timexes into estnltk.taggers.standard"
github.com/estnltk/estnltk,estnltk_neural/estnltk_neural/taggers/syntax/stanza_tagger/ensemble_tagger.py,2021-10-22T15:24:58Z,estnltk neural additions and moving around other files
github.com/RobustNLP/TestIC,ROME/gt_err/synonym_final.py,2023-06-08T01:31:08Z,add Rome
github.com/RobustNLP/TestIC,ROME/error_detection/synonym_clean.py,2023-06-08T01:31:08Z,add Rome
github.com/RobustNLP/TestIC,ROME/metaic_error_detection/ofa_base_meta/meta_relation_error_report_0.py,2023-06-08T01:31:08Z,add Rome
github.com/RobustNLP/TestIC,ROME/metaic_error_detection/ofa_base_meta/meta_relation_error_report_bar2.py,2023-06-08T01:31:08Z,add Rome
github.com/RobustNLP/TestIC,MetaIC/Report_erroneous_issues/azure_meta_relation_error_report_dir/meta_relation_error_report_0.py,2023-05-26T14:30:27Z,Add files via upload
github.com/RobustNLP/TestIC,MetaIC/Report_erroneous_issues/azure_meta_relation_error_report_dir/meta_relation_error_report_bar1.py,2023-05-26T14:30:27Z,Add files via upload
github.com/RobustNLP/TestIC,MetaIC/Report_erroneous_issues/azure_meta_relation_error_report_dir/meta_relation_error_report_bar2.py,2023-05-26T14:30:27Z,Add files via upload
github.com/RobustNLP/TestIC,MetaIC/Report_erroneous_issues/azure_meta_relation_error_report_dir/meta_relation_error_report_bar3.py,2023-05-26T14:30:27Z,Add files via upload
github.com/jcyk/XAMR,xl-amr/xlamr_stog/data/dataset_readers/amr_parsing/preprocess/feature_annotator_multilingual.py,2021-12-11T08:14:38Z,ready
github.com/huashen218/convxai,convxai/utils/utils.py,2023-06-19T04:17:26Z,your comments here
github.com/huashen218/convxai,convxai/utils/utils.py,2022-12-05T06:35:26Z,counterfactual
github.com/huashen218/convxai,convxai/utils/utils.py,2022-11-29T19:56:05Z,round
github.com/huashen218/convxai,convxai/utils/utils.py,2022-11-28T03:21:42Z,counterfactual
github.com/huashen218/convxai,convxai/utils/utils.py,2022-11-26T07:40:24Z,universal-api
github.com/huashen218/convxai,convxai/utils/utils.py,2022-11-23T02:52:42Z,run
github.com/huashen218/convxai,notebook_unified_XAI_API/convxai/utils/utils.py,2023-06-22T02:50:32Z,cleanup
github.com/huashen218/convxai,convxai/xai_models/preprocessing/global_xai_statistics/data_generator.py,2023-06-22T02:48:28Z,cleanup
github.com/huashen218/convxai,convxai/xai_models/preprocessing/global_xai_statistics/data_generator.py,2023-06-19T04:17:26Z,your comments here
github.com/huashen218/convxai,convxai/xai_models/preprocessing/global_xai_statistics/data_generator.py,2022-11-29T19:56:05Z,round
github.com/AlibabaResearch/DAMO-ConvAI,proton/preprocess/test_g.py,2022-08-06T11:43:17Z,add: proton
github.com/AlibabaResearch/DAMO-ConvAI,proton/preprocess/test_grappa_prob.py,2022-08-06T11:43:17Z,add: proton
github.com/AlibabaResearch/DAMO-ConvAI,proton/preprocess/test_grappa_prob_cmp.py,2022-08-06T11:43:17Z,add: proton
github.com/vvhg1/guided-text-generation-with-classifier-free-language-diffusion,improved-diffusion/control_gen/eval_control.py,2022-08-17T13:29:10Z,initial commit
github.com/vvhg1/guided-text-generation-with-classifier-free-language-diffusion,transformers/examples/pytorch/language-modeling/run_clm.py,2022-08-17T13:29:10Z,initial commit
github.com/hafriedlander/stable-diffusion-grpcserver,sdgrpcserver/pipeline/text_embedding/structured_text_embedding.py,2022-11-03T09:44:04Z,"Add ToMe support (optimised UNet), big improvement to CLIP guided speed and memory usage"
github.com/hafriedlander/stable-diffusion-grpcserver,sdgrpcserver/pipeline/text_embedding/structured_text_embedding.py,2022-10-28T10:11:26Z,Once a year a cricket must slough its skin
github.com/john-hewitt/model-editing-canonical-examples,data/temporal/convert_eval.py,2024-02-12T00:13:19Z,arxiv commit
github.com/john-hewitt/model-editing-canonical-examples,data/temporal/convert_eval_train.py,2024-02-12T00:13:19Z,arxiv commit
github.com/john-hewitt/model-editing-canonical-examples,data/stereoset/make_stereoset_hard_neg.py,2024-02-12T00:13:19Z,arxiv commit
github.com/Tbabm/CUP2,common.py,2021-08-27T12:32:37Z,initial commit
github.com/bigscience-workshop/data-preparation,preprocessing/training/01a_catalogue_cleaning_and_filtering/clean_helpers/sentence_splitter.py,2022-08-22T14:56:15Z,put oscar in training (#27)
github.com/bigscience-workshop/catalogue_data,clean_helpers/sentence_splitter.py,2022-03-10T09:28:41Z,"Update preprocessing key to use the new value from the google sheet (#48)

* Rename maps-and-filters to preprocessing

* Update to_jsonl script

* Update the jsonl script

* Nit

* Factorise dataset name normalisation

* New training dataset

* Update soft deduplication

* Fix weird bug

* Update training.csv

* Remove CUDA

* - Fix empty datasets size estimation

Co-authored-by: SaulLu <55560583+SaulLu@users.noreply.github.com>

* Improve logging

* Fix vi sent tokenizer (#54)

* add dedicated vi tokenizer

* clean imports

* update requirements

* Improve logging

* Bump stanza dependency to 1.2.3

* Replace filter with map (#55)

* Bump stanza dependency to 1.2.3

* .filter is really slow

* Make new experiment concerning filtering (#56)

* Make new experiment concerning filtering

* nan becomes empty string

* New short document filter

* Remove unecessary rows

* Update filter choices

* Update slurm array

* Nit

* Remove empty strings

* We need to remove all columns

* Not sure why I need to add

* Generalise deduplicate pattern. (#58)

* Generalise deduplicate at document level

* Example for lm_es_pseudocrawl_filtered_401_www_elperiodicodemexico_com

* Fix naming

* Update training.csv

* new way to simplify dedup url (#57)

* new way to simplify dedup url

* Update clean_helpers/deduplication.py

Co-authored-by: Thomas Wang <24695242+thomasw21@users.noreply.github.com>

Co-authored-by: Thomas Wang <24695242+thomasw21@users.noreply.github.com>

* Install old version of stanza

* Update training.csv

* Update training.csv

* Concatenate ester dataset (#59)

* init new concatenation fct

* add concatenation

* add now proc and batch size

* last edits

* Making sure that things are sorted (#60)

Co-authored-by: Thomas Wang <24695242+thomasw21@users.noreply.github.com>

* Attempt to make a v2 version that's better

* Kill bloom

Co-authored-by: SaulLu <55560583+SaulLu@users.noreply.github.com>
Co-authored-by: Leandro von Werra <lvwerra@users.noreply.github.com>"
github.com/bigscience-workshop/catalogue_data,clean_helpers/sentence_splitter.py,2022-03-08T00:11:23Z,"add sentence splitter functions (#49)

* add sentence splitter functions

* remove redundant newline remover

* document downloads in readme

* remove downloads

* standardize naming

* raise error when unsopported language is called

* rename stanza pipeline

* remove redundant newline remover from init

* Update clean_helpers/sentence_splitter.py

Co-authored-by: Thomas Wang <24695242+thomasw21@users.noreply.github.com>

* fix hindi --> indic

* Use torch.num_threads(1) (#53)

Co-authored-by: Thomas Wang <24695242+thomasw21@users.noreply.github.com>"
github.com/ncbi/SpeciesAssignment,src/Species_Assignment.py,2022-05-03T12:52:06Z,upload
github.com/ncbi/SpeciesAssignment,src/species_assignment_eval_test.py,2022-05-03T12:52:06Z,upload
github.com/yerfor/SyntaSpeech,modules/tts/syntaspeech/syntactic_graph_buider.py,2022-05-12T12:47:59Z,init
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/parse.py,2020-09-02T09:03:56Z,Finish data pipeline for final SQuAD + Rewrites dataset  with Ass2s and QGPen.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/parse.py,2020-08-25T02:01:34Z,Allow to mix synthetic and organic data during training. Add support for SQuAD triples and SQuAD mapped triples.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/parse.py,2020-08-12T02:08:29Z,Implement POS and NE tag features. Fix attention mechanism by computing softmax on correct axis.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/parse.py,2020-07-13T02:11:29Z,Modify Repeat Q data processing pipeline to work with the new format
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/parse.py,2020-07-03T03:22:11Z,Prototype of our RL network but without the RL part (for now trains like a regular supervised network)
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/parse.py,2020-06-24T10:55:13Z,Build data pipeline for RepeatQ. Implement embedding layer.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/parse.py,2020-06-01T08:13:59Z,Reduce amount of parsing when reading SQuAD.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/parse.py,2020-05-27T02:27:46Z,Integrate SG-Deep-Question-Generation project and reverse engineer initial graph construction steps
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/parse.py,2020-05-18T18:11:23Z,Integrate GDP2 as a model. Add evaluation and testing scripts for different datasets.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/parse.py,2020-05-04T08:51:39Z,Add handmade medical dataset and add testing scripts for both this latter and MedQuad.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/parse.py,2020-05-01T07:44:12Z,Add MedQuad as a usable dataset to train and evaluate models
github.com/arthurdeschamps/question-generation-nus-ids,knowledge_graph/kg_api.py,2020-06-06T03:02:29Z,Implement Google Graph Knowledge query engine and add some classes to represent knowledge.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/nqg_dataset.py,2020-06-24T10:55:13Z,Build data pipeline for RepeatQ. Implement embedding layer.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/nqg_dataset.py,2020-06-10T06:47:47Z,Multiple fixes  in eval mode of ASs2s.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/nqg_dataset.py,2020-05-28T10:58:18Z,Manage to make predictions for SQuAD using HotpotQA pretrained model. Answer zones seem to not be working.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/nqg_dataset.py,2020-05-27T02:27:46Z,Integrate SG-Deep-Question-Generation project and reverse engineer initial graph construction steps
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/nqg_dataset.py,2020-05-18T18:11:23Z,Integrate GDP2 as a model. Add evaluation and testing scripts for different datasets.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/nqg_dataset.py,2020-05-04T08:51:39Z,Add handmade medical dataset and add testing scripts for both this latter and MedQuad.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/nqg_dataset.py,2020-05-01T07:44:12Z,Add MedQuad as a usable dataset to train and evaluate models
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/data_generator.py,2020-09-13T08:04:02Z,Fix pad tokens masking for logits. Add some of the analyses files from the thesis.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/data_generator.py,2020-09-07T02:07:10Z,Minor modifications to ASs2s code
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/data_generator.py,2020-09-02T09:03:56Z,Finish data pipeline for final SQuAD + Rewrites dataset  with Ass2s and QGPen.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/data_generator.py,2020-08-25T02:01:34Z,Allow to mix synthetic and organic data during training. Add support for SQuAD triples and SQuAD mapped triples.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/data_generator.py,2020-08-21T03:49:17Z,"Add ""origin probability distribution"" to tell if a word shall be predicted, copied from the base question or copied from one of the facts. Split up facts into fact sentences and run them through the encoder individually."
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/data_generator.py,2020-08-19T07:53:45Z,Add option to train a certain number of epochs on the synthetic dataset and a certain number of epochs on the Amazon Turk one. Modify benchmark to compare each prediction with all possible references for that prediction.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/data_generator.py,2020-08-15T09:13:14Z,Add base question encoder and use hidden states of encoder in place of embeddings across the model.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/data_generator.py,2020-08-12T02:08:29Z,Implement POS and NE tag features. Fix attention mechanism by computing softmax on correct axis.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/data_generator.py,2020-07-23T03:17:01Z,"Merge branch 'rl_model_squad' into dev

# Conflicts:
#	.idea/deployment.xml
#	data_processing/data_generator.py
#	defs.py
#	evaluating/model_benchmark.py"
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/data_generator.py,2020-07-13T02:11:29Z,Modify Repeat Q data processing pipeline to work with the new format
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/data_generator.py,2020-07-03T03:22:11Z,Prototype of our RL network but without the RL part (for now trains like a regular supervised network)
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/data_generator.py,2020-06-24T10:55:13Z,Build data pipeline for RepeatQ. Implement embedding layer.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/data_generator.py,2020-06-22T06:43:32Z,"Fix a few pieces of code for SQG to be able to train the model. Results are very bad, there has to be something wrong somewhere."
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/data_generator.py,2020-06-15T10:43:58Z,Fix some bugs and model inconsistencies with ASs2s + fix its data preprocessing scripts.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/data_generator.py,2020-06-10T06:47:47Z,Multiple fixes  in eval mode of ASs2s.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/data_generator.py,2020-05-28T10:58:18Z,Manage to make predictions for SQuAD using HotpotQA pretrained model. Answer zones seem to not be working.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/data_generator.py,2020-05-18T18:11:23Z,Integrate GDP2 as a model. Add evaluation and testing scripts for different datasets.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/data_generator.py,2020-05-05T07:08:42Z,Add possibility to generate the NQG dataset with most up to date NER or the original tags. Clean up seq2seq.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/data_generator.py,2020-05-04T08:51:39Z,Add handmade medical dataset and add testing scripts for both this latter and MedQuad.
github.com/arthurdeschamps/question-generation-nus-ids,data_processing/data_generator.py,2020-05-01T07:44:12Z,Add MedQuad as a usable dataset to train and evaluate models
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-08-14T00:04:23Z,dmodify ripple_config and sos_poisoner
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-08-10T12:27:29Z,doc
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-08-10T12:17:34Z,update doc
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-08-08T16:47:02Z,update poisoner
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-08-06T15:15:40Z,fix bugs
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-08-05T09:44:12Z,fix bugs
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-04-21T11:53:18Z,"fix trojanlm, por, neuba"
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-04-07T06:06:28Z,fix trojanlm
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-04-02T14:52:09Z,fix bugs
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-03-20T13:28:42Z,add neuba and trojanlm
github.com/thunlp/OpenBackdoor,openbackdoor/attackers/poisoners/trojanlm_poisoner.py,2022-01-09T11:52:26Z,update ep sos
github.com/jackfromeast/CyberCoref,dataLoader.py,2022-06-20T03:11:55Z,for gold types
github.com/jackfromeast/CyberCoref,dataLoader.py,2022-06-20T01:35:33Z,update 0620
github.com/utopia-group/WebQA,lib/nlp/nlp.py,2021-06-07T00:57:19Z,init
github.com/reynoldsnlp/udar,src/udar/misc.py,2023-11-20T14:22:05Z,importlib_resources for Python<3.9
github.com/reynoldsnlp/udar,src/udar/misc.py,2023-11-20T04:20:39Z,clean up tests; fix phonetic()
github.com/reynoldsnlp/udar,src/udar/misc.py,2021-04-22T22:32:47Z,debug action
github.com/reynoldsnlp/udar,src/udar/misc.py,2021-04-22T03:49:50Z,use gzip to avoid git-lfs
github.com/reynoldsnlp/udar,src/udar/misc.py,2021-04-13T16:37:25Z,for reals
github.com/reynoldsnlp/udar,src/udar/misc.py,2021-04-13T09:07:43Z,modern structure/tools (src/ and setup.cfg/pyproject.toml)
github.com/reynoldsnlp/udar,src/udar/sentence.py,2023-11-20T04:20:39Z,clean up tests; fix phonetic()
github.com/reynoldsnlp/udar,src/udar/sentence.py,2023-08-04T04:34:48Z,to_html()
github.com/reynoldsnlp/udar,src/udar/sentence.py,2022-09-18T01:16:06Z,"don’t attempt to re-download punkt tokenizer (#50)

* don’t attempt to re-download punkt tokenizer

Previously an attempt was made to redownload `punkt` with each request for the in-use tokenizer, causing nltk to emit warnings about `punkt` already being downloaded.  This change attempts to find `punkt` and if not present to _then_ download it.

* Update sentence.py

Co-authored-by: Rob Reynolds <reynoldsnlp@users.noreply.github.com>"
github.com/reynoldsnlp/udar,src/udar/sentence.py,2021-08-20T22:33:51Z,code formatting
github.com/reynoldsnlp/udar,src/udar/sentence.py,2021-06-08T16:38:28Z,force utf8 for cg3
github.com/reynoldsnlp/udar,src/udar/sentence.py,2021-05-26T15:36:16Z,to_json()
github.com/reynoldsnlp/udar,src/udar/sentence.py,2021-04-22T20:51:04Z,fix pmhfst path
github.com/reynoldsnlp/udar,src/udar/sentence.py,2021-04-13T09:07:43Z,modern structure/tools (src/ and setup.cfg/pyproject.toml)
github.com/nju-websoft/AdaLoGN,utils/data_utils_preprocess.py,2022-03-16T08:23:01Z,code update
github.com/jinpeng01/AIG_CL,src/prepro/data_builder.py,2022-03-04T16:27:59Z,upload
github.com/jinpeng01/AIG_CL,graph_construction/graph_construction.py,2022-03-05T03:00:47Z,second commit
github.com/text-processing/prose-rhythm-detector,app/models/document_parser.py,2020-11-18T14:33:42Z,Add the new version of ProseRhythmDetector
github.com/text-processing/prose-rhythm-detector,app/models/document_loader.py,2020-11-18T14:33:42Z,Add the new version of ProseRhythmDetector
github.com/text-processing/prose-rhythm-detector,app/statistic_utils/PoS_ngram.py,2022-05-13T13:43:59Z,Update PoS_ngram.py
github.com/text-processing/prose-rhythm-detector,app/statistic_utils/PoS_ngram.py,2022-05-12T10:35:00Z,Add PoS count utils
github.com/text-processing/prose-rhythm-detector,app/statistic_utils/PoS_count.py,2022-05-13T13:43:45Z,Update PoS_count.py
github.com/text-processing/prose-rhythm-detector,app/statistic_utils/PoS_count.py,2022-05-12T10:35:00Z,Add PoS count utils
github.com/text-processing/prose-rhythm-detector,app/statistic_utils/statistic_util.py,2020-11-18T14:33:42Z,Add the new version of ProseRhythmDetector
github.com/text-processing/prose-rhythm-detector,app/statistic_utils/statistic_util.py,2020-06-05T13:52:49Z,Add classification
github.com/text-processing/prose-rhythm-detector,app/statistic_utils/statistic_util.py,2020-02-24T16:05:52Z,Add the license to all files
github.com/pmchozas/termitup,modules_api/postprocess.py,2021-07-04T16:09:25Z,fixed non-term pattern deletion + updated req
github.com/pmchozas/termitup,modules_api/postprocess.py,2021-03-04T16:31:00Z,added postproc
github.com/pmchozas/termitup,modules_api/postprocess.py,2021-03-04T16:30:17Z,Delete postprocess.py
github.com/pmchozas/termitup,modules_api/postprocess.py,2021-02-17T11:49:09Z,tag verb
github.com/pmchozas/termitup,modules_api/postprocess.py,2021-02-15T11:42:24Z,tags
github.com/pmchozas/termitup,modules_api/postprocess.py,2021-02-12T16:21:54Z,corenlp server updated
github.com/pmchozas/termitup,modules_api/postprocess.py,2021-02-09T11:42:19Z,corenlp server updated
github.com/pmchozas/termitup,modules_api/postprocess.py,2020-10-16T13:18:49Z,bug fixed
github.com/pmchozas/termitup,modules_api/postprocess.py,2020-10-15T17:59:25Z,changes in swagger methods
github.com/pmchozas/termitup,modules_api/postprocess.py,2020-10-14T17:56:23Z,many changes with small success
github.com/pmchozas/termitup,modules_api/postprocess.py,2020-09-14T14:26:13Z,API advances
github.com/pmchozas/termitup,modules_api/delete_patterns_flair.py,2021-07-04T16:09:25Z,fixed non-term pattern deletion + updated req
github.com/amazon-science/masked-diffusion-lm,improved-diffusion/scripts/infill.py,2023-04-10T16:56:50Z,Upload code
github.com/amazon-science/masked-diffusion-lm,improved-diffusion/control_gen/eval_control.py,2023-04-10T16:56:50Z,Upload code
github.com/amazon-science/masked-diffusion-lm,transformers/examples/pytorch/language-modeling/run_clm.py,2023-04-10T16:56:50Z,Upload code
github.com/luohongyin/RGX,rgx_doc.py,2022-06-29T15:30:47Z,huggingface hub and demo
github.com/luohongyin/RGX,rgx_doc.py,2022-06-28T22:12:23Z,stanza download
github.com/luohongyin/RGX,rgx_doc.py,2022-06-27T23:16:10Z,first commit
github.com/luohongyin/RGX,search_rgx.py,2022-06-27T23:16:10Z,first commit
github.com/luohongyin/RGX,aer_ext_deptree.py,2022-06-28T01:49:29Z,fix aer
github.com/luohongyin/RGX,aer_ext_deptree.py,2022-06-27T23:16:10Z,first commit
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-05-14T09:21:27Z,Use the nltk tokenizer for libraries that don't have their own
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-05-14T09:09:50Z,Added Raudikko
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-05-03T18:13:22Z,Rename all models as lower case for consistency
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-05-03T17:13:26Z,More surface form fixes
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-05-02T18:54:20Z,simplemma surface forms
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-05-02T18:48:02Z,Update to spacy 3.3.0
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-05-02T18:32:51Z,Merge branch 'spacy3.3'
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-05-02T18:22:07Z,Fix surface forms by inserting multi-word tokens
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-05-02T17:16:33Z,Separate predict and evaluate steps
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-05-01T17:47:57Z,"Switch to the official CoNLL18 evaluation script

TODO: Some models are broken"
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-04-18T18:02:49Z,Trankit large
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-04-14T16:50:43Z,Write the output in the CONLL-U format
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-04-09T08:42:45Z,Updated the experimental spacy model to be compatbile with spacy 3.3.0
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-04-08T14:43:37Z,Spacy 3.3.0.dev0
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-04-03T17:25:59Z,Run the Turku pipeline as a server
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-04-03T09:13:24Z,Move the Turku data out of the checkout directory
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-04-03T09:04:57Z,Turku pipeline as a git submodule
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-04-03T09:01:27Z,FinnPos as git submodule
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-04-03T08:51:32Z,move Stanza and Trankit to the models directory
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-04-03T08:47:52Z,UralicNLP POS
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-04-02T16:28:21Z,"UralicNLP, only lemmatization"
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-04-02T15:48:19Z,simplemma
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-04-02T13:33:07Z,trankit
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-04-02T12:09:38Z,Updated Turku neural pipeline
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-04-02T06:39:14Z,"Remove spacy_stanfordnlp, add Stanza"
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2022-04-01T17:30:46Z,"Updated models. Optionally select models to evaluate

Updated spacy, spacy_fi_experimental_web_md and spacy-udpipe.

Disabled spacy-stanfordnlp, because it's not supported on recent spacy versions anymore."
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2020-01-19T16:30:07Z,Warmup the Turku parser
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2020-01-19T16:09:38Z,Merge sentences incorrectly split by the Turku parser
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2020-01-19T15:52:13Z,Let the models do the tokenization
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2020-01-19T15:10:48Z,Process the whole dataset in one batch
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2020-01-14T18:06:14Z,spacy-fi
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2019-11-02T19:03:56Z,FinnPos
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2019-11-02T17:33:24Z,"Fix sentence alignment. WER, F1-score and aligned accuracy metrics"
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2019-10-30T20:01:17Z,Only use sudo if configured. Explain the need for sudo on README
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2019-10-30T19:32:31Z,Run the Turku-neural-parser-pipeline on a Docker
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2019-10-29T19:18:39Z,Analyze with Turku neural pipeline
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2019-10-28T18:03:40Z,Move stanfordnlp resources under data
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2019-10-27T17:02:54Z,Refactor Voikko analyzer
github.com/aajanki/finnish-pos-accuracy,nlpmodels.py,2019-10-27T16:50:40Z,Rename file
github.com/aajanki/finnish-pos-accuracy,download_models.py,2022-05-02T18:48:02Z,Update to spacy 3.3.0
github.com/aajanki/finnish-pos-accuracy,download_models.py,2022-04-18T18:02:49Z,Trankit large
github.com/aajanki/finnish-pos-accuracy,download_models.py,2022-04-03T08:51:32Z,move Stanza and Trankit to the models directory
github.com/aajanki/finnish-pos-accuracy,download_models.py,2022-04-02T16:28:21Z,"UralicNLP, only lemmatization"
github.com/aajanki/finnish-pos-accuracy,download_models.py,2022-04-02T13:33:07Z,trankit
github.com/aajanki/finnish-pos-accuracy,download_models.py,2022-04-02T06:39:14Z,"Remove spacy_stanfordnlp, add Stanza"
github.com/aajanki/finnish-pos-accuracy,download_models.py,2019-10-28T18:03:40Z,Move stanfordnlp resources under data
github.com/aajanki/finnish-pos-accuracy,download_models.py,2019-10-27T16:49:41Z,spacy-stanfordnlp
github.com/aajanki/finnish-pos-accuracy,download_models.py,2019-10-27T16:28:10Z,udpipe Finnish FTB model
github.com/aajanki/finnish-pos-accuracy,download_models.py,2019-10-27T13:19:19Z,udpipe evaluation
github.com/ShushanArakelyan/modular_code_search,layout_assembly/layout_w_orig_verbs.py,2021-12-18T17:56:10Z,add option to finetune scoring module in layout net
github.com/ShushanArakelyan/modular_code_search,layout_assembly/layout_w_orig_verbs.py,2021-12-08T05:51:08Z,fix extra new line at the end
github.com/ShushanArakelyan/modular_code_search,layout_assembly/layout_w_orig_verbs.py,2021-11-01T03:34:54Z,removing eval param from constructors and adding action v7
github.com/ShushanArakelyan/modular_code_search,layout_assembly/layout_w_orig_verbs.py,2021-10-31T22:55:07Z,adding models with batching and different experiment code
github.com/VPeterV/Structured-MFVI,supar/utils/tokenizer.py,2024-01-05T10:39:05Z,Structured MFVI
github.com/Bibliome/alvisnlp,alvisnlp-bibliome/src/main/resources/fr/inra/maiage/bibliome/alvisnlp/bibliomefactory/modules/python/stanza-alvisnlp.py,2022-09-02T11:56:42Z,"fixed Stanza, crashed when constituency param was not set"
github.com/Bibliome/alvisnlp,alvisnlp-bibliome/src/main/resources/fr/inra/maiage/bibliome/alvisnlp/bibliomefactory/modules/python/stanza-alvisnlp.py,2022-07-20T16:34:09Z,added parameter constituency to Stanza
github.com/Bibliome/alvisnlp,alvisnlp-bibliome/src/main/resources/fr/inra/maiage/bibliome/alvisnlp/bibliomefactory/modules/python/stanza-alvisnlp.py,2022-06-15T15:26:34Z,added Stanza module
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-11-13T12:39:27Z,Changed default mongoDB & remove unused method in analysis
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-11-11T16:06:38Z,Similarity now returns -1 instead of raising an error. The error should be handled in the frontend.
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-11-11T14:38:11Z,Removed an unnecessary parameter & fixed token counting
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-10-30T10:41:07Z,Merge branch 'multi-processing' into master
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-10-22T16:25:36Z,Removed deprecated keywords
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-10-21T17:39:52Z,"Api calls now respect default values correctly (done by **kwargs mapping).
Some api keywords have been changed to match the function keywords of analysis.py.
Fixed some minor bugs in analysis & api.
Tested all api functions."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-10-13T12:20:25Z,"Added two different execution queues for celery (small & big corpora).
Added configuration file:
Server mode (=> use celery task queue or not)
MongoDB constants
Analysis threads
Celery configuration"
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-10-11T12:47:13Z,"Added a self-compiled version of blackstone.
The project is now compatible with spaCy 2.1.9.
Updated requirments.txt
Exchanged a linux-only cpu core determiner function with a cross-platform one (however this function does not account for artifical cpu restrictions of the process!)."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-10-09T16:09:01Z,Added filtering for part of speech tags.
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-10-07T15:26:11Z,"Added multi-threaded pipeline execution.
Celex numbers are now part of the corpus (get via get_celex_numbers).
Adjusted api keywords and fixed none type errors in api_functions for _per_doc functions."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-30T17:23:31Z,"Deleted duplicate functions from analysis (e.g. word & token count use the same logic with other params).
Updated api functions accordingly.
Added initalisation of analysers to flask start up."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-29T11:37:55Z,"Added n_grams_per_doc.
Added imports for model packages (so python throws an error, when they are not correctly installed)
Updated pre-processing
Added stanza downloading every setup (no other way currently known to download them via pip)"
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-28T15:02:46Z,Adjusted api functions to work with modified analysis.
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-25T13:29:49Z,"Generalized CorpusAnalysis class to also work for single documents.
Removed obsolete Analysis class.
Added detailed Python docstrings to public functions."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-25T10:07:25Z,"Added sentiment calculation for a whole corpus.
Added readbility score for each document in a corpus.
Code clean up."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-22T17:52:01Z,Added compound cases to NER detection
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-22T15:36:46Z,"Added sentiment analysis to single documents.
Improved pre-processing with another RegEx for parentheses.
Added compound cases to NER detection for english texts.
Added legal text sentencer to german pipeline.
Should have fixed problems with sentence segementer being already present."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-21T14:55:12Z,"Generalized get_tokens to also account for various part of speech tags & frequency.
Fixed a bug, where empty tokens haven't been removed.
Fixed n_grams for CorpusAnalysis.
Added key word extraction for single documents."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-19T18:01:13Z,"Added a new regex to remove old headers.
Fixed some typos"
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-16T16:49:48Z,"Removed deprecated files.
Added sentence counting."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-16T16:23:50Z,"Added _per_doc functions for corpus analysis:
- tokens
- sentences
- part of speech tags
- lemmata
- named entities
Fixed list comprehention errors."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-15T19:54:23Z,"Added n-grams for single documents.
Added a class for corpus representation and analysis (n_doc > 1)"
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-14T22:06:38Z,"Rewrote readbility scores.
Added working lda implementation for a corpus."
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-14T14:10:44Z,"Rewrote the implementation which is now based on another library (old were too slow).
Added document similarity based on word-embeddings (aka word2vec).
Additionally added more sophisticated preprocessing (mostly regex):
- older texts are now getting tokenized better
- headlines of all older formats (until 2003) are getting removed
- all paragraphs numbers are getting removed correctly (except for lines with in-text headlines)"
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-02T13:44:32Z,Added german lemmatisation and pos tagging
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-02T12:29:20Z,Added text complexity & basic LDA
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-01T16:23:08Z,Added most frequent words & avg token length
github.com/phHartl/eu-judgement-analyse,analysis.py,2020-09-01T15:46:08Z,"Added tokenisation, lemmatisation & POS tagging"
github.com/microsoft/presidio-research,presidio_evaluator/models/stanza_model.py,2023-12-27T19:45:04Z,refresh to various things
github.com/microsoft/presidio-research,presidio_evaluator/models/stanza_model.py,2022-01-19T22:04:18Z,black and flake8-ing the entire code
github.com/microsoft/presidio-research,presidio_evaluator/models/stanza_model.py,2022-01-14T22:42:14Z,"updates to notebooks and some evaluation logic, experiment tracking"
github.com/microsoft/presidio-research,presidio_evaluator/models/stanza_model.py,2022-01-08T00:30:23Z,more updates
github.com/shunk031/training-free-structured-diffusion-guidance,tfsdg/pipelines/tfsdg_pipeline.py,2022-10-29T08:38:48Z,"Add tensor shape (#7)

* add tensor shape

* update README"
github.com/shunk031/training-free-structured-diffusion-guidance,tfsdg/pipelines/tfsdg_pipeline.py,2022-10-10T08:59:04Z,"Initialize (#1)

* add README.md

* add poetry files

* add files for tfsdg library

* add files for tests

* add .gitignore

* add settings for CI

* fix branch name in the CI file"
github.com/NLP-Suite/NLP-Suite,src/SVO_main.py,2024-01-11T11:31:01Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI;
3. fixed wrong warning in SVO GUI for gender and quote annotators;
4. added Sankey charts to SVO output."
github.com/NLP-Suite/NLP-Suite,src/SVO_main.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/SVO_main.py,2023-11-27T12:58:43Z,"1. fixed a bug in the creation of a wordcloud with an empty input file;
2. added an Organizations column in the SVO output;
3. improved Stanford CoreNLP SVO using entitymentions values for Subjects and Objects;
4. introduced a new GUI for a pipeline of data quality algorithms (file_checker_pre_processing_pipeline_main.py)."
github.com/NLP-Suite/NLP-Suite,src/SVO_main.py,2023-11-25T11:01:41Z,1. fixed a bug in the creation of a wordcloud with an empty input file.
github.com/NLP-Suite/NLP-Suite,src/SVO_main.py,2023-11-17T13:59:01Z,1. added CLOSE button to coref results and passed the right file back to SVO when doing manual coreferencing.
github.com/NLP-Suite/NLP-Suite,src/SVO_main.py,2023-11-16T20:59:23Z,1. fixed a bug with Plotly capitalized.
github.com/NLP-Suite/NLP-Suite,src/SVO_main.py,2023-10-22T18:52:05Z,1. added SVO_main.py.
github.com/NLP-Suite/NLP-Suite,src/SVO_main.py,2023-10-20T00:21:16Z,1. hapax
github.com/NLP-Suite/NLP-Suite,src/SVO_main.py,2023-10-07T20:12:07Z,1. fixed bugs in the export of files for the SVO algorithm.
github.com/NLP-Suite/NLP-Suite,src/SVO_main.py,2023-06-14T16:08:15Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/SVO_main.py,2023-06-14T07:27:54Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/SVO_main.py,2023-06-10T18:01:13Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/SVO_main.py,2023-06-04T17:32:29Z,"1. rewrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI;
4. added the chart visualization to BERT NER;
5. uniformed the output layout of spaCy NER to all other NER packages;
6. fixed a bug in reminders;
7 fixed bugs in the opening of output files in the CoNLL_table_analyzer_main GUI;
8. fixed bugs in the statistics_csv_main GUIs;"
github.com/NLP-Suite/NLP-Suite,src/SVO_main.py,2023-05-30T16:00:54Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI;
4. added the chart visualization to BERT NER;
5. uniformed the output layout of spaCy NER to all other NER packages;
6. fixed a bug in reminders;
7 fixed bugs in the opening of output files in the CoNLL_table_analyzer_main GUI;"
github.com/NLP-Suite/NLP-Suite,src/SVO_main.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/SVO_util.py,2024-01-11T11:31:01Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI;
3. fixed wrong warning in SVO GUI for gender and quote annotators;
4. added Sankey charts to SVO output."
github.com/NLP-Suite/NLP-Suite,src/SVO_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/SVO_util.py,2023-11-27T12:58:43Z,"1. fixed a bug in the creation of a wordcloud with an empty input file;
2. added an Organizations column in the SVO output;
3. improved Stanford CoreNLP SVO using entitymentions values for Subjects and Objects;
4. introduced a new GUI for a pipeline of data quality algorithms (file_checker_pre_processing_pipeline_main.py)."
github.com/NLP-Suite/NLP-Suite,src/SVO_util.py,2023-11-27T12:12:33Z,"1. fixed a bug in the creation of a wordcloud with an empty input file;
2. added an Organizations column in the SVO output;
3. improved Stanford CoreNLP SVO using entitymentions values for Subjects and Objects;
4. introduced a new GUI for a pipeline of data quality algorithms (file_checker_pre_processing_pipeline_main.py)."
github.com/NLP-Suite/NLP-Suite,src/SVO_util.py,2023-11-25T11:01:41Z,1. fixed a bug in the creation of a wordcloud with an empty input file.
github.com/NLP-Suite/NLP-Suite,src/SVO_util.py,2023-11-18T20:50:39Z,1. bugs in search functions
github.com/NLP-Suite/NLP-Suite,src/SVO_util.py,2023-11-17T13:59:01Z,1. added CLOSE button to coref results and passed the right file back to SVO when doing manual coreferencing.
github.com/NLP-Suite/NLP-Suite,src/SVO_util.py,2023-11-17T02:48:00Z,"1. fixed bug in verb analysis in the CoNLL table analyzer;
2. improved the layout of the  NGrams_CoOccurrences_main GUI;
3. improved the user interaction for NGrams_CoOccurrences_main GUI;
4. fixed a bug in SVO for GIS information;
5. improved the display of GIS information in SVO to take into account multi-word locations;
6. improved the handling of NER PERSON in SVO;
7. changed the default display of wordcloud setting collocation to False."
github.com/NLP-Suite/NLP-Suite,src/SVO_util.py,2023-11-16T20:59:23Z,1. fixed a bug with Plotly capitalized.
github.com/NLP-Suite/NLP-Suite,src/SVO_util.py,2023-10-07T20:12:07Z,1. fixed bugs in the export of files for the SVO algorithm.
github.com/NLP-Suite/NLP-Suite,src/SVO_util.py,2023-10-05T00:06:18Z,"1. fixed a bug with Gephi;
2. fixed bugs in the function statistics_csv_util.compute_csv_column_frequencies with no groups;
3. fixed the wrong display of Infinitive verbs frequency."
github.com/NLP-Suite/NLP-Suite,src/SVO_util.py,2023-09-30T15:43:33Z,"1. fixed bugs in the creation of charts for document statistics and other charts;
2. improved the output layout for sentiment analysis algorithms."
github.com/NLP-Suite/NLP-Suite,src/SVO_util.py,2023-08-09T16:58:34Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/SVO_util.py,2023-06-14T16:08:15Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/SVO_util.py,2023-06-12T12:59:48Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/SVO_util.py,2023-06-10T18:01:13Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/SVO_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/BERT_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/BERT_util.py,2023-09-29T16:49:39Z,"1. fixed an inconsequential bug in the export of sentiment analysis scores for Stanza;
2. fixed a bug in the export of charts for sentiment analysis scores."
github.com/NLP-Suite/NLP-Suite,src/BERT_util.py,2023-09-21T12:05:01Z,"1. uniformed the width of Open file/dictionary buttons in all GUIs;
2. improved the layout of the html_gender_annotator GUI;
3. fixed a bug with language selection in Stanza."
github.com/NLP-Suite/NLP-Suite,src/BERT_util.py,2023-06-12T12:59:48Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/BERT_util.py,2023-06-10T18:01:13Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/BERT_util.py,2023-05-30T16:00:54Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI;
4. added the chart visualization to BERT NER;
5. uniformed the output layout of spaCy NER to all other NER packages;
6. fixed a bug in reminders;
7 fixed bugs in the opening of output files in the CoNLL_table_analyzer_main GUI;"
github.com/NLP-Suite/NLP-Suite,src/BERT_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/SENNA_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/SENNA_util.py,2023-05-30T16:00:54Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI;
4. added the chart visualization to BERT NER;
5. uniformed the output layout of spaCy NER to all other NER packages;
6. fixed a bug in reminders;
7 fixed bugs in the opening of output files in the CoNLL_table_analyzer_main GUI;"
github.com/NLP-Suite/NLP-Suite,src/SENNA_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2024-03-01T20:58:47Z,"1. added headers to MALLET output csv files;
2. fixed bugs with docx to txt converter."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2024-02-27T02:03:36Z,1. added headers to MALLET output csv files.
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2024-01-29T11:32:14Z,1. fixed a bug in a function call in the file_checker_converter_cleaner_main due to wrong number of parameters passed.
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2024-01-17T14:35:37Z,"1. edited the HELP? and hover-over info for normalization and data transformation. Both options are now available.
2. added Mac and Windows readme beta versions to help with installations."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2024-01-13T10:10:58Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI;
3. fixed wrong warning in SVO GUI for gender and quote annotators;
4. added Sankey charts to SVO output."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2024-01-11T11:31:01Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI;
3. fixed wrong warning in SVO GUI for gender and quote annotators;
4. added Sankey charts to SVO output."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-11-12T22:45:35Z,1. fixed a bug with Plotly capitalized.
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-11-12T15:31:40Z,"1. added a check on the number of variables required by the various Excel/plotly charts;
2. improved the layout of the data_visualization_2_main GUI;
3. improved the user interaction in dealing with charts with improved dropdown menus."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-11-10T18:42:56Z,"1. fixed various bugs in the search functions;
2. added the option of filtering data when drawing a sunburst or treemap charts;
3. uniformed the name of output directories for searches of various types (word, sentence, n-grams);
4. added the option of computing and visualizing WordNet aggregated lemma values for POS nouns and POS verbs in the CoNLL_table_analyzer;
5. added the Excel/plotly option in data_visualization_2_main GUI;
6. added the option of searching for co-occurring words with sentence (rather than document) in NGrams_CoOccurrences_main."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-11-09T23:52:42Z,"1. fixed various bugs in the search functions;
2. added the option of filtering data when drawing a sunburst or treemap charts;
3. uniformed the name of output directories for searches of various types (word, sentence, n-grams);
4. added the option of computing and visualizing WordNet aggregated lemma values for POS nouns and POS verbs in the CoNLL_table_analyzer;
5. added the Excel/plotly option in data_visualization_2_main GUI"
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-11-07T11:58:53Z,"1. fixed various bugs in the search functions;
2. added the option of filtering data when drawing a sunburst or treemap charts."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-11-05T01:12:59Z,"1. added the option of creating Excel/Plotly charts in the data_visualization_2_main GUI;
2. fixed bug in N-grams VIEWER GUI."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-11-03T01:41:09Z,"1. added the option of users selecting the type of chart t be displayed (bar, line, radar);
2. fixed bugs with plotLy charts;
3. fixed bugs in ngrams and file searches when users select the wrong file/search word."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-10-31T13:52:01Z,1. added the exact match in the file_search_byWord functions
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-10-29T10:50:58Z,"1. improved the n-grams scripts;
2. added a line chart to the n-gram search for 1-grams;
3. corrected the sort in the function  get_data_to_be_plotted_with_counts leaving sorting in the order of the x-axis values."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-10-28T20:52:14Z,"1. improved the n-grams scripts;
2. added a line chart to the n-gram search for 1-grams;
3. corrected the sort in the function  get_data_to_be_plotted_with_counts leaving sorting in the order of the x-axis values."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-10-28T12:41:58Z,1. improved the n-grams scripts.
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-10-27T02:08:00Z,1. completed the work on generalizing the special charts to process any number and types of csv file fields.
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-10-26T02:57:04Z,1. completed the work on generalizing the special charts to process any number and types of csv file fields.
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-10-25T23:02:06Z,1. Test
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-10-25T16:23:00Z,1. improved both the nominalization_main algorithms and the nominalization TIPS file.
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-10-25T03:03:34Z,"1. prepared the data_visualization_1_main.py GUI to process multiple selections of fields/search values. TO BE CONTINUED;
2. added Sankey charts to the n-grams search in NGrams_CoOccurrences_main GUI;
3. fixed an Excel chart display with MALLET topic modelling;
4. fixed a bug in style_analysis_main for the hapax_words variable not assigned;
4. added the colormap chart option to data_visualization1_main;
5. added Samkey charts to coreference output."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-10-25T01:47:36Z,"1. prepared the data_visualization_1_main.py GUI to process multiple selections of fields/search values. TO BE CONTINUED;
2. added Sankey charts to the n-grams search in NGrams_CoOccurrences_main GUI;
3. fixed an Excel chart display with MALLET topic modelling;
4. fixed a bug in style_analysis_main for the hapax_words variable not assigned;
4. added the colormap chart option to data_visualization1_main."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-10-24T14:19:27Z,"1. prepared the data_visualization_1_main.py GUI to process multiple selections of fields/search values. TO BE CONTINUED;
2. added Sankey charts to the n-grams search in NGrams_CoOccurrences_main GUI;
3. fixed an Excel chart display with MALLET topic modelling;
4. fixed a bug in style_analysis_main for the hapax_words variable not assigned;
4. added the colormap chart option to data_visualization1_main."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-10-05T00:06:18Z,"1. fixed a bug with Gephi;
2. fixed bugs in the function statistics_csv_util.compute_csv_column_frequencies with no groups;
3. fixed the wrong display of Infinitive verbs frequency."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-10-03T16:48:22Z,"1. added a series of checks in the data visualization 2 GUI for Boxplots;
2. added two updated TIPS files for data visualization;
3. added a try/except for the Sankey charts."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-09-30T15:43:33Z,"1. fixed bugs in the creation of charts for document statistics and other charts;
2. improved the output layout for sentiment analysis algorithms."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-09-29T21:33:51Z,"1. fixed a display problem with charts by group columns (e.g., By Document)."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-09-29T16:49:39Z,"1. fixed an inconsequential bug in the export of sentiment analysis scores for Stanza;
2. fixed a bug in the export of charts for sentiment analysis scores."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-09-28T11:38:02Z,"1. Further improved error trapping for the sunburst visualization option;
2. further improved the layout design of the DB_PCACE_data_analyzer_main GUI."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-09-28T00:53:50Z,"1. fixed all bugs in the data_visualization_1_main.py GUI;
2. fixed bugs with the Gephi_util.py."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-09-27T11:55:47Z,1. trapped user errors in Sunburst and Treemap.
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-09-26T02:14:44Z,"1. improved STEP2 for Mac;
2. fixed a display overlap between Document and Sentence in GIS description field;
3. added 2 TIPS files;
4. fixed a display overlap in all GUIs with the Release version."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-09-18T11:12:26Z,"1. added a series of checks to the NLP_setup_package_language_main.py to avoid setup errors;
2. Added the POTUS_webscraper based on beautifulsoup to extract POTUS speeches;
3. fixed bugs in the creation of Excel charts;
4. fixed bugs in TIPS filenames."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-09-16T18:20:12Z,"1. Added the POTUS_webscraper based on beautifulsoup to extract POTUS speeches;
2.fixed an inconsequential display but in NLP_setup_package_language_main
3. fixed bugs in the creation of Excel charts;
4. fixed bugs in TIPS filenames;"
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-09-10T22:16:07Z,"1.improved the user interaction when there are missing IO values;
2. removed the line import RF_charts_treemaper_util from data_visualization util;
3. fixed a bug in file_search_byWord_util."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-08-27T20:19:25Z,"1. Fixed a bug in NLP_menu_main when selecting the option ""Sample corpus (ALL options GUI)"" under Pre-processing tools;
2. improved the display of user messages about the RUN button with wrong/missing IO information;
3. fixed a bug of missing file for timechart in data_visualization_main;
4. added TIPS file for specialized visuals to the data_visualization GUI."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-08-13T08:49:24Z,"Release 3.8.8 reflects a large number of bug fixes and improvements, the result of summer 2023 work on the NLP Suite."
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-07-19T13:33:58Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-06-25T14:41:05Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-06-17T08:29:03Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-06-12T12:59:48Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-06-10T18:01:13Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-06-05T20:37:47Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-06-04T17:32:29Z,"1. rewrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI;
4. added the chart visualization to BERT NER;
5. uniformed the output layout of spaCy NER to all other NER packages;
6. fixed a bug in reminders;
7 fixed bugs in the opening of output files in the CoNLL_table_analyzer_main GUI;
8. fixed bugs in the statistics_csv_main GUIs;"
github.com/NLP-Suite/NLP-Suite,src/charts_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2024-02-06T02:24:23Z,"1. added a vocab csv output file when computing 1-grams;
2. fixed potential bug with Stanza not installed in NLP_menu_main when selecting Setup default NLP parsers & annotators...
3. fixed a bug in data_visualization_main_1 with the Treemap option."
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-11-21T19:51:41Z,"1. fixed a bug with wordcloud visualization when using a csv file in input;
2. extended the POS NPOUN to include proper nouns in Wordclouds;
3. added a checkbox to compute corpus statistics by POS (Part of Speech) tag value in the statistics_txt_main GUI;
4. uniformed the handling of ,'GUIs available for more options' in all GUIs that rely on the checkbox and menu."
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-10-05T00:06:18Z,"1. fixed a bug with Gephi;
2. fixed bugs in the function statistics_csv_util.compute_csv_column_frequencies with no groups;
3. fixed the wrong display of Infinitive verbs frequency."
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-09-30T15:43:33Z,"1. fixed bugs in the creation of charts for document statistics and other charts;
2. improved the output layout for sentiment analysis algorithms."
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-09-29T16:49:39Z,"1. fixed an inconsequential bug in the export of sentiment analysis scores for Stanza;
2. fixed a bug in the export of charts for sentiment analysis scores."
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-09-22T13:41:01Z,"1. Fixed a minor issue in the parsers_annotators_main with the CoNLL_table_analyzer checkbox state (normal/disabled);
2. uniformed the MAC & Windows width for OK + Reset Show buttons in all GUIs."
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-09-21T12:05:01Z,"1. uniformed the width of Open file/dictionary buttons in all GUIs;
2. improved the layout of the html_gender_annotator GUI;
3. fixed a bug with language selection in Stanza."
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-06-17T08:29:03Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-06-14T07:27:54Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-06-12T12:59:48Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-06-04T17:32:29Z,"1. rewrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI;
4. added the chart visualization to BERT NER;
5. uniformed the output layout of spaCy NER to all other NER packages;
6. fixed a bug in reminders;
7 fixed bugs in the opening of output files in the CoNLL_table_analyzer_main GUI;
8. fixed bugs in the statistics_csv_main GUIs;"
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-05-30T16:00:54Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI;
4. added the chart visualization to BERT NER;
5. uniformed the output layout of spaCy NER to all other NER packages;
6. fixed a bug in reminders;
7 fixed bugs in the opening of output files in the CoNLL_table_analyzer_main GUI;"
github.com/NLP-Suite/NLP-Suite,src/Stanza_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/NGrams_util.py,2024-02-01T01:52:25Z,"1. fixed a bug in the merge_main.py with wrong number of parameters;
2. fixed bug with missing TIPS;
3. fixed a bug with N-grams option for determiners."
github.com/NLP-Suite/NLP-Suite,src/NGrams_util.py,2023-10-28T20:52:14Z,"1. improved the n-grams scripts;
2. added a line chart to the n-gram search for 1-grams;
3. corrected the sort in the function  get_data_to_be_plotted_with_counts leaving sorting in the order of the x-axis values."
github.com/NLP-Suite/NLP-Suite,src/NGrams_util.py,2023-10-28T15:49:40Z,1. improved the n-grams scripts.
github.com/NLP-Suite/NLP-Suite,src/NGrams_util.py,2023-10-28T15:36:33Z,1. improved the n-grams scripts.
github.com/NLP-Suite/NLP-Suite,src/wordclouds_util.py,2023-11-25T11:01:41Z,1. fixed a bug in the creation of a wordcloud with an empty input file.
github.com/NLP-Suite/NLP-Suite,src/wordclouds_util.py,2023-11-22T09:13:51Z,"1. in the SVO swordclouds visualization, set the collocations parameter to False to avoid potential repetition of the same words;
2. added new options to the dropdown menus in NL_menu_main for statistical tools of textual analysis;
 3. fixed chart display bugs in the computation of clause, noun, verb, function words in the CoNLL table analyzer;
4. added computation of overall noun and verb lists and frequencies in the CoNLL table analyzer;"
github.com/NLP-Suite/NLP-Suite,src/wordclouds_util.py,2023-11-21T19:51:41Z,"1. fixed a bug with wordcloud visualization when using a csv file in input;
2. extended the POS NPOUN to include proper nouns in Wordclouds;
3. added a checkbox to compute corpus statistics by POS (Part of Speech) tag value in the statistics_txt_main GUI;
4. uniformed the handling of ,'GUIs available for more options' in all GUIs that rely on the checkbox and menu."
github.com/NLP-Suite/NLP-Suite,src/wordclouds_util.py,2023-10-12T13:34:06Z,"1. added M.K.A. Halliday's high-value, median-value, and low-value classification of modal verbs in CoNLL_verb_analysis_util;
2. added a wordcloud display to the output of a CoNLL_table_search_util.py."
github.com/NLP-Suite/NLP-Suite,src/wordclouds_util.py,2023-10-11T15:48:06Z,"1. In the Style analysis GUI, modified the Vocabulary analysis option for Short words (<4 characters) to compute, instead, the word length for all words in a corpus;
2. fixed bug in wordclouds_util word_str referenced before assignment."
github.com/NLP-Suite/NLP-Suite,src/wordclouds_util.py,2023-10-08T17:24:19Z,1. fixed a config filename bug in coreference_main.py.
github.com/NLP-Suite/NLP-Suite,src/wordclouds_util.py,2023-09-08T02:05:20Z,"1. fixed a bug in wordclouds_main GUI with wrong filename;
2. fixed a bug with Mac external software installation."
github.com/NLP-Suite/NLP-Suite,src/wordclouds_util.py,2023-06-04T17:32:29Z,"1. rewrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI;
4. added the chart visualization to BERT NER;
5. uniformed the output layout of spaCy NER to all other NER packages;
6. fixed a bug in reminders;
7 fixed bugs in the opening of output files in the CoNLL_table_analyzer_main GUI;
8. fixed bugs in the statistics_csv_main GUIs;"
github.com/NLP-Suite/NLP-Suite,src/wordclouds_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/Stanza_functions.py,2024-02-07T03:09:41Z,1. fixed bug in file_search_byWord_main when running the case sensitive/insensitive option.
github.com/NLP-Suite/NLP-Suite,src/Stanza_functions.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/file_cleaner_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/file_cleaner_util.py,2023-10-18T10:53:21Z,"1. completed the n-grams/co-occurence algorithms;
2. added error trapping in the knowledge_graphs_WordNet_main;
3. added a chart of countries found by the geocoder used for GIS."
github.com/NLP-Suite/NLP-Suite,src/file_cleaner_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2024-02-11T15:52:51Z,"1. fixed a bug in the display of headers in file_search_byWord;
2. added the lemmatize option in the file_search_byWord search."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2024-02-06T02:24:23Z,"1. added a vocab csv output file when computing 1-grams;
2. fixed potential bug with Stanza not installed in NLP_menu_main when selecting Setup default NLP parsers & annotators...
3. fixed a bug in data_visualization_main_1 with the Treemap option."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2024-01-29T11:32:14Z,1. fixed a bug in a function call in the file_checker_converter_cleaner_main due to wrong number of parameters passed.
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2024-01-26T03:30:54Z,"1. fixed potential bug in importing stanza;
2. fixed bug in computing document(s) statistics."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2024-01-11T11:31:01Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI;
3. fixed wrong warning in SVO GUI for gender and quote annotators;
4. added Sankey charts to SVO output."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-11-27T12:12:33Z,"1. fixed a bug in the creation of a wordcloud with an empty input file;
2. added an Organizations column in the SVO output;
3. improved Stanford CoreNLP SVO using entitymentions values for Subjects and Objects;
4. introduced a new GUI for a pipeline of data quality algorithms (file_checker_pre_processing_pipeline_main.py)."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-11-25T11:01:41Z,1. fixed a bug in the creation of a wordcloud with an empty input file.
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-11-21T19:51:41Z,"1. fixed a bug with wordcloud visualization when using a csv file in input;
2. extended the POS NPOUN to include proper nouns in Wordclouds;
3. added a checkbox to compute corpus statistics by POS (Part of Speech) tag value in the statistics_txt_main GUI;
4. uniformed the handling of ,'GUIs available for more options' in all GUIs that rely on the checkbox and menu."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-30T16:21:03Z,1. moved the corpus statistics under the text statistics GUI and out of style analysis.
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-29T12:07:38Z,"1. improved the n-grams scripts;
2. added a line chart to the n-gram search for 1-grams;
3. corrected the sort in the function  get_data_to_be_plotted_with_counts leaving sorting in the order of the x-axis values;
4. organized N-grams output ny n-gram number."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-28T15:36:33Z,1. improved the n-grams scripts.
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-28T12:41:58Z,1. improved the n-grams scripts.
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-27T02:08:00Z,1. completed the work on generalizing the special charts to process any number and types of csv file fields.
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-24T12:36:09Z,"1. prepared the data_visualization_1_main.py GUI to process multiple selections of fields/search values. TO BE CONTINUED;
2. added Sankey charts to the n-grams search in NGrams_CoOccurrences_main GUI;
3. fixed an Excel chart display with MALLET topic modelling;
4. fixed a bug in style_analysis_main for the hapax_words variable not assigned."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-22T14:30:14Z,"1. added the N-grams search option in the NGrams_CoOccurrences_main GUI;
2. added the code to deal with multi-word NER values."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-21T12:55:43Z,"1. reorganized the style_analysis and NGrams_CoOccurrences GUI;
2. in the CoNLL_table_analyzer and file_search_byWord GUIs added the options of searching for a word and extracting neighboring words (TO BE COMPLETED);
3. improved the efficiency of the ngrams algorithms."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-20T00:21:16Z,1. hapax
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-19T23:28:20Z,1. hapax
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-18T10:53:21Z,"1. completed the n-grams/co-occurence algorithms;
2. added error trapping in the knowledge_graphs_WordNet_main;
3. added a chart of countries found by the geocoder used for GIS."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-17T23:32:23Z,1. completed the n-grams algorithms.
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-17T23:26:53Z,1. completed the n-grams algorithms.
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-17T17:41:19Z,"1. fixed a bug in the N-grams VIEWER when splitting multiple-word search words (e.g., Hong Kong)."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-17T00:28:57Z,"1. completed the development of GIS pipeline;
2. rewrote the n-grams algorithms leading to greater efficiency (15 minutes instead of 5 hours for the GWR corpus)."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-16T21:39:03Z,"1. completed the development of GIS pipeline;
2. rewrote the n-grams algorithms leading to greater efficiency (15 minutes instead of 5 hours for the GWR corpus)."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-10-11T15:48:06Z,"1. In the Style analysis GUI, modified the Vocabulary analysis option for Short words (<4 characters) to compute, instead, the word length for all words in a corpus;
2. fixed bug in wordclouds_util word_str referenced before assignment."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-09-30T15:43:33Z,"1. fixed bugs in the creation of charts for document statistics and other charts;
2. improved the output layout for sentiment analysis algorithms."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-09-29T21:33:51Z,"1. fixed a display problem with charts by group columns (e.g., By Document)."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-09-29T16:49:39Z,"1. fixed an inconsequential bug in the export of sentiment analysis scores for Stanza;
2. fixed a bug in the export of charts for sentiment analysis scores."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-09-16T18:20:12Z,"1. Added the POTUS_webscraper based on beautifulsoup to extract POTUS speeches;
2.fixed an inconsequential display but in NLP_setup_package_language_main
3. fixed bugs in the creation of Excel charts;
4. fixed bugs in TIPS filenames;"
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-08-13T08:49:24Z,"Release 3.8.8 reflects a large number of bug fixes and improvements, the result of summer 2023 work on the NLP Suite."
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-08-09T16:58:34Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-08-07T13:49:20Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-08-06T14:00:48Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-06-14T16:57:31Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-06-14T16:08:15Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-06-12T12:59:48Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-06-10T18:01:13Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-05-30T16:00:54Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI;
4. added the chart visualization to BERT NER;
5. uniformed the output layout of spaCy NER to all other NER packages;
6. fixed a bug in reminders;
7 fixed bugs in the opening of output files in the CoNLL_table_analyzer_main GUI;"
github.com/NLP-Suite/NLP-Suite,src/statistics_txt_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/nominalization_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/nominalization_util.py,2023-10-28T12:41:58Z,1. improved the n-grams scripts.
github.com/NLP-Suite/NLP-Suite,src/nominalization_util.py,2023-10-28T00:20:05Z,1. nominalization creates a line chart with values by date if the files embed a date.
github.com/NLP-Suite/NLP-Suite,src/nominalization_util.py,2023-10-27T14:19:10Z,1. nominalization creates a line chart with values by date if the files embed a date.
github.com/NLP-Suite/NLP-Suite,src/nominalization_util.py,2023-10-27T12:56:45Z,1.completed the work on nominalization.
github.com/NLP-Suite/NLP-Suite,src/nominalization_util.py,2023-10-27T02:08:00Z,1. completed the work on generalizing the special charts to process any number and types of csv file fields.
github.com/NLP-Suite/NLP-Suite,src/word2vec_Gensim_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/word2vec_Gensim_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/Stanza_functions_util.py,2024-02-07T03:09:41Z,1. fixed bug in file_search_byWord_main when running the case sensitive/insensitive option.
github.com/NLP-Suite/NLP-Suite,src/Stanza_functions_util.py,2024-01-26T03:30:54Z,"1. fixed potential bug in importing stanza;
2. fixed bug in computing document(s) statistics."
github.com/NLP-Suite/NLP-Suite,src/Stanza_functions_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/sentence_analysis_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/sentence_analysis_util.py,2023-06-10T18:01:13Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/sentence_analysis_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/CoNLL_k_sentences_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/CoNLL_k_sentences_util.py,2023-11-25T11:01:41Z,1. fixed a bug in the creation of a wordcloud with an empty input file.
github.com/NLP-Suite/NLP-Suite,src/CoNLL_k_sentences_util.py,2023-06-12T12:59:48Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/CoNLL_k_sentences_util.py,2023-06-10T18:01:13Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/CoNLL_k_sentences_util.py,2023-06-04T17:32:29Z,"1. rewrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI;
4. added the chart visualization to BERT NER;
5. uniformed the output layout of spaCy NER to all other NER packages;
6. fixed a bug in reminders;
7 fixed bugs in the opening of output files in the CoNLL_table_analyzer_main GUI;
8. fixed bugs in the statistics_csv_main GUIs;"
github.com/NLP-Suite/NLP-Suite,src/CoNLL_k_sentences_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-11-08T11:34:46Z,"1. fixed various bugs in the search functions;
2. added the option of filtering data when drawing a sunburst or treemap charts."
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-09-30T15:43:33Z,"1. fixed bugs in the creation of charts for document statistics and other charts;
2. improved the output layout for sentiment analysis algorithms."
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-09-01T18:08:08Z,"1. Improved the display of information when clicking on a Google Earth Pro pin in GIS_main;
2. improved the user interface in the functions behind the NLP_setup_external_software_main.py GUI;
3. fixed a filename bug in opening the config file NLP_default_package_language_config.csv;
4. fixed a bug in GUI-specific I/O configuration not updating."
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-08-13T08:49:24Z,"Release 3.8.8 reflects a large number of bug fixes and improvements, the result of summer 2023 work on the NLP Suite."
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-08-07T13:49:20Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-06-14T16:08:15Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-06-12T12:59:48Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-06-10T18:01:13Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-05-30T16:00:54Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI;
4. added the chart visualization to BERT NER;
5. uniformed the output layout of spaCy NER to all other NER packages;
6. fixed a bug in reminders;
7 fixed bugs in the opening of output files in the CoNLL_table_analyzer_main GUI;"
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2024-02-11T15:52:51Z,"1. fixed a bug in the display of headers in file_search_byWord;
2. added the lemmatize option in the file_search_byWord search."
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2024-02-07T03:09:41Z,1. fixed bug in file_search_byWord_main when running the case sensitive/insensitive option.
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-11-22T09:13:51Z,"1. in the SVO swordclouds visualization, set the collocations parameter to False to avoid potential repetition of the same words;
2. added new options to the dropdown menus in NL_menu_main for statistical tools of textual analysis;
 3. fixed chart display bugs in the computation of clause, noun, verb, function words in the CoNLL table analyzer;
4. added computation of overall noun and verb lists and frequencies in the CoNLL table analyzer;"
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-11-19T21:34:14Z,"1. fixed minor bugs in the search functions;
2. added the heatmap for topic composition and keys to MALLET topic modeling;
3. added the script charts_matplotlib_seaborn_util to the NLP Suite."
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-11-18T20:50:39Z,1. bugs in search functions
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-11-16T20:59:23Z,1. fixed a bug with Plotly capitalized.
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-11-09T23:52:42Z,"1. fixed various bugs in the search functions;
2. added the option of filtering data when drawing a sunburst or treemap charts;
3. uniformed the name of output directories for searches of various types (word, sentence, n-grams);
4. added the option of computing and visualizing WordNet aggregated lemma values for POS nouns and POS verbs in the CoNLL_table_analyzer;
5. added the Excel/plotly option in data_visualization_2_main GUI"
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-11-08T12:42:18Z,"1. fixed various bugs in the search functions;
2. added the option of filtering data when drawing a sunburst or treemap charts;
3. uniformed the name of output directories for searches of various types (word, sentence, n-grams)."
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-11-08T11:34:46Z,"1. fixed various bugs in the search functions;
2. added the option of filtering data when drawing a sunburst or treemap charts."
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-11-07T11:58:53Z,"1. fixed various bugs in the search functions;
2. added the option of filtering data when drawing a sunburst or treemap charts."
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-11-06T12:49:46Z,1. removed path from document in plotly bar charts with document as the X-axis;
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-11-02T03:11:05Z,"1. fixed bugs in N-grams search function with Sankey visualization;
2. improved the layout of the style analysis GUI;
3. completed the development work of the file search by word with wordclouds visualization;
4. completed the development work of the n-grams search with wordclouds visualization."
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-10-31T14:10:24Z,1. added the exact match in the file_search_byWord functions
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-10-31T13:52:01Z,1. added the exact match in the file_search_byWord functions
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-10-30T16:21:03Z,1. moved the corpus statistics under the text statistics GUI and out of style analysis.
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-10-30T03:29:28Z,"1. completed the search function for N-grams;
2. added wordcloud display in the word search functions."
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-10-29T20:39:05Z,"1. completed the search function for N-grams;
2. added wordcloud display in the word search functions."
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-10-19T23:28:20Z,1. hapax
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-10-19T11:27:34Z,Ngrams_CoOccurrences_Viewer functions.
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-10-17T15:49:29Z,"1. fixed a bug in the N-grams VIEWER when splitting multiple-word search words (e.g., Hong Kong);"
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-10-17T13:44:10Z,"1. fixed a bug in the N-grams VIEWER when splitting multiple-word search words (e.g., Hong Kong);"
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-10-15T02:58:33Z,1. improved the user interaction of the file_search_byWord_util algorithms.
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-09-10T22:16:07Z,"1.improved the user interaction when there are missing IO values;
2. removed the line import RF_charts_treemaper_util from data_visualization util;
3. fixed a bug in file_search_byWord_util."
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-06-12T12:59:48Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-06-10T18:01:13Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/file_search_byWord_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/file_classifier_NER_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/file_classifier_NER_util.py,2023-09-01T18:08:08Z,"1. Improved the display of information when clicking on a Google Earth Pro pin in GIS_main;
2. improved the user interface in the functions behind the NLP_setup_external_software_main.py GUI;
3. fixed a filename bug in opening the config file NLP_default_package_language_config.csv;
4. fixed a bug in GUI-specific I/O configuration not updating."
github.com/NLP-Suite/NLP-Suite,src/file_classifier_NER_util.py,2023-06-12T12:59:48Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/file_classifier_NER_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2024-01-25T17:09:34Z,"1. fixed a bug in the NLP_menu_main when selecting the Co-Occurrences VIEWER and N-Grams VIEWER;
3. removed the unnamed column in n-grams csv output thuus removing a bug in the Search word(s) option in the N-grams Co-Occurrences GUI."
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-11-18T20:50:39Z,1. bugs in search functions
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-11-16T20:59:23Z,1. fixed a bug with Plotly capitalized.
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-11-11T14:22:51Z,"1. fixed various bugs in the search functions;
2. added the option of filtering data when drawing a sunburst or treemap charts;
3. uniformed the name of output directories for searches of various types (word, sentence, n-grams);
4. added the option of computing and visualizing WordNet aggregated lemma values for POS nouns and POS verbs in the CoNLL_table_analyzer;
5. added the Excel/plotly option in data_visualization_2_main GUI;
6. added the option of searching for co-occurring words with sentence (rather than document) in NGrams_CoOccurrences_main;
7. added a Sankey chart to the gender annotator;"
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-11-08T12:42:18Z,"1. fixed various bugs in the search functions;
2. added the option of filtering data when drawing a sunburst or treemap charts;
3. uniformed the name of output directories for searches of various types (word, sentence, n-grams)."
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-11-07T11:58:53Z,"1. fixed various bugs in the search functions;
2. added the option of filtering data when drawing a sunburst or treemap charts."
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-11-02T13:10:33Z,1. fixed bugs in ngrams and file searches when users select the wrong file/search word.
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-11-02T03:11:05Z,"1. fixed bugs in N-grams search function with Sankey visualization;
2. improved the layout of the style analysis GUI;
3. completed the development work of the file search by word with wordclouds visualization;
4. completed the development work of the n-grams search with wordclouds visualization."
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-10-31T20:26:24Z,1. fixed bugs in data_visualization1 functions
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-10-30T03:29:28Z,"1. completed the search function for N-grams;
2. added wordcloud display in the word search functions."
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-10-29T20:39:05Z,"1. completed the search function for N-grams;
2. added wordcloud display in the word search functions."
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-10-29T14:55:34Z,1. completed the search function for N-grams
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-10-29T10:50:58Z,"1. improved the n-grams scripts;
2. added a line chart to the n-gram search for 1-grams;
3. corrected the sort in the function  get_data_to_be_plotted_with_counts leaving sorting in the order of the x-axis values."
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-10-29T03:26:19Z,"1. improved the n-grams scripts;
2. added a line chart to the n-gram search for 1-grams;
3. corrected the sort in the function  get_data_to_be_plotted_with_counts leaving sorting in the order of the x-axis values."
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-10-28T20:52:14Z,"1. improved the n-grams scripts;
2. added a line chart to the n-gram search for 1-grams;
3. corrected the sort in the function  get_data_to_be_plotted_with_counts leaving sorting in the order of the x-axis values."
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-10-28T15:36:33Z,1. improved the n-grams scripts.
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-10-26T02:57:04Z,1. completed the work on generalizing the special charts to process any number and types of csv file fields.
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-10-25T23:02:06Z,1. Test
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-10-25T16:23:00Z,1. improved both the nominalization_main algorithms and the nominalization TIPS file.
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-10-25T01:47:36Z,"1. prepared the data_visualization_1_main.py GUI to process multiple selections of fields/search values. TO BE CONTINUED;
2. added Sankey charts to the n-grams search in NGrams_CoOccurrences_main GUI;
3. fixed an Excel chart display with MALLET topic modelling;
4. fixed a bug in style_analysis_main for the hapax_words variable not assigned;
4. added the colormap chart option to data_visualization1_main."
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-10-24T01:37:47Z,1. prepared the data_visualization_1_main.py GUI to process multiple selections of fields/search values. TO BE CONTINUED.
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-10-23T12:58:29Z,1. prepared the data_visualization_1_main.py GUI to process multiple selections of fields/search values. TO BE CONTINUED.
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-10-22T17:56:01Z,"1. added the N-grams search option in the NGrams_CoOccurrences_main GUI;
2. added the code to deal with multi-word NER values."
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-10-22T14:30:14Z,"1. added the N-grams search option in the NGrams_CoOccurrences_main GUI;
2. added the code to deal with multi-word NER values."
github.com/NLP-Suite/NLP-Suite,src/NGrams_CoOccurrences_util.py,2023-10-21T12:55:43Z,"1. reorganized the style_analysis and NGrams_CoOccurrences GUI;
2. in the CoNLL_table_analyzer and file_search_byWord GUIs added the options of searching for a word and extracting neighboring words (TO BE COMPLETED);
3. improved the efficiency of the ngrams algorithms."
github.com/NLP-Suite/NLP-Suite,src/knowledge_graphs_YAGO_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util_RF.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util_RF.py,2023-09-01T11:50:28Z,"1. Improved the display of information when clicking on a Google Earth Pro pin in GIS_main;
2. improved the user interface in the functions behind the NLP_setup_external_software_main.py GUI."
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util_RF.py,2023-06-12T12:59:48Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util_RF.py,2023-05-30T16:00:54Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI;
4. added the chart visualization to BERT NER;
5. uniformed the output layout of spaCy NER to all other NER packages;
6. fixed a bug in reminders;
7 fixed bugs in the opening of output files in the CoNLL_table_analyzer_main GUI;"
github.com/NLP-Suite/NLP-Suite,src/file_spell_checker_util_RF.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/file_splitter_ByLength_util.py,2023-05-30T16:00:54Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI;
4. added the chart visualization to BERT NER;
5. uniformed the output layout of spaCy NER to all other NER packages;
6. fixed a bug in reminders;
7 fixed bugs in the opening of output files in the CoNLL_table_analyzer_main GUI;"
github.com/NLP-Suite/NLP-Suite,src/file_splitter_ByLength_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/TensorFlow_semantic_analysis.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_ANEW_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_ANEW_util.py,2023-09-30T15:43:33Z,"1. fixed bugs in the creation of charts for document statistics and other charts;
2. improved the output layout for sentiment analysis algorithms."
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_ANEW_util.py,2023-09-29T16:49:39Z,"1. fixed an inconsequential bug in the export of sentiment analysis scores for Stanza;
2. fixed a bug in the export of charts for sentiment analysis scores."
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_ANEW_util.py,2023-06-12T12:59:48Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_ANEW_util.py,2023-06-10T18:01:13Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_ANEW_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_VADER_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_VADER_util.py,2023-09-30T15:43:33Z,"1. fixed bugs in the creation of charts for document statistics and other charts;
2. improved the output layout for sentiment analysis algorithms."
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_VADER_util.py,2023-09-29T16:49:39Z,"1. fixed an inconsequential bug in the export of sentiment analysis scores for Stanza;
2. fixed a bug in the export of charts for sentiment analysis scores."
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_VADER_util.py,2023-08-13T08:49:24Z,"Release 3.8.8 reflects a large number of bug fixes and improvements, the result of summer 2023 work on the NLP Suite."
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_VADER_util.py,2023-06-12T12:59:48Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_VADER_util.py,2023-06-10T18:01:13Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_VADER_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/file_splitter_ByKeyword_txt_util.py,2023-10-05T00:06:18Z,"1. fixed a bug with Gephi;
2. fixed bugs in the function statistics_csv_util.compute_csv_column_frequencies with no groups;
3. fixed the wrong display of Infinitive verbs frequency."
github.com/NLP-Suite/NLP-Suite,src/file_splitter_ByKeyword_txt_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/html_annotator_extractor_util_NEW.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/html_annotator_extractor_util_NEW.py,2023-06-10T18:01:13Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/html_annotator_extractor_util_NEW.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/file_splitter_ByKeyword_conll_util.py,2023-10-05T00:06:18Z,"1. fixed a bug with Gephi;
2. fixed bugs in the function statistics_csv_util.compute_csv_column_frequencies with no groups;
3. fixed the wrong display of Infinitive verbs frequency."
github.com/NLP-Suite/NLP-Suite,src/file_splitter_ByKeyword_conll_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/abstract_concreteness_analysis_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/abstract_concreteness_analysis_util.py,2023-10-05T00:06:18Z,"1. fixed a bug with Gephi;
2. fixed bugs in the function statistics_csv_util.compute_csv_column_frequencies with no groups;
3. fixed the wrong display of Infinitive verbs frequency."
github.com/NLP-Suite/NLP-Suite,src/abstract_concreteness_analysis_util.py,2023-09-30T15:43:33Z,"1. fixed bugs in the creation of charts for document statistics and other charts;
2. improved the output layout for sentiment analysis algorithms."
github.com/NLP-Suite/NLP-Suite,src/abstract_concreteness_analysis_util.py,2023-06-12T12:59:48Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/abstract_concreteness_analysis_util.py,2023-06-10T18:01:13Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/abstract_concreteness_analysis_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_hedonometer_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_hedonometer_util.py,2023-09-30T15:43:33Z,"1. fixed bugs in the creation of charts for document statistics and other charts;
2. improved the output layout for sentiment analysis algorithms."
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_hedonometer_util.py,2023-09-29T16:49:39Z,"1. fixed an inconsequential bug in the export of sentiment analysis scores for Stanza;
2. fixed a bug in the export of charts for sentiment analysis scores."
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_hedonometer_util.py,2023-06-12T12:59:48Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_hedonometer_util.py,2023-06-10T18:01:13Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_hedonometer_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/knowledge_graphs_DBpedia_util_SPARQL.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_SentiWordNet_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_SentiWordNet_util.py,2023-09-30T15:43:33Z,"1. fixed bugs in the creation of charts for document statistics and other charts;
2. improved the output layout for sentiment analysis algorithms."
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_SentiWordNet_util.py,2023-09-29T16:49:39Z,"1. fixed an inconsequential bug in the export of sentiment analysis scores for Stanza;
2. fixed a bug in the export of charts for sentiment analysis scores."
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_SentiWordNet_util.py,2023-08-13T08:49:24Z,"Release 3.8.8 reflects a large number of bug fixes and improvements, the result of summer 2023 work on the NLP Suite."
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_SentiWordNet_util.py,2023-06-12T12:59:48Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_SentiWordNet_util.py,2023-06-10T18:01:13Z,fixed typo and broken link
github.com/NLP-Suite/NLP-Suite,src/sentiment_analysis_SentiWordNet_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/file_find_non_related_documents_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/file_find_non_related_documents_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/file_splitter_ByBME_K_sentences_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/file_splitter_ByBME_K_sentences_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/html_annotator_gender_dictionary_util.py,2023-12-11T10:02:47Z,"1. prepared all scripts for user-selected data transformations for plotting (e.g., log);
2. fixed bugs in the computing of hapax values from Style analysis GUI."
github.com/NLP-Suite/NLP-Suite,src/html_annotator_gender_dictionary_util.py,2023-10-05T00:06:18Z,"1. fixed a bug with Gephi;
2. fixed bugs in the function statistics_csv_util.compute_csv_column_frequencies with no groups;
3. fixed the wrong display of Infinitive verbs frequency."
github.com/NLP-Suite/NLP-Suite,src/html_annotator_gender_dictionary_util.py,2023-05-15T12:27:18Z,"1. reqrote the SVO_util functions, fixing bugs with spaCy and Stanza SVO;
2. made the SVO GUI more user-friendly;
3. fixed bug in style analysis GUI."
github.com/xjtu-intsoft/chase,Benchmark_Approaches/DuoratChar/duorat/utils/tokenization.py,2021-08-02T03:02:02Z,Add benchmark approaches
github.com/princeton-nlp/MultilingualAnalysis,preprocessing/xnli/convert_dataset_to_dependency.py,2021-04-08T06:05:05Z,XNLI syntax modifications
github.com/princeton-nlp/MultilingualAnalysis,preprocessing/ner_pos/convert_dataset_to_dependency.py,2021-10-06T04:28:02Z,Modified unicode handling
github.com/princeton-nlp/MultilingualAnalysis,preprocessing/ner_pos/convert_dataset_to_dependency.py,2021-04-09T04:56:12Z,NER and POS syntax modif
github.com/princeton-nlp/MultilingualAnalysis,preprocessing/sentence_retrieval/convert_dataset_to_dependency.py,2021-04-11T02:20:45Z,Preprocessing for tatoeba
github.com/princeton-nlp/MultilingualAnalysis,preprocessing/dependency_parsing/convert_sentences_to_dependency.py,2021-04-04T17:35:01Z,Slurm files
github.com/princeton-nlp/MultilingualAnalysis,preprocessing/dependency_parsing/convert_sentences_to_dependency.py,2021-03-22T04:33:09Z,Convert MNLI to syntax synthetic
github.com/princeton-nlp/MultilingualAnalysis,preprocessing/dependency_parsing/convert_sentences_to_dependency.py,2021-03-21T05:02:06Z,Fixed error in dependency parsing
github.com/princeton-nlp/MultilingualAnalysis,preprocessing/dependency_parsing/convert_sentences_to_dependency.py,2021-03-20T06:03:04Z,File clean up
github.com/mit-ccc/TweebankNLP,twitter-stanza/demo/pipeline_demo.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/server/semgrex.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/server/ud_enhancer.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/server/tokensregex.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/scripts/sentiment/process_sb10k.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/scripts/sentiment/process_scare.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/pipeline/demo/demo_server.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/scripts/sentiment/process_ren_chinese.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/scripts/sentiment/process_usage_german.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/utils/datasets/ner/convert_bsnlp.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/utils/datasets/constituency/convert_it_turin.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/tests/test_core.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/tests/test_tagger.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/tests/test_depparse.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/tests/test_tokenizer.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/tests/test_decorators.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/tests/test_lemmatizer.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/tests/test_ner_tagger.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/tests/test_ud_enhancer.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/tests/test_data_objects.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/tests/test_mwt_expander.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/tests/test_requirements.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/tests/test_french_pipeline.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/tests/test_english_pipeline.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/tests/resources/test_common.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/tests/test_pipeline_ner_processor.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/tests/resources/test_installation.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/mit-ccc/TweebankNLP,twitter-stanza/stanza/tests/test_pipeline_sentiment_processor.py,2022-01-17T22:39:52Z,add/twitter-stanza-pipeline
github.com/zhihao-chen/NLP-experiments,nlp/utils/tokenizers.py,2021-12-10T08:31:14Z,modify mytokenizer
github.com/zhihao-chen/NLP-experiments,nlp/utils/tokenizers.py,2021-12-01T07:38:49Z,add a new tokenizer that avoid split digits to sub_word
github.com/zhihao-chen/NLP-experiments,nlp/utils/tokenizers.py,2021-12-01T07:37:53Z,add a new tokenizer that avoid split digits to sub_word
github.com/zhihao-chen/NLP-experiments,nlp/utils/tokenizers.py,2021-11-30T10:16:13Z,add a new tokenizer that avoid split digits to sub_word
github.com/zhihao-chen/NLP-experiments,nlp/utils/tokenizers.py,2021-11-10T03:45:49Z,first commit
github.com/philip-mueller/lovt,src/data/text_utils/sentence_splitting.py,2021-11-05T09:06:35Z,Added code
github.com/centre-for-humanities-computing/newsFluxus,src/tekisuto/preprocessing/lemmatizer.py,2021-04-29T11:40:15Z,"fix: spacy lemmatizer imports, typos"
github.com/centre-for-humanities-computing/newsFluxus,src/tekisuto/preprocessing/lemmatizer.py,2021-04-29T10:56:46Z,added LemmatizerSpacy
github.com/centre-for-humanities-computing/newsFluxus,src/tekisuto/preprocessing/lemmatizer.py,2021-01-14T15:02:12Z,add stanze lemmatizer
github.com/centre-for-humanities-computing/newsFluxus,src/tekisuto/preprocessing/lemmatizer.py,2020-06-04T09:21:59Z,add teki repo
github.com/griff4692/calibrating-summaries,corruptions/entity/stanza_entities.py,2023-05-09T17:27:20Z,Initial commit.
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-04-05T17:58:13Z,Fix frequency weighting
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-04-03T14:40:35Z,Clean up
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-03-31T12:47:58Z,Minor
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-03-29T22:48:44Z,Using JSONL in JSD script
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-03-29T12:14:18Z,Use JSONL format for the entire pipeline
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-03-28T21:58:03Z,"Added UDPipe to the lemmatizer
Fixes #2"
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-03-20T17:37:34Z,Gensim vectors and ELMo backward-forward comb
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-02-28T13:02:39Z,Use numpy log function
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-02-28T12:53:26Z,Optional frequency correction
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-02-28T12:34:05Z,Prior word probability distributions
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-02-23T14:44:46Z,Fix log error
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-02-23T13:48:55Z,Fix log/exp issues
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-02-23T13:29:30Z,Fix log/exp issues
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-02-08T17:14:34Z,Inject lexical similarity with static embedding model
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-01-12T18:08:39Z,Use argparse for script arguments
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-01-12T14:44:39Z,Divide by temperature in postprocessing
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-01-07T19:08:40Z,Correct Swedish language code
github.com/akutuzov/semeval2020,code/postprocessing.py,2021-01-07T16:43:59Z,Obtain all forms of target words given a corpus
github.com/akutuzov/semeval2020,code/postprocessing.py,2020-12-28T12:53:54Z,Minor
github.com/akutuzov/semeval2020,code/postprocessing.py,2020-12-28T10:22:15Z,Use stanza lemmatizer
github.com/akutuzov/semeval2020,code/postprocessing.py,2020-12-28T09:20:01Z,Use stanza lemmatizer
github.com/akutuzov/semeval2020,code/postprocessing.py,2020-12-27T11:27:29Z,Fix options for frequency correction
github.com/akutuzov/semeval2020,code/postprocessing.py,2020-12-27T09:29:14Z,Clean up
github.com/akutuzov/semeval2020,code/postprocessing.py,2020-12-27T09:28:39Z,Clean up
github.com/akutuzov/semeval2020,code/postprocessing.py,2020-12-27T09:24:46Z,Refactor
github.com/akutuzov/semeval2020,code/processing/find_word_forms.py,2021-01-07T19:08:40Z,Correct Swedish language code
github.com/akutuzov/semeval2020,code/processing/find_word_forms.py,2021-01-07T18:41:57Z,Minor
github.com/akutuzov/semeval2020,code/processing/find_word_forms.py,2021-01-07T18:07:35Z,Use pos tags for english to filter out irrelevant forms
github.com/akutuzov/semeval2020,code/processing/find_word_forms.py,2021-01-07T17:49:32Z,Obtain all forms of target words given a corpus
github.com/akutuzov/semeval2020,code/processing/find_word_forms.py,2021-01-07T17:44:31Z,Obtain all forms of target words given a corpus
github.com/akutuzov/semeval2020,code/processing/find_word_forms.py,2021-01-07T16:43:59Z,Obtain all forms of target words given a corpus
github.com/akutuzov/semeval2020,code/ling_features/stanza_process.py,2021-05-12T23:15:54Z,Readme for linguistic features
github.com/akutuzov/semeval2020,code/ling_features/stanza_process.py,2021-05-12T23:07:34Z,Linguistic features
github.com/AlonEirew/CoreSearch,scripts/extract_min_span.py,2023-03-23T09:48:18Z,Adding scripts to clean the mentions spans and release a new version CoreSearchV2 dataset
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_parser.py,2023-04-17T19:22:47Z,"Updated for mtap 1.2.1 (#167)

* Updated for mtap 1.2.1

* Added a scaleout test

* Tweaked the default scaleout settings a little

* Made write-config options consistent"
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_parser.py,2023-03-16T18:44:26Z,"Issues/138 (#144)

* Fix for deepen error

* Fix for sentences failing when CUDA available"
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_parser.py,2020-09-25T17:55:48Z,Updates for mtap 0.7.0
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_parser.py,2020-09-10T12:42:38Z,"Fixes to the stanza dependencies

Switched the method for creating the referential dependency graph from a queue over stanza dependencies to graph construction followed by breadth-first search."
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_parser.py,2020-05-11T15:29:40Z,"Features/dependencies (#55)

* Fixed mipacq / ptb / concepts performance tests

* Minor import cleanup

* Last little bits of non-PHI performance test fixes

* Stanza dependency parser, updates for MTAP

* Removed test-results.yml files"
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2023-04-17T19:22:47Z,"Updated for mtap 1.2.1 (#167)

* Updated for mtap 1.2.1

* Added a scaleout test

* Tweaked the default scaleout settings a little

* Made write-config options consistent"
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2023-03-16T18:44:26Z,"Issues/138 (#144)

* Fix for deepen error

* Fix for sentences failing when CUDA available"
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2023-02-07T16:20:12Z,"Release/v3.0.0 rc.7 (#126)

* Various

- Made default and rtf-to-text deployment scripts consistent
- Fixed issues with the rtf-to-text deployment script.
- Cleaned up some issues with resource loading.
- Made all processors use standard non-multiprocessing server by default.
- Parameterized bi_lstm and selective dependencies to allow use of multiprocessing.

* Clean up flake errors
* Attempt to re-enable integration tests"
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2023-01-13T02:05:50Z,"biomedicus-client and updates for mtap compatibility (#120)

* biomedicus-client and updates for mtap compatibility

* Update build action to install biomedicus_client"
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2022-12-08T22:34:26Z,"Various changes to support mtap>=1.0rc3 (#119)

- Pyproject.toml support
- Works with Python 3.10 / newest pytorch"
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2022-08-17T19:17:22Z,Fixed various RTF issues (#111)
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2021-09-07T15:49:30Z,Update for mtap 1.0
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2021-09-07T15:49:30Z,Various rtf and performance related changes
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2021-03-08T15:18:22Z,Batched sentences for dependency parsing
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2020-09-25T17:55:48Z,Updates for mtap 0.7.0
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2020-09-10T12:42:38Z,"Fixes to the stanza dependencies

Switched the method for creating the referential dependency graph from a queue over stanza dependencies to graph construction followed by breadth-first search."
github.com/nlpie/biomedicus,python/biomedicus/dependencies/stanza_selective_parser.py,2020-07-20T17:38:18Z,deepen (#63)
github.com/pengr/IKD-mmt,scripts/stanza_batch.py,2023-10-12T07:03:37Z,new commit
github.com/pengr/IKD-mmt,scripts/stanza_batch.py,2023-10-12T06:56:07Z,Delete scripts directory
github.com/pengr/IKD-mmt,scripts/stanza_batch.py,2022-10-08T14:10:12Z,first commit
github.com/pengr/IKD-mmt,scripts/extract_image_labels.py,2023-10-12T07:03:37Z,new commit
github.com/pengr/IKD-mmt,scripts/extract_image_labels.py,2023-10-12T06:56:07Z,Delete scripts directory
github.com/pengr/IKD-mmt,scripts/extract_image_labels.py,2022-10-08T14:10:12Z,first commit
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2021-07-13T22:23:29Z,Ajustes menores en la documentación
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2021-07-06T14:29:47Z,Correción de errores de documentación
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2021-07-01T19:25:19Z,Corrreción de bugs para nueva version de spacy
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2021-06-29T21:45:50Z,"Actualizacción documentación ejemplos\03_Exploración y visualización

- Se actualizan gráficos del ejemplo ejemplos\03_Exploración y visualización
- Se corrigen errores menores en documentación"
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2021-06-22T22:45:33Z,Cambios en la documentación
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2021-03-29T23:59:34Z,Corrección de errores de autopep8 funciones principales
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2021-03-12T00:46:53Z,lematizacion.py con formato pep8
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2020-12-07T13:30:03Z,"modificar scripts para que queden con formato pep8, utilizando autopep8"
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2020-10-15T23:58:50Z,Ajustes en la documentación
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2020-10-14T12:17:20Z,"se añade tokenizador a lematización, se añade parámetro de maxima_longitud a lematizadorSpacy y algunos cambios a la documentación"
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2020-10-13T23:03:41Z,"se deshabilitan procesos del lematizador de spacy, para que corra más rápido"
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2020-09-29T21:14:48Z,modificaciones pequeñas en documentación
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2020-09-29T01:13:41Z,Actualización documentación
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2020-09-25T14:27:29Z,"Actualización documentación - secciones OCR y Lenguajes soportados

- Se agregan secciones OCR y Lenguajes soportados
- Se hacen ajustes en la documentación de las funciones acorde a las secciones agregadas"
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2020-09-24T21:22:33Z,Se cambiaron algunos parámetros de las funciones de lenguajes
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2020-09-15T02:44:21Z,Ajustes menores en documentación
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2020-09-08T23:45:27Z,Ajustes menores a la documentación
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2020-09-01T03:10:42Z,"Se ajustan las listas de lenguajes como listas no ordenadas, usando raw html en los .rst"
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2020-08-27T16:31:29Z,modificaciones documentación - módulo lematización
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2020-08-25T23:11:59Z,Se hizo la documentación de las funciones de lematización
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2020-08-24T18:31:32Z,avances en documentación
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2020-08-24T02:12:07Z,Merge branch 'master' of https://github.com/ucd-dnp/analitica_texto
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2020-08-18T12:39:55Z,cambios en importaciones y en el nombre del módulo de exploración
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2020-08-13T15:32:41Z,renombrar clases de acuerdo a convención pep8
github.com/ucd-dnp/ConTexto,contexto/lematizacion.py,2020-08-12T19:03:56Z,se renombró la librería como contexto
github.com/ucd-dnp/ConTexto,contexto/utils/stanza_funcs.py,2021-07-08T14:03:48Z,Corrección bugs lematizador Stanza
github.com/ucd-dnp/ConTexto,contexto/utils/stanza_funcs.py,2021-06-22T22:45:33Z,Cambios en la documentación
github.com/ucd-dnp/ConTexto,contexto/utils/stanza_funcs.py,2021-03-30T02:42:00Z,corección errores autopep8 para funciones auxiliares
github.com/ucd-dnp/ConTexto,contexto/utils/stanza_funcs.py,2021-03-09T23:40:51Z,stanza_func.py en formato pep8
github.com/ucd-dnp/ConTexto,contexto/utils/stanza_funcs.py,2020-12-07T13:30:03Z,"modificar scripts para que queden con formato pep8, utilizando autopep8"
github.com/ucd-dnp/ConTexto,contexto/utils/stanza_funcs.py,2020-09-15T15:38:10Z,terminar documentación de scripts auxiliares
github.com/ucd-dnp/ConTexto,contexto/utils/stanza_funcs.py,2020-08-12T19:03:56Z,se renombró la librería como contexto
github.com/microsoft/ContextualSP,unified_parser_text_to_sql/interactive.py,2022-04-14T04:34:57Z,init unisar
github.com/microsoft/ContextualSP,unified_parser_text_to_sql/step1_schema_linking.py,2022-04-14T04:34:57Z,init unisar
github.com/microsoft/ContextualSP,unified_parser_text_to_sql/semparse/sql/spider_utils.py,2022-04-14T04:34:57Z,init unisar
github.com/rashad101/RoMe,components/ted_se.py,2023-08-13T09:18:57Z,:bug: fixed memory allocation issue
github.com/rashad101/RoMe,components/ted_se.py,2022-05-26T22:36:01Z,:rocket: - added files. more cleanup required
github.com/SapienzaNLP/xl-amr,xlamr_stog/data/dataset_readers/amr_parsing/preprocess/feature_annotator_multilingual.py,2020-06-04T22:14:59Z,EMNLP2020
github.com/mo-xiaoxi/HDiff,SR_Finder.py,2022-05-04T09:51:23Z,refactor: first commit
github.com/mo-xiaoxi/HDiff,SR_Finder.py,2022-05-04T09:50:43Z,refactor: first commit
github.com/UnderstandLingBV/LLaMa2lang,translators/seamless_m4t_v2.py,2024-02-07T14:03:25Z,Parameterized version
github.com/UnderstandLingBV/LLaMa2lang,translators/seamless_m4t_v2.py,2024-02-01T11:51:20Z,Update seamless_m4t_v2.py
github.com/UnderstandLingBV/LLaMa2lang,translators/seamless_m4t_v2.py,2024-01-19T14:59:32Z,fix: fixed errors and whitespaces during translation.
github.com/UnderstandLingBV/LLaMa2lang,translators/seamless_m4t_v2.py,2024-01-19T14:20:04Z,"feat: added sentence splitting with possibility to conduct sen2sen trasnlation, and combining resul after that."
github.com/UnderstandLingBV/LLaMa2lang,translators/seamless_m4t_v2.py,2024-01-17T21:19:17Z,"Added new seamless translator. Need to conduct some effort to allow translate long text
Also added possibility to use source lang for selecting most efficient languages for translation."
github.com/Lou1sM/video_annotation,src/semantic_parser.py,2023-08-23T12:19:05Z,allow parsing on vid-captioning output
github.com/Lou1sM/video_annotation,src/semantic_parser.py,2022-07-07T11:36:14Z,"several changes to dataset creation, including adding new ignore-words, identifying words just by wordnet id (not string itself too), and filtering out non-english captions from semantic parsing"
github.com/Lou1sM/video_annotation,src/semantic_parser.py,2022-06-25T14:02:54Z,feat: check sentences are english before parsing; pass dset name by sys.argv instead of running on both
github.com/Lou1sM/video_annotation,src/semantic_parser.py,2021-02-02T17:31:37Z,"update semantic parser to new stanze corenlp, make new pats if they don't exist in msvd preproc, download nltk data if not already there in w2v_links"
github.com/Lou1sM/video_annotation,src/semantic_parser.py,2021-01-09T17:59:48Z,"clean up scripts for generating datasets of logical captions, now just run semantic_parser.py, w2v_wn_links.py and make_new_dset.py once each, in that order"
github.com/Lou1sM/video_annotation,src/semantic_parser.py,2021-01-05T12:48:22Z,"make preprocessing and i3d extraction work, resize i3d vector from penultimate conv layer so size is now 4096, adjust network sizes to match, fix some formatting errors in main and train, add w2v_limit CL option"
github.com/Lou1sM/video_annotation,src/semantic_parser.py,2020-12-03T14:01:48Z,make dataset path a CL argument
github.com/Lou1sM/video_annotation,src/semantic_parser.py,2020-01-13T11:35:03Z,make work up to point of memory error
github.com/quadrismegistus/lltk,lltk/model/ner.py,2022-07-11T08:06:11Z,major
github.com/quadrismegistus/lltk,lltk/model/ner.py,2021-03-09T15:51:13Z,"bunch of new changes, temp. in new branch"
github.com/quadrismegistus/lltk,lltk/text/utils.py,2022-07-11T08:06:11Z,major
github.com/quadrismegistus/lltk,lltk/text/utils.py,2022-03-08T20:47:19Z,lots of changes
github.com/quadrismegistus/lltk,lltk/text/utils.py,2021-04-20T07:37:43Z,fixes
github.com/quadrismegistus/lltk,lltk/text/utils.py,2021-04-18T07:30:10Z,switching over to pkl from ft
github.com/quadrismegistus/lltk,lltk/text/utils.py,2021-03-10T16:43:51Z,fixes
github.com/quadrismegistus/lltk,lltk/text/utils.py,2021-03-10T14:38:58Z,readme ipynb
github.com/quadrismegistus/lltk,lltk/text/utils.py,2021-03-10T10:12:31Z,spacy
github.com/quadrismegistus/lltk,lltk/text/utils.py,2021-03-10T01:50:17Z,fixes
github.com/quadrismegistus/lltk,lltk/text/utils.py,2021-03-09T18:53:44Z,many fixes
github.com/quadrismegistus/lltk,lltk/text/utils.py,2021-03-09T15:51:13Z,"bunch of new changes, temp. in new branch"
github.com/vseloved/prj-nlp-2020,students/LiudmylaSlava/project/fem/fem.py,2020-06-11T13:55:06Z,project work
github.com/vseloved/prj-nlp-2020,students/LiudmylaSlava/project/fem/app.py,2020-06-11T13:55:06Z,project work
github.com/vseloved/prj-nlp-2020,students/BohdanYatsyna/homework5/base_line.py,2020-04-20T09:29:48Z,додав експерименти та опис послідовності задачі
github.com/vseloved/prj-nlp-2020,students/BohdanYatsyna/homework5/base_line.py,2020-04-18T08:56:07Z,наработки по четвертій домашці
github.com/vseloved/prj-nlp-2020,students/BohdanYatsyna/homework2/task-02-3-2.py,2020-03-26T15:51:25Z,"виправлення зауважень Маряни
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398049316
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398050175
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398053698
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398054208
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398058079
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398058962
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398060221
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398064295
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398065397"
github.com/vseloved/prj-nlp-2020,students/BohdanYatsyna/homework2/task-02-3-2.py,2020-03-26T15:46:43Z,"виправлення зауважень Маряни
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398049316
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398050175
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398053698
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398054208
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398058079
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398058962
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398060221
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398064295
https://github.com/vseloved/prj-nlp-2020/pull/33#discussion_r398065397"
github.com/vseloved/prj-nlp-2020,students/BohdanYatsyna/homework2/task-02-3-2.py,2020-03-23T17:57:51Z,замержив 2гу домашку в мастер
github.com/vseloved/prj-nlp-2020,students/BohdanYatsyna/homework2/task-02-3-2.py,2020-03-23T17:53:00Z,замержив 2гу домашку в мастер
github.com/vseloved/prj-nlp-2020,students/BohdanYatsyna/homework2/task-02-3-2.py,2020-03-23T17:45:46Z,3я частина домашки
github.com/vseloved/prj-nlp-2020,students/BohdanYatsyna/homework5/prepare_data.py,2020-04-20T09:29:48Z,додав експерименти та опис послідовності задачі
github.com/vseloved/prj-nlp-2020,students/BohdanYatsyna/homework5/prepare_data.py,2020-04-18T08:56:07Z,наработки по четвертій домашці
github.com/vseloved/prj-nlp-2020,students/AlisaMansurova/08-syntactic-parsing/parser.py,2020-05-04T22:13:31Z,cleanup
github.com/vseloved/prj-nlp-2020,students/AlisaMansurova/08-syntactic-parsing/parser.py,2020-05-03T10:14:06Z,Cleanup
github.com/vseloved/prj-nlp-2020,students/DmytroMindra/05-bag-of-words/src/04-frequency_analysis.py,2020-04-15T12:18:59Z,Filtered input added notes to readme.md
github.com/vseloved/prj-nlp-2020,students/DmytroMindra/05-bag-of-words/src/04-frequency_analysis.py,2020-04-14T20:06:57Z,Added more data to the experiment
github.com/vseloved/prj-nlp-2020,students/DmytroMindra/05-bag-of-words/src/04-frequency_analysis.py,2020-04-11T20:44:05Z,Adding homework-05
github.com/vseloved/prj-nlp-2020,students/OleksandrPetrov/02-structural-linguistics/3.2.collocations.py,2020-03-28T14:07:44Z,Homework 2: problem 3.2: fix bug with parent word
github.com/vseloved/prj-nlp-2020,students/OleksandrPetrov/02-structural-linguistics/3.2.collocations.py,2020-03-28T12:25:01Z,Homework 2: problem 3.2: fix anim nouns detection
github.com/vseloved/prj-nlp-2020,students/OleksandrPetrov/02-structural-linguistics/3.2.collocations.py,2020-03-28T12:25:01Z,Add: homework 2: problem 3.2
github.com/vseloved/prj-nlp-2020,students/DmytroMindra/06-language-as-sequence/src/02-prepare-datasets.py,2020-04-20T07:31:11Z,Added the evaluation on run-on-test.json
github.com/vseloved/prj-nlp-2020,students/DmytroMindra/06-language-as-sequence/src/02-prepare-datasets.py,2020-04-16T21:35:47Z,Added more features. Improved score.
github.com/vseloved/prj-nlp-2020,students/DmytroMindra/06-language-as-sequence/src/02-prepare-datasets.py,2020-04-16T09:23:18Z,Baseline
github.com/PlusLabNLP/DEGREE,preprocessing/process_ace05ep.py,2022-10-14T12:55:10Z,update readme for clearer env setup
github.com/PlusLabNLP/DEGREE,preprocessing/process_ace05ep.py,2022-04-08T06:27:21Z,NAACL 2022 Code
github.com/VegB/Diagnose_VLN,rxr/model/CLIP-ViL-VLN/rxr_src/utils.py,2022-04-30T09:57:17Z,Update code and scripts
github.com/VegB/Diagnose_VLN,rxr/model/CLIP-ViL-VLN/rxr_src/utils.py,2022-04-30T09:14:23Z,(1) add instruction processing scripts; (2) add original agent code
github.com/utcsnlp/lfqa_discourse,role_classifier/generate_t5_input_csv_file.py,2022-03-21T02:21:04Z,add code and data
github.com/utcsnlp/lfqa_discourse,role_classifier/generate_t5_input_json_file.py,2023-10-13T14:29:31Z,update role prediction script
github.com/loriqing/Label-Reasoning-Network,probe_experiment/data/create_memory.py,2021-09-06T05:47:30Z,Initial commit
github.com/BBN-E/ZS4IE,serif/model/impl/stanza_adapter2/stanza_driver.py,2022-03-23T23:58:13Z,initial release
github.com/sarves/thamizhi-morph,thamizhi-morph-parsing.py,2020-12-07T22:55:55Z,Morphology - POS alignment - output will be in CoNLL-U
github.com/phsfr/UD_Persian-PerDT,not-to-release/stanza_decode.py,2020-09-10T15:56:47Z,Move stuff to not-to-release
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2023-02-20T13:00:32Z,Move ISO 639 functions to util package
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2023-02-20T12:59:59Z,refactor: use LangaugeRegistry
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2023-01-17T15:17:48Z,Make Stanza select the GPU with the most free memory
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2022-09-02T09:04:25Z,Prevent Stanza from automatically downloading models
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2021-06-01T15:52:07Z,Move util package to api
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2021-05-17T15:12:30Z,Move everything needed by Sparv modules to sparv.api package
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2021-05-03T10:07:20Z,allow whitespaces within tokens in Stanza
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2021-04-30T13:11:43Z,stanza: introduce some checks for tokenisation and sentence segmentation
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2021-04-29T14:22:05Z,Remove Stanza GPU warning workaround (fixes #82)
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2021-04-29T13:46:31Z,add Stanza support for English
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2021-03-26T13:30:02Z,make Stanza annotator functions unavailable for other languages than Swedish
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2021-03-22T10:50:05Z,Add friendly error message when Stanza runs out of memory when not using GPU
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2021-01-15T17:20:45Z,Add cpu_fallback setting for Stanza to allow dependency parsing of sentences longer than max_sentence_length
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2021-01-15T15:03:41Z,Add max_sentence_length setting to Stanza to exclude long sentences from dependency parsing
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2020-12-11T18:45:07Z,"Add new config options for Stanza module, and error message to help mitigate memory problems"
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2020-12-11T17:23:43Z,Move Stanza imports to shave off half a second from Sparv startup time
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2020-12-11T17:16:34Z,Don't annotate orphaned tokens with dependency relations in Stanza module
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2020-12-11T17:04:54Z,Fix dephead annotation in Stanza module
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2020-12-11T14:45:19Z,Fix Stanza annotations for documents with tokens not belonging to any sentence
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2020-12-10T12:22:25Z,Fix class name in Stanza module
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2020-12-09T18:36:24Z,Minor code improvements
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2020-12-04T11:31:26Z,Suppress GPU warning in Stanza
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2020-11-25T15:44:54Z,"add lemmatiser to stanza, re-organise module"
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2020-11-20T09:11:37Z,add classes to dependency annotations
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2020-11-18T16:47:30Z,"stanza exports pos, not upos!"
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2020-11-17T16:42:26Z,add stanza POS tagging
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2020-11-16T14:00:00Z,tiny fix
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza.py,2020-11-16T14:00:00Z,add stanza dependency parser
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza_swe.py,2023-10-30T14:35:26Z,Use lazy formatting in some logging
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza_swe.py,2023-10-27T15:10:10Z,Remove single comma that prevented Stanza from using GPU 😩
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza_swe.py,2023-01-17T15:17:48Z,Make Stanza select the GPU with the most free memory
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza_swe.py,2022-09-02T09:04:25Z,Prevent Stanza from automatically downloading models
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza_swe.py,2021-12-09T12:51:37Z,Fix crash on empty sentences in Stanza
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza_swe.py,2021-09-24T14:30:48Z,add Hunpos-backoff annotation for Stanza msd and pos and add it to SB_DEFAULT.yaml
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza_swe.py,2021-09-09T14:30:13Z,"Add stanza.max_token_length option

Stanza would crash on extremely long tokens. This option lets the user
exclude sentences containing such tokens."
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza_swe.py,2021-06-01T15:52:07Z,Move util package to api
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza_swe.py,2021-06-01T13:23:44Z,"make explicit ref annotators for stanza, malt, stanford and misc (fixes #132)"
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza_swe.py,2021-05-17T15:12:30Z,Move everything needed by Sparv modules to sparv.api package
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza_swe.py,2021-05-03T10:07:20Z,allow whitespaces within tokens in Stanza
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza_swe.py,2021-04-30T13:11:43Z,stanza: introduce some checks for tokenisation and sentence segmentation
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza_swe.py,2021-04-29T14:22:05Z,Remove Stanza GPU warning workaround (fixes #82)
github.com/spraakbanken/sparv-pipeline,sparv/modules/stanza/stanza_swe.py,2021-04-29T13:46:31Z,add Stanza support for English
github.com/Eric3911/OpenAGI,AudioGPT-master/NeuralSeq/modules/syntaspeech/syntactic_graph_buider.py,2023-05-06T06:44:54Z,"模型更新

update"
github.com/Ermlab/PoLitBert,text_utils.py,2020-11-07T11:03:53Z,"add doc string to krnnt analyzer, add gsutil command to synchronize data"
github.com/Ermlab/PoLitBert,text_utils.py,2020-05-19T14:12:35Z,add warning swallow for polylot detect lang function
github.com/Ermlab/PoLitBert,text_utils.py,2020-05-19T13:54:32Z,fox jsondecoderError in krnnt tagger
github.com/Ermlab/PoLitBert,text_utils.py,2020-05-18T13:55:31Z,fix quotes
github.com/Ermlab/PoLitBert,text_utils.py,2020-05-18T13:54:10Z,add passing url parma to krnnt analyzer
github.com/Ermlab/PoLitBert,text_utils.py,2020-05-16T10:55:07Z,"comment morfeusz2 import, it should be removed"
github.com/Ermlab/PoLitBert,text_utils.py,2020-05-15T14:22:29Z,add stats to process lines
github.com/Ermlab/PoLitBert,text_utils.py,2020-05-15T07:39:41Z,"add oscar processing, move data procesing to another notebook"
github.com/Ermlab/PoLitBert,text_utils.py,2020-05-11T05:59:04Z,add new test sentences to check
github.com/Ermlab/PoLitBert,text_utils.py,2020-05-08T14:56:43Z,"add krnnttagger,add aux and propn"
github.com/Ermlab/PoLitBert,text_utils.py,2020-05-07T18:11:57Z,"add stanza sentence validator, add linguistics heuristic for sentences"
github.com/Ermlab/PoLitBert,text_utils.py,2020-04-08T15:39:09Z,add testing pos taggers
github.com/Ermlab/PoLitBert,text_utils.py,2020-04-05T11:48:10Z,add checking if sentence is in polish
github.com/Ermlab/PoLitBert,text_utils.py,2020-03-30T14:48:16Z,"move wiki and text data processing to another jupyter, test sentence validator"
github.com/Ermlab/PoLitBert,text_utils.py,2020-03-26T21:46:22Z,wip: refactoring and checking sentence
github.com/Ermlab/PoLitBert,playground_taggers.py,2020-05-15T07:39:41Z,"add oscar processing, move data procesing to another notebook"
github.com/Ermlab/PoLitBert,playground_taggers.py,2020-05-11T05:59:04Z,add new test sentences to check
github.com/Ermlab/PoLitBert,playground_taggers.py,2020-05-08T14:56:43Z,"add krnnttagger,add aux and propn"
github.com/Ermlab/PoLitBert,playground_taggers.py,2020-05-07T18:11:57Z,"add stanza sentence validator, add linguistics heuristic for sentences"
github.com/humlab/penelope,penelope/vendor/archive/stanza/utility.py,2022-02-10T12:26:49Z,Safer extras
github.com/humlab/penelope,tests/vendor/stanza_test.py,2020-12-18T11:58:51Z,Tests overhaul - sorted and added GUI tests
github.com/INDElab/conversationkg,conversationkg/conversations/factories.py,2020-12-14T14:46:16Z,fixed parallelisation issues
github.com/INDElab/conversationkg,conversationkg/conversations/factories.py,2020-12-10T15:00:51Z,moved address and link extraction also to factories (RegexFactory)
github.com/INDElab/conversationkg,conversationkg/conversations/factories.py,2020-12-09T17:17:01Z,"more parallelisation, and factory work"
github.com/INDElab/conversationkg,conversationkg/conversations/factories.py,2020-12-08T00:10:43Z,parallelised EmailCorpus instantiation and Factory call
github.com/INDElab/conversationkg,conversationkg/conversations/factories.py,2020-12-04T19:04:48Z,"updated tests.py to reflect recent changes, added parallelise.py, made changes to EmailCorpusCollection in corpus.py and to ledger.py"
github.com/INDElab/conversationkg,conversationkg/conversations/factories.py,2020-12-03T14:10:09Z,"refurbished conversations: topics in entities.py now; vectoriser, topic modelling, NER and keyword extraction functions in factories.py"
github.com/INDElab/conversationkg,conversationkg/conversations/factories.py,2020-11-20T21:38:12Z,"modified topics, writers and conversations; revamped conversations.entities"
github.com/INDElab/conversationkg,conversationkg/conversations/factories.py,2020-11-13T13:52:12Z,changes and improvementsto the corpus structure
github.com/dpalmasan/TRUNAJOD2.0,stanza_example.py,2021-04-03T12:20:05Z,Update pre-commit hooks to use black (#14)
github.com/dpalmasan/TRUNAJOD2.0,stanza_example.py,2021-03-29T09:41:48Z,test conflict resolve and enum implementation
github.com/heqi2015/CA_GCN,data/MNLI/dependency_output_mnli.py,2022-02-28T11:41:51Z,Add files via upload
github.com/passing2961/PersonaChatGen,profile_filtering.py,2023-05-18T08:24:15Z,update codes
github.com/passing2961/PersonaChatGen,profile_filtering.py,2023-05-18T07:38:20Z,update codes
github.com/eric11eca/Udep2Mono,udep2mono/dependency_parse.py,2021-05-06T08:17:55Z,codebase for IWCS2021 camera ready version
github.com/eric11eca/Udep2Mono,udep2mono/dependency_parse.py,2021-02-22T19:38:04Z,package 0.2.0 version release
github.com/lang-uk/ner-uk,scripts/eval_ner_models.py,2021-08-02T19:52:43Z,"fix: Cleanup of eval script

- whitespaces
- more docs
- cleanup of debug output"
github.com/lang-uk/ner-uk,scripts/eval_ner_models.py,2021-07-28T07:36:24Z,Minor cleanup and doc udpate
github.com/lang-uk/ner-uk,scripts/eval_ner_models.py,2021-07-28T07:29:40Z,"feat: Evaluation logic for mitie and stanza models

- converting model output to iob format
- classification report with sklearn"
github.com/EclipseCN/PhenoBERT,phenobert/utils/api.py,2021-05-10T02:25:45Z,fix api func
github.com/EclipseCN/PhenoBERT,phenobert/utils/api.py,2021-03-23T11:36:17Z,fix for long text
github.com/EclipseCN/PhenoBERT,phenobert/utils/api.py,2021-03-06T09:09:52Z,add -al function & add score to output
github.com/EclipseCN/PhenoBERT,phenobert/utils/api.py,2020-12-16T09:37:21Z,add gene_reviews search func
github.com/EclipseCN/PhenoBERT,phenobert/utils/api.py,2020-12-01T06:59:56Z,ver1.0.5
github.com/EclipseCN/PhenoBERT,phenobert/utils/annotate.py,2021-03-23T07:57:40Z,add text process
github.com/EclipseCN/PhenoBERT,phenobert/utils/annotate.py,2021-03-06T09:09:52Z,add -al function & add score to output
github.com/EclipseCN/PhenoBERT,phenobert/utils/annotate.py,2020-12-01T07:35:11Z,ver1.0.5
github.com/ptarau/natlog,apps/natgpt/textual.py,2023-04-01T22:08:29Z,refined processing of raw text seen as a Natlog textual db
github.com/princeton-nlp/align-mlm,preprocessing/xnli/convert_dataset_to_dependency.py,2022-01-25T01:34:48Z,initial commit
github.com/princeton-nlp/align-mlm,preprocessing/ner_pos/convert_dataset_to_dependency.py,2022-01-25T01:34:48Z,initial commit
github.com/princeton-nlp/align-mlm,preprocessing/sentence_retrieval/convert_dataset_to_dependency.py,2022-01-25T01:34:48Z,initial commit
github.com/princeton-nlp/align-mlm,preprocessing/dependency_parsing/convert_sentences_to_dependency.py,2022-01-25T01:34:48Z,initial commit
github.com/IreneZihuiLi/EHRKit-2022,wrapper_functions/utils.py,2022-04-05T16:00:34Z,First Commit
github.com/IreneZihuiLi/EHRKit-2022,wrapper_functions/stanza_functions.py,2022-04-05T16:00:34Z,First Commit
github.com/IreneZihuiLi/EHRKit-2022,collated_tasks/tasks/utils/get_clusters.py,2022-04-05T16:00:34Z,First Commit
github.com/IreneZihuiLi/EHRKit-2022,collated_tasks/tasks/utils/get_sentences.py,2022-04-05T16:00:34Z,First Commit
github.com/kenantang/petci,data/dataset.py,2022-02-19T02:41:50Z,update data and code
github.com/kenantang/petci,models/lstm/dataloader.py,2022-02-19T02:41:50Z,update data and code
github.com/s-nlp/multilingual-fake-news,tools/features_extraction.py,2021-02-01T21:47:44Z,ACL 2021 update
github.com/wkvong/multimodal-baby,analysis_tools/processing.py,2023-04-06T01:49:39Z,fix a typo
github.com/wkvong/multimodal-baby,analysis_tools/processing.py,2023-03-19T15:36:36Z,accelerate Captioning LSTM on data sharing the same image by preprocessing the image features and sharing them across batches
github.com/wkvong/multimodal-baby,analysis_tools/processing.py,2023-02-18T06:27:31Z,tried spacy pos tagger but find not better; remove erroneous checkpoint
github.com/wkvong/multimodal-baby,analysis_tools/processing.py,2022-08-13T18:42:52Z,abstract get_model_losses_on_data_batches
github.com/wkvong/multimodal-baby,analysis_tools/processing.py,2022-07-25T04:16:13Z,"get better pos stats; filter out some ambiguous words; filter out templates seen in train set; fix word category: marmite is the name of their cat, not a kind of cooking pot"
github.com/wkvong/multimodal-baby,analysis_tools/processing.py,2022-07-13T03:40:24Z,initial attempt to pos analysis tests; further decouple run_model_on_data
github.com/wkvong/multimodal-baby,analysis_tools/processing.py,2022-07-11T20:17:44Z,build stanza.Pipeline in get_pos_tags in order to save GPU memory
github.com/wkvong/multimodal-baby,analysis_tools/processing.py,2022-07-10T15:13:52Z,break notebooks/lm_clustering.ipynb into modules in analysis_tools/ so all notebooks can share them
github.com/mehdi-mirzapour/French-CRS,french_crs/fast_text2corefchains.py,2020-06-16T02:00:49Z,Closest-First Strategy Added
github.com/elisaF/subjective_discourse,code/analyses/question_classifier.py,2020-07-17T10:18:11Z,add analyses folder
github.com/eric-ai-lab/CPL,CPL/utils/_utils/vqa_clip_inference.py,2022-11-12T18:51:37Z,utils
github.com/zsLin177/SRL-as-GP,supar/utils/tokenizer.py,2021-04-14T07:28:25Z,Integrated tokenizer (#47)
github.com/dair-iitd/moie,code/aligner.py,2022-06-02T10:11:14Z,pushed all code files in code directory; updated README with basic steps for data preparation
github.com/novoic/blabla,blabla/document_processor.py,2020-07-21T11:41:00Z,:zap: Remove client.start() behaviour
github.com/novoic/blabla,blabla/document_processor.py,2020-07-15T15:56:25Z,:zap: Added flag to split sentences on newline or with stanza
github.com/novoic/blabla,blabla/document_processor.py,2020-05-21T13:53:45Z,:tada: Initial public commit
github.com/BramVanroy/astred,astred/utils.py,2021-10-07T09:58:10Z,make style
github.com/BramVanroy/astred,astred/utils.py,2021-06-15T12:37:34Z,make logging level adjustable for stanza
github.com/BramVanroy/astred,astred/utils.py,2021-04-02T12:53:18Z,"allow loading spacy shortcuts

even though that is not possible anymore in v3. We look for available models and load the first one that starts with ""{model_name}_"""
github.com/BramVanroy/astred,astred/utils.py,2021-04-01T14:01:46Z,fix spacy warning
github.com/BramVanroy/astred,astred/utils.py,2021-04-01T10:44:01Z,"check spaCy version

registering Language.component is a v3 feature"
github.com/BramVanroy/astred,astred/utils.py,2021-04-01T10:08:27Z,make style & quality
github.com/BramVanroy/astred,astred/utils.py,2021-04-01T10:01:11Z,typing improvements
github.com/BramVanroy/astred,astred/utils.py,2021-04-01T08:36:42Z,"allow disabling auto_download

This may help in scenarios where there is no more access to the internet"
github.com/BramVanroy/astred,astred/utils.py,2021-03-31T17:27:51Z,do not exclude tok2vec which seems important
github.com/BramVanroy/astred,astred/utils.py,2021-03-31T16:46:01Z,Download stanza model if not available
github.com/BramVanroy/astred,astred/utils.py,2021-03-31T16:32:50Z,cached_property for Python <3.8
github.com/BramVanroy/astred,astred/utils.py,2021-03-31T15:31:35Z,allow instantiation of spaCy (but require 3+)
github.com/BramVanroy/astred,astred/utils.py,2021-03-31T12:50:16Z,"make stanza, aligner, spacy optional"
github.com/BramVanroy/astred,astred/utils.py,2021-03-31T09:54:05Z,make style & quality
github.com/BramVanroy/astred,astred/utils.py,2021-02-24T14:05:04Z,Do not show verbose INFO logs for stanza
github.com/BramVanroy/astred,astred/utils.py,2021-02-17T17:48:03Z,MWT should be automatically added in new stanza
github.com/BramVanroy/astred,astred/utils.py,2021-02-08T16:55:25Z,new stanza does not silently ignore missing processors anymore
github.com/BramVanroy/astred,astred/utils.py,2021-01-13T08:47:12Z,style and typing
github.com/BramVanroy/astred,astred/utils.py,2021-01-07T15:41:17Z,full refactor
github.com/BramVanroy/astred,astred/utils.py,2020-06-04T14:47:08Z,refactoring n1
github.com/BramVanroy/astred,astred/utils.py,2020-06-02T09:55:55Z,fix typing
github.com/BramVanroy/astred,astred/utils.py,2020-06-02T09:37:28Z,Rename AlignmentPair to AlignedIdxs and add Alignment class
github.com/BramVanroy/astred,astred/utils.py,2020-03-25T13:13:28Z,Make style
github.com/BramVanroy/astred,astred/utils.py,2020-03-25T11:13:50Z,include MWT processor for languages that support it
github.com/BramVanroy/astred,astred/utils.py,2020-03-25T10:17:13Z,move get_distance to utils
github.com/BramVanroy/astred,astred/utils.py,2020-03-19T13:49:58Z,remove unused import
github.com/BramVanroy/astred,astred/utils.py,2020-03-19T13:47:22Z,style
github.com/BramVanroy/astred,astred/utils.py,2020-03-18T15:57:39Z,"Don't download

Models need to be downloaded manually by users"
github.com/BramVanroy/astred,astred/utils.py,2020-03-18T15:00:59Z,use astred as package name
github.com/QtacierP/PRIOR,codes/prior/data/pretrain/text_process.py,2023-08-03T06:36:32Z,pre-train codes
github.com/khuangaf/ZeroFEC,zerofec/models/answer_selector.py,2023-08-13T05:24:12Z,restructure repo
github.com/changzheng123/L-CAD,cldm/struct_tool.py,2023-12-07T11:16:50Z,init
github.com/codingsoo/nlp2rest,rule_extractor/rule_extractor.py,2023-05-28T17:35:48Z,Change interface
github.com/codingsoo/nlp2rest,rule_extractor/rule_extractor.py,2023-05-28T14:51:11Z,Change APIs-guru path
github.com/codingsoo/nlp2rest,rule_extractor/rule_extractor.py,2023-05-28T14:41:51Z,Make a separate directory for NLP part
github.com/lxucs/multilingual-mrc-isdg,isdg/preprocess.py,2021-12-02T15:06:44Z,Save
github.com/mayubo2333/fewshot_ED,dataset_processing/k_shot/construct_fewshot_dataset.py,2023-05-07T07:57:02Z,add dataset processing modules
github.com/PlusLabNLP/TagPrime,preprocessing/process_ace05ep.py,2023-07-11T20:18:30Z,first commit
github.com/THUNLP-MT/Template-NMT,lexical_scripts/terminology_evaluation/evaluate_term_plain.py,2022-11-06T11:54:16Z,init commit
github.com/tanfiona/CauseEffectDetection,preprocess.py,2021-09-07T12:54:40Z,Upload main codes
github.com/tanfiona/CauseEffectDetection,src/process/dataset.py,2021-09-07T12:54:40Z,Upload main codes
github.com/FarimaFatahi/CompactIE,data/compactness_measurements.py,2023-04-24T05:13:48Z,"Add files via upload

This script measures compactness metrics (ACL, NCC, RPA) for a CompactIE output file."
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-08-28T14:21:00Z,Whole word masking
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-08-09T11:51:49Z,Fasttext imports moved inside methods
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-07-23T11:54:00Z,Transformer attention mask support
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-07-18T11:23:14Z,Bug fixes
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-07-18T11:03:34Z,Bug fixes
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-07-17T09:21:35Z,"Autocast switch, dev for testing, model cache"
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-07-15T12:53:29Z,Enable control of loss variables
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-07-09T16:08:38Z,Regularization scheduling facility
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-07-06T14:58:46Z,Control num encoders and decoders in Transformer
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-07-04T13:08:43Z,Reduce timing
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-07-04T09:48:56Z,Try Lang features speed up
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-30T16:21:17Z,"Adding Ensemble Transformer, Adding direct word vector getting for MultiImageMultiText"
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-30T11:45:06Z,Bug fix
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-30T11:04:46Z,Bug fix
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-30T11:00:29Z,Bug fix
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-30T10:56:41Z,Bug fixes
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-30T10:39:04Z,Bug fixes
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-30T10:23:36Z,Bug fix
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-29T14:00:33Z,Fixing LangFeatures to remove multi-rake as strict dependency
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-25T10:56:01Z,Updating Setup process
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-19T11:42:34Z,Detectron Features based Attention Support
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-17T18:26:26Z,Adding VisualBert and VilBert model retrieve and Detectron Feature Retrieve
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-14T20:19:39Z,Multi-Image Multi-Text Attention Early Fusion model
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-14T15:33:53Z,Multi-task support
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-14T08:56:10Z,Image features from multiple pytorch pretrained classification models
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-14T07:27:17Z,Image features from multiple pytorch pretrained classification models
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-13T08:16:52Z,Augmentation and multi-eval preparation
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-11T07:11:44Z,Augmentation and multi-eval preparation
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-10T09:22:15Z,Augmentation and multi-eval preparation
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-08T15:24:34Z,Augmentation and multi-eval preparation
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-06T18:55:16Z,Augmentation and multi-eval preparation
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-02T19:03:57Z,Text Aug
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-06-01T15:13:36Z,Changes
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-05-31T12:06:00Z,Fix CNN1D
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-05-30T20:10:38Z,Refine CNN 1d
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-05-30T14:34:59Z,Refactor
github.com/faizanahemad/facebook-hateful-memes,facebook_hateful_memes_detector/models/text_models/LangFeatures.py,2020-05-29T18:25:46Z,Gensim Model
github.com/awebson/congressional_adversary,src/preprocess_PN/S1_tokenize.py,2020-08-25T13:56:59Z,refactor models.dual_grounded
github.com/awebson/congressional_adversary,src/preprocess_PN/S1_tokenize_with_NER.py,2020-08-25T13:56:59Z,refactor models.dual_grounded
github.com/AnzorGozalishvili/sifrank_serving,api.py,2020-03-28T18:41:53Z,Update requirements with waitress. Add waitress in Flask API. Update readme.
github.com/AnzorGozalishvili/sifrank_serving,api.py,2020-03-28T12:24:52Z,Update API to support post request with json content. Update README with code snippets and curl example.
github.com/AnzorGozalishvili/sifrank_serving,api.py,2020-03-20T15:56:51Z,update data directory usage in scripts.
github.com/AnzorGozalishvili/sifrank_serving,api.py,2020-03-20T15:49:05Z,udapte dockerfile. update api
github.com/AnzorGozalishvili/sifrank_serving,api.py,2020-03-20T15:45:55Z,remove unnecessary cuda device argument.
github.com/AnzorGozalishvili/sifrank_serving,api.py,2020-03-20T14:39:53Z,Initial commit
github.com/AnzorGozalishvili/sifrank_serving,test/test.py,2020-03-20T14:39:53Z,Initial commit
github.com/sunnweiwei/MixCL,mixup.py,2022-08-15T05:26:07Z,Readme
github.com/asyml/forte-wrappers,src/stanza/fortex/stanza/stanza_processor.py,2022-06-24T02:56:50Z,"Fix stanfordnlp_processor_test.py (#112)

* Fix outdated stanza

* Fix stanza test

Co-authored-by: Suqi Sun <suqi.sun@petuum.com>"
github.com/asyml/forte-wrappers,src/stanza/fortex/stanza/stanza_processor.py,2022-06-18T19:07:58Z,"Support Bio NER using stanza processor (#111)

* Support NER and Bio NER using Stanza processor

* update stanfordnlp_processor_test.py

* update standfordnlp_processor_test.py

* support Bio NER using stanza processor

* add test for bio ner in stanza processor

* Minor changes in stanza_processor

* Update stanfordnlp_processor_test.py

* Fix minor build error

* fix an autoformatting issue provided by Black"
github.com/asyml/forte-wrappers,src/stanza/fortex/stanza/stanza_processor.py,2021-09-08T14:31:02Z,"Change wrapper package from Forte to Fortex (#73)

* Move to fortex

* Fix import in test.

* Rename package.

* Fix examples.

* Update init imports.

* Update test strings.

* Fix imports in elastics.

* Fix imports in allennlp.

* Typo

* Fix class name in docs.

* Clean up documentation.

* Add docuemntation back.

* Fixing documentation and gpu setups.

* Black all setups.

* Remove obsolete configs"
github.com/john-hewitt/backpacks-flash-attn,training/src/test_topic.py,2023-05-28T01:18:45Z,acl2023 commit
github.com/lucy3/gpt3_gender,code/segment_original_books.py,2021-02-02T05:53:10Z,word embed
github.com/lucy3/gpt3_gender,code/segment_original_books.py,2021-01-21T00:43:12Z,get baby names
github.com/lucy3/gpt3_gender,code/segment_original_books.py,2020-11-25T21:00:43Z,it hopefully works now
github.com/lucy3/gpt3_gender,code/segment_original_books.py,2020-11-25T04:44:06Z,"my best attempt yet, but it is still no good..."
github.com/lucy3/gpt3_gender,code/segment_original_books.py,2020-11-25T03:35:02Z,seems like sentence IDs in booknlp are not deterministic
github.com/lucy3/gpt3_gender,code/segment_original_books.py,2020-11-25T00:17:53Z,"this stanza thing doesn't seem to sentence tokenize well, so will use tokens instead"
github.com/jinpeng01/WGSum,src/prepro/data_builder.py,2021-12-18T09:19:39Z,first commit
github.com/jinpeng01/WGSum,graph_construction/graph_construction.py,2021-12-18T09:19:39Z,first commit
github.com/tsproisl/textcomplexity,utils/run_stanza.py,2024-01-22T20:00:26Z,Replace deprecated convert_dict() with write_doc2conll() (#6)
github.com/tsproisl/textcomplexity,utils/run_stanza.py,2021-07-16T06:14:46Z,"Download stanza resources file, if it does not exist (issue #1)"
github.com/tsproisl/textcomplexity,utils/run_stanza.py,2020-09-29T09:51:02Z,Utility script for parsing texts with stanza
github.com/eslambakr/HRS_benchmark,codes/t2i_models/Structured-Diffusion-Guidance-master/scripts/txt2img_demo.py,2023-04-11T11:09:43Z,add struct-diff model codes
github.com/gucorpling/amalgum,nlp_modules/dep_parser.py,2021-07-26T19:36:16Z,new parser module
github.com/gucorpling/amalgum,nlp_modules/dep_parser.py,2020-07-21T09:04:42Z,some fixes and freezing libs
github.com/gucorpling/amalgum,nlp_modules/dep_parser.py,2020-07-15T12:48:29Z,double os.sep
github.com/gucorpling/amalgum,nlp_modules/dep_parser.py,2020-07-14T20:37:56Z,download dep parser models to parser-dependencies
github.com/gucorpling/amalgum,nlp_modules/dep_parser.py,2020-04-17T19:23:10Z,fix gpu memory leak
github.com/gucorpling/amalgum,nlp_modules/dep_parser.py,2020-03-02T17:46:18Z,leave out dep_rel
github.com/gucorpling/amalgum,nlp_modules/dep_parser.py,2020-03-01T16:40:56Z,replace None lemmas with %NONE%
github.com/gucorpling/amalgum,nlp_modules/dep_parser.py,2020-02-29T22:08:28Z,"give nlp1 lists instead of string

some tokens have whitespace in them and we need to use a list to make sure snlp understands its tokenization properly"
github.com/gucorpling/amalgum,nlp_modules/dep_parser.py,2020-02-29T16:56:33Z,accept '<s ' or '<s>' as start of a sent
github.com/gucorpling/amalgum,nlp_modules/dep_parser.py,2020-02-29T16:55:09Z,lemma None handling + a very important space
github.com/gucorpling/amalgum,nlp_modules/dep_parser.py,2020-02-29T04:15:15Z,add dep parser
github.com/gucorpling/amalgum,nlp_modules/dep_parser.py,2020-02-28T22:59:52Z,dep parser v1.1 test passed
github.com/gucorpling/amalgum,nlp_modules/dep_parser.py,2020-02-28T01:59:24Z,dep parser v1.0
github.com/gucorpling/amalgum,nlp_modules/dep_parser.py,2020-02-27T19:13:41Z,dep parser v1.0
github.com/gucorpling/amalgum,nlp_modules/dep_parser.py,2020-02-27T14:45:29Z,dep parser v0.21
github.com/gucorpling/amalgum,nlp_modules/dep_parser.py,2020-02-27T03:48:01Z,dep parser v0.2
github.com/gucorpling/amalgum,nlp_modules/dep_parser.py,2020-02-26T06:02:14Z,dep parser v0.1
github.com/gucorpling/amalgum,nlp_modules/pos_tagger.py,2021-07-12T13:34:16Z,"rework ensemble POS tagger
  * Make trainable in repo code
  * Add flair OntoNotes NER model as predictor
  * Replace StanfordNLP with newer Stanza
  * Use trigram context for ensemble prediction"
github.com/gucorpling/amalgum,nlp_modules/pos_tagger.py,2020-07-14T20:58:38Z,"support newer flair void predict implementation
  * flair >=0.5 just modifies the input Sentence objects by ref
  * does not return prediction for .predict() method"
github.com/gucorpling/amalgum,nlp_modules/pos_tagger.py,2020-06-22T20:06:53Z,support flair 0.5 label syntax
github.com/gucorpling/amalgum,nlp_modules/pos_tagger.py,2020-06-22T19:46:20Z,Use io to explicitly set encoding
github.com/gucorpling/amalgum,nlp_modules/pos_tagger.py,2020-06-22T19:45:19Z,"Use global config
  * enable --use-gpu flag
  * test dependencies on module init"
github.com/gucorpling/amalgum,nlp_modules/pos_tagger.py,2020-06-22T19:44:28Z,verify or get models from corpling
github.com/gucorpling/amalgum,nlp_modules/pos_tagger.py,2020-06-22T19:43:51Z,"Rename models
  * Explicitly use versioned flair modeld, do not rely on what flair refers to by 'pos'"
github.com/gucorpling/amalgum,nlp_modules/pos_tagger.py,2020-02-29T21:01:30Z,fix whitespace in token bug
github.com/gucorpling/amalgum,nlp_modules/pos_tagger.py,2020-02-29T04:16:17Z,fix pos tagger deps
github.com/gucorpling/amalgum,nlp_modules/pos_tagger.py,2020-02-27T19:57:42Z,add with statements
github.com/gucorpling/amalgum,nlp_modules/pos_tagger.py,2020-02-27T19:48:18Z,keep some models in memory
github.com/gucorpling/amalgum,nlp_modules/pos_tagger.py,2020-02-27T19:10:10Z,cleaned up tagging code and changed output format
github.com/gucorpling/amalgum,nlp_modules/pos_tagger.py,2020-02-27T19:09:06Z,Merge branch 'master' of https://github.com/gucorpling/autogum
github.com/gucorpling/amalgum,nlp_modules/pos_tagger.py,2020-02-27T19:08:39Z,cleaned up tagging code and changed output format
github.com/gucorpling/amalgum,nlp_modules/pos_tagger.py,2020-02-27T19:07:58Z,update dependencies for pos tagger module
github.com/gucorpling/amalgum,nlp_modules/pos_tagger.py,2020-02-23T21:16:44Z,updated tagger test_dependencies
github.com/gucorpling/amalgum,nlp_modules/pos_tagger.py,2020-02-23T01:38:14Z,first version of tagger
github.com/jkallini/mission-impossible-language-models,data/tag.py,2024-01-15T20:06:28Z,Initial commit
github.com/jkallini/mission-impossible-language-models,edge_probing/get_constituency_parses.py,2024-01-15T20:06:28Z,Initial commit
github.com/KaijuML/dtt-multi-branch,onmt/metrics/hss.py,2020-09-10T20:42:48Z,bugfix HS for empty sentences
github.com/KaijuML/dtt-multi-branch,onmt/metrics/hss.py,2020-09-10T20:40:07Z,bugfix HS for empty sentences
github.com/KaijuML/dtt-multi-branch,onmt/metrics/hss.py,2020-09-10T18:53:39Z,bugfix HS for empty sentences
github.com/KaijuML/dtt-multi-branch,onmt/metrics/hss.py,2020-09-10T09:18:45Z,HSA RL metric
github.com/KaijuML/dtt-multi-branch,onmt/metrics/hss.py,2020-09-10T06:05:40Z,HSS is working
github.com/KaijuML/dtt-multi-branch,onmt/metrics/hss.py,2020-09-10T06:04:10Z,HSS is working
github.com/KaijuML/dtt-multi-branch,onmt/metrics/hss.py,2020-09-09T16:31:35Z,fix RL
github.com/KaijuML/dtt-multi-branch,onmt/metrics/hss.py,2020-09-09T16:30:47Z,fix RL
github.com/KaijuML/dtt-multi-branch,onmt/metrics/hss.py,2020-09-09T16:17:06Z,HSS reinforcement learning metric
github.com/KaijuML/dtt-multi-branch,onmt/metrics/hss.py,2020-09-08T08:43:38Z,added possibility of training with RL
github.com/KaijuML/dtt-multi-branch,data/dep_parsing_gpu.py,2021-07-01T09:39:16Z,Solving issue #3
github.com/KaijuML/dtt-multi-branch,data/dep_parsing_gpu.py,2021-07-01T09:27:15Z,Solving issue #3
github.com/taishan1994/python_common_code_collection,src/segment.py,2023-03-15T02:49:43Z,Create
github.com/HCDM/XRec,SAER/data/extact_exp_data.py,2022-02-28T00:43:37Z,init SAER
github.com/HCDM/XRec,SAER/data/extract_features.py,2022-02-28T00:43:37Z,init SAER
github.com/HCDM/XRec,CompExp/data/extract_exp_data.py,2024-01-18T07:47:24Z,add missing config & extract trainer
github.com/HCDM/XRec,CompExp/data/extract_features.py,2024-01-18T07:47:24Z,add missing config & extract trainer
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2021-02-01T09:10:02Z,Use stanza instead of #22
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2021-01-21T15:40:09Z,"Fix up datapaths and log paths, cache vectors"
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2021-01-21T09:12:13Z,Hook up rough version of a stanza Processor
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2021-01-14T13:40:09Z,Changed how logging is done
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2021-01-14T13:16:48Z,Added logging info and raise error #24
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2021-01-08T13:08:57Z,Move default data dir and create if not exists
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-12-16T16:08:57Z,"Made predictor class and moved around data config"""
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-10-27T15:07:56Z,conform to pep8
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-10-07T13:52:17Z,split config in 2 files
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-09-18T13:52:56Z,Move nltk import into function that uses it
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-09-18T12:52:29Z,Added option to specify cfg file in scripts
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-07-15T11:33:45Z,Added possibility to predict on untokenized txt file
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-07-08T12:47:56Z,Use BERT embedder on the fly if not cached #1
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-07-06T15:22:14Z,Make training script work
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-07-06T14:07:36Z,Autopeped the code
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-07-06T12:49:38Z,Improved interface of predict script
github.com/Filter-Bubble/e2e-Dutch,e2edutch/util.py,2020-07-03T17:21:41Z,copied code from e2e and made some small adjustments
github.com/Filter-Bubble/e2e-Dutch,test/test_stanza.py,2021-01-25T18:58:21Z,Reorder imports
github.com/Filter-Bubble/e2e-Dutch,test/test_stanza.py,2021-01-25T13:52:45Z,Add requirement and test
github.com/AutumnCrocus/shadow_sim,card2vec.py,2021-07-06T09:07:39Z,test
github.com/lingmod-tue/stanza-api,main.py,2020-06-22T14:14:56Z,Add support for specifying language packages
github.com/lingmod-tue/stanza-api,main.py,2020-06-20T20:31:00Z,simplification
github.com/lingmod-tue/stanza-api,main.py,2020-06-19T16:06:59Z,better ordering
github.com/lingmod-tue/stanza-api,main.py,2020-06-19T15:57:36Z,"Basic working version, including Dockerfile."
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-09-08T14:10:51Z,"Dockerise the application (#77)

* feat: add Dockerfile for app deployement

* Update .gitignore

* fix: correct model path for Dockerfile

* fix: allow deployement of docker with nginx"
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-08-31T10:58:52Z,improved streamlit app
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-08-29T12:14:31Z,improved returned json
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-08-26T09:51:23Z,Merge remote-tracking branch 'origin/master'
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-08-26T09:50:33Z,improve streamlit app
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-08-25T14:10:10Z,"Create DockerFile for deploying app  (#76)

* feat: add Dockerfile for app deployement

* Update .gitignore"
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-08-24T14:13:52Z,added streamlit app
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-08-24T12:14:01Z,fixed bugs
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-08-09T08:45:38Z,load models in variables
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-08-02T07:03:48Z,fixed bugs
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-07-28T22:39:24Z,fixed bugs
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-07-26T10:05:03Z,fixed bug
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-07-26T10:02:56Z,fixed bug
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-07-26T10:01:55Z,fixed bug
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-07-26T08:05:23Z,added start and end date to tables
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-07-19T08:59:15Z,"added rules, show result table"
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-07-11T22:21:35Z,fixed pipeline
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-07-09T14:13:16Z,added location extractions from dataset of lacations
github.com/BRGM/hubeau,inria/Code/pipeline.py,2021-07-09T11:44:13Z,"added scripts, first pipeline"
github.com/BRGM/hubeau,inria/Code/pipeline_st.py,2021-09-08T14:10:51Z,"Dockerise the application (#77)

* feat: add Dockerfile for app deployement

* Update .gitignore

* fix: correct model path for Dockerfile

* fix: allow deployement of docker with nginx"
github.com/BRGM/hubeau,inria/Code/pipeline_st.py,2021-09-02T08:10:10Z,improved streamlit app
github.com/BRGM/hubeau,inria/Code/pipeline_st.py,2021-08-31T10:58:52Z,improved streamlit app
github.com/BRGM/hubeau,inria/Code/pipeline_st.py,2021-08-29T12:14:31Z,improved returned json
github.com/BRGM/hubeau,inria/Code/pipeline_st.py,2021-08-29T11:56:33Z,improved app
github.com/BRGM/hubeau,inria/Code/pipeline_st.py,2021-08-26T09:51:23Z,Merge remote-tracking branch 'origin/master'
github.com/BRGM/hubeau,inria/Code/pipeline_st.py,2021-08-26T09:50:33Z,improve streamlit app
github.com/BRGM/hubeau,inria/Code/pipeline_st.py,2021-08-25T14:10:10Z,"Create DockerFile for deploying app  (#76)

* feat: add Dockerfile for app deployement

* Update .gitignore"
github.com/BRGM/hubeau,inria/Code/pipeline_st.py,2021-08-24T14:15:43Z,added streamlit app
github.com/BRGM/hubeau,inria/Code/pipeline_st.py,2021-08-24T14:13:52Z,added streamlit app
github.com/BRGM/hubeau,inria/Code/pipeline_st.py,2021-08-24T12:14:01Z,fixed bugs
github.com/hjkgrp/text_mining_tools,text_mining_tools/MOF_stability_scripts/solvent_removal_stability_extraction.py,2021-08-10T21:06:53Z,Cleaned up scripts for text mining MOF stability
github.com/causalNLP/logical-fallacy,codes_for_models/experiments_round2/analyze_datasets.py,2022-04-23T20:48:57Z,update readme and saved models
github.com/causalNLP/logical-fallacy,codes_for_models/experiments_round2/logicclimate_split.py,2022-04-23T20:48:57Z,update readme and saved models
github.com/causalNLP/logical-fallacy,codes_for_models/experiments_round2/remove_content_words.py,2023-12-11T18:36:37Z,Update remove_content_words.py
github.com/causalNLP/logical-fallacy,codes_for_models/experiments_round2/remove_content_words.py,2022-04-23T20:48:57Z,update readme and saved models
github.com/texttechnologylab/textimager-uima,textimager-uima-stanza/src/main/docker/stanza_service.py,2021-09-17T11:24:17Z,"Update stanza_service.py for Multi and Sentiment, Add StanzaMultiTagger and StanzaMultiTaggerTest"
github.com/texttechnologylab/textimager-uima,textimager-uima-stanza/src/main/docker/stanza_service.py,2021-09-16T19:22:02Z,"Change Route in Stanza to \multi (doens't work yet, why?) and seperate Tests for SpaCyMultiTagger3Tests. Cointains up to Greek until now"
github.com/texttechnologylab/textimager-uima,textimager-uima-stanza/src/main/docker/stanza_service.py,2021-09-16T15:43:45Z,First working Test on SpaCyMultiTagger3Test
github.com/texttechnologylab/textimager-uima,textimager-uima-stanza/src/main/docker/stanza_service.py,2021-08-20T13:40:31Z,Updated Sentiment Tools
github.com/texttechnologylab/textimager-uima,textimager-uima-stanza/src/main/docker/stanza_service.py,2021-08-13T20:31:25Z,"Easier Docker image handling, Sentiment base class with annotator comments, German Bert Sentiment, GerVader, Stanza Sentiment, TextBlob Sentiment"
github.com/texttechnologylab/textimager-uima,textimager-uima-stanza/src/main/docker/stanza_service.py,2021-07-21T16:22:18Z,Stanza sentiment: Fix switched key error
github.com/texttechnologylab/textimager-uima,textimager-uima-stanza/src/main/docker/stanza_service.py,2021-07-21T13:52:00Z,Added Stanza sentiment
github.com/natasha/naeval,docker/stanza/app.py,2020-06-23T05:43:33Z,"Add stanza ner, morph, syntax"
github.com/GateNLP/gateplugin-Python,src/main/resources/resources/pipelines/python-stanford-stanza.py,2021-02-20T09:28:08Z,"Update pipeline parameters, update gatenlp."
github.com/GateNLP/gateplugin-Python,src/main/resources/resources/pipelines/python-stanford-stanza.py,2020-08-22T17:21:39Z,Stanza resources and some empty documentation files
github.com/AdrianBZG/SQLformer,preprocessing/vocabulary_handler.py,2023-12-13T10:27:50Z,Update
github.com/AdrianBZG/SQLformer,preprocessing/vocabulary_handler.py,2023-09-12T10:41:03Z,Upload
github.com/AdrianBZG/SQLformer,preprocessing/spider_questions_to_graph.py,2023-12-14T01:33:39Z,Update
github.com/AdrianBZG/SQLformer,preprocessing/spider_questions_to_graph.py,2023-12-13T10:27:50Z,Update
github.com/AdrianBZG/SQLformer,preprocessing/spider_questions_to_graph.py,2023-09-12T10:41:03Z,Upload
