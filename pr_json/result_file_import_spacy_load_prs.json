[
    {
        "repo_url": "github.com/nedap/deidentify",
        "filepath": "deidentify/tokenizer/tokenizer_de.py",
        "Creation Date": "2021-08-06T13:35:44Z",
        "PR Comment": "Hi @bbieniek, thanks for adding this. The changes look good to me.\n\nI noticed that the CI is failing. It seems to be a false-positive of pylint. I will try to address this issue as soon as possible and afterwards merge the PR.",
        "PR/Issue Number": "60"
    },
    {
        "repo_url": "github.com/nedap/deidentify",
        "filepath": "deidentify/tokenizer/tokenizer_de.py",
        "Creation Date": "2021-08-06T13:41:23Z",
        "PR Comment": "Yes, I saw the CI error as well.\nIt looks like pylint in requirements-dev.txt is not constrained to a specific version.\nPerhaps new rules were added in the latest version.\n\nThanks for addressing the issue :)",
        "PR/Issue Number": "60"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2021-12-03T23:19:37Z",
        "PR Comment": "This pull request **introduces 3 alerts** when merging 4b9e2247754e1b548d425b4c867d6dcd1d69f735 into e10928f5fa87ef2ac9eaabe28f1f2dc0e142b0de - [view on LGTM.com](https://lgtm.com/projects/g/capreolus-ir/capreolus/rev/pr-fade68b466dceeaf4924f6dacaf82b922827ca82)\n\n**new alerts:**\n\n* 1 for Unused local variable\n* 1 for Unused import\n* 1 for Variable defined multiple times",
        "PR/Issue Number": "199"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2022-01-05T22:38:07Z",
        "PR Comment": "This pull request **introduces 3 alerts** when merging bac04a02d67203a305c2fc0d623f751fb8dc7063 into e10928f5fa87ef2ac9eaabe28f1f2dc0e142b0de - [view on LGTM.com](https://lgtm.com/projects/g/capreolus-ir/capreolus/rev/pr-be1f6985507407df1576477646f5a41c1b7e8414)\n\n**new alerts:**\n\n* 1 for Unused local variable\n* 1 for Unused import\n* 1 for Variable defined multiple times",
        "PR/Issue Number": "199"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2022-01-09T22:55:27Z",
        "PR Comment": "This pull request **introduces 2 alerts** when merging 3e0c979af32603e65ebdc85201cbf983fe852873 into e10928f5fa87ef2ac9eaabe28f1f2dc0e142b0de - [view on LGTM.com](https://lgtm.com/projects/g/capreolus-ir/capreolus/rev/pr-890ac6c2d1f5da94b45a2470b7dac44612397cb4)\n\n**new alerts:**\n\n* 1 for Unused import\n* 1 for Variable defined multiple times",
        "PR/Issue Number": "199"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2022-01-10T00:26:23Z",
        "PR Comment": "This pull request **introduces 2 alerts** when merging e9cf9a670f81c2bf784e96a0f2eee4763233cfbd into e10928f5fa87ef2ac9eaabe28f1f2dc0e142b0de - [view on LGTM.com](https://lgtm.com/projects/g/capreolus-ir/capreolus/rev/pr-2565307bea52253b22e5888e139bd77c8c090b7e)\n\n**new alerts:**\n\n* 1 for Unused import\n* 1 for Variable defined multiple times",
        "PR/Issue Number": "199"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2022-01-10T02:22:24Z",
        "PR Comment": "This pull request **introduces 2 alerts** and **fixes 1** when merging 2ec75ad6dbd0b6e09d1d1ac332dac1902775b738 into e10928f5fa87ef2ac9eaabe28f1f2dc0e142b0de - [view on LGTM.com](https://lgtm.com/projects/g/capreolus-ir/capreolus/rev/pr-6d7d9d1fe9d7908d4643a97f75e09a7fb5806584)\n\n**new alerts:**\n\n* 1 for Unused import\n* 1 for Variable defined multiple times\n\n**fixed alerts:**\n\n* 1 for Unused import",
        "PR/Issue Number": "199"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2022-01-10T04:42:48Z",
        "PR Comment": "This pull request **introduces 2 alerts** and **fixes 1** when merging c3edfe84dbeeceea17f9c7029c7a73058f7773b8 into e10928f5fa87ef2ac9eaabe28f1f2dc0e142b0de - [view on LGTM.com](https://lgtm.com/projects/g/capreolus-ir/capreolus/rev/pr-bf58550a16256a89431594dc5b3cea036603545b)\n\n**new alerts:**\n\n* 1 for Unused import\n* 1 for Variable defined multiple times\n\n**fixed alerts:**\n\n* 1 for Unused import",
        "PR/Issue Number": "199"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2022-01-10T17:43:31Z",
        "PR Comment": "the PR looks good to me now. have run the LCE with nneg=4 and 7 at commit `bac04a0`, got score MRR@10 0.397 and 0.405 respectively. Running on the latest commit now.",
        "PR/Issue Number": "199"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2022-01-10T18:11:03Z",
        "PR Comment": "This pull request **introduces 2 alerts** and **fixes 1** when merging d068d012a5615cf4bea6f02ca0004fc562c898e8 into e10928f5fa87ef2ac9eaabe28f1f2dc0e142b0de - [view on LGTM.com](https://lgtm.com/projects/g/capreolus-ir/capreolus/rev/pr-04f3c5de184f3a2bc060da965e10b1d610cdabdd)\n\n**new alerts:**\n\n* 1 for Unused import\n* 1 for Variable defined multiple times\n\n**fixed alerts:**\n\n* 1 for Unused import",
        "PR/Issue Number": "199"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2022-01-11T17:17:03Z",
        "PR Comment": "This pull request **introduces 2 alerts** and **fixes 1** when merging 319155f7899b67456392e05b4b002d16126b24b4 into e10928f5fa87ef2ac9eaabe28f1f2dc0e142b0de - [view on LGTM.com](https://lgtm.com/projects/g/capreolus-ir/capreolus/rev/pr-9783182daaccd61290a1e8e967a244ffef2da340)\n\n**new alerts:**\n\n* 1 for Unused import\n* 1 for Variable defined multiple times\n\n**fixed alerts:**\n\n* 1 for Unused import",
        "PR/Issue Number": "199"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2022-01-14T07:00:13Z",
        "PR Comment": "This pull request **introduces 3 alerts** and **fixes 1** when merging 1b405b763912b00540dfdea0e9fad20bb13d7913 into e10928f5fa87ef2ac9eaabe28f1f2dc0e142b0de - [view on LGTM.com](https://lgtm.com/projects/g/capreolus-ir/capreolus/rev/pr-4570a04e35997696c749433374fad3606a2394cf)\n\n**new alerts:**\n\n* 2 for Unused import\n* 1 for Variable defined multiple times\n\n**fixed alerts:**\n\n* 1 for Unused import",
        "PR/Issue Number": "199"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2022-01-15T23:23:04Z",
        "PR Comment": "This pull request **fixes 1 alert** when merging 0600a9aae5dceefe735bc214f88cdd256cbceea0 into e10928f5fa87ef2ac9eaabe28f1f2dc0e142b0de - [view on LGTM.com](https://lgtm.com/projects/g/capreolus-ir/capreolus/rev/pr-610e121dc3b16fc99e6d939a250d6a335d7a7f60)\n\n**fixed alerts:**\n\n* 1 for Unused import",
        "PR/Issue Number": "199"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2022-01-27T16:22:33Z",
        "PR Comment": "This pull request **fixes 1 alert** when merging dd3a1dfdf3c855be151e0f8a6878d2e2bc0a0caf into 2ba1b7e380cc3f6d6751f826ce8899841a1a56f9 - [view on LGTM.com](https://lgtm.com/projects/g/capreolus-ir/capreolus/rev/pr-f845bdb3f5e627873e9487b236f7036013d3200b)\n\n**fixed alerts:**\n\n* 1 for Unused import",
        "PR/Issue Number": "199"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2022-02-09T04:44:14Z",
        "PR Comment": "This pull request **fixes 1 alert** when merging 0600a9aae5dceefe735bc214f88cdd256cbceea0 into 2ba1b7e380cc3f6d6751f826ce8899841a1a56f9 - [view on LGTM.com](https://lgtm.com/projects/g/capreolus-ir/capreolus/rev/pr-191d40de26ffacb43f033f1a960133b027995992)\n\n**fixed alerts:**\n\n* 1 for Unused import",
        "PR/Issue Number": "199"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2022-02-10T03:10:23Z",
        "PR Comment": "This pull request **fixes 1 alert** when merging 27b081ec1a37d2af6afa6b61eb1cb7cc4ec9db1c into 2ba1b7e380cc3f6d6751f826ce8899841a1a56f9 - [view on LGTM.com](https://lgtm.com/projects/g/capreolus-ir/capreolus/rev/pr-c2623b6a890497dd2c22fe85690e47434fbfce6b)\n\n**fixed alerts:**\n\n* 1 for Unused import",
        "PR/Issue Number": "199"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2022-02-11T18:05:15Z",
        "PR Comment": "the model with monoELECTRA (nneg=31) is put on huggingface - https://huggingface.co/crystina-z/monoELECTRA_LCE_nneg31\nwith MRR@10 = 0.412",
        "PR/Issue Number": "199"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2021-05-24T13:04:52Z",
        "PR Comment": "scores reproduced by `python -m capreolus.run rerank.traineval with file=docs/reproduction/config_parade.txt` at this point:\n```\n2021-05-24 07:18:55,735 - INFO - capreolus.task.rerank.evaluate -                      P_20: 0.4751\n2021-05-24 07:18:55,735 - INFO - capreolus.task.rerank.evaluate -                 judged_20: 0.9380\n2021-05-24 07:18:55,735 - INFO - capreolus.task.rerank.evaluate -                       map: 0.3738\n2021-05-24 07:18:55,735 - INFO - capreolus.task.rerank.evaluate -               ndcg_cut_20: 0.5535   <----\n2021-05-24 07:18:55,735 - INFO - capreolus.task.rerank.evaluate -               recall_1000: 0.7761\n2021-05-24 07:18:55,735 - INFO - capreolus.task.rerank.evaluate -                recip_rank: 0.8050\n2021-05-24 07:18:55,735 - INFO - capreolus.task.rerank.evaluate - interpolated with alphas = [0.0, 0.15000000000000002, 0.15000000000000002, 0.2, 0.25]\n2021-05-24 07:18:55,736 - INFO - capreolus.task.rerank.evaluate -             P_20 [interp]: 0.4835\n2021-05-24 07:18:55,736 - INFO - capreolus.task.rerank.evaluate -        judged_20 [interp]: 0.9633\n2021-05-24 07:18:55,736 - INFO - capreolus.task.rerank.evaluate -              map [interp]: 0.3901\n2021-05-24 07:18:55,736 - INFO - capreolus.task.rerank.evaluate -      ndcg_cut_20 [interp]: 0.5633\n2021-05-24 07:18:55,736 - INFO - capreolus.task.rerank.evaluate -      recall_1000 [interp]: 0.7761\n2021-05-24 07:18:55,736 - INFO - capreolus.task.rerank.evaluate -       recip_rank [interp]: 0.8153\n```\n\n```\nrerank: fold=s1 test metrics: P_1=0.620 P_10=0.496 P_20=0.425 P_5=0.568 judged_10=0.934 judged_20=0.913 judged_200=0.701 map=0.361 ndcg_cut_10=0.502 ndcg_cut_20=0.502 ndcg_cut_5=0.540 recall_100=0.516 recall_1000=0.755 recip_rank=0.710\nrerank: fold=s2 test metrics: P_1=0.755 P_10=0.555 P_20=0.482 P_5=0.678 judged_10=0.967 judged_20=0.938 judged_200=0.695 map=0.377 ndcg_cut_10=0.592 ndcg_cut_20=0.564 ndcg_cut_5=0.658 recall_100=0.531 recall_1000=0.773 recip_rank=0.842\nrerank: fold=s3 test metrics: P_1=0.780 P_10=0.606 P_20=0.512 P_5=0.696 judged_10=0.958 judged_20=0.935 judged_200=0.700 map=0.364 ndcg_cut_10=0.653 ndcg_cut_20=0.609 ndcg_cut_5=0.700 recall_100=0.488 recall_1000=0.727 recip_rank=0.861\nrerank: fold=s4 test metrics: P_1=0.680 P_10=0.550 P_20=0.486 P_5=0.616 judged_10=0.978 judged_20=0.951 judged_200=0.729 map=0.392 ndcg_cut_10=0.553 ndcg_cut_20=0.543 ndcg_cut_5=0.574 recall_100=0.595 recall_1000=0.835 recip_rank=0.788\nrerank: fold=s5 test metrics: P_1=0.740 P_10=0.560 P_20=0.471 P_5=0.644 judged_10=0.974 judged_20=0.953 judged_200=0.735 map=0.375 ndcg_cut_10=0.591 ndcg_cut_20=0.550 ndcg_cut_5=0.646 recall_100=0.545 recall_1000=0.789 recip_rank=0.825\n```\n",
        "PR/Issue Number": "162"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2021-05-25T13:16:18Z",
        "PR Comment": "scores reproduced by `python -m capreolus.run rerank.traineval with file=docs/reproduction/config_parade.txt reranker.trainer.amp=True` at this point:\n\n```\n2021-05-25 09:04:18,100 - INFO - capreolus.task.rerank.evaluate -                      P_20: 0.4819\n2021-05-25 09:04:18,102 - INFO - capreolus.task.rerank.evaluate -                 judged_20: 0.9480\n2021-05-25 09:04:18,103 - INFO - capreolus.task.rerank.evaluate -                       map: 0.3768\n2021-05-25 09:04:18,104 - INFO - capreolus.task.rerank.evaluate -               ndcg_cut_20: 0.5551   <---\n2021-05-25 09:04:18,107 - INFO - capreolus.task.rerank.evaluate -               recall_1000: 0.7761\n2021-05-25 09:04:18,107 - INFO - capreolus.task.rerank.evaluate -                recip_rank: 0.7913\n2021-05-25 09:04:18,108 - INFO - capreolus.task.rerank.evaluate - interpolated with alphas = [0.1, 0.1, 0.2, 0.2, 0.2]\n2021-05-25 09:04:18,111 - INFO - capreolus.task.rerank.evaluate -             P_20 [interp]: 0.4942\n2021-05-25 09:04:18,113 - INFO - capreolus.task.rerank.evaluate -        judged_20 [interp]: 0.9685\n2021-05-25 09:04:18,115 - INFO - capreolus.task.rerank.evaluate -              map [interp]: 0.3903\n2021-05-25 09:04:18,116 - INFO - capreolus.task.rerank.evaluate -      ndcg_cut_20 [interp]: 0.5681\n2021-05-25 09:04:18,119 - INFO - capreolus.task.rerank.evaluate -      recall_1000 [interp]: 0.7761\n2021-05-25 09:04:18,120 - INFO - capreolus.task.rerank.evaluate -       recip_rank [interp]: 0.7968\n```\n\n```\nrerank: fold=s1 test metrics: P_1=0.560 P_10=0.504 P_20=0.442 P_5=0.544 judged_10=0.932 judged_20=0.919 judged_200=0.698 map=0.365 ndcg_cut_10=0.500 ndcg_cut_20=0.504 ndcg_cut_5=0.512 recall_100=0.518 recall_1000=0.755 recip_rank=0.664\nrerank: fold=s2 test metrics: P_1=0.694 P_10=0.569 P_20=0.452 P_5=0.645 judged_10=0.971 judged_20=0.936 judged_200=0.695 map=0.367 ndcg_cut_10=0.589 ndcg_cut_20=0.536 ndcg_cut_5=0.629 recall_100=0.525 recall_1000=0.773 recip_rank=0.802\nrerank: fold=s3 test metrics: P_1=0.720 P_10=0.612 P_20=0.508 P_5=0.676 judged_10=0.976 judged_20=0.941 judged_200=0.702 map=0.358 ndcg_cut_10=0.642 ndcg_cut_20=0.599 ndcg_cut_5=0.666 recall_100=0.490 recall_1000=0.727 recip_rank=0.825\nrerank: fold=s4 test metrics: P_1=0.720 P_10=0.572 P_20=0.508 P_5=0.640 judged_10=0.990 judg ed_20=0.975 judged_200=0.755 map=0.403 ndcg_cut_10=0.567 ndcg_cut_20=0.561 ndcg_cut_5=0.592 recall_100=0.597 recall_1000=0.835 recip_rank=0.808\nrerank: fold=s5 test metrics: P_1=0.800 P_10=0.594 P_20=0.499 P_5=0.652 judged_10=0.986 judged_20=0.969 judged_200=0.759 map=0.390 ndcg_cut_10=0.618 ndcg_cut_20=0.575 ndcg_cut_5=0.656 recall_100=0.554 recall_1000=0.789 recip_rank=0.858\n```",
        "PR/Issue Number": "162"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2021-05-26T00:01:01Z",
        "PR Comment": "scores with `reranker.name=ptparade` (same config with `docs/reproduction/config_parade.txt`, but removing the `bertlr` and `trainer.loss` lines), `amp=both`\n```\n2021-05-26 01:47:48,367 - INFO - capreolus.task.rerank.evaluate -                      P_20: 0.4783\n2021-05-26 01:47:48,367 - INFO - capreolus.task.rerank.evaluate -                 judged_20: 0.9480\n2021-05-26 01:47:48,367 - INFO - capreolus.task.rerank.evaluate -                       map: 0.3666\n2021-05-26 01:47:48,367 - INFO - capreolus.task.rerank.evaluate -               ndcg_cut_20: 0.5478   <---\n2021-05-26 01:47:48,367 - INFO - capreolus.task.rerank.evaluate -               recall_1000: 0.7761\n2021-05-26 01:47:48,367 - INFO - capreolus.task.rerank.evaluate -                recip_rank: 0.7963\n2021-05-26 01:47:48,367 - INFO - capreolus.task.rerank.evaluate - interpolated with alphas = [0.05, 0.05, 0.1, 0.2, 0.25]\n2021-05-26 01:47:48,367 - INFO - capreolus.task.rerank.evaluate -             P_20 [interp]: 0.4896\n2021-05-26 01:47:48,367 - INFO - capreolus.task.rerank.evaluate -        judged_20 [interp]: 0.9639\n2021-05-26 01:47:48,367 - INFO - capreolus.task.rerank.evaluate -              map [interp]: 0.3782\n2021-05-26 01:47:48,368 - INFO - capreolus.task.rerank.evaluate -      ndcg_cut_20 [interp]: 0.5580\n2021-05-26 01:47:48,368 - INFO - capreolus.task.rerank.evaluate -      recall_1000 [interp]: 0.7761\n2021-05-26 01:47:48,368 - INFO - capreolus.task.rerank.evaluate -       recip_rank [interp]: 0.7821\n```\n\n\nand score with `python rerank.traineval` (knrm on rob04):\n```\n2021-05-25 17:26:12,834 - INFO - capreolus.task.rerank.evaluate -                      P_20: 0.3293\n2021-05-25 17:26:12,834 - INFO - capreolus.task.rerank.evaluate -                 judged_20: 0.9384\n2021-05-25 17:26:12,834 - INFO - capreolus.task.rerank.evaluate -                judged_200: 0.7469\n2021-05-25 17:26:12,834 - INFO - capreolus.task.rerank.evaluate -                       map: 0.2325\n2021-05-25 17:26:12,834 - INFO - capreolus.task.rerank.evaluate -               ndcg_cut_20: 0.3859   <---\n2021-05-25 17:26:12,835 - INFO - capreolus.task.rerank.evaluate -               recall_1000: 0.6989\n2021-05-25 17:26:12,835 - INFO - capreolus.task.rerank.evaluate -                recip_rank: 0.6545\n2021-05-25 17:26:12,835 - INFO - capreolus.task.rerank.evaluate - interpolated with alphas = [0.05, 0.45, 0.5, 0.65, 0.7000000000000001]\n2021-05-25 17:26:12,835 - INFO - capreolus.task.rerank.evaluate -             P_20 [interp]: 0.3725\n2021-05-25 17:26:12,835 - INFO - capreolus.task.rerank.evaluate -        judged_20 [interp]: 0.9763\n2021-05-25 17:26:12,835 - INFO - capreolus.task.rerank.evaluate -              map [interp]: 0.2625\n2021-05-25 17:26:12,835 - INFO - capreolus.task.rerank.evaluate -      ndcg_cut_20 [interp]: 0.4350   <---\n2021-05-25 17:26:12,835 - INFO - capreolus.task.rerank.evaluate -      recall_1000 [interp]: 0.6989\n2021-05-25 17:26:12,835 - INFO - capreolus.task.rerank.evaluate -       recip_rank [interp]: 0.6981\n```",
        "PR/Issue Number": "162"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2021-05-29T20:11:45Z",
        "PR Comment": "using torch==1.8.1 seems to decrease the score a bit on my end:\nthe score of running the command below are (on the latest commit):\n```\npython -m capreolus.run rerank.traineval with file=docs/reproduction/config_paradept.txt reranker.trainer.amp=both\n```\n\n`torch` version | mAP | P@20 | NDCG@20\n-- | -- | -- | --\n1.6 | 0.3687 | 0.4851 | 0.5533\n1.7 | 0.3687 | 0.4851 | 0.5533\n1.8 | 0.3666 | 0.4783 | 0.5478\n\n(btw I've run the experiment for torch-1.8 twice, and the results are exactly the same)",
        "PR/Issue Number": "162"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-07-17T12:52:02Z",
        "PR Comment": "This pull request **introduces 7 alerts** when merging e6d17478e2fcd1bb878dd32aa8d6ff64cbdf70af into b31f2ab324b7add54a5598a549618f9cf9eaa407 - [view on LGTM.com](https://lgtm.com/projects/g/capreolus-ir/capreolus/rev/pr-60c47e1482851acd163137d06aedc6d3325bde28)\n\n**new alerts:**\n\n* 7 for Unused import",
        "PR/Issue Number": "77"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-07-02T11:02:11Z",
        "PR Comment": "This pull request **fixes 53 alerts** when merging a2839fa50137e62ac3a3fb34ab3999fcce5bda4e into 75cd2421246e4bd0fed65b203d8813a23727c7e0 - [view on LGTM.com](https://lgtm.com/projects/g/capreolus-ir/capreolus/rev/pr-48486da144401c30fed876746fdf0f06fa6f98a3)\n\n**fixed alerts:**\n\n* 47 for Unused import\n* 3 for Unused local variable\n* 1 for Unnecessary &#39;else&#39; clause in loop\n* 1 for Suspicious unused loop iteration variable\n* 1 for Module is imported with &#39;import&#39; and &#39;import from&#39;",
        "PR/Issue Number": "72"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-05-29T23:40:34Z",
        "PR Comment": "any suggestions where to pass this from? add a 'doc_to_exclude' in `query_from_file ` parameter would make it clumsy for all the other searchers since they can't really do anything with it; (or we can refactor all the searcher to make all of them support doc filtering)\n\nor another way, does it make sense to let searcher depends on benchmark? since sometimes the `topicreader` might not be `trec` but depends on the type of topic_fn in benchmark. say there we could also use `-topicreader Covid`. ",
        "PR/Issue Number": "47"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-05-28T09:56:22Z",
        "PR Comment": "> 5. support transfer learning?, i.e. use different dataset (collection+benchmark) at training & test stage\n\nWe will want to do this, but I think we can handle it in a generic way outside the dataset\n\n> 6. udel query generator?\n\nGood catch. Can we add this?",
        "PR/Issue Number": "47"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-05-29T23:45:37Z",
        "PR Comment": "and since the covid dataset is 80% done (only the paragraph index is not supported now); shall we start to try some methods that can be done only with this? Then at the same time I'll also add the other dataset in",
        "PR/Issue Number": "47"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-05-29T23:40:34Z",
        "PR Comment": "any suggestions where to pass this from? add a 'doc_to_exclude' in `query_from_file ` parameter would make it clumsy for all the other searchers since they can't really do anything with it; (or we can refactor all the searcher to make all of them support doc filtering)\n\nor another way, does it make sense to let searcher depends on benchmark? since sometimes the `topicreader` might not be `trec` but depends on the type of topic_fn in benchmark. say there we could also use `-topicreader Covid`. ",
        "PR/Issue Number": "47"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-05-28T09:56:22Z",
        "PR Comment": "> 5. support transfer learning?, i.e. use different dataset (collection+benchmark) at training & test stage\n\nWe will want to do this, but I think we can handle it in a generic way outside the dataset\n\n> 6. udel query generator?\n\nGood catch. Can we add this?",
        "PR/Issue Number": "47"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-05-29T23:45:37Z",
        "PR Comment": "and since the covid dataset is 80% done (only the paragraph index is not supported now); shall we start to try some methods that can be done only with this? Then at the same time I'll also add the other dataset in",
        "PR/Issue Number": "47"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-03-27T18:33:00Z",
        "PR Comment": "Msmarco",
        "PR/Issue Number": "38"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-03-27T18:33:44Z",
        "PR Comment": "New caching logic",
        "PR/Issue Number": "38"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-03-27T18:35:34Z",
        "PR Comment": "The new config flags",
        "PR/Issue Number": "38"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-03-27T18:37:31Z",
        "PR Comment": "No longer uses git lfs. The caveat is that we should remember to update the link if folds/qrels ever change or if we add a new dataset. This is not really that much of a big deal since the unit tests only make use of the dummy dataset and the dummy dataset would never really change.",
        "PR/Issue Number": "38"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-03-31T15:30:16Z",
        "PR Comment": "Is this used anywhere?",
        "PR/Issue Number": "38"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-03-31T15:32:54Z",
        "PR Comment": "I think this isn't used -- it was before the rewrite, but now it's a config option of the tokenizer dependency",
        "PR/Issue Number": "38"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-03-31T15:34:34Z",
        "PR Comment": "Good catch. Will fix in a separate PR cleaning up the pipeline init",
        "PR/Issue Number": "38"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-03-31T15:41:10Z",
        "PR Comment": "Maybe this should be based on `niters` rather than `iters_so_far`, so that the same iters are checked against the validation set even if `fastforward=True` causes training to be resumed?",
        "PR/Issue Number": "38"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-03-31T16:05:34Z",
        "PR Comment": "No I was copy pasting things from the old code. ",
        "PR/Issue Number": "38"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-03-27T18:33:00Z",
        "PR Comment": "Msmarco",
        "PR/Issue Number": "38"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-03-27T18:33:44Z",
        "PR Comment": "New caching logic",
        "PR/Issue Number": "38"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-03-27T18:35:34Z",
        "PR Comment": "The new config flags",
        "PR/Issue Number": "38"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-03-27T18:37:31Z",
        "PR Comment": "No longer uses git lfs. The caveat is that we should remember to update the link if folds/qrels ever change or if we add a new dataset. This is not really that much of a big deal since the unit tests only make use of the dummy dataset and the dummy dataset would never really change.",
        "PR/Issue Number": "38"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-03-31T15:30:16Z",
        "PR Comment": "Is this used anywhere?",
        "PR/Issue Number": "38"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-03-31T15:32:54Z",
        "PR Comment": "I think this isn't used -- it was before the rewrite, but now it's a config option of the tokenizer dependency",
        "PR/Issue Number": "38"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-03-31T15:34:34Z",
        "PR Comment": "Good catch. Will fix in a separate PR cleaning up the pipeline init",
        "PR/Issue Number": "38"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-03-31T15:41:10Z",
        "PR Comment": "Maybe this should be based on `niters` rather than `iters_so_far`, so that the same iters are checked against the validation set even if `fastforward=True` causes training to be resumed?",
        "PR/Issue Number": "38"
    },
    {
        "repo_url": "github.com/capreolus-ir/capreolus",
        "filepath": "capreolus/utils/common.py",
        "Creation Date": "2020-03-31T16:05:34Z",
        "PR Comment": "No I was copy pasting things from the old code. ",
        "PR/Issue Number": "38"
    },
    {
        "repo_url": "github.com/andrewrosss/rake-spacy",
        "filepath": "rake_spacy/rake.py",
        "Creation Date": "2020-09-15T06:27:25Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=h1) Report\n> :exclamation: No coverage uploaded for pull request base (`master@3e365a5`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8/graphs/tree.svg?width=650&height=150&src=pr&token=JV5LGKM3LZ)](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##             master       #8   +/-   ##\n=========================================\n  Coverage          ?   86.74%           \n=========================================\n  Files             ?        8           \n  Lines             ?      181           \n  Branches          ?        0           \n=========================================\n  Hits              ?      157           \n  Misses            ?       24           \n  Partials          ?        0           \n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=footer). Last update [3e365a5...8010737](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "8"
    },
    {
        "repo_url": "github.com/andrewrosss/rake-spacy",
        "filepath": "rake_spacy/rake.py",
        "Creation Date": "2020-09-15T06:27:25Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=h1) Report\n> :exclamation: No coverage uploaded for pull request base (`master@3e365a5`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8/graphs/tree.svg?width=650&height=150&src=pr&token=JV5LGKM3LZ)](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##             master       #8   +/-   ##\n=========================================\n  Coverage          ?   86.74%           \n=========================================\n  Files             ?        8           \n  Lines             ?      181           \n  Branches          ?        0           \n=========================================\n  Hits              ?      157           \n  Misses            ?       24           \n  Partials          ?        0           \n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=footer). Last update [3e365a5...8010737](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "8"
    },
    {
        "repo_url": "github.com/andrewrosss/rake-spacy",
        "filepath": "rake_spacy/rake.py",
        "Creation Date": "2020-09-15T06:27:25Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=h1) Report\n> :exclamation: No coverage uploaded for pull request base (`master@3e365a5`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8/graphs/tree.svg?width=650&height=150&src=pr&token=JV5LGKM3LZ)](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##             master       #8   +/-   ##\n=========================================\n  Coverage          ?   86.74%           \n=========================================\n  Files             ?        8           \n  Lines             ?      181           \n  Branches          ?        0           \n=========================================\n  Hits              ?      157           \n  Misses            ?       24           \n  Partials          ?        0           \n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=footer). Last update [3e365a5...8010737](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "8"
    },
    {
        "repo_url": "github.com/andrewrosss/rake-spacy",
        "filepath": "tests/conftest.py",
        "Creation Date": "2020-09-15T06:27:25Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=h1) Report\n> :exclamation: No coverage uploaded for pull request base (`master@3e365a5`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8/graphs/tree.svg?width=650&height=150&src=pr&token=JV5LGKM3LZ)](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##             master       #8   +/-   ##\n=========================================\n  Coverage          ?   86.74%           \n=========================================\n  Files             ?        8           \n  Lines             ?      181           \n  Branches          ?        0           \n=========================================\n  Hits              ?      157           \n  Misses            ?       24           \n  Partials          ?        0           \n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=footer). Last update [3e365a5...8010737](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "8"
    },
    {
        "repo_url": "github.com/andrewrosss/rake-spacy",
        "filepath": "tests/conftest.py",
        "Creation Date": "2020-09-15T06:27:25Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=h1) Report\n> :exclamation: No coverage uploaded for pull request base (`master@3e365a5`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8/graphs/tree.svg?width=650&height=150&src=pr&token=JV5LGKM3LZ)](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##             master       #8   +/-   ##\n=========================================\n  Coverage          ?   86.74%           \n=========================================\n  Files             ?        8           \n  Lines             ?      181           \n  Branches          ?        0           \n=========================================\n  Hits              ?      157           \n  Misses            ?       24           \n  Partials          ?        0           \n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=footer). Last update [3e365a5...8010737](https://codecov.io/gh/andrewrosss/rake-spacy/pull/8?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "8"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/IgorBurian/10-vectors/vectors.py",
        "Creation Date": "2020-05-23T12:51:37Z",
        "PR Comment": "\u0429\u0435 \u0448\u043a\u043e\u0434\u0430, \u0449\u043e \u043d\u0435 \u0441\u043f\u0440\u043e\u0431\u0443\u0432\u0430\u0432 \u043f\u043e\u0435\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u0443\u0432\u0430\u0442\u0438 \u0437 \u0432\u0435\u043a\u0442\u043e\u0440\u0430\u043c\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0443.\n\u041e\u0446\u0456\u043d\u043a\u0430: 90 ",
        "PR/Issue Number": "122"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/IgorBurian/10-vectors/vectors.py",
        "Creation Date": "2020-05-23T15:58:59Z",
        "PR Comment": "@vseloved \u0434\u044f\u043a\u0443\u044e \u0437\u0430 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0456!\n\n> \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f class_weight=balanced \u043d\u0430\u0432\u0447\u0430\u043d\u043d\u044f \u0443 \u0432c\u0456\u0445 \u043a\u043b\u0430\u0441\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440\u0430\u0445, \u043e\u0447\u0435\u0432\u0438\u0434\u043d\u043e, \u043f\u043e\u0433\u0430\u043d\u043e \u0432\u043f\u043b\u0438\u043d\u0443\u043b\u043e \u043d\u0430 \u044f\u043a\u0456\u0441\u0442\u044c, \u0447\u0435\u0440\u0435\u0437 \u043d\u0430\u044f\u0432\u043d\u0456\u0441\u0442\u044c \u043f\u0435\u0440\u0435\u0432\u0430\u0436\u043d\u043e\u0457 \u043a\u0456\u043b\u044c\u043a\u043e\u0441\u0442\u0456 \u043c\u0430\u043b\u043e\u0440\u0435\u043f\u0440\u0435\u0437\u0435\u043d\u0442\u043e\u0432\u0430\u043d\u0438\u0445 \u043a\u043b\u0430\u0441\u0456\u0432. \u0422\u043e\u043c\u0443, \u0432 \u0442\u0430\u043a\u0456\u0439 \u0437\u0430\u0434\u0430\u0447\u0456 \u0442\u0440\u0435\u0431\u0430 \u0448\u0443\u043a\u0430\u0442\u0438 \u044f\u043a\u0456\u0441\u044c \u0441\u043a\u043b\u0430\u0434\u043d\u0456\u0448\u0456 \u0448\u043b\u044f\u0445\u0438, \u043d\u0456\u0436 1 \u043a\u043b\u0430\u0441\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440 \u043d\u0430 \u0432\u0441\u0435.\n\n\u0417\u0440\u043e\u0437\u0443\u043c\u0456\u0432! \u0410 \u0449\u043e\u0431 \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0440\u043e\u0431\u0443\u0432\u0430\u0442\u0438? \u041c\u043e\u0436\u043b\u0438\u0432\u043e \u0454 \u0440\u043e\u0431\u043e\u0442\u0438 \u0456\u043d\u0448\u0438\u0445 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u0456\u0432 \u044f\u043a\u0456 \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0431 \u0432\u0437\u044f\u0442\u0438 \u0437\u0430 \u043f\u0440\u0438\u043a\u043b\u0430\u0434?\n\n> \u0429\u0435 \u0448\u043a\u043e\u0434\u0430, \u0449\u043e \u043d\u0435 \u0441\u043f\u0440\u043e\u0431\u0443\u0432\u0430\u0432 \u043f\u043e\u0435\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u0443\u0432\u0430\u0442\u0438 \u0437 \u0432\u0435\u043a\u0442\u043e\u0440\u0430\u043c\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0443.\n\n\u0410 \u044f\u043a\u0456 \u0441\u0430\u043c\u0435 \u0435\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u0438 \u044f \u0431 \u043c\u0456\u0433 \u0437\u0440\u043e\u0431\u0438\u0442\u0438? \u041f\u0456\u0434\u0431\u0456\u0440 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0456\u0432 doc2vec? \u0406\u043d\u0448\u0456 \u0432\u0435\u043a\u0442\u043e\u0440\u0438 \u0437 lang-uk? \u0427\u0438 \u0440\u0456\u0447 \u043f\u0440\u043e \u0449\u043e\u0441\u044c \u0456\u043d\u0448\u0435?",
        "PR/Issue Number": "122"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/IgorBurian/10-vectors/vectors.py",
        "Creation Date": "2020-05-31T16:10:19Z",
        "PR Comment": "\u041d\u0430\u043f\u0438\u0441\u0430\u0432 \u0443 \u0437\u0430\u0433\u0430\u043b\u044c\u043d\u0438\u0445 \u0432\u0438\u0441\u043d\u043e\u0432\u043a\u0430\u0445 \u0432 \u0441\u043b\u0435\u043a\u0443 \u0442\u0440\u043e\u0445\u0438",
        "PR/Issue Number": "122"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework4/sparql.py",
        "Creation Date": "2020-06-13T12:48:19Z",
        "PR Comment": "\u0413\u0430\u0440\u043d\u0430 \u0440\u043e\u0431\u043e\u0442\u0430. \u041d\u0430\u043f\u0438\u0448\u0443 \u043a\u0456\u043b\u044c\u043a\u0430 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0456\u0432 \u0443 \u0447\u0430\u0442\u0456 \u0432\u0436\u0435 :) ",
        "PR/Issue Number": "154"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/04-homework/parse.py",
        "Creation Date": "2020-04-11T18:34:15Z",
        "PR Comment": "> \u0413\u0430\u0440\u043d\u0430 \u0440\u043e\u0431\u043e\u0442\u0430! \u0410 \u044f\u043a \u0449\u043e\u0434\u043e \u043a\u0443\u0440\u0441\u043e\u0432\u043e\u0433\u043e?\n\n\u0412\u0441\u0435 \u0441\u0438\u043b\u044b \u043d\u0430 \u043a\u0443\u0440\u0441\u043e\u0432\u043e\u0439 \u0441\u0435\u0439\u0447\u0430\u0441! \n\n\n> \u0413\u0430\u0440\u043d\u0430 \u0440\u043e\u0431\u043e\u0442\u0430, \u043c\u0435\u043d\u0456 \u0441\u043f\u043e\u0434\u043e\u0431\u0430\u0432\u0441\u044f \u043f\u0456\u0434\u0445\u0456\u0434 \u0434\u043e \u0440\u043e\u0437\u0440\u043e\u0431\u043a\u0438 \u043f\u0440\u0430\u0432\u0438\u043b. \u0422\u0430\u043a\u043e\u0436 \u0434\u044f\u043a\u0443\u044e \u0437\u0430 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u043b\u0438\u0439 \u043e\u043f\u0438\u0441.\n> \u0404\u0434\u0438\u043d\u0435 \u043f\u0438\u0442\u0430\u043d\u043d\u044f \u043f\u043e \u0432\u0438\u043c\u0456\u0440\u044e\u0432\u0430\u043d\u043d\u044e \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0456: \u0442\u0438 \u0440\u0430\u0445\u0443\u0454\u0448 \u0441\u0443\u043c\u0443 \u043f\u043e\u0434\u0456\u043b\u0438\u0442\u0438 \u043d\u0430 \u0437\u0430\u0433\u0430\u043b\u044c\u043d\u0443 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u0433\u043e\u043d\u043e\u043a. (\u0434\u043e \u0440\u0435\u0447\u0456, \u0442\u0438 \u0432 \u043e\u0441\u0442\u0430\u043d\u043d\u044c\u043e\u043c\u0443 \u043a\u043e\u043c\u0456\u0442\u0456 \u043f\u0438\u0448\u0435\u0448 25%->35%, \u0430\u043b\u0435 \u043d\u0435 \u043e\u043d\u043e\u0432\u0438\u0432 \u0446\u0435 \u0443 \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0443). \u0410, \u043c\u043e\u0436\u0435, \u043d\u0430 \u0441\u0442\u043e\u0440\u0456\u043d\u0446\u0456 \u0428\u0443\u043c\u0430\u0445\u0435\u0440\u0430 \u043f\u0435\u0440\u0435\u043b\u0456\u0447\u0435\u043d\u0456 \u0432 \u0442\u0435\u043a\u0441\u0442\u0456 \u043d\u0435 \u0432\u0441\u0456 \u0433\u043e\u043d\u043a\u0438, \u0434\u0435 \u0432\u0456\u043d \u0434\u043e\u0441\u044f\u0433 \u044f\u043a\u043e\u0441\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0443? \u0411\u043e \u0432\u0438\u0433\u043b\u044f\u0434\u0430\u0454 \u0434\u0438\u0432\u043d\u043e, \u0449\u043e \u0442\u0438 \u0437\u043c\u0456\u0433 \u0437\u043d\u0430\u0439\u0442\u0438 \u0442\u0456\u043b\u044c\u043a\u0438 46 \u0433\u043e\u043d\u043e\u043a \u0437 91-\u0457. \u0422\u0443\u0442 \u0442\u043e\u0447\u043d\u043e \u043d\u0435\u043c\u0430 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0438?\n> P.S. \u041c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0431 \u0449\u0435 \u043f\u043e\u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u0443 \u0412\u0456\u043a\u0456\u043f\u0435\u0434\u0456\u0457 \u043f\u0440\u043e \u0442\u0456 \u0432\u0441\u0456 \u0441\u0435\u0437\u043e\u043d\u0438 F1 \u0456 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 \u044f\u043a\u0456\u0441\u0442\u044c \u043d\u0430 \u043d\u0438\u0445. \u0422\u043e\u0434\u0456 \u0431\u0443\u0432 \u0431\u0438 \u043f\u043e\u0432\u043d\u0438\u0439 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0442\n\n\u0434\u0430, \u043c\u043d\u043e\u0433\u0438\u0435 \u0433\u043e\u043d\u043a\u0438 \u0438\u043c\u0435\u044e\u0442 \u0444\u043e\u0440\u043c\u0430\u0442 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0433\u0434\u0435 \u043e\u0447\u0435\u043d\u044c \u0442\u0443\u0440\u0434\u043d\u043e \u0432\u044b\u043a\u043e\u043f\u0430\u0442\u044c \u043a\u0442\u043e-\u0436\u0435 \u0432\u044b\u0438\u0433\u0440\u0430\u043b. \u0414\u0443\u043c\u0430\u044e \u044d\u0442\u043e \u0441\u0432\u044f\u0437\u0430\u043d\u043e \u0441 \u0442\u0435\u043c, \u0447\u0442\u043e \u0430\u0432\u0442\u043e\u0440 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0432 \u0438\u043d\u0444\u043e\u0431\u043e\u043a\u0441 \u0430 \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u043c \u0442\u0435\u043a\u0441\u0442\u0435 \u043f\u0438\u0448\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043c\u043e\u043c\u0435\u043d\u0442\u044b \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043d \u043d\u0430\u0448\u0451\u043b \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u044b\u043c\u0438. \u0411\u043e\u043b\u044c\u0448\u0435 \u0432\u0441\u0435\u0433\u043e \u044d\u0442\u0438\u043c \u0433\u0440\u0435\u0448\u0438\u0442 \u0430\u0432\u0442\u043e\u0440  \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0448\u0435\u0442 \u043f\u0440\u043e \u0433\u043f \u0418\u0441\u043f\u0430\u043d\u0438\u0438 :)), \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \n```\nSchumacher got a perfect start despite the green light failing to illuminate. He led from start to finish on a two stop strategy. Team mate Herbert memorably left the pits with the rear jack attached to his car. This was not the only drama in the pit lane as Gachot suffered a small refuelling fire when pulling away from his second stop. \n``` \n\u0442.\u0435. \u043d\u0443\u0436\u043d\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u043a\u043d\u043e\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u0447\u0435\u043c \u043e\u0434\u043d\u043e \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0435. \u0427\u0442\u043e \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e doable \u043d\u043e \u0432 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0443\u0436\u0435 \u0431\u0443\u0434\u0443\u0442 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0432\u0441\u0435 \u0441\u0438\u043b\u044b \u043d\u0430 \u043a\u0443\u0440\u0441\u043e\u0432\u043e\u0439. ",
        "PR/Issue Number": "58"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/04-homework/parse.py",
        "Creation Date": "2020-04-16T09:58:26Z",
        "PR Comment": "\u041e\u0446\u0456\u043d\u043a\u0430: 70. \u0411\u043e \u0454 \u043a\u0443\u0434\u0438 \u043f\u043e\u043a\u0440\u0430\u0449\u0443\u0432\u0430\u0442\u0438 \u044f\u043a\u0456\u0441\u0442\u044c \u0456 \u0456\u0442\u0435\u0440\u0443\u0432\u0430\u0442\u0438 (\u043d\u0435 \u0432\u0438\u0441\u0442\u0430\u0447\u0430\u0454 \u0445\u043e\u0447\u0430 \u0431 \u043e\u0434\u043d\u0456\u0454\u0457 \u0456\u0442\u0435\u0440\u0430\u0446\u0456\u0457 \u0449\u0435)",
        "PR/Issue Number": "58"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/04-homework/parse.py",
        "Creation Date": "2020-04-11T18:34:15Z",
        "PR Comment": "> \u0413\u0430\u0440\u043d\u0430 \u0440\u043e\u0431\u043e\u0442\u0430! \u0410 \u044f\u043a \u0449\u043e\u0434\u043e \u043a\u0443\u0440\u0441\u043e\u0432\u043e\u0433\u043e?\n\n\u0412\u0441\u0435 \u0441\u0438\u043b\u044b \u043d\u0430 \u043a\u0443\u0440\u0441\u043e\u0432\u043e\u0439 \u0441\u0435\u0439\u0447\u0430\u0441! \n\n\n> \u0413\u0430\u0440\u043d\u0430 \u0440\u043e\u0431\u043e\u0442\u0430, \u043c\u0435\u043d\u0456 \u0441\u043f\u043e\u0434\u043e\u0431\u0430\u0432\u0441\u044f \u043f\u0456\u0434\u0445\u0456\u0434 \u0434\u043e \u0440\u043e\u0437\u0440\u043e\u0431\u043a\u0438 \u043f\u0440\u0430\u0432\u0438\u043b. \u0422\u0430\u043a\u043e\u0436 \u0434\u044f\u043a\u0443\u044e \u0437\u0430 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u043b\u0438\u0439 \u043e\u043f\u0438\u0441.\n> \u0404\u0434\u0438\u043d\u0435 \u043f\u0438\u0442\u0430\u043d\u043d\u044f \u043f\u043e \u0432\u0438\u043c\u0456\u0440\u044e\u0432\u0430\u043d\u043d\u044e \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0456: \u0442\u0438 \u0440\u0430\u0445\u0443\u0454\u0448 \u0441\u0443\u043c\u0443 \u043f\u043e\u0434\u0456\u043b\u0438\u0442\u0438 \u043d\u0430 \u0437\u0430\u0433\u0430\u043b\u044c\u043d\u0443 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u0433\u043e\u043d\u043e\u043a. (\u0434\u043e \u0440\u0435\u0447\u0456, \u0442\u0438 \u0432 \u043e\u0441\u0442\u0430\u043d\u043d\u044c\u043e\u043c\u0443 \u043a\u043e\u043c\u0456\u0442\u0456 \u043f\u0438\u0448\u0435\u0448 25%->35%, \u0430\u043b\u0435 \u043d\u0435 \u043e\u043d\u043e\u0432\u0438\u0432 \u0446\u0435 \u0443 \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0443). \u0410, \u043c\u043e\u0436\u0435, \u043d\u0430 \u0441\u0442\u043e\u0440\u0456\u043d\u0446\u0456 \u0428\u0443\u043c\u0430\u0445\u0435\u0440\u0430 \u043f\u0435\u0440\u0435\u043b\u0456\u0447\u0435\u043d\u0456 \u0432 \u0442\u0435\u043a\u0441\u0442\u0456 \u043d\u0435 \u0432\u0441\u0456 \u0433\u043e\u043d\u043a\u0438, \u0434\u0435 \u0432\u0456\u043d \u0434\u043e\u0441\u044f\u0433 \u044f\u043a\u043e\u0441\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0443? \u0411\u043e \u0432\u0438\u0433\u043b\u044f\u0434\u0430\u0454 \u0434\u0438\u0432\u043d\u043e, \u0449\u043e \u0442\u0438 \u0437\u043c\u0456\u0433 \u0437\u043d\u0430\u0439\u0442\u0438 \u0442\u0456\u043b\u044c\u043a\u0438 46 \u0433\u043e\u043d\u043e\u043a \u0437 91-\u0457. \u0422\u0443\u0442 \u0442\u043e\u0447\u043d\u043e \u043d\u0435\u043c\u0430 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0438?\n> P.S. \u041c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0431 \u0449\u0435 \u043f\u043e\u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u0443 \u0412\u0456\u043a\u0456\u043f\u0435\u0434\u0456\u0457 \u043f\u0440\u043e \u0442\u0456 \u0432\u0441\u0456 \u0441\u0435\u0437\u043e\u043d\u0438 F1 \u0456 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 \u044f\u043a\u0456\u0441\u0442\u044c \u043d\u0430 \u043d\u0438\u0445. \u0422\u043e\u0434\u0456 \u0431\u0443\u0432 \u0431\u0438 \u043f\u043e\u0432\u043d\u0438\u0439 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0442\n\n\u0434\u0430, \u043c\u043d\u043e\u0433\u0438\u0435 \u0433\u043e\u043d\u043a\u0438 \u0438\u043c\u0435\u044e\u0442 \u0444\u043e\u0440\u043c\u0430\u0442 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0433\u0434\u0435 \u043e\u0447\u0435\u043d\u044c \u0442\u0443\u0440\u0434\u043d\u043e \u0432\u044b\u043a\u043e\u043f\u0430\u0442\u044c \u043a\u0442\u043e-\u0436\u0435 \u0432\u044b\u0438\u0433\u0440\u0430\u043b. \u0414\u0443\u043c\u0430\u044e \u044d\u0442\u043e \u0441\u0432\u044f\u0437\u0430\u043d\u043e \u0441 \u0442\u0435\u043c, \u0447\u0442\u043e \u0430\u0432\u0442\u043e\u0440 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0432 \u0438\u043d\u0444\u043e\u0431\u043e\u043a\u0441 \u0430 \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u043c \u0442\u0435\u043a\u0441\u0442\u0435 \u043f\u0438\u0448\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043c\u043e\u043c\u0435\u043d\u0442\u044b \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043d \u043d\u0430\u0448\u0451\u043b \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u044b\u043c\u0438. \u0411\u043e\u043b\u044c\u0448\u0435 \u0432\u0441\u0435\u0433\u043e \u044d\u0442\u0438\u043c \u0433\u0440\u0435\u0448\u0438\u0442 \u0430\u0432\u0442\u043e\u0440  \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0448\u0435\u0442 \u043f\u0440\u043e \u0433\u043f \u0418\u0441\u043f\u0430\u043d\u0438\u0438 :)), \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \n```\nSchumacher got a perfect start despite the green light failing to illuminate. He led from start to finish on a two stop strategy. Team mate Herbert memorably left the pits with the rear jack attached to his car. This was not the only drama in the pit lane as Gachot suffered a small refuelling fire when pulling away from his second stop. \n``` \n\u0442.\u0435. \u043d\u0443\u0436\u043d\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u043a\u043d\u043e\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u0447\u0435\u043c \u043e\u0434\u043d\u043e \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0435. \u0427\u0442\u043e \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e doable \u043d\u043e \u0432 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0443\u0436\u0435 \u0431\u0443\u0434\u0443\u0442 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0432\u0441\u0435 \u0441\u0438\u043b\u044b \u043d\u0430 \u043a\u0443\u0440\u0441\u043e\u0432\u043e\u0439. ",
        "PR/Issue Number": "58"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/04-homework/parse.py",
        "Creation Date": "2020-04-16T09:58:26Z",
        "PR Comment": "\u041e\u0446\u0456\u043d\u043a\u0430: 70. \u0411\u043e \u0454 \u043a\u0443\u0434\u0438 \u043f\u043e\u043a\u0440\u0430\u0449\u0443\u0432\u0430\u0442\u0438 \u044f\u043a\u0456\u0441\u0442\u044c \u0456 \u0456\u0442\u0435\u0440\u0443\u0432\u0430\u0442\u0438 (\u043d\u0435 \u0432\u0438\u0441\u0442\u0430\u0447\u0430\u0454 \u0445\u043e\u0447\u0430 \u0431 \u043e\u0434\u043d\u0456\u0454\u0457 \u0456\u0442\u0435\u0440\u0430\u0446\u0456\u0457 \u0449\u0435)",
        "PR/Issue Number": "58"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/04-homework/parse.py",
        "Creation Date": "2020-04-11T18:34:15Z",
        "PR Comment": "> \u0413\u0430\u0440\u043d\u0430 \u0440\u043e\u0431\u043e\u0442\u0430! \u0410 \u044f\u043a \u0449\u043e\u0434\u043e \u043a\u0443\u0440\u0441\u043e\u0432\u043e\u0433\u043e?\n\n\u0412\u0441\u0435 \u0441\u0438\u043b\u044b \u043d\u0430 \u043a\u0443\u0440\u0441\u043e\u0432\u043e\u0439 \u0441\u0435\u0439\u0447\u0430\u0441! \n\n\n> \u0413\u0430\u0440\u043d\u0430 \u0440\u043e\u0431\u043e\u0442\u0430, \u043c\u0435\u043d\u0456 \u0441\u043f\u043e\u0434\u043e\u0431\u0430\u0432\u0441\u044f \u043f\u0456\u0434\u0445\u0456\u0434 \u0434\u043e \u0440\u043e\u0437\u0440\u043e\u0431\u043a\u0438 \u043f\u0440\u0430\u0432\u0438\u043b. \u0422\u0430\u043a\u043e\u0436 \u0434\u044f\u043a\u0443\u044e \u0437\u0430 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u043b\u0438\u0439 \u043e\u043f\u0438\u0441.\n> \u0404\u0434\u0438\u043d\u0435 \u043f\u0438\u0442\u0430\u043d\u043d\u044f \u043f\u043e \u0432\u0438\u043c\u0456\u0440\u044e\u0432\u0430\u043d\u043d\u044e \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0456: \u0442\u0438 \u0440\u0430\u0445\u0443\u0454\u0448 \u0441\u0443\u043c\u0443 \u043f\u043e\u0434\u0456\u043b\u0438\u0442\u0438 \u043d\u0430 \u0437\u0430\u0433\u0430\u043b\u044c\u043d\u0443 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u0433\u043e\u043d\u043e\u043a. (\u0434\u043e \u0440\u0435\u0447\u0456, \u0442\u0438 \u0432 \u043e\u0441\u0442\u0430\u043d\u043d\u044c\u043e\u043c\u0443 \u043a\u043e\u043c\u0456\u0442\u0456 \u043f\u0438\u0448\u0435\u0448 25%->35%, \u0430\u043b\u0435 \u043d\u0435 \u043e\u043d\u043e\u0432\u0438\u0432 \u0446\u0435 \u0443 \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0443). \u0410, \u043c\u043e\u0436\u0435, \u043d\u0430 \u0441\u0442\u043e\u0440\u0456\u043d\u0446\u0456 \u0428\u0443\u043c\u0430\u0445\u0435\u0440\u0430 \u043f\u0435\u0440\u0435\u043b\u0456\u0447\u0435\u043d\u0456 \u0432 \u0442\u0435\u043a\u0441\u0442\u0456 \u043d\u0435 \u0432\u0441\u0456 \u0433\u043e\u043d\u043a\u0438, \u0434\u0435 \u0432\u0456\u043d \u0434\u043e\u0441\u044f\u0433 \u044f\u043a\u043e\u0441\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0443? \u0411\u043e \u0432\u0438\u0433\u043b\u044f\u0434\u0430\u0454 \u0434\u0438\u0432\u043d\u043e, \u0449\u043e \u0442\u0438 \u0437\u043c\u0456\u0433 \u0437\u043d\u0430\u0439\u0442\u0438 \u0442\u0456\u043b\u044c\u043a\u0438 46 \u0433\u043e\u043d\u043e\u043a \u0437 91-\u0457. \u0422\u0443\u0442 \u0442\u043e\u0447\u043d\u043e \u043d\u0435\u043c\u0430 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0438?\n> P.S. \u041c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0431 \u0449\u0435 \u043f\u043e\u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u0443 \u0412\u0456\u043a\u0456\u043f\u0435\u0434\u0456\u0457 \u043f\u0440\u043e \u0442\u0456 \u0432\u0441\u0456 \u0441\u0435\u0437\u043e\u043d\u0438 F1 \u0456 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 \u044f\u043a\u0456\u0441\u0442\u044c \u043d\u0430 \u043d\u0438\u0445. \u0422\u043e\u0434\u0456 \u0431\u0443\u0432 \u0431\u0438 \u043f\u043e\u0432\u043d\u0438\u0439 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0442\n\n\u0434\u0430, \u043c\u043d\u043e\u0433\u0438\u0435 \u0433\u043e\u043d\u043a\u0438 \u0438\u043c\u0435\u044e\u0442 \u0444\u043e\u0440\u043c\u0430\u0442 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0433\u0434\u0435 \u043e\u0447\u0435\u043d\u044c \u0442\u0443\u0440\u0434\u043d\u043e \u0432\u044b\u043a\u043e\u043f\u0430\u0442\u044c \u043a\u0442\u043e-\u0436\u0435 \u0432\u044b\u0438\u0433\u0440\u0430\u043b. \u0414\u0443\u043c\u0430\u044e \u044d\u0442\u043e \u0441\u0432\u044f\u0437\u0430\u043d\u043e \u0441 \u0442\u0435\u043c, \u0447\u0442\u043e \u0430\u0432\u0442\u043e\u0440 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0432 \u0438\u043d\u0444\u043e\u0431\u043e\u043a\u0441 \u0430 \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u043c \u0442\u0435\u043a\u0441\u0442\u0435 \u043f\u0438\u0448\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043c\u043e\u043c\u0435\u043d\u0442\u044b \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043d \u043d\u0430\u0448\u0451\u043b \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u044b\u043c\u0438. \u0411\u043e\u043b\u044c\u0448\u0435 \u0432\u0441\u0435\u0433\u043e \u044d\u0442\u0438\u043c \u0433\u0440\u0435\u0448\u0438\u0442 \u0430\u0432\u0442\u043e\u0440  \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0448\u0435\u0442 \u043f\u0440\u043e \u0433\u043f \u0418\u0441\u043f\u0430\u043d\u0438\u0438 :)), \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \n```\nSchumacher got a perfect start despite the green light failing to illuminate. He led from start to finish on a two stop strategy. Team mate Herbert memorably left the pits with the rear jack attached to his car. This was not the only drama in the pit lane as Gachot suffered a small refuelling fire when pulling away from his second stop. \n``` \n\u0442.\u0435. \u043d\u0443\u0436\u043d\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u043a\u043d\u043e\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u0447\u0435\u043c \u043e\u0434\u043d\u043e \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0435. \u0427\u0442\u043e \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e doable \u043d\u043e \u0432 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0443\u0436\u0435 \u0431\u0443\u0434\u0443\u0442 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0432\u0441\u0435 \u0441\u0438\u043b\u044b \u043d\u0430 \u043a\u0443\u0440\u0441\u043e\u0432\u043e\u0439. ",
        "PR/Issue Number": "58"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/04-homework/parse.py",
        "Creation Date": "2020-04-16T09:58:26Z",
        "PR Comment": "\u041e\u0446\u0456\u043d\u043a\u0430: 70. \u0411\u043e \u0454 \u043a\u0443\u0434\u0438 \u043f\u043e\u043a\u0440\u0430\u0449\u0443\u0432\u0430\u0442\u0438 \u044f\u043a\u0456\u0441\u0442\u044c \u0456 \u0456\u0442\u0435\u0440\u0443\u0432\u0430\u0442\u0438 (\u043d\u0435 \u0432\u0438\u0441\u0442\u0430\u0447\u0430\u0454 \u0445\u043e\u0447\u0430 \u0431 \u043e\u0434\u043d\u0456\u0454\u0457 \u0456\u0442\u0435\u0440\u0430\u0446\u0456\u0457 \u0449\u0435)",
        "PR/Issue Number": "58"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/viral.py",
        "Creation Date": "2020-03-27T21:22:12Z",
        "PR Comment": "\u041d\u0435 \u0440\u0430\u0434\u0436\u0443 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0443 \u043c\u043e\u0434\u0435\u043b\u044c, \u0431\u043e \u0432\u043e\u043d\u0430 \u0434\u043e\u0441\u0438\u0442\u044c \u043f\u043e\u0433\u0430\u043d\u043e\u0457 \u044f\u043a\u043e\u0441\u0442\u0456. \u041a\u0440\u0430\u0449\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0441\u0435\u0440\u0435\u0434\u043d\u044c\u043e\u0433\u043e \u0440\u043e\u0437\u043c\u0456\u0440\u0443 - \"md\".",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/viral.py",
        "Creation Date": "2020-03-27T21:31:20Z",
        "PR Comment": "\u041e\u0446\u0435\u0439 \u0440\u044f\u0434\u043e\u043a \u0454 \u043f\u0440\u0438\u0447\u0438\u043d\u043e\u044e, \u0447\u043e\u043c\u0443 \u0442\u0438 \u043d\u0435 \u0437\u043d\u0430\u0439\u0448\u043e\u0432 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0456\u0432 \u0432\u0438\u0449\u043e\u0433\u043e \u0456 \u043d\u0430\u0439\u0432\u0438\u0449\u043e\u0433\u043e \u0441\u0442\u0443\u043f\u0435\u043d\u0456\u0432 \u0443 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u0445.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/viral.py",
        "Creation Date": "2020-03-27T21:31:34Z",
        "PR Comment": "\u0426\u0435 \u043d\u0435 \u043d\u0430\u0439\u0431\u0456\u043b\u044c\u0448 \u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439 \u0441\u043f\u043e\u0441\u0456\u0431, \u0430\u0434\u0436\u0435 \u0454 \u0442\u0430\u043a\u0456 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0438 \u044f\u043a \"clever\", \"eager\", \"honest\", \"modest\" \u0456 \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043d\u0448\u0438\u0445. \u042f\u043a\u0456 \u0454 \u0449\u0435 \u0432\u0430\u0440\u0456\u0430\u043d\u0442\u0438 \u0437\u0456 spaCy:\n- \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 Penn-\u0442\u0435\u0433\u0438 (JJR, JJS, RBR, RBS)\n- \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u0442\u0438 \u0441\u043b\u043e\u0432\u043e \u0437 \u043b\u0435\u043c\u043e\u044e",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/viral.py",
        "Creation Date": "2020-03-27T21:36:41Z",
        "PR Comment": "\u0422\u0438 \u043d\u0430\u0437\u0431\u0438\u0440\u0430\u0432 \u0434\u0443\u0436\u0435 \u043c\u0430\u043b\u043e \u043a\u043e\u043b\u043e\u043a\u0430\u0446\u0456\u0439, \u0431\u043e \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0454\u0448 \u0442\u0443\u0442 \u043d\u0435 \u043b\u0435\u043c\u0443 \u0441\u043b\u043e\u0432\u0430, \u0430 \u0441\u043b\u043e\u0432\u043e\u0444\u043e\u0440\u043c\u0443. \u0422\u043e\u043c\u0443 \u043a\u043e\u043b\u0438 \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0431\u0443\u043b\u043e \"say\" \u0437 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u043e\u043c, \u0442\u0438 \u0439\u043e\u0433\u043e \u043f\u0456\u0439\u043c\u0430\u0432, \u0430 \"said\", \"says\" \u0442\u0430 \"saying\" \u2014 \u043d\u0456.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/viral.py",
        "Creation Date": "2020-03-27T21:38:12Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.\n\n\u0422\u043e\u0431\u0456 \u0456 \u043d\u0435 \u0448\u043a\u043e\u0434\u0430 \u0431\u0456\u043b\u044c\u0448\u0443 \u043c\u043e\u0434\u0435\u043b\u044c\u043a\u0443 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/viral.py",
        "Creation Date": "2020-03-27T21:40:09Z",
        "PR Comment": "\u0426\u0435 \u043d\u0435 \u0434\u0443\u0436\u0435 \u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439 \u0441\u043f\u043e\u0441\u0456\u0431 \u043f\u043e\u0448\u0443\u043a\u0443 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u0456\u0432 \u0434\u043b\u044f \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430, \u0431\u043e \u0432\u043e\u043d\u0438 \u043d\u0435 \u0437\u0430\u0432\u0436\u0434\u0438 \u0431\u0443\u0434\u0443\u0442\u044c \u0456\u0442\u0438 \u043e\u0434\u0440\u0430\u0437\u0443 \u043f\u0456\u0441\u043b\u044f \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430. \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434: _\"He spoke about the issue calmly.\"_\n\n\u041d\u0430\u0431\u0430\u0433\u0430\u0442\u043e \u043a\u0440\u0430\u0449\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0434\u0435\u0440\u0435\u0432\u0430 \u0437\u0430\u043b\u0435\u0436\u043d\u043e\u0441\u0442\u0435\u0439 \u0434\u043b\u044f \u0446\u044c\u043e\u0433\u043e.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/viral.py",
        "Creation Date": "2020-03-27T21:41:47Z",
        "PR Comment": "`if c.lower() in \"aeuio\":` :)",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/viral.py",
        "Creation Date": "2020-03-28T13:22:08Z",
        "PR Comment": "\u041a\u0440\u0430\u0449\u0435 \u0442\u0430\u043a\u0438 `\"ly\\b\"`, \u0449\u043e\u0431 \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438 \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u044e.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/viral.py",
        "Creation Date": "2020-03-28T13:23:00Z",
        "PR Comment": "\u0426\u0435\u0439 \u0440\u044f\u0434\u043e\u043a \u0432\u0436\u0435 \u0437\u0430\u0439\u0432\u0438\u0439.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/viral.py",
        "Creation Date": "2020-03-27T21:22:12Z",
        "PR Comment": "\u041d\u0435 \u0440\u0430\u0434\u0436\u0443 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0443 \u043c\u043e\u0434\u0435\u043b\u044c, \u0431\u043e \u0432\u043e\u043d\u0430 \u0434\u043e\u0441\u0438\u0442\u044c \u043f\u043e\u0433\u0430\u043d\u043e\u0457 \u044f\u043a\u043e\u0441\u0442\u0456. \u041a\u0440\u0430\u0449\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0441\u0435\u0440\u0435\u0434\u043d\u044c\u043e\u0433\u043e \u0440\u043e\u0437\u043c\u0456\u0440\u0443 - \"md\".",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/viral.py",
        "Creation Date": "2020-03-27T21:31:20Z",
        "PR Comment": "\u041e\u0446\u0435\u0439 \u0440\u044f\u0434\u043e\u043a \u0454 \u043f\u0440\u0438\u0447\u0438\u043d\u043e\u044e, \u0447\u043e\u043c\u0443 \u0442\u0438 \u043d\u0435 \u0437\u043d\u0430\u0439\u0448\u043e\u0432 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0456\u0432 \u0432\u0438\u0449\u043e\u0433\u043e \u0456 \u043d\u0430\u0439\u0432\u0438\u0449\u043e\u0433\u043e \u0441\u0442\u0443\u043f\u0435\u043d\u0456\u0432 \u0443 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u0445.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/viral.py",
        "Creation Date": "2020-03-27T21:31:34Z",
        "PR Comment": "\u0426\u0435 \u043d\u0435 \u043d\u0430\u0439\u0431\u0456\u043b\u044c\u0448 \u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439 \u0441\u043f\u043e\u0441\u0456\u0431, \u0430\u0434\u0436\u0435 \u0454 \u0442\u0430\u043a\u0456 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0438 \u044f\u043a \"clever\", \"eager\", \"honest\", \"modest\" \u0456 \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043d\u0448\u0438\u0445. \u042f\u043a\u0456 \u0454 \u0449\u0435 \u0432\u0430\u0440\u0456\u0430\u043d\u0442\u0438 \u0437\u0456 spaCy:\n- \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 Penn-\u0442\u0435\u0433\u0438 (JJR, JJS, RBR, RBS)\n- \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u0442\u0438 \u0441\u043b\u043e\u0432\u043e \u0437 \u043b\u0435\u043c\u043e\u044e",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/viral.py",
        "Creation Date": "2020-03-27T21:36:41Z",
        "PR Comment": "\u0422\u0438 \u043d\u0430\u0437\u0431\u0438\u0440\u0430\u0432 \u0434\u0443\u0436\u0435 \u043c\u0430\u043b\u043e \u043a\u043e\u043b\u043e\u043a\u0430\u0446\u0456\u0439, \u0431\u043e \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0454\u0448 \u0442\u0443\u0442 \u043d\u0435 \u043b\u0435\u043c\u0443 \u0441\u043b\u043e\u0432\u0430, \u0430 \u0441\u043b\u043e\u0432\u043e\u0444\u043e\u0440\u043c\u0443. \u0422\u043e\u043c\u0443 \u043a\u043e\u043b\u0438 \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0431\u0443\u043b\u043e \"say\" \u0437 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u043e\u043c, \u0442\u0438 \u0439\u043e\u0433\u043e \u043f\u0456\u0439\u043c\u0430\u0432, \u0430 \"said\", \"says\" \u0442\u0430 \"saying\" \u2014 \u043d\u0456.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/viral.py",
        "Creation Date": "2020-03-27T21:38:12Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.\n\n\u0422\u043e\u0431\u0456 \u0456 \u043d\u0435 \u0448\u043a\u043e\u0434\u0430 \u0431\u0456\u043b\u044c\u0448\u0443 \u043c\u043e\u0434\u0435\u043b\u044c\u043a\u0443 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/viral.py",
        "Creation Date": "2020-03-27T21:40:09Z",
        "PR Comment": "\u0426\u0435 \u043d\u0435 \u0434\u0443\u0436\u0435 \u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439 \u0441\u043f\u043e\u0441\u0456\u0431 \u043f\u043e\u0448\u0443\u043a\u0443 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u0456\u0432 \u0434\u043b\u044f \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430, \u0431\u043e \u0432\u043e\u043d\u0438 \u043d\u0435 \u0437\u0430\u0432\u0436\u0434\u0438 \u0431\u0443\u0434\u0443\u0442\u044c \u0456\u0442\u0438 \u043e\u0434\u0440\u0430\u0437\u0443 \u043f\u0456\u0441\u043b\u044f \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430. \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434: _\"He spoke about the issue calmly.\"_\n\n\u041d\u0430\u0431\u0430\u0433\u0430\u0442\u043e \u043a\u0440\u0430\u0449\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0434\u0435\u0440\u0435\u0432\u0430 \u0437\u0430\u043b\u0435\u0436\u043d\u043e\u0441\u0442\u0435\u0439 \u0434\u043b\u044f \u0446\u044c\u043e\u0433\u043e.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/viral.py",
        "Creation Date": "2020-03-27T21:41:47Z",
        "PR Comment": "`if c.lower() in \"aeuio\":` :)",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/viral.py",
        "Creation Date": "2020-03-28T13:22:08Z",
        "PR Comment": "\u041a\u0440\u0430\u0449\u0435 \u0442\u0430\u043a\u0438 `\"ly\\b\"`, \u0449\u043e\u0431 \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438 \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u044e.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/viral.py",
        "Creation Date": "2020-03-28T13:23:00Z",
        "PR Comment": "\u0426\u0435\u0439 \u0440\u044f\u0434\u043e\u043a \u0432\u0436\u0435 \u0437\u0430\u0439\u0432\u0438\u0439.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T17:44:59Z",
        "PR Comment": "\u0422\u0443\u0442 \u0456 \u0434\u0430\u043b\u0456 \u043d\u0435 \u0432\u0440\u0430\u0445\u043e\u0432\u0430\u043d\u0430 \u043a\u0456\u043d\u0446\u0435\u0432\u0430 \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u044f \u043f\u0456\u0441\u043b\u044f \u043e\u0441\u0442\u0430\u043d\u043d\u044c\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T17:46:19Z",
        "PR Comment": "\u0414\u043e\u0434\u0430\u0439, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u0432\u0438\u0432\u0456\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0438. \u041c\u043e\u0436\u043d\u0430 \u043f\u0440\u044f\u043c\u043e \u0442\u0443\u0442 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0435\u043c.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T17:51:19Z",
        "PR Comment": "\u0422\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0449\u0435 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u043d\u043d\u044f \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438: better, smaller, more.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T17:52:01Z",
        "PR Comment": "\u041e\u0434\u0440\u0443\u043a\u0456\u0432\u043a\u0430: \"PESRON\".",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T17:57:31Z",
        "PR Comment": "\u041a\u043e\u0440\u0438\u0441\u0442\u0443\u0439\u0441\u044f, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `.pos_` \u0437\u0430\u043c\u0456\u0441\u0442\u044c `.pos` \u0456 \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u0434\u0435 \u043f\u0440\u043e\u043f\u0438\u0441\u0443\u0432\u0430\u0442\u0438 \u0447\u0438\u0441\u043b\u043e\u0432\u0456 \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440\u0438 \u0442\u0435\u0433\u0456\u0432.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T17:58:43Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T18:00:27Z",
        "PR Comment": "\u0422\u0438 \u043d\u0430\u0437\u0431\u0438\u0440\u0430\u0432 \u0434\u0443\u0436\u0435 \u043c\u0430\u043b\u043e \u043a\u043e\u043b\u043e\u043a\u0430\u0446\u0456\u0439, \u0431\u043e \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0454\u0448 \u0442\u0443\u0442 \u043d\u0435 \u043b\u0435\u043c\u0443 \u0441\u043b\u043e\u0432\u0430, \u0430 \u0441\u043b\u043e\u0432\u043e\u0444\u043e\u0440\u043c\u0443. \u0422\u043e\u043c\u0443 \u043a\u043e\u043b\u0438 \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0431\u0443\u043b\u043e \"say\" \u0437 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u043e\u043c, \u0442\u0438 \u0439\u043e\u0433\u043e \u043f\u0456\u0439\u043c\u0430\u0432, \u0430 \"said\", \"says\" \u0442\u0430 \"saying\" \u2014 \u043d\u0456.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T18:06:38Z",
        "PR Comment": "\u0426\u0456 \u0442\u0440\u0438 \u0440\u044f\u0434\u043a\u0438 (25-27) \u2014 \u0446\u0435 \u044f\u0432\u043d\u043e \u0437\u0430\u043b\u0438\u0448\u043a\u0438 \u044f\u043a\u043e\u0433\u043e\u0441\u044c \u0434\u0435\u0431\u0430\u0433\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T18:08:19Z",
        "PR Comment": "\u0417\u0430\u043c\u0456\u0441\u0442\u044c \u0442\u043e\u0433\u043e, \u0449\u043e\u0431 \u0434\u0432\u0456\u0447\u0456 \u0456\u0442\u0435\u0440\u0432\u0430\u0442\u0438\u0441\u044f \u043f\u043e \u0440\u0435\u0447\u0435\u043d\u043d\u044e, \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u0437\u043d\u0430\u0439\u0442\u0438 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a, \u0442\u043e\u0434\u0456 \u0432\u0438\u0442\u044f\u0433\u043d\u0443\u0442\u0438 \u0439\u043e\u0433\u043e `head` \u0456 \u0442\u043e\u0434\u0456 \u0432\u0438\u0440\u0456\u0448\u0438\u0442\u0438, \u0447\u0438 \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u0430\u0442\u0438 \u0446\u044e \u043f\u0430\u0440\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T12:23:49Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432 # Header accuracy  90.00%",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T12:42:29Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T12:43:35Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T13:09:09Z",
        "PR Comment": "\u0434\u043e\u0434\u0430\u0432 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T13:19:08Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T14:19:06Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T15:07:18Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T15:08:35Z",
        "PR Comment": "\u0442\u0430\u043a, \u0432\u0438\u0434\u0430\u043b\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T15:38:48Z",
        "PR Comment": "\u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-27T20:07:36Z",
        "PR Comment": "\u041d\u0430 \u0434\u043e\u043c\u0430\u0448\u043a\u0443 \u0437\u0433\u043e\u0434\u0438\u0442\u044c\u0441\u044f, \u0430\u043b\u0435 \u0446\u0435\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043d\u0435\u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439, \u0430\u0434\u0436\u0435 \u0454 \u0442\u0430\u043a\u0456 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0438 \u044f\u043a \"clever\", \"eager\", \"honest\", \"modest\" \u0456 \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043d\u0448\u0438\u0445. \u042f\u043a\u0456 \u0454 \u0449\u0435 \u0432\u0430\u0440\u0456\u0430\u043d\u0442\u0438 \u0437\u0456 spaCy:\n- \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 Penn-\u0442\u0435\u0433\u0438 (JJR, JJS, RBR, RBS)\n- \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u0442\u0438 \u0441\u043b\u043e\u0432\u043e \u0437 \u043b\u0435\u043c\u043e\u044e\n",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-27T20:04:44Z",
        "PR Comment": "@yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-27T20:13:14Z",
        "PR Comment": "> @yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.\n\n@mariana-scorp \u0437\u0430\u0431\u0440\u0430\u0432 \u0444\u0430\u0439\u043b \u0437 3\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T17:44:59Z",
        "PR Comment": "\u0422\u0443\u0442 \u0456 \u0434\u0430\u043b\u0456 \u043d\u0435 \u0432\u0440\u0430\u0445\u043e\u0432\u0430\u043d\u0430 \u043a\u0456\u043d\u0446\u0435\u0432\u0430 \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u044f \u043f\u0456\u0441\u043b\u044f \u043e\u0441\u0442\u0430\u043d\u043d\u044c\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T17:46:19Z",
        "PR Comment": "\u0414\u043e\u0434\u0430\u0439, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u0432\u0438\u0432\u0456\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0438. \u041c\u043e\u0436\u043d\u0430 \u043f\u0440\u044f\u043c\u043e \u0442\u0443\u0442 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0435\u043c.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T17:51:19Z",
        "PR Comment": "\u0422\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0449\u0435 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u043d\u043d\u044f \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438: better, smaller, more.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T17:52:01Z",
        "PR Comment": "\u041e\u0434\u0440\u0443\u043a\u0456\u0432\u043a\u0430: \"PESRON\".",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T17:57:31Z",
        "PR Comment": "\u041a\u043e\u0440\u0438\u0441\u0442\u0443\u0439\u0441\u044f, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `.pos_` \u0437\u0430\u043c\u0456\u0441\u0442\u044c `.pos` \u0456 \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u0434\u0435 \u043f\u0440\u043e\u043f\u0438\u0441\u0443\u0432\u0430\u0442\u0438 \u0447\u0438\u0441\u043b\u043e\u0432\u0456 \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440\u0438 \u0442\u0435\u0433\u0456\u0432.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T17:58:43Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T18:00:27Z",
        "PR Comment": "\u0422\u0438 \u043d\u0430\u0437\u0431\u0438\u0440\u0430\u0432 \u0434\u0443\u0436\u0435 \u043c\u0430\u043b\u043e \u043a\u043e\u043b\u043e\u043a\u0430\u0446\u0456\u0439, \u0431\u043e \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0454\u0448 \u0442\u0443\u0442 \u043d\u0435 \u043b\u0435\u043c\u0443 \u0441\u043b\u043e\u0432\u0430, \u0430 \u0441\u043b\u043e\u0432\u043e\u0444\u043e\u0440\u043c\u0443. \u0422\u043e\u043c\u0443 \u043a\u043e\u043b\u0438 \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0431\u0443\u043b\u043e \"say\" \u0437 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u043e\u043c, \u0442\u0438 \u0439\u043e\u0433\u043e \u043f\u0456\u0439\u043c\u0430\u0432, \u0430 \"said\", \"says\" \u0442\u0430 \"saying\" \u2014 \u043d\u0456.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T18:06:38Z",
        "PR Comment": "\u0426\u0456 \u0442\u0440\u0438 \u0440\u044f\u0434\u043a\u0438 (25-27) \u2014 \u0446\u0435 \u044f\u0432\u043d\u043e \u0437\u0430\u043b\u0438\u0448\u043a\u0438 \u044f\u043a\u043e\u0433\u043e\u0441\u044c \u0434\u0435\u0431\u0430\u0433\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T18:08:19Z",
        "PR Comment": "\u0417\u0430\u043c\u0456\u0441\u0442\u044c \u0442\u043e\u0433\u043e, \u0449\u043e\u0431 \u0434\u0432\u0456\u0447\u0456 \u0456\u0442\u0435\u0440\u0432\u0430\u0442\u0438\u0441\u044f \u043f\u043e \u0440\u0435\u0447\u0435\u043d\u043d\u044e, \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u0437\u043d\u0430\u0439\u0442\u0438 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a, \u0442\u043e\u0434\u0456 \u0432\u0438\u0442\u044f\u0433\u043d\u0443\u0442\u0438 \u0439\u043e\u0433\u043e `head` \u0456 \u0442\u043e\u0434\u0456 \u0432\u0438\u0440\u0456\u0448\u0438\u0442\u0438, \u0447\u0438 \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u0430\u0442\u0438 \u0446\u044e \u043f\u0430\u0440\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T12:23:49Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432 # Header accuracy  90.00%",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T12:42:29Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T12:43:35Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T13:09:09Z",
        "PR Comment": "\u0434\u043e\u0434\u0430\u0432 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T13:19:08Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T14:19:06Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T15:07:18Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T15:08:35Z",
        "PR Comment": "\u0442\u0430\u043a, \u0432\u0438\u0434\u0430\u043b\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T15:38:48Z",
        "PR Comment": "\u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-27T20:07:36Z",
        "PR Comment": "\u041d\u0430 \u0434\u043e\u043c\u0430\u0448\u043a\u0443 \u0437\u0433\u043e\u0434\u0438\u0442\u044c\u0441\u044f, \u0430\u043b\u0435 \u0446\u0435\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043d\u0435\u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439, \u0430\u0434\u0436\u0435 \u0454 \u0442\u0430\u043a\u0456 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0438 \u044f\u043a \"clever\", \"eager\", \"honest\", \"modest\" \u0456 \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043d\u0448\u0438\u0445. \u042f\u043a\u0456 \u0454 \u0449\u0435 \u0432\u0430\u0440\u0456\u0430\u043d\u0442\u0438 \u0437\u0456 spaCy:\n- \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 Penn-\u0442\u0435\u0433\u0438 (JJR, JJS, RBR, RBS)\n- \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u0442\u0438 \u0441\u043b\u043e\u0432\u043e \u0437 \u043b\u0435\u043c\u043e\u044e\n",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-27T20:04:44Z",
        "PR Comment": "@yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-27T20:13:14Z",
        "PR Comment": "> @yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.\n\n@mariana-scorp \u0437\u0430\u0431\u0440\u0430\u0432 \u0444\u0430\u0439\u043b \u0437 3\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T17:44:59Z",
        "PR Comment": "\u0422\u0443\u0442 \u0456 \u0434\u0430\u043b\u0456 \u043d\u0435 \u0432\u0440\u0430\u0445\u043e\u0432\u0430\u043d\u0430 \u043a\u0456\u043d\u0446\u0435\u0432\u0430 \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u044f \u043f\u0456\u0441\u043b\u044f \u043e\u0441\u0442\u0430\u043d\u043d\u044c\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T17:46:19Z",
        "PR Comment": "\u0414\u043e\u0434\u0430\u0439, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u0432\u0438\u0432\u0456\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0438. \u041c\u043e\u0436\u043d\u0430 \u043f\u0440\u044f\u043c\u043e \u0442\u0443\u0442 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0435\u043c.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T17:51:19Z",
        "PR Comment": "\u0422\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0449\u0435 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u043d\u043d\u044f \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438: better, smaller, more.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T17:52:01Z",
        "PR Comment": "\u041e\u0434\u0440\u0443\u043a\u0456\u0432\u043a\u0430: \"PESRON\".",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T17:57:31Z",
        "PR Comment": "\u041a\u043e\u0440\u0438\u0441\u0442\u0443\u0439\u0441\u044f, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `.pos_` \u0437\u0430\u043c\u0456\u0441\u0442\u044c `.pos` \u0456 \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u0434\u0435 \u043f\u0440\u043e\u043f\u0438\u0441\u0443\u0432\u0430\u0442\u0438 \u0447\u0438\u0441\u043b\u043e\u0432\u0456 \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440\u0438 \u0442\u0435\u0433\u0456\u0432.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T17:58:43Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T18:00:27Z",
        "PR Comment": "\u0422\u0438 \u043d\u0430\u0437\u0431\u0438\u0440\u0430\u0432 \u0434\u0443\u0436\u0435 \u043c\u0430\u043b\u043e \u043a\u043e\u043b\u043e\u043a\u0430\u0446\u0456\u0439, \u0431\u043e \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0454\u0448 \u0442\u0443\u0442 \u043d\u0435 \u043b\u0435\u043c\u0443 \u0441\u043b\u043e\u0432\u0430, \u0430 \u0441\u043b\u043e\u0432\u043e\u0444\u043e\u0440\u043c\u0443. \u0422\u043e\u043c\u0443 \u043a\u043e\u043b\u0438 \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0431\u0443\u043b\u043e \"say\" \u0437 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u043e\u043c, \u0442\u0438 \u0439\u043e\u0433\u043e \u043f\u0456\u0439\u043c\u0430\u0432, \u0430 \"said\", \"says\" \u0442\u0430 \"saying\" \u2014 \u043d\u0456.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T18:06:38Z",
        "PR Comment": "\u0426\u0456 \u0442\u0440\u0438 \u0440\u044f\u0434\u043a\u0438 (25-27) \u2014 \u0446\u0435 \u044f\u0432\u043d\u043e \u0437\u0430\u043b\u0438\u0448\u043a\u0438 \u044f\u043a\u043e\u0433\u043e\u0441\u044c \u0434\u0435\u0431\u0430\u0433\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-25T18:08:19Z",
        "PR Comment": "\u0417\u0430\u043c\u0456\u0441\u0442\u044c \u0442\u043e\u0433\u043e, \u0449\u043e\u0431 \u0434\u0432\u0456\u0447\u0456 \u0456\u0442\u0435\u0440\u0432\u0430\u0442\u0438\u0441\u044f \u043f\u043e \u0440\u0435\u0447\u0435\u043d\u043d\u044e, \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u0437\u043d\u0430\u0439\u0442\u0438 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a, \u0442\u043e\u0434\u0456 \u0432\u0438\u0442\u044f\u0433\u043d\u0443\u0442\u0438 \u0439\u043e\u0433\u043e `head` \u0456 \u0442\u043e\u0434\u0456 \u0432\u0438\u0440\u0456\u0448\u0438\u0442\u0438, \u0447\u0438 \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u0430\u0442\u0438 \u0446\u044e \u043f\u0430\u0440\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T12:23:49Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432 # Header accuracy  90.00%",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T12:42:29Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T12:43:35Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T13:09:09Z",
        "PR Comment": "\u0434\u043e\u0434\u0430\u0432 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T13:19:08Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T14:19:06Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T15:07:18Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T15:08:35Z",
        "PR Comment": "\u0442\u0430\u043a, \u0432\u0438\u0434\u0430\u043b\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-26T15:38:48Z",
        "PR Comment": "\u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-27T20:07:36Z",
        "PR Comment": "\u041d\u0430 \u0434\u043e\u043c\u0430\u0448\u043a\u0443 \u0437\u0433\u043e\u0434\u0438\u0442\u044c\u0441\u044f, \u0430\u043b\u0435 \u0446\u0435\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043d\u0435\u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439, \u0430\u0434\u0436\u0435 \u0454 \u0442\u0430\u043a\u0456 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0438 \u044f\u043a \"clever\", \"eager\", \"honest\", \"modest\" \u0456 \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043d\u0448\u0438\u0445. \u042f\u043a\u0456 \u0454 \u0449\u0435 \u0432\u0430\u0440\u0456\u0430\u043d\u0442\u0438 \u0437\u0456 spaCy:\n- \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 Penn-\u0442\u0435\u0433\u0438 (JJR, JJS, RBR, RBS)\n- \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u0442\u0438 \u0441\u043b\u043e\u0432\u043e \u0437 \u043b\u0435\u043c\u043e\u044e\n",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-27T20:04:44Z",
        "PR Comment": "@yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-2.py",
        "Creation Date": "2020-03-27T20:13:14Z",
        "PR Comment": "> @yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.\n\n@mariana-scorp \u0437\u0430\u0431\u0440\u0430\u0432 \u0444\u0430\u0439\u043b \u0437 3\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-25T17:44:59Z",
        "PR Comment": "\u0422\u0443\u0442 \u0456 \u0434\u0430\u043b\u0456 \u043d\u0435 \u0432\u0440\u0430\u0445\u043e\u0432\u0430\u043d\u0430 \u043a\u0456\u043d\u0446\u0435\u0432\u0430 \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u044f \u043f\u0456\u0441\u043b\u044f \u043e\u0441\u0442\u0430\u043d\u043d\u044c\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-25T17:46:19Z",
        "PR Comment": "\u0414\u043e\u0434\u0430\u0439, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u0432\u0438\u0432\u0456\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0438. \u041c\u043e\u0436\u043d\u0430 \u043f\u0440\u044f\u043c\u043e \u0442\u0443\u0442 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0435\u043c.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-25T17:51:19Z",
        "PR Comment": "\u0422\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0449\u0435 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u043d\u043d\u044f \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438: better, smaller, more.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-25T17:52:01Z",
        "PR Comment": "\u041e\u0434\u0440\u0443\u043a\u0456\u0432\u043a\u0430: \"PESRON\".",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-25T17:57:31Z",
        "PR Comment": "\u041a\u043e\u0440\u0438\u0441\u0442\u0443\u0439\u0441\u044f, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `.pos_` \u0437\u0430\u043c\u0456\u0441\u0442\u044c `.pos` \u0456 \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u0434\u0435 \u043f\u0440\u043e\u043f\u0438\u0441\u0443\u0432\u0430\u0442\u0438 \u0447\u0438\u0441\u043b\u043e\u0432\u0456 \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440\u0438 \u0442\u0435\u0433\u0456\u0432.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-25T17:58:43Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-25T18:00:27Z",
        "PR Comment": "\u0422\u0438 \u043d\u0430\u0437\u0431\u0438\u0440\u0430\u0432 \u0434\u0443\u0436\u0435 \u043c\u0430\u043b\u043e \u043a\u043e\u043b\u043e\u043a\u0430\u0446\u0456\u0439, \u0431\u043e \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0454\u0448 \u0442\u0443\u0442 \u043d\u0435 \u043b\u0435\u043c\u0443 \u0441\u043b\u043e\u0432\u0430, \u0430 \u0441\u043b\u043e\u0432\u043e\u0444\u043e\u0440\u043c\u0443. \u0422\u043e\u043c\u0443 \u043a\u043e\u043b\u0438 \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0431\u0443\u043b\u043e \"say\" \u0437 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u043e\u043c, \u0442\u0438 \u0439\u043e\u0433\u043e \u043f\u0456\u0439\u043c\u0430\u0432, \u0430 \"said\", \"says\" \u0442\u0430 \"saying\" \u2014 \u043d\u0456.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-25T18:06:38Z",
        "PR Comment": "\u0426\u0456 \u0442\u0440\u0438 \u0440\u044f\u0434\u043a\u0438 (25-27) \u2014 \u0446\u0435 \u044f\u0432\u043d\u043e \u0437\u0430\u043b\u0438\u0448\u043a\u0438 \u044f\u043a\u043e\u0433\u043e\u0441\u044c \u0434\u0435\u0431\u0430\u0433\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-25T18:08:19Z",
        "PR Comment": "\u0417\u0430\u043c\u0456\u0441\u0442\u044c \u0442\u043e\u0433\u043e, \u0449\u043e\u0431 \u0434\u0432\u0456\u0447\u0456 \u0456\u0442\u0435\u0440\u0432\u0430\u0442\u0438\u0441\u044f \u043f\u043e \u0440\u0435\u0447\u0435\u043d\u043d\u044e, \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u0437\u043d\u0430\u0439\u0442\u0438 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a, \u0442\u043e\u0434\u0456 \u0432\u0438\u0442\u044f\u0433\u043d\u0443\u0442\u0438 \u0439\u043e\u0433\u043e `head` \u0456 \u0442\u043e\u0434\u0456 \u0432\u0438\u0440\u0456\u0448\u0438\u0442\u0438, \u0447\u0438 \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u0430\u0442\u0438 \u0446\u044e \u043f\u0430\u0440\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-26T12:23:49Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432 # Header accuracy  90.00%",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-26T12:42:29Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-26T12:43:35Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-26T13:09:09Z",
        "PR Comment": "\u0434\u043e\u0434\u0430\u0432 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-26T13:19:08Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-26T14:19:06Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-26T15:07:18Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-26T15:08:35Z",
        "PR Comment": "\u0442\u0430\u043a, \u0432\u0438\u0434\u0430\u043b\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-26T15:38:48Z",
        "PR Comment": "\u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-27T20:07:36Z",
        "PR Comment": "\u041d\u0430 \u0434\u043e\u043c\u0430\u0448\u043a\u0443 \u0437\u0433\u043e\u0434\u0438\u0442\u044c\u0441\u044f, \u0430\u043b\u0435 \u0446\u0435\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043d\u0435\u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439, \u0430\u0434\u0436\u0435 \u0454 \u0442\u0430\u043a\u0456 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0438 \u044f\u043a \"clever\", \"eager\", \"honest\", \"modest\" \u0456 \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043d\u0448\u0438\u0445. \u042f\u043a\u0456 \u0454 \u0449\u0435 \u0432\u0430\u0440\u0456\u0430\u043d\u0442\u0438 \u0437\u0456 spaCy:\n- \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 Penn-\u0442\u0435\u0433\u0438 (JJR, JJS, RBR, RBS)\n- \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u0442\u0438 \u0441\u043b\u043e\u0432\u043e \u0437 \u043b\u0435\u043c\u043e\u044e\n",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-27T20:04:44Z",
        "PR Comment": "@yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-27T20:13:14Z",
        "PR Comment": "> @yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.\n\n@mariana-scorp \u0437\u0430\u0431\u0440\u0430\u0432 \u0444\u0430\u0439\u043b \u0437 3\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-25T17:44:59Z",
        "PR Comment": "\u0422\u0443\u0442 \u0456 \u0434\u0430\u043b\u0456 \u043d\u0435 \u0432\u0440\u0430\u0445\u043e\u0432\u0430\u043d\u0430 \u043a\u0456\u043d\u0446\u0435\u0432\u0430 \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u044f \u043f\u0456\u0441\u043b\u044f \u043e\u0441\u0442\u0430\u043d\u043d\u044c\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-25T17:46:19Z",
        "PR Comment": "\u0414\u043e\u0434\u0430\u0439, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u0432\u0438\u0432\u0456\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0438. \u041c\u043e\u0436\u043d\u0430 \u043f\u0440\u044f\u043c\u043e \u0442\u0443\u0442 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0435\u043c.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-25T17:51:19Z",
        "PR Comment": "\u0422\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0449\u0435 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u043d\u043d\u044f \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438: better, smaller, more.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-25T17:52:01Z",
        "PR Comment": "\u041e\u0434\u0440\u0443\u043a\u0456\u0432\u043a\u0430: \"PESRON\".",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-25T17:57:31Z",
        "PR Comment": "\u041a\u043e\u0440\u0438\u0441\u0442\u0443\u0439\u0441\u044f, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `.pos_` \u0437\u0430\u043c\u0456\u0441\u0442\u044c `.pos` \u0456 \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u0434\u0435 \u043f\u0440\u043e\u043f\u0438\u0441\u0443\u0432\u0430\u0442\u0438 \u0447\u0438\u0441\u043b\u043e\u0432\u0456 \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440\u0438 \u0442\u0435\u0433\u0456\u0432.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-25T17:58:43Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-25T18:00:27Z",
        "PR Comment": "\u0422\u0438 \u043d\u0430\u0437\u0431\u0438\u0440\u0430\u0432 \u0434\u0443\u0436\u0435 \u043c\u0430\u043b\u043e \u043a\u043e\u043b\u043e\u043a\u0430\u0446\u0456\u0439, \u0431\u043e \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0454\u0448 \u0442\u0443\u0442 \u043d\u0435 \u043b\u0435\u043c\u0443 \u0441\u043b\u043e\u0432\u0430, \u0430 \u0441\u043b\u043e\u0432\u043e\u0444\u043e\u0440\u043c\u0443. \u0422\u043e\u043c\u0443 \u043a\u043e\u043b\u0438 \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0431\u0443\u043b\u043e \"say\" \u0437 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u043e\u043c, \u0442\u0438 \u0439\u043e\u0433\u043e \u043f\u0456\u0439\u043c\u0430\u0432, \u0430 \"said\", \"says\" \u0442\u0430 \"saying\" \u2014 \u043d\u0456.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-25T18:06:38Z",
        "PR Comment": "\u0426\u0456 \u0442\u0440\u0438 \u0440\u044f\u0434\u043a\u0438 (25-27) \u2014 \u0446\u0435 \u044f\u0432\u043d\u043e \u0437\u0430\u043b\u0438\u0448\u043a\u0438 \u044f\u043a\u043e\u0433\u043e\u0441\u044c \u0434\u0435\u0431\u0430\u0433\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-25T18:08:19Z",
        "PR Comment": "\u0417\u0430\u043c\u0456\u0441\u0442\u044c \u0442\u043e\u0433\u043e, \u0449\u043e\u0431 \u0434\u0432\u0456\u0447\u0456 \u0456\u0442\u0435\u0440\u0432\u0430\u0442\u0438\u0441\u044f \u043f\u043e \u0440\u0435\u0447\u0435\u043d\u043d\u044e, \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u0437\u043d\u0430\u0439\u0442\u0438 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a, \u0442\u043e\u0434\u0456 \u0432\u0438\u0442\u044f\u0433\u043d\u0443\u0442\u0438 \u0439\u043e\u0433\u043e `head` \u0456 \u0442\u043e\u0434\u0456 \u0432\u0438\u0440\u0456\u0448\u0438\u0442\u0438, \u0447\u0438 \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u0430\u0442\u0438 \u0446\u044e \u043f\u0430\u0440\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-26T12:23:49Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432 # Header accuracy  90.00%",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-26T12:42:29Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-26T12:43:35Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-26T13:09:09Z",
        "PR Comment": "\u0434\u043e\u0434\u0430\u0432 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-26T13:19:08Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-26T14:19:06Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-26T15:07:18Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-26T15:08:35Z",
        "PR Comment": "\u0442\u0430\u043a, \u0432\u0438\u0434\u0430\u043b\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-26T15:38:48Z",
        "PR Comment": "\u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-27T20:07:36Z",
        "PR Comment": "\u041d\u0430 \u0434\u043e\u043c\u0430\u0448\u043a\u0443 \u0437\u0433\u043e\u0434\u0438\u0442\u044c\u0441\u044f, \u0430\u043b\u0435 \u0446\u0435\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043d\u0435\u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439, \u0430\u0434\u0436\u0435 \u0454 \u0442\u0430\u043a\u0456 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0438 \u044f\u043a \"clever\", \"eager\", \"honest\", \"modest\" \u0456 \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043d\u0448\u0438\u0445. \u042f\u043a\u0456 \u0454 \u0449\u0435 \u0432\u0430\u0440\u0456\u0430\u043d\u0442\u0438 \u0437\u0456 spaCy:\n- \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 Penn-\u0442\u0435\u0433\u0438 (JJR, JJS, RBR, RBS)\n- \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u0442\u0438 \u0441\u043b\u043e\u0432\u043e \u0437 \u043b\u0435\u043c\u043e\u044e\n",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-27T20:04:44Z",
        "PR Comment": "@yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-3.py",
        "Creation Date": "2020-03-27T20:13:14Z",
        "PR Comment": "> @yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.\n\n@mariana-scorp \u0437\u0430\u0431\u0440\u0430\u0432 \u0444\u0430\u0439\u043b \u0437 3\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework6/preprocess1.py",
        "Creation Date": "2020-05-31T18:05:45Z",
        "PR Comment": "\u0417\u043d\u0430\u0439\u0448\u043b\u0430 \u043f\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0435 \u0440\u0456\u0448\u0435\u043d\u043d\u044f. \u0413\u043e\u0434\u0438\u0442\u044c\u0441\u044f :) \u041c\u043e\u043b\u043e\u0434\u0435\u0446\u044c, \u0449\u043e \u0440\u043e\u0437\u0456\u0431\u0440\u0430\u0432\u0441\u044f \u0437 \u0434\u0430\u043d\u0438\u043c\u0438 \u0456 \u043f\u043e\u0431\u0443\u0434\u0443\u0432\u0430\u0432 \u043a\u043b\u0430\u0441\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440!\n\n\u0411\u0443\u043b\u043e \u0431 \u0434\u043e\u0431\u0440\u0435 \u0449\u0435 \u043f\u043e\u0434\u0438\u0432\u0438\u0442\u0438\u0441\u044c \u043d\u0430 \u0442\u043e\u043f \u0444\u0456\u0447\u0456. \u041d\u0443 \u0456 \u0448\u043a\u043e\u0434\u0430, \u0449\u043e \u0434\u043e \u0435\u043d\u0433\u0440\u0430\u043c\u0456\u0432 \u043d\u0435 \u0434\u043e\u0431\u0440\u0430\u0432\u0441\u044f. ",
        "PR/Issue Number": "145"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework6/preprocess1.py",
        "Creation Date": "2020-05-31T18:05:45Z",
        "PR Comment": "\u0417\u043d\u0430\u0439\u0448\u043b\u0430 \u043f\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0435 \u0440\u0456\u0448\u0435\u043d\u043d\u044f. \u0413\u043e\u0434\u0438\u0442\u044c\u0441\u044f :) \u041c\u043e\u043b\u043e\u0434\u0435\u0446\u044c, \u0449\u043e \u0440\u043e\u0437\u0456\u0431\u0440\u0430\u0432\u0441\u044f \u0437 \u0434\u0430\u043d\u0438\u043c\u0438 \u0456 \u043f\u043e\u0431\u0443\u0434\u0443\u0432\u0430\u0432 \u043a\u043b\u0430\u0441\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440!\n\n\u0411\u0443\u043b\u043e \u0431 \u0434\u043e\u0431\u0440\u0435 \u0449\u0435 \u043f\u043e\u0434\u0438\u0432\u0438\u0442\u0438\u0441\u044c \u043d\u0430 \u0442\u043e\u043f \u0444\u0456\u0447\u0456. \u041d\u0443 \u0456 \u0448\u043a\u043e\u0434\u0430, \u0449\u043e \u0434\u043e \u0435\u043d\u0433\u0440\u0430\u043c\u0456\u0432 \u043d\u0435 \u0434\u043e\u0431\u0440\u0430\u0432\u0441\u044f. ",
        "PR/Issue Number": "145"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/headlines.py",
        "Creation Date": "2020-03-27T21:22:12Z",
        "PR Comment": "\u041d\u0435 \u0440\u0430\u0434\u0436\u0443 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0443 \u043c\u043e\u0434\u0435\u043b\u044c, \u0431\u043e \u0432\u043e\u043d\u0430 \u0434\u043e\u0441\u0438\u0442\u044c \u043f\u043e\u0433\u0430\u043d\u043e\u0457 \u044f\u043a\u043e\u0441\u0442\u0456. \u041a\u0440\u0430\u0449\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0441\u0435\u0440\u0435\u0434\u043d\u044c\u043e\u0433\u043e \u0440\u043e\u0437\u043c\u0456\u0440\u0443 - \"md\".",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/headlines.py",
        "Creation Date": "2020-03-27T21:31:20Z",
        "PR Comment": "\u041e\u0446\u0435\u0439 \u0440\u044f\u0434\u043e\u043a \u0454 \u043f\u0440\u0438\u0447\u0438\u043d\u043e\u044e, \u0447\u043e\u043c\u0443 \u0442\u0438 \u043d\u0435 \u0437\u043d\u0430\u0439\u0448\u043e\u0432 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0456\u0432 \u0432\u0438\u0449\u043e\u0433\u043e \u0456 \u043d\u0430\u0439\u0432\u0438\u0449\u043e\u0433\u043e \u0441\u0442\u0443\u043f\u0435\u043d\u0456\u0432 \u0443 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u0445.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/headlines.py",
        "Creation Date": "2020-03-27T21:31:34Z",
        "PR Comment": "\u0426\u0435 \u043d\u0435 \u043d\u0430\u0439\u0431\u0456\u043b\u044c\u0448 \u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439 \u0441\u043f\u043e\u0441\u0456\u0431, \u0430\u0434\u0436\u0435 \u0454 \u0442\u0430\u043a\u0456 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0438 \u044f\u043a \"clever\", \"eager\", \"honest\", \"modest\" \u0456 \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043d\u0448\u0438\u0445. \u042f\u043a\u0456 \u0454 \u0449\u0435 \u0432\u0430\u0440\u0456\u0430\u043d\u0442\u0438 \u0437\u0456 spaCy:\n- \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 Penn-\u0442\u0435\u0433\u0438 (JJR, JJS, RBR, RBS)\n- \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u0442\u0438 \u0441\u043b\u043e\u0432\u043e \u0437 \u043b\u0435\u043c\u043e\u044e",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/headlines.py",
        "Creation Date": "2020-03-27T21:36:41Z",
        "PR Comment": "\u0422\u0438 \u043d\u0430\u0437\u0431\u0438\u0440\u0430\u0432 \u0434\u0443\u0436\u0435 \u043c\u0430\u043b\u043e \u043a\u043e\u043b\u043e\u043a\u0430\u0446\u0456\u0439, \u0431\u043e \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0454\u0448 \u0442\u0443\u0442 \u043d\u0435 \u043b\u0435\u043c\u0443 \u0441\u043b\u043e\u0432\u0430, \u0430 \u0441\u043b\u043e\u0432\u043e\u0444\u043e\u0440\u043c\u0443. \u0422\u043e\u043c\u0443 \u043a\u043e\u043b\u0438 \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0431\u0443\u043b\u043e \"say\" \u0437 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u043e\u043c, \u0442\u0438 \u0439\u043e\u0433\u043e \u043f\u0456\u0439\u043c\u0430\u0432, \u0430 \"said\", \"says\" \u0442\u0430 \"saying\" \u2014 \u043d\u0456.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/headlines.py",
        "Creation Date": "2020-03-27T21:38:12Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.\n\n\u0422\u043e\u0431\u0456 \u0456 \u043d\u0435 \u0448\u043a\u043e\u0434\u0430 \u0431\u0456\u043b\u044c\u0448\u0443 \u043c\u043e\u0434\u0435\u043b\u044c\u043a\u0443 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/headlines.py",
        "Creation Date": "2020-03-27T21:40:09Z",
        "PR Comment": "\u0426\u0435 \u043d\u0435 \u0434\u0443\u0436\u0435 \u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439 \u0441\u043f\u043e\u0441\u0456\u0431 \u043f\u043e\u0448\u0443\u043a\u0443 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u0456\u0432 \u0434\u043b\u044f \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430, \u0431\u043e \u0432\u043e\u043d\u0438 \u043d\u0435 \u0437\u0430\u0432\u0436\u0434\u0438 \u0431\u0443\u0434\u0443\u0442\u044c \u0456\u0442\u0438 \u043e\u0434\u0440\u0430\u0437\u0443 \u043f\u0456\u0441\u043b\u044f \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430. \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434: _\"He spoke about the issue calmly.\"_\n\n\u041d\u0430\u0431\u0430\u0433\u0430\u0442\u043e \u043a\u0440\u0430\u0449\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0434\u0435\u0440\u0435\u0432\u0430 \u0437\u0430\u043b\u0435\u0436\u043d\u043e\u0441\u0442\u0435\u0439 \u0434\u043b\u044f \u0446\u044c\u043e\u0433\u043e.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/headlines.py",
        "Creation Date": "2020-03-27T21:41:47Z",
        "PR Comment": "`if c.lower() in \"aeuio\":` :)",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/headlines.py",
        "Creation Date": "2020-03-28T13:22:08Z",
        "PR Comment": "\u041a\u0440\u0430\u0449\u0435 \u0442\u0430\u043a\u0438 `\"ly\\b\"`, \u0449\u043e\u0431 \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438 \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u044e.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/headlines.py",
        "Creation Date": "2020-03-28T13:23:00Z",
        "PR Comment": "\u0426\u0435\u0439 \u0440\u044f\u0434\u043e\u043a \u0432\u0436\u0435 \u0437\u0430\u0439\u0432\u0438\u0439.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/headlines.py",
        "Creation Date": "2020-03-27T21:22:12Z",
        "PR Comment": "\u041d\u0435 \u0440\u0430\u0434\u0436\u0443 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0443 \u043c\u043e\u0434\u0435\u043b\u044c, \u0431\u043e \u0432\u043e\u043d\u0430 \u0434\u043e\u0441\u0438\u0442\u044c \u043f\u043e\u0433\u0430\u043d\u043e\u0457 \u044f\u043a\u043e\u0441\u0442\u0456. \u041a\u0440\u0430\u0449\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0441\u0435\u0440\u0435\u0434\u043d\u044c\u043e\u0433\u043e \u0440\u043e\u0437\u043c\u0456\u0440\u0443 - \"md\".",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/headlines.py",
        "Creation Date": "2020-03-27T21:31:20Z",
        "PR Comment": "\u041e\u0446\u0435\u0439 \u0440\u044f\u0434\u043e\u043a \u0454 \u043f\u0440\u0438\u0447\u0438\u043d\u043e\u044e, \u0447\u043e\u043c\u0443 \u0442\u0438 \u043d\u0435 \u0437\u043d\u0430\u0439\u0448\u043e\u0432 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0456\u0432 \u0432\u0438\u0449\u043e\u0433\u043e \u0456 \u043d\u0430\u0439\u0432\u0438\u0449\u043e\u0433\u043e \u0441\u0442\u0443\u043f\u0435\u043d\u0456\u0432 \u0443 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u0445.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/headlines.py",
        "Creation Date": "2020-03-27T21:31:34Z",
        "PR Comment": "\u0426\u0435 \u043d\u0435 \u043d\u0430\u0439\u0431\u0456\u043b\u044c\u0448 \u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439 \u0441\u043f\u043e\u0441\u0456\u0431, \u0430\u0434\u0436\u0435 \u0454 \u0442\u0430\u043a\u0456 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0438 \u044f\u043a \"clever\", \"eager\", \"honest\", \"modest\" \u0456 \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043d\u0448\u0438\u0445. \u042f\u043a\u0456 \u0454 \u0449\u0435 \u0432\u0430\u0440\u0456\u0430\u043d\u0442\u0438 \u0437\u0456 spaCy:\n- \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 Penn-\u0442\u0435\u0433\u0438 (JJR, JJS, RBR, RBS)\n- \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u0442\u0438 \u0441\u043b\u043e\u0432\u043e \u0437 \u043b\u0435\u043c\u043e\u044e",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/headlines.py",
        "Creation Date": "2020-03-27T21:36:41Z",
        "PR Comment": "\u0422\u0438 \u043d\u0430\u0437\u0431\u0438\u0440\u0430\u0432 \u0434\u0443\u0436\u0435 \u043c\u0430\u043b\u043e \u043a\u043e\u043b\u043e\u043a\u0430\u0446\u0456\u0439, \u0431\u043e \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0454\u0448 \u0442\u0443\u0442 \u043d\u0435 \u043b\u0435\u043c\u0443 \u0441\u043b\u043e\u0432\u0430, \u0430 \u0441\u043b\u043e\u0432\u043e\u0444\u043e\u0440\u043c\u0443. \u0422\u043e\u043c\u0443 \u043a\u043e\u043b\u0438 \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0431\u0443\u043b\u043e \"say\" \u0437 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u043e\u043c, \u0442\u0438 \u0439\u043e\u0433\u043e \u043f\u0456\u0439\u043c\u0430\u0432, \u0430 \"said\", \"says\" \u0442\u0430 \"saying\" \u2014 \u043d\u0456.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/headlines.py",
        "Creation Date": "2020-03-27T21:38:12Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.\n\n\u0422\u043e\u0431\u0456 \u0456 \u043d\u0435 \u0448\u043a\u043e\u0434\u0430 \u0431\u0456\u043b\u044c\u0448\u0443 \u043c\u043e\u0434\u0435\u043b\u044c\u043a\u0443 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/headlines.py",
        "Creation Date": "2020-03-27T21:40:09Z",
        "PR Comment": "\u0426\u0435 \u043d\u0435 \u0434\u0443\u0436\u0435 \u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439 \u0441\u043f\u043e\u0441\u0456\u0431 \u043f\u043e\u0448\u0443\u043a\u0443 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u0456\u0432 \u0434\u043b\u044f \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430, \u0431\u043e \u0432\u043e\u043d\u0438 \u043d\u0435 \u0437\u0430\u0432\u0436\u0434\u0438 \u0431\u0443\u0434\u0443\u0442\u044c \u0456\u0442\u0438 \u043e\u0434\u0440\u0430\u0437\u0443 \u043f\u0456\u0441\u043b\u044f \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430. \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434: _\"He spoke about the issue calmly.\"_\n\n\u041d\u0430\u0431\u0430\u0433\u0430\u0442\u043e \u043a\u0440\u0430\u0449\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0434\u0435\u0440\u0435\u0432\u0430 \u0437\u0430\u043b\u0435\u0436\u043d\u043e\u0441\u0442\u0435\u0439 \u0434\u043b\u044f \u0446\u044c\u043e\u0433\u043e.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/headlines.py",
        "Creation Date": "2020-03-27T21:41:47Z",
        "PR Comment": "`if c.lower() in \"aeuio\":` :)",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/headlines.py",
        "Creation Date": "2020-03-28T13:22:08Z",
        "PR Comment": "\u041a\u0440\u0430\u0449\u0435 \u0442\u0430\u043a\u0438 `\"ly\\b\"`, \u0449\u043e\u0431 \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438 \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u044e.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/headlines.py",
        "Creation Date": "2020-03-28T13:23:00Z",
        "PR Comment": "\u0426\u0435\u0439 \u0440\u044f\u0434\u043e\u043a \u0432\u0436\u0435 \u0437\u0430\u0439\u0432\u0438\u0439.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/AlisaMansurova/10-vectors/10-vectors.py",
        "Creation Date": "2020-05-30T20:43:26Z",
        "PR Comment": "\u0412\u0441\u0435 \u0437\u0440\u043e\u0431\u043b\u0435\u043d\u043e \u043d\u0430 \u0431\u0430\u0437\u043e\u0432\u043e\u043c\u0443 \u0440\u0456\u0432\u043d\u0456. \u042f\u043a \u0432\u0438\u0434\u043d\u043e \u0437 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438, \u043e\u0441\u044c \u0441\u0438\u043b\u044c\u043d\u043e \u0440\u043e\u0437\u0434\u0456\u043b\u0438\u0442\u0438 \u043d\u0435 \u0432\u0434\u0430\u043b\u043e\u0441\u044f :)\n\u041e\u0441\u043a\u0456\u043b\u044c\u043a\u0438 \u043e\u0441\u043e\u0431\u043b\u0438\u0432\u0438\u0445 \u0441\u043f\u0440\u043e\u0431 \u043f\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u043d\u044f \u0437\u0440\u043e\u0431\u043b\u0435\u043d\u043e \u043d\u0435 \u0431\u0443\u043b\u043e (\u044f\u043a\u0449\u043e \u043d\u0435 \u0432\u0432\u0430\u0436\u0430\u0442\u0438 \u0437\u0430 \u0442\u0430\u043a\u0443 \u0433\u0440\u0443\u043f\u0443\u0432\u0430\u043d\u043d\u044f \u0432\u0441\u0456\u0445 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0456\u0457 \u0413\u0412\u041f/\u0425\u0412\u041f \u0442\u0430 \u0440\u0456\u0437\u043d\u0435), \u0442\u043e \u0437\u0430\u0433\u0430\u043b\u044c\u043d\u0430 \u043e\u0446\u0456\u043d\u043a\u0430 - 60 ",
        "PR/Issue Number": "123"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/AlisaMansurova/10-vectors/10-vectors.py",
        "Creation Date": "2020-05-30T20:43:26Z",
        "PR Comment": "\u0412\u0441\u0435 \u0437\u0440\u043e\u0431\u043b\u0435\u043d\u043e \u043d\u0430 \u0431\u0430\u0437\u043e\u0432\u043e\u043c\u0443 \u0440\u0456\u0432\u043d\u0456. \u042f\u043a \u0432\u0438\u0434\u043d\u043e \u0437 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438, \u043e\u0441\u044c \u0441\u0438\u043b\u044c\u043d\u043e \u0440\u043e\u0437\u0434\u0456\u043b\u0438\u0442\u0438 \u043d\u0435 \u0432\u0434\u0430\u043b\u043e\u0441\u044f :)\n\u041e\u0441\u043a\u0456\u043b\u044c\u043a\u0438 \u043e\u0441\u043e\u0431\u043b\u0438\u0432\u0438\u0445 \u0441\u043f\u0440\u043e\u0431 \u043f\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u043d\u044f \u0437\u0440\u043e\u0431\u043b\u0435\u043d\u043e \u043d\u0435 \u0431\u0443\u043b\u043e (\u044f\u043a\u0449\u043e \u043d\u0435 \u0432\u0432\u0430\u0436\u0430\u0442\u0438 \u0437\u0430 \u0442\u0430\u043a\u0443 \u0433\u0440\u0443\u043f\u0443\u0432\u0430\u043d\u043d\u044f \u0432\u0441\u0456\u0445 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0456\u0457 \u0413\u0412\u041f/\u0425\u0412\u041f \u0442\u0430 \u0440\u0456\u0437\u043d\u0435), \u0442\u043e \u0437\u0430\u0433\u0430\u043b\u044c\u043d\u0430 \u043e\u0446\u0456\u043d\u043a\u0430 - 60 ",
        "PR/Issue Number": "123"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:44:59Z",
        "PR Comment": "\u0422\u0443\u0442 \u0456 \u0434\u0430\u043b\u0456 \u043d\u0435 \u0432\u0440\u0430\u0445\u043e\u0432\u0430\u043d\u0430 \u043a\u0456\u043d\u0446\u0435\u0432\u0430 \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u044f \u043f\u0456\u0441\u043b\u044f \u043e\u0441\u0442\u0430\u043d\u043d\u044c\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:46:19Z",
        "PR Comment": "\u0414\u043e\u0434\u0430\u0439, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u0432\u0438\u0432\u0456\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0438. \u041c\u043e\u0436\u043d\u0430 \u043f\u0440\u044f\u043c\u043e \u0442\u0443\u0442 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0435\u043c.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:51:19Z",
        "PR Comment": "\u0422\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0449\u0435 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u043d\u043d\u044f \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438: better, smaller, more.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:52:01Z",
        "PR Comment": "\u041e\u0434\u0440\u0443\u043a\u0456\u0432\u043a\u0430: \"PESRON\".",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:57:31Z",
        "PR Comment": "\u041a\u043e\u0440\u0438\u0441\u0442\u0443\u0439\u0441\u044f, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `.pos_` \u0437\u0430\u043c\u0456\u0441\u0442\u044c `.pos` \u0456 \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u0434\u0435 \u043f\u0440\u043e\u043f\u0438\u0441\u0443\u0432\u0430\u0442\u0438 \u0447\u0438\u0441\u043b\u043e\u0432\u0456 \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440\u0438 \u0442\u0435\u0433\u0456\u0432.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:58:43Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T18:00:27Z",
        "PR Comment": "\u0422\u0438 \u043d\u0430\u0437\u0431\u0438\u0440\u0430\u0432 \u0434\u0443\u0436\u0435 \u043c\u0430\u043b\u043e \u043a\u043e\u043b\u043e\u043a\u0430\u0446\u0456\u0439, \u0431\u043e \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0454\u0448 \u0442\u0443\u0442 \u043d\u0435 \u043b\u0435\u043c\u0443 \u0441\u043b\u043e\u0432\u0430, \u0430 \u0441\u043b\u043e\u0432\u043e\u0444\u043e\u0440\u043c\u0443. \u0422\u043e\u043c\u0443 \u043a\u043e\u043b\u0438 \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0431\u0443\u043b\u043e \"say\" \u0437 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u043e\u043c, \u0442\u0438 \u0439\u043e\u0433\u043e \u043f\u0456\u0439\u043c\u0430\u0432, \u0430 \"said\", \"says\" \u0442\u0430 \"saying\" \u2014 \u043d\u0456.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T18:06:38Z",
        "PR Comment": "\u0426\u0456 \u0442\u0440\u0438 \u0440\u044f\u0434\u043a\u0438 (25-27) \u2014 \u0446\u0435 \u044f\u0432\u043d\u043e \u0437\u0430\u043b\u0438\u0448\u043a\u0438 \u044f\u043a\u043e\u0433\u043e\u0441\u044c \u0434\u0435\u0431\u0430\u0433\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T18:08:19Z",
        "PR Comment": "\u0417\u0430\u043c\u0456\u0441\u0442\u044c \u0442\u043e\u0433\u043e, \u0449\u043e\u0431 \u0434\u0432\u0456\u0447\u0456 \u0456\u0442\u0435\u0440\u0432\u0430\u0442\u0438\u0441\u044f \u043f\u043e \u0440\u0435\u0447\u0435\u043d\u043d\u044e, \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u0437\u043d\u0430\u0439\u0442\u0438 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a, \u0442\u043e\u0434\u0456 \u0432\u0438\u0442\u044f\u0433\u043d\u0443\u0442\u0438 \u0439\u043e\u0433\u043e `head` \u0456 \u0442\u043e\u0434\u0456 \u0432\u0438\u0440\u0456\u0448\u0438\u0442\u0438, \u0447\u0438 \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u0430\u0442\u0438 \u0446\u044e \u043f\u0430\u0440\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T12:23:49Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432 # Header accuracy  90.00%",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T12:42:29Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T12:43:35Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T13:09:09Z",
        "PR Comment": "\u0434\u043e\u0434\u0430\u0432 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T13:19:08Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T14:19:06Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T15:07:18Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T15:08:35Z",
        "PR Comment": "\u0442\u0430\u043a, \u0432\u0438\u0434\u0430\u043b\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T15:38:48Z",
        "PR Comment": "\u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-27T20:07:36Z",
        "PR Comment": "\u041d\u0430 \u0434\u043e\u043c\u0430\u0448\u043a\u0443 \u0437\u0433\u043e\u0434\u0438\u0442\u044c\u0441\u044f, \u0430\u043b\u0435 \u0446\u0435\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043d\u0435\u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439, \u0430\u0434\u0436\u0435 \u0454 \u0442\u0430\u043a\u0456 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0438 \u044f\u043a \"clever\", \"eager\", \"honest\", \"modest\" \u0456 \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043d\u0448\u0438\u0445. \u042f\u043a\u0456 \u0454 \u0449\u0435 \u0432\u0430\u0440\u0456\u0430\u043d\u0442\u0438 \u0437\u0456 spaCy:\n- \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 Penn-\u0442\u0435\u0433\u0438 (JJR, JJS, RBR, RBS)\n- \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u0442\u0438 \u0441\u043b\u043e\u0432\u043e \u0437 \u043b\u0435\u043c\u043e\u044e\n",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-27T20:04:44Z",
        "PR Comment": "@yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-27T20:13:14Z",
        "PR Comment": "> @yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.\n\n@mariana-scorp \u0437\u0430\u0431\u0440\u0430\u0432 \u0444\u0430\u0439\u043b \u0437 3\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:44:59Z",
        "PR Comment": "\u0422\u0443\u0442 \u0456 \u0434\u0430\u043b\u0456 \u043d\u0435 \u0432\u0440\u0430\u0445\u043e\u0432\u0430\u043d\u0430 \u043a\u0456\u043d\u0446\u0435\u0432\u0430 \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u044f \u043f\u0456\u0441\u043b\u044f \u043e\u0441\u0442\u0430\u043d\u043d\u044c\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:46:19Z",
        "PR Comment": "\u0414\u043e\u0434\u0430\u0439, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u0432\u0438\u0432\u0456\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0438. \u041c\u043e\u0436\u043d\u0430 \u043f\u0440\u044f\u043c\u043e \u0442\u0443\u0442 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0435\u043c.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:51:19Z",
        "PR Comment": "\u0422\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0449\u0435 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u043d\u043d\u044f \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438: better, smaller, more.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:52:01Z",
        "PR Comment": "\u041e\u0434\u0440\u0443\u043a\u0456\u0432\u043a\u0430: \"PESRON\".",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:57:31Z",
        "PR Comment": "\u041a\u043e\u0440\u0438\u0441\u0442\u0443\u0439\u0441\u044f, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `.pos_` \u0437\u0430\u043c\u0456\u0441\u0442\u044c `.pos` \u0456 \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u0434\u0435 \u043f\u0440\u043e\u043f\u0438\u0441\u0443\u0432\u0430\u0442\u0438 \u0447\u0438\u0441\u043b\u043e\u0432\u0456 \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440\u0438 \u0442\u0435\u0433\u0456\u0432.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:58:43Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T18:00:27Z",
        "PR Comment": "\u0422\u0438 \u043d\u0430\u0437\u0431\u0438\u0440\u0430\u0432 \u0434\u0443\u0436\u0435 \u043c\u0430\u043b\u043e \u043a\u043e\u043b\u043e\u043a\u0430\u0446\u0456\u0439, \u0431\u043e \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0454\u0448 \u0442\u0443\u0442 \u043d\u0435 \u043b\u0435\u043c\u0443 \u0441\u043b\u043e\u0432\u0430, \u0430 \u0441\u043b\u043e\u0432\u043e\u0444\u043e\u0440\u043c\u0443. \u0422\u043e\u043c\u0443 \u043a\u043e\u043b\u0438 \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0431\u0443\u043b\u043e \"say\" \u0437 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u043e\u043c, \u0442\u0438 \u0439\u043e\u0433\u043e \u043f\u0456\u0439\u043c\u0430\u0432, \u0430 \"said\", \"says\" \u0442\u0430 \"saying\" \u2014 \u043d\u0456.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T18:06:38Z",
        "PR Comment": "\u0426\u0456 \u0442\u0440\u0438 \u0440\u044f\u0434\u043a\u0438 (25-27) \u2014 \u0446\u0435 \u044f\u0432\u043d\u043e \u0437\u0430\u043b\u0438\u0448\u043a\u0438 \u044f\u043a\u043e\u0433\u043e\u0441\u044c \u0434\u0435\u0431\u0430\u0433\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T18:08:19Z",
        "PR Comment": "\u0417\u0430\u043c\u0456\u0441\u0442\u044c \u0442\u043e\u0433\u043e, \u0449\u043e\u0431 \u0434\u0432\u0456\u0447\u0456 \u0456\u0442\u0435\u0440\u0432\u0430\u0442\u0438\u0441\u044f \u043f\u043e \u0440\u0435\u0447\u0435\u043d\u043d\u044e, \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u0437\u043d\u0430\u0439\u0442\u0438 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a, \u0442\u043e\u0434\u0456 \u0432\u0438\u0442\u044f\u0433\u043d\u0443\u0442\u0438 \u0439\u043e\u0433\u043e `head` \u0456 \u0442\u043e\u0434\u0456 \u0432\u0438\u0440\u0456\u0448\u0438\u0442\u0438, \u0447\u0438 \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u0430\u0442\u0438 \u0446\u044e \u043f\u0430\u0440\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T12:23:49Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432 # Header accuracy  90.00%",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T12:42:29Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T12:43:35Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T13:09:09Z",
        "PR Comment": "\u0434\u043e\u0434\u0430\u0432 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T13:19:08Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T14:19:06Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T15:07:18Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T15:08:35Z",
        "PR Comment": "\u0442\u0430\u043a, \u0432\u0438\u0434\u0430\u043b\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T15:38:48Z",
        "PR Comment": "\u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-27T20:07:36Z",
        "PR Comment": "\u041d\u0430 \u0434\u043e\u043c\u0430\u0448\u043a\u0443 \u0437\u0433\u043e\u0434\u0438\u0442\u044c\u0441\u044f, \u0430\u043b\u0435 \u0446\u0435\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043d\u0435\u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439, \u0430\u0434\u0436\u0435 \u0454 \u0442\u0430\u043a\u0456 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0438 \u044f\u043a \"clever\", \"eager\", \"honest\", \"modest\" \u0456 \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043d\u0448\u0438\u0445. \u042f\u043a\u0456 \u0454 \u0449\u0435 \u0432\u0430\u0440\u0456\u0430\u043d\u0442\u0438 \u0437\u0456 spaCy:\n- \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 Penn-\u0442\u0435\u0433\u0438 (JJR, JJS, RBR, RBS)\n- \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u0442\u0438 \u0441\u043b\u043e\u0432\u043e \u0437 \u043b\u0435\u043c\u043e\u044e\n",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-27T20:04:44Z",
        "PR Comment": "@yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-27T20:13:14Z",
        "PR Comment": "> @yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.\n\n@mariana-scorp \u0437\u0430\u0431\u0440\u0430\u0432 \u0444\u0430\u0439\u043b \u0437 3\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:44:59Z",
        "PR Comment": "\u0422\u0443\u0442 \u0456 \u0434\u0430\u043b\u0456 \u043d\u0435 \u0432\u0440\u0430\u0445\u043e\u0432\u0430\u043d\u0430 \u043a\u0456\u043d\u0446\u0435\u0432\u0430 \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u044f \u043f\u0456\u0441\u043b\u044f \u043e\u0441\u0442\u0430\u043d\u043d\u044c\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:46:19Z",
        "PR Comment": "\u0414\u043e\u0434\u0430\u0439, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u0432\u0438\u0432\u0456\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0438. \u041c\u043e\u0436\u043d\u0430 \u043f\u0440\u044f\u043c\u043e \u0442\u0443\u0442 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0435\u043c.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:51:19Z",
        "PR Comment": "\u0422\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0449\u0435 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u043d\u043d\u044f \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438: better, smaller, more.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:52:01Z",
        "PR Comment": "\u041e\u0434\u0440\u0443\u043a\u0456\u0432\u043a\u0430: \"PESRON\".",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:57:31Z",
        "PR Comment": "\u041a\u043e\u0440\u0438\u0441\u0442\u0443\u0439\u0441\u044f, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `.pos_` \u0437\u0430\u043c\u0456\u0441\u0442\u044c `.pos` \u0456 \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u0434\u0435 \u043f\u0440\u043e\u043f\u0438\u0441\u0443\u0432\u0430\u0442\u0438 \u0447\u0438\u0441\u043b\u043e\u0432\u0456 \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440\u0438 \u0442\u0435\u0433\u0456\u0432.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:58:43Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T18:00:27Z",
        "PR Comment": "\u0422\u0438 \u043d\u0430\u0437\u0431\u0438\u0440\u0430\u0432 \u0434\u0443\u0436\u0435 \u043c\u0430\u043b\u043e \u043a\u043e\u043b\u043e\u043a\u0430\u0446\u0456\u0439, \u0431\u043e \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0454\u0448 \u0442\u0443\u0442 \u043d\u0435 \u043b\u0435\u043c\u0443 \u0441\u043b\u043e\u0432\u0430, \u0430 \u0441\u043b\u043e\u0432\u043e\u0444\u043e\u0440\u043c\u0443. \u0422\u043e\u043c\u0443 \u043a\u043e\u043b\u0438 \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0431\u0443\u043b\u043e \"say\" \u0437 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u043e\u043c, \u0442\u0438 \u0439\u043e\u0433\u043e \u043f\u0456\u0439\u043c\u0430\u0432, \u0430 \"said\", \"says\" \u0442\u0430 \"saying\" \u2014 \u043d\u0456.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T18:06:38Z",
        "PR Comment": "\u0426\u0456 \u0442\u0440\u0438 \u0440\u044f\u0434\u043a\u0438 (25-27) \u2014 \u0446\u0435 \u044f\u0432\u043d\u043e \u0437\u0430\u043b\u0438\u0448\u043a\u0438 \u044f\u043a\u043e\u0433\u043e\u0441\u044c \u0434\u0435\u0431\u0430\u0433\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T18:08:19Z",
        "PR Comment": "\u0417\u0430\u043c\u0456\u0441\u0442\u044c \u0442\u043e\u0433\u043e, \u0449\u043e\u0431 \u0434\u0432\u0456\u0447\u0456 \u0456\u0442\u0435\u0440\u0432\u0430\u0442\u0438\u0441\u044f \u043f\u043e \u0440\u0435\u0447\u0435\u043d\u043d\u044e, \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u0437\u043d\u0430\u0439\u0442\u0438 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a, \u0442\u043e\u0434\u0456 \u0432\u0438\u0442\u044f\u0433\u043d\u0443\u0442\u0438 \u0439\u043e\u0433\u043e `head` \u0456 \u0442\u043e\u0434\u0456 \u0432\u0438\u0440\u0456\u0448\u0438\u0442\u0438, \u0447\u0438 \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u0430\u0442\u0438 \u0446\u044e \u043f\u0430\u0440\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T12:23:49Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432 # Header accuracy  90.00%",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T12:42:29Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T12:43:35Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T13:09:09Z",
        "PR Comment": "\u0434\u043e\u0434\u0430\u0432 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T13:19:08Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T14:19:06Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T15:07:18Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T15:08:35Z",
        "PR Comment": "\u0442\u0430\u043a, \u0432\u0438\u0434\u0430\u043b\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T15:38:48Z",
        "PR Comment": "\u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-27T20:07:36Z",
        "PR Comment": "\u041d\u0430 \u0434\u043e\u043c\u0430\u0448\u043a\u0443 \u0437\u0433\u043e\u0434\u0438\u0442\u044c\u0441\u044f, \u0430\u043b\u0435 \u0446\u0435\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043d\u0435\u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439, \u0430\u0434\u0436\u0435 \u0454 \u0442\u0430\u043a\u0456 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0438 \u044f\u043a \"clever\", \"eager\", \"honest\", \"modest\" \u0456 \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043d\u0448\u0438\u0445. \u042f\u043a\u0456 \u0454 \u0449\u0435 \u0432\u0430\u0440\u0456\u0430\u043d\u0442\u0438 \u0437\u0456 spaCy:\n- \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 Penn-\u0442\u0435\u0433\u0438 (JJR, JJS, RBR, RBS)\n- \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u0442\u0438 \u0441\u043b\u043e\u0432\u043e \u0437 \u043b\u0435\u043c\u043e\u044e\n",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-27T20:04:44Z",
        "PR Comment": "@yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-27T20:13:14Z",
        "PR Comment": "> @yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.\n\n@mariana-scorp \u0437\u0430\u0431\u0440\u0430\u0432 \u0444\u0430\u0439\u043b \u0437 3\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:44:59Z",
        "PR Comment": "\u0422\u0443\u0442 \u0456 \u0434\u0430\u043b\u0456 \u043d\u0435 \u0432\u0440\u0430\u0445\u043e\u0432\u0430\u043d\u0430 \u043a\u0456\u043d\u0446\u0435\u0432\u0430 \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u044f \u043f\u0456\u0441\u043b\u044f \u043e\u0441\u0442\u0430\u043d\u043d\u044c\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:46:19Z",
        "PR Comment": "\u0414\u043e\u0434\u0430\u0439, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u0432\u0438\u0432\u0456\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0438. \u041c\u043e\u0436\u043d\u0430 \u043f\u0440\u044f\u043c\u043e \u0442\u0443\u0442 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0435\u043c.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:51:19Z",
        "PR Comment": "\u0422\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0449\u0435 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u043d\u043d\u044f \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438: better, smaller, more.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:52:01Z",
        "PR Comment": "\u041e\u0434\u0440\u0443\u043a\u0456\u0432\u043a\u0430: \"PESRON\".",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:57:31Z",
        "PR Comment": "\u041a\u043e\u0440\u0438\u0441\u0442\u0443\u0439\u0441\u044f, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `.pos_` \u0437\u0430\u043c\u0456\u0441\u0442\u044c `.pos` \u0456 \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u0434\u0435 \u043f\u0440\u043e\u043f\u0438\u0441\u0443\u0432\u0430\u0442\u0438 \u0447\u0438\u0441\u043b\u043e\u0432\u0456 \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440\u0438 \u0442\u0435\u0433\u0456\u0432.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:58:43Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T18:00:27Z",
        "PR Comment": "\u0422\u0438 \u043d\u0430\u0437\u0431\u0438\u0440\u0430\u0432 \u0434\u0443\u0436\u0435 \u043c\u0430\u043b\u043e \u043a\u043e\u043b\u043e\u043a\u0430\u0446\u0456\u0439, \u0431\u043e \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0454\u0448 \u0442\u0443\u0442 \u043d\u0435 \u043b\u0435\u043c\u0443 \u0441\u043b\u043e\u0432\u0430, \u0430 \u0441\u043b\u043e\u0432\u043e\u0444\u043e\u0440\u043c\u0443. \u0422\u043e\u043c\u0443 \u043a\u043e\u043b\u0438 \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0431\u0443\u043b\u043e \"say\" \u0437 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u043e\u043c, \u0442\u0438 \u0439\u043e\u0433\u043e \u043f\u0456\u0439\u043c\u0430\u0432, \u0430 \"said\", \"says\" \u0442\u0430 \"saying\" \u2014 \u043d\u0456.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T18:06:38Z",
        "PR Comment": "\u0426\u0456 \u0442\u0440\u0438 \u0440\u044f\u0434\u043a\u0438 (25-27) \u2014 \u0446\u0435 \u044f\u0432\u043d\u043e \u0437\u0430\u043b\u0438\u0448\u043a\u0438 \u044f\u043a\u043e\u0433\u043e\u0441\u044c \u0434\u0435\u0431\u0430\u0433\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T18:08:19Z",
        "PR Comment": "\u0417\u0430\u043c\u0456\u0441\u0442\u044c \u0442\u043e\u0433\u043e, \u0449\u043e\u0431 \u0434\u0432\u0456\u0447\u0456 \u0456\u0442\u0435\u0440\u0432\u0430\u0442\u0438\u0441\u044f \u043f\u043e \u0440\u0435\u0447\u0435\u043d\u043d\u044e, \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u0437\u043d\u0430\u0439\u0442\u0438 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a, \u0442\u043e\u0434\u0456 \u0432\u0438\u0442\u044f\u0433\u043d\u0443\u0442\u0438 \u0439\u043e\u0433\u043e `head` \u0456 \u0442\u043e\u0434\u0456 \u0432\u0438\u0440\u0456\u0448\u0438\u0442\u0438, \u0447\u0438 \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u0430\u0442\u0438 \u0446\u044e \u043f\u0430\u0440\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T12:23:49Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432 # Header accuracy  90.00%",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T12:42:29Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T12:43:35Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T13:09:09Z",
        "PR Comment": "\u0434\u043e\u0434\u0430\u0432 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T13:19:08Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T14:19:06Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T15:07:18Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T15:08:35Z",
        "PR Comment": "\u0442\u0430\u043a, \u0432\u0438\u0434\u0430\u043b\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T15:38:48Z",
        "PR Comment": "\u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-27T20:07:36Z",
        "PR Comment": "\u041d\u0430 \u0434\u043e\u043c\u0430\u0448\u043a\u0443 \u0437\u0433\u043e\u0434\u0438\u0442\u044c\u0441\u044f, \u0430\u043b\u0435 \u0446\u0435\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043d\u0435\u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439, \u0430\u0434\u0436\u0435 \u0454 \u0442\u0430\u043a\u0456 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0438 \u044f\u043a \"clever\", \"eager\", \"honest\", \"modest\" \u0456 \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043d\u0448\u0438\u0445. \u042f\u043a\u0456 \u0454 \u0449\u0435 \u0432\u0430\u0440\u0456\u0430\u043d\u0442\u0438 \u0437\u0456 spaCy:\n- \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 Penn-\u0442\u0435\u0433\u0438 (JJR, JJS, RBR, RBS)\n- \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u0442\u0438 \u0441\u043b\u043e\u0432\u043e \u0437 \u043b\u0435\u043c\u043e\u044e\n",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-27T20:04:44Z",
        "PR Comment": "@yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-27T20:13:14Z",
        "PR Comment": "> @yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.\n\n@mariana-scorp \u0437\u0430\u0431\u0440\u0430\u0432 \u0444\u0430\u0439\u043b \u0437 3\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:44:59Z",
        "PR Comment": "\u0422\u0443\u0442 \u0456 \u0434\u0430\u043b\u0456 \u043d\u0435 \u0432\u0440\u0430\u0445\u043e\u0432\u0430\u043d\u0430 \u043a\u0456\u043d\u0446\u0435\u0432\u0430 \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u044f \u043f\u0456\u0441\u043b\u044f \u043e\u0441\u0442\u0430\u043d\u043d\u044c\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:46:19Z",
        "PR Comment": "\u0414\u043e\u0434\u0430\u0439, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u0432\u0438\u0432\u0456\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0438. \u041c\u043e\u0436\u043d\u0430 \u043f\u0440\u044f\u043c\u043e \u0442\u0443\u0442 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0435\u043c.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:51:19Z",
        "PR Comment": "\u0422\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0449\u0435 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u043d\u043d\u044f \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438: better, smaller, more.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:52:01Z",
        "PR Comment": "\u041e\u0434\u0440\u0443\u043a\u0456\u0432\u043a\u0430: \"PESRON\".",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:57:31Z",
        "PR Comment": "\u041a\u043e\u0440\u0438\u0441\u0442\u0443\u0439\u0441\u044f, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `.pos_` \u0437\u0430\u043c\u0456\u0441\u0442\u044c `.pos` \u0456 \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u0434\u0435 \u043f\u0440\u043e\u043f\u0438\u0441\u0443\u0432\u0430\u0442\u0438 \u0447\u0438\u0441\u043b\u043e\u0432\u0456 \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440\u0438 \u0442\u0435\u0433\u0456\u0432.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:58:43Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T18:00:27Z",
        "PR Comment": "\u0422\u0438 \u043d\u0430\u0437\u0431\u0438\u0440\u0430\u0432 \u0434\u0443\u0436\u0435 \u043c\u0430\u043b\u043e \u043a\u043e\u043b\u043e\u043a\u0430\u0446\u0456\u0439, \u0431\u043e \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0454\u0448 \u0442\u0443\u0442 \u043d\u0435 \u043b\u0435\u043c\u0443 \u0441\u043b\u043e\u0432\u0430, \u0430 \u0441\u043b\u043e\u0432\u043e\u0444\u043e\u0440\u043c\u0443. \u0422\u043e\u043c\u0443 \u043a\u043e\u043b\u0438 \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0431\u0443\u043b\u043e \"say\" \u0437 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u043e\u043c, \u0442\u0438 \u0439\u043e\u0433\u043e \u043f\u0456\u0439\u043c\u0430\u0432, \u0430 \"said\", \"says\" \u0442\u0430 \"saying\" \u2014 \u043d\u0456.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T18:06:38Z",
        "PR Comment": "\u0426\u0456 \u0442\u0440\u0438 \u0440\u044f\u0434\u043a\u0438 (25-27) \u2014 \u0446\u0435 \u044f\u0432\u043d\u043e \u0437\u0430\u043b\u0438\u0448\u043a\u0438 \u044f\u043a\u043e\u0433\u043e\u0441\u044c \u0434\u0435\u0431\u0430\u0433\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T18:08:19Z",
        "PR Comment": "\u0417\u0430\u043c\u0456\u0441\u0442\u044c \u0442\u043e\u0433\u043e, \u0449\u043e\u0431 \u0434\u0432\u0456\u0447\u0456 \u0456\u0442\u0435\u0440\u0432\u0430\u0442\u0438\u0441\u044f \u043f\u043e \u0440\u0435\u0447\u0435\u043d\u043d\u044e, \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u0437\u043d\u0430\u0439\u0442\u0438 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a, \u0442\u043e\u0434\u0456 \u0432\u0438\u0442\u044f\u0433\u043d\u0443\u0442\u0438 \u0439\u043e\u0433\u043e `head` \u0456 \u0442\u043e\u0434\u0456 \u0432\u0438\u0440\u0456\u0448\u0438\u0442\u0438, \u0447\u0438 \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u0430\u0442\u0438 \u0446\u044e \u043f\u0430\u0440\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T12:23:49Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432 # Header accuracy  90.00%",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T12:42:29Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T12:43:35Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T13:09:09Z",
        "PR Comment": "\u0434\u043e\u0434\u0430\u0432 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T13:19:08Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T14:19:06Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T15:07:18Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T15:08:35Z",
        "PR Comment": "\u0442\u0430\u043a, \u0432\u0438\u0434\u0430\u043b\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T15:38:48Z",
        "PR Comment": "\u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-27T20:07:36Z",
        "PR Comment": "\u041d\u0430 \u0434\u043e\u043c\u0430\u0448\u043a\u0443 \u0437\u0433\u043e\u0434\u0438\u0442\u044c\u0441\u044f, \u0430\u043b\u0435 \u0446\u0435\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043d\u0435\u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439, \u0430\u0434\u0436\u0435 \u0454 \u0442\u0430\u043a\u0456 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0438 \u044f\u043a \"clever\", \"eager\", \"honest\", \"modest\" \u0456 \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043d\u0448\u0438\u0445. \u042f\u043a\u0456 \u0454 \u0449\u0435 \u0432\u0430\u0440\u0456\u0430\u043d\u0442\u0438 \u0437\u0456 spaCy:\n- \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 Penn-\u0442\u0435\u0433\u0438 (JJR, JJS, RBR, RBS)\n- \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u0442\u0438 \u0441\u043b\u043e\u0432\u043e \u0437 \u043b\u0435\u043c\u043e\u044e\n",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-27T20:04:44Z",
        "PR Comment": "@yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-27T20:13:14Z",
        "PR Comment": "> @yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.\n\n@mariana-scorp \u0437\u0430\u0431\u0440\u0430\u0432 \u0444\u0430\u0439\u043b \u0437 3\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:44:59Z",
        "PR Comment": "\u0422\u0443\u0442 \u0456 \u0434\u0430\u043b\u0456 \u043d\u0435 \u0432\u0440\u0430\u0445\u043e\u0432\u0430\u043d\u0430 \u043a\u0456\u043d\u0446\u0435\u0432\u0430 \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u044f \u043f\u0456\u0441\u043b\u044f \u043e\u0441\u0442\u0430\u043d\u043d\u044c\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:46:19Z",
        "PR Comment": "\u0414\u043e\u0434\u0430\u0439, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u0432\u0438\u0432\u0456\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0438. \u041c\u043e\u0436\u043d\u0430 \u043f\u0440\u044f\u043c\u043e \u0442\u0443\u0442 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0435\u043c.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:51:19Z",
        "PR Comment": "\u0422\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0449\u0435 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u043d\u043d\u044f \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438: better, smaller, more.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:52:01Z",
        "PR Comment": "\u041e\u0434\u0440\u0443\u043a\u0456\u0432\u043a\u0430: \"PESRON\".",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:57:31Z",
        "PR Comment": "\u041a\u043e\u0440\u0438\u0441\u0442\u0443\u0439\u0441\u044f, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `.pos_` \u0437\u0430\u043c\u0456\u0441\u0442\u044c `.pos` \u0456 \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u0434\u0435 \u043f\u0440\u043e\u043f\u0438\u0441\u0443\u0432\u0430\u0442\u0438 \u0447\u0438\u0441\u043b\u043e\u0432\u0456 \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440\u0438 \u0442\u0435\u0433\u0456\u0432.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T17:58:43Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T18:00:27Z",
        "PR Comment": "\u0422\u0438 \u043d\u0430\u0437\u0431\u0438\u0440\u0430\u0432 \u0434\u0443\u0436\u0435 \u043c\u0430\u043b\u043e \u043a\u043e\u043b\u043e\u043a\u0430\u0446\u0456\u0439, \u0431\u043e \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0454\u0448 \u0442\u0443\u0442 \u043d\u0435 \u043b\u0435\u043c\u0443 \u0441\u043b\u043e\u0432\u0430, \u0430 \u0441\u043b\u043e\u0432\u043e\u0444\u043e\u0440\u043c\u0443. \u0422\u043e\u043c\u0443 \u043a\u043e\u043b\u0438 \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0431\u0443\u043b\u043e \"say\" \u0437 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u043e\u043c, \u0442\u0438 \u0439\u043e\u0433\u043e \u043f\u0456\u0439\u043c\u0430\u0432, \u0430 \"said\", \"says\" \u0442\u0430 \"saying\" \u2014 \u043d\u0456.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T18:06:38Z",
        "PR Comment": "\u0426\u0456 \u0442\u0440\u0438 \u0440\u044f\u0434\u043a\u0438 (25-27) \u2014 \u0446\u0435 \u044f\u0432\u043d\u043e \u0437\u0430\u043b\u0438\u0448\u043a\u0438 \u044f\u043a\u043e\u0433\u043e\u0441\u044c \u0434\u0435\u0431\u0430\u0433\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-25T18:08:19Z",
        "PR Comment": "\u0417\u0430\u043c\u0456\u0441\u0442\u044c \u0442\u043e\u0433\u043e, \u0449\u043e\u0431 \u0434\u0432\u0456\u0447\u0456 \u0456\u0442\u0435\u0440\u0432\u0430\u0442\u0438\u0441\u044f \u043f\u043e \u0440\u0435\u0447\u0435\u043d\u043d\u044e, \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u0437\u043d\u0430\u0439\u0442\u0438 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a, \u0442\u043e\u0434\u0456 \u0432\u0438\u0442\u044f\u0433\u043d\u0443\u0442\u0438 \u0439\u043e\u0433\u043e `head` \u0456 \u0442\u043e\u0434\u0456 \u0432\u0438\u0440\u0456\u0448\u0438\u0442\u0438, \u0447\u0438 \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u0430\u0442\u0438 \u0446\u044e \u043f\u0430\u0440\u0443.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T12:23:49Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432 # Header accuracy  90.00%",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T12:42:29Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T12:43:35Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T13:09:09Z",
        "PR Comment": "\u0434\u043e\u0434\u0430\u0432 \u0432\u0438\u0449\u0438\u0439 \u0441\u0442\u0443\u043f\u0456\u043d\u044c",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T13:19:08Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T14:19:06Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T15:07:18Z",
        "PR Comment": "\u0432\u0438\u043f\u0440\u0430\u0432\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T15:08:35Z",
        "PR Comment": "\u0442\u0430\u043a, \u0432\u0438\u0434\u0430\u043b\u0438\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-26T15:38:48Z",
        "PR Comment": "\u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0432",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-27T20:07:36Z",
        "PR Comment": "\u041d\u0430 \u0434\u043e\u043c\u0430\u0448\u043a\u0443 \u0437\u0433\u043e\u0434\u0438\u0442\u044c\u0441\u044f, \u0430\u043b\u0435 \u0446\u0435\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043d\u0435\u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439, \u0430\u0434\u0436\u0435 \u0454 \u0442\u0430\u043a\u0456 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0438 \u044f\u043a \"clever\", \"eager\", \"honest\", \"modest\" \u0456 \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043d\u0448\u0438\u0445. \u042f\u043a\u0456 \u0454 \u0449\u0435 \u0432\u0430\u0440\u0456\u0430\u043d\u0442\u0438 \u0437\u0456 spaCy:\n- \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 Penn-\u0442\u0435\u0433\u0438 (JJR, JJS, RBR, RBS)\n- \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u0442\u0438 \u0441\u043b\u043e\u0432\u043e \u0437 \u043b\u0435\u043c\u043e\u044e\n",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-27T20:04:44Z",
        "PR Comment": "@yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/BohdanYatsyna/homework2/task-02-spacy.py",
        "Creation Date": "2020-03-27T20:13:14Z",
        "PR Comment": "> @yatsinaba, \u0441\u044e\u0434\u0438 \u0434\u043e\u0434\u0430\u0432\u0441\u044f \u0444\u0430\u0439\u043b \u0456\u0437 \u0442\u0440\u0435\u0442\u044c\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438. \u0419\u043e\u0433\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u043e\u0432\u0438\u0439 \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442. \u0422\u043e\u0434\u0456 \u0437\u043c\u043e\u0436\u0443 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u0446\u0435\u0439.\n\n@mariana-scorp \u0437\u0430\u0431\u0440\u0430\u0432 \u0444\u0430\u0439\u043b \u0437 3\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438",
        "PR/Issue Number": "33"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/10-word2vec/classifier.py",
        "Creation Date": "2020-05-25T06:09:08Z",
        "PR Comment": "> \u0417\u0430\u0433\u0430\u043b\u043e\u043c, \u0432\u0441\u0435 \u043e\u043a. \u0404\u0434\u0438\u043d\u0435, \u0443 kNN \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043c\u0435\u0442\u0440\u0438\u043a\u0443 \u043d\u0435 \u041c\u0456\u043d\u043a\u043e\u0432\u0441\u044c\u043a\u043e\u0433\u043e, \u0430 cosine.\n\nmy bad. \u0434\u044f\u043a\u0443\u044e",
        "PR/Issue Number": "133"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/colocations_en.py",
        "Creation Date": "2020-03-27T21:22:12Z",
        "PR Comment": "\u041d\u0435 \u0440\u0430\u0434\u0436\u0443 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0443 \u043c\u043e\u0434\u0435\u043b\u044c, \u0431\u043e \u0432\u043e\u043d\u0430 \u0434\u043e\u0441\u0438\u0442\u044c \u043f\u043e\u0433\u0430\u043d\u043e\u0457 \u044f\u043a\u043e\u0441\u0442\u0456. \u041a\u0440\u0430\u0449\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0441\u0435\u0440\u0435\u0434\u043d\u044c\u043e\u0433\u043e \u0440\u043e\u0437\u043c\u0456\u0440\u0443 - \"md\".",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/colocations_en.py",
        "Creation Date": "2020-03-27T21:31:20Z",
        "PR Comment": "\u041e\u0446\u0435\u0439 \u0440\u044f\u0434\u043e\u043a \u0454 \u043f\u0440\u0438\u0447\u0438\u043d\u043e\u044e, \u0447\u043e\u043c\u0443 \u0442\u0438 \u043d\u0435 \u0437\u043d\u0430\u0439\u0448\u043e\u0432 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0456\u0432 \u0432\u0438\u0449\u043e\u0433\u043e \u0456 \u043d\u0430\u0439\u0432\u0438\u0449\u043e\u0433\u043e \u0441\u0442\u0443\u043f\u0435\u043d\u0456\u0432 \u0443 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u0445.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/colocations_en.py",
        "Creation Date": "2020-03-27T21:31:34Z",
        "PR Comment": "\u0426\u0435 \u043d\u0435 \u043d\u0430\u0439\u0431\u0456\u043b\u044c\u0448 \u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439 \u0441\u043f\u043e\u0441\u0456\u0431, \u0430\u0434\u0436\u0435 \u0454 \u0442\u0430\u043a\u0456 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0438 \u044f\u043a \"clever\", \"eager\", \"honest\", \"modest\" \u0456 \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043d\u0448\u0438\u0445. \u042f\u043a\u0456 \u0454 \u0449\u0435 \u0432\u0430\u0440\u0456\u0430\u043d\u0442\u0438 \u0437\u0456 spaCy:\n- \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 Penn-\u0442\u0435\u0433\u0438 (JJR, JJS, RBR, RBS)\n- \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u0442\u0438 \u0441\u043b\u043e\u0432\u043e \u0437 \u043b\u0435\u043c\u043e\u044e",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/colocations_en.py",
        "Creation Date": "2020-03-27T21:36:41Z",
        "PR Comment": "\u0422\u0438 \u043d\u0430\u0437\u0431\u0438\u0440\u0430\u0432 \u0434\u0443\u0436\u0435 \u043c\u0430\u043b\u043e \u043a\u043e\u043b\u043e\u043a\u0430\u0446\u0456\u0439, \u0431\u043e \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0454\u0448 \u0442\u0443\u0442 \u043d\u0435 \u043b\u0435\u043c\u0443 \u0441\u043b\u043e\u0432\u0430, \u0430 \u0441\u043b\u043e\u0432\u043e\u0444\u043e\u0440\u043c\u0443. \u0422\u043e\u043c\u0443 \u043a\u043e\u043b\u0438 \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0431\u0443\u043b\u043e \"say\" \u0437 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u043e\u043c, \u0442\u0438 \u0439\u043e\u0433\u043e \u043f\u0456\u0439\u043c\u0430\u0432, \u0430 \"said\", \"says\" \u0442\u0430 \"saying\" \u2014 \u043d\u0456.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/colocations_en.py",
        "Creation Date": "2020-03-27T21:38:12Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.\n\n\u0422\u043e\u0431\u0456 \u0456 \u043d\u0435 \u0448\u043a\u043e\u0434\u0430 \u0431\u0456\u043b\u044c\u0448\u0443 \u043c\u043e\u0434\u0435\u043b\u044c\u043a\u0443 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/colocations_en.py",
        "Creation Date": "2020-03-27T21:40:09Z",
        "PR Comment": "\u0426\u0435 \u043d\u0435 \u0434\u0443\u0436\u0435 \u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439 \u0441\u043f\u043e\u0441\u0456\u0431 \u043f\u043e\u0448\u0443\u043a\u0443 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u0456\u0432 \u0434\u043b\u044f \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430, \u0431\u043e \u0432\u043e\u043d\u0438 \u043d\u0435 \u0437\u0430\u0432\u0436\u0434\u0438 \u0431\u0443\u0434\u0443\u0442\u044c \u0456\u0442\u0438 \u043e\u0434\u0440\u0430\u0437\u0443 \u043f\u0456\u0441\u043b\u044f \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430. \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434: _\"He spoke about the issue calmly.\"_\n\n\u041d\u0430\u0431\u0430\u0433\u0430\u0442\u043e \u043a\u0440\u0430\u0449\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0434\u0435\u0440\u0435\u0432\u0430 \u0437\u0430\u043b\u0435\u0436\u043d\u043e\u0441\u0442\u0435\u0439 \u0434\u043b\u044f \u0446\u044c\u043e\u0433\u043e.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/colocations_en.py",
        "Creation Date": "2020-03-27T21:41:47Z",
        "PR Comment": "`if c.lower() in \"aeuio\":` :)",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/colocations_en.py",
        "Creation Date": "2020-03-28T13:22:08Z",
        "PR Comment": "\u041a\u0440\u0430\u0449\u0435 \u0442\u0430\u043a\u0438 `\"ly\\b\"`, \u0449\u043e\u0431 \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438 \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u044e.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/colocations_en.py",
        "Creation Date": "2020-03-28T13:23:00Z",
        "PR Comment": "\u0426\u0435\u0439 \u0440\u044f\u0434\u043e\u043a \u0432\u0436\u0435 \u0437\u0430\u0439\u0432\u0438\u0439.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/colocations_en.py",
        "Creation Date": "2020-03-27T21:22:12Z",
        "PR Comment": "\u041d\u0435 \u0440\u0430\u0434\u0436\u0443 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0443 \u043c\u043e\u0434\u0435\u043b\u044c, \u0431\u043e \u0432\u043e\u043d\u0430 \u0434\u043e\u0441\u0438\u0442\u044c \u043f\u043e\u0433\u0430\u043d\u043e\u0457 \u044f\u043a\u043e\u0441\u0442\u0456. \u041a\u0440\u0430\u0449\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0441\u0435\u0440\u0435\u0434\u043d\u044c\u043e\u0433\u043e \u0440\u043e\u0437\u043c\u0456\u0440\u0443 - \"md\".",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/colocations_en.py",
        "Creation Date": "2020-03-27T21:31:20Z",
        "PR Comment": "\u041e\u0446\u0435\u0439 \u0440\u044f\u0434\u043e\u043a \u0454 \u043f\u0440\u0438\u0447\u0438\u043d\u043e\u044e, \u0447\u043e\u043c\u0443 \u0442\u0438 \u043d\u0435 \u0437\u043d\u0430\u0439\u0448\u043e\u0432 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0456\u0432 \u0432\u0438\u0449\u043e\u0433\u043e \u0456 \u043d\u0430\u0439\u0432\u0438\u0449\u043e\u0433\u043e \u0441\u0442\u0443\u043f\u0435\u043d\u0456\u0432 \u0443 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u0445.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/colocations_en.py",
        "Creation Date": "2020-03-27T21:31:34Z",
        "PR Comment": "\u0426\u0435 \u043d\u0435 \u043d\u0430\u0439\u0431\u0456\u043b\u044c\u0448 \u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439 \u0441\u043f\u043e\u0441\u0456\u0431, \u0430\u0434\u0436\u0435 \u0454 \u0442\u0430\u043a\u0456 \u043f\u0440\u0438\u043a\u043c\u0435\u0442\u043d\u0438\u043a\u0438 \u044f\u043a \"clever\", \"eager\", \"honest\", \"modest\" \u0456 \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043d\u0448\u0438\u0445. \u042f\u043a\u0456 \u0454 \u0449\u0435 \u0432\u0430\u0440\u0456\u0430\u043d\u0442\u0438 \u0437\u0456 spaCy:\n- \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 Penn-\u0442\u0435\u0433\u0438 (JJR, JJS, RBR, RBS)\n- \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u0442\u0438 \u0441\u043b\u043e\u0432\u043e \u0437 \u043b\u0435\u043c\u043e\u044e",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/colocations_en.py",
        "Creation Date": "2020-03-27T21:36:41Z",
        "PR Comment": "\u0422\u0438 \u043d\u0430\u0437\u0431\u0438\u0440\u0430\u0432 \u0434\u0443\u0436\u0435 \u043c\u0430\u043b\u043e \u043a\u043e\u043b\u043e\u043a\u0430\u0446\u0456\u0439, \u0431\u043e \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0454\u0448 \u0442\u0443\u0442 \u043d\u0435 \u043b\u0435\u043c\u0443 \u0441\u043b\u043e\u0432\u0430, \u0430 \u0441\u043b\u043e\u0432\u043e\u0444\u043e\u0440\u043c\u0443. \u0422\u043e\u043c\u0443 \u043a\u043e\u043b\u0438 \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0431\u0443\u043b\u043e \"say\" \u0437 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u043e\u043c, \u0442\u0438 \u0439\u043e\u0433\u043e \u043f\u0456\u0439\u043c\u0430\u0432, \u0430 \"said\", \"says\" \u0442\u0430 \"saying\" \u2014 \u043d\u0456.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/colocations_en.py",
        "Creation Date": "2020-03-27T21:38:12Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.\n\n\u0422\u043e\u0431\u0456 \u0456 \u043d\u0435 \u0448\u043a\u043e\u0434\u0430 \u0431\u0456\u043b\u044c\u0448\u0443 \u043c\u043e\u0434\u0435\u043b\u044c\u043a\u0443 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/colocations_en.py",
        "Creation Date": "2020-03-27T21:40:09Z",
        "PR Comment": "\u0426\u0435 \u043d\u0435 \u0434\u0443\u0436\u0435 \u043d\u0430\u0434\u0456\u0439\u043d\u0438\u0439 \u0441\u043f\u043e\u0441\u0456\u0431 \u043f\u043e\u0448\u0443\u043a\u0443 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u0456\u0432 \u0434\u043b\u044f \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430, \u0431\u043e \u0432\u043e\u043d\u0438 \u043d\u0435 \u0437\u0430\u0432\u0436\u0434\u0438 \u0431\u0443\u0434\u0443\u0442\u044c \u0456\u0442\u0438 \u043e\u0434\u0440\u0430\u0437\u0443 \u043f\u0456\u0441\u043b\u044f \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430. \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434: _\"He spoke about the issue calmly.\"_\n\n\u041d\u0430\u0431\u0430\u0433\u0430\u0442\u043e \u043a\u0440\u0430\u0449\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0434\u0435\u0440\u0435\u0432\u0430 \u0437\u0430\u043b\u0435\u0436\u043d\u043e\u0441\u0442\u0435\u0439 \u0434\u043b\u044f \u0446\u044c\u043e\u0433\u043e.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/colocations_en.py",
        "Creation Date": "2020-03-27T21:41:47Z",
        "PR Comment": "`if c.lower() in \"aeuio\":` :)",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/colocations_en.py",
        "Creation Date": "2020-03-28T13:22:08Z",
        "PR Comment": "\u041a\u0440\u0430\u0449\u0435 \u0442\u0430\u043a\u0438 `\"ly\\b\"`, \u0449\u043e\u0431 \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438 \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u044e.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/YehorShapanov/02-homework/colocations_en.py",
        "Creation Date": "2020-03-28T13:23:00Z",
        "PR Comment": "\u0426\u0435\u0439 \u0440\u044f\u0434\u043e\u043a \u0432\u0436\u0435 \u0437\u0430\u0439\u0432\u0438\u0439.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/04-nlp-full-circle/parse_wiki.py",
        "Creation Date": "2020-04-08T18:23:39Z",
        "PR Comment": "\u0413\u0430\u0440\u043d\u0438\u0439 \u0430\u043d\u0430\u043b\u0456\u0437, \u0430\u043b\u0435 \u0434\u0443\u0436\u0435 \u0432\u0436\u0435 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0430 \u0432\u0438\u0431\u0456\u0440\u043a\u0430. \u0412\u0430\u0440\u0442\u043e \u0431\u0443\u043b\u043e \u0432\u0437\u044f\u0442\u0438 \u0431\u0456\u043b\u044c\u0448\u0435 \u0434\u0430\u043d\u0438\u0445. \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0432\u0441\u0456 \u0445\u0430\u0440\u043a\u0456\u0432\u0441\u044c\u043a\u0456 \u043c\u0435\u0442\u0430\u043b-\u0433\u0443\u0440\u0442\u0438.\n\n\u0427\u0438 \u0454 \u0456\u0434\u0435\u0457 \u0449\u043e\u0434\u043e \u043c\u0435\u0442\u0440\u0438\u043a \u0434\u043b\u044f \u043a\u0443\u0440\u0441\u043e\u0432\u043e\u0433\u043e?",
        "PR/Issue Number": "61"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/04-nlp-full-circle/parse_wiki.py",
        "Creation Date": "2020-04-09T14:06:46Z",
        "PR Comment": "\u00af\\_(\u30c4)_/\u00af \u0437\u0433\u043e\u0434\u0435\u043d, \u043d\u0430 \u0431\u0456\u043b\u044c\u0448\u0456\u0439 \u0432\u0438\u0431\u0456\u0440\u0446\u0456 \u0431\u0443\u043b\u043e \u0431  \u0336\u0441\u0336\u043a\u0336\u043b\u0336\u0430\u0336\u0434\u0336\u043d\u0336\u0456\u0336\u0448\u0336\u0435\u0336 \u0446\u0456\u043a\u0430\u0432\u0456\u0448\u0435 (:\n\n\u0417 \u043f\u0440\u0438\u0432\u043e\u0434\u0443 \u043c\u0435\u0442\u0440\u0438\u043a - \u044f \u043f\u043e\u043a\u0438 \u0449\u0435 \u0437 \u043d\u0438\u043c\u0438 \u043d\u0435 \u0440\u043e\u0437\u0456\u0431\u0440\u0430\u0432\u0441\u044f ): ",
        "PR/Issue Number": "61"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/04-nlp-full-circle/parse_wiki.py",
        "Creation Date": "2020-04-20T11:26:04Z",
        "PR Comment": "@holdbar, \u0434\u043e\u0434\u0430\u0439, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u0432\u0438\u043c\u0456\u0440\u044e\u0432\u0430\u043d\u043d\u044f \u044f\u043a\u043e\u0441\u0442\u0456 \u0456 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u043c\u043e. \u042f \u0440\u043e\u0437\u0443\u043c\u0456\u044e, \u0449\u043e 12 \u043f\u0440\u0438\u043a\u043b\u0430\u0434\u0456\u0432 \u043c\u043e\u0436\u043d\u0430 \u0456 \u0440\u0443\u043a\u0430\u043c\u0438 \u043f\u043e\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438, \u0430\u043b\u0435 \u0432 \u0446\u0456\u0439 \u0434\u043e\u043c\u0430\u0448\u0446\u0456 \u0440\u043e\u0437\u0440\u043e\u0431\u043a\u0430 \u043c\u0435\u0442\u0440\u0438\u043a\u0438, \u044f\u043a\u0430 \u0432\u0440\u0430\u0445\u043e\u0432\u0443\u0454 \u0447\u0430\u0441\u0442\u043a\u043e\u0432\u0456 \u0437\u0431\u0456\u0433\u0438, \u0454 \u0432\u043b\u0430\u0441\u043d\u0435 \u0432\u0430\u0436\u043b\u0438\u0432\u0438\u043c \u043c\u043e\u043c\u0435\u043d\u0442\u043e\u043c.",
        "PR/Issue Number": "61"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/04-nlp-full-circle/parse_wiki.py",
        "Creation Date": "2020-04-21T06:57:26Z",
        "PR Comment": "\u043f\u043e\u0441\u0442\u0430\u0440\u0430\u044e\u0441\u044f \u0441\u044c\u043e\u0433\u043e\u0434\u043d\u0456-\u0437\u0430\u0432\u0442\u0440\u0430 \u0434\u043e\u0434\u0430\u0442\u0438",
        "PR/Issue Number": "61"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/04-nlp-full-circle/parse_wiki.py",
        "Creation Date": "2020-04-22T09:16:57Z",
        "PR Comment": "@holdbar \u0432\u0430\u0440\u0442\u043e \u0447\u0435\u043a\u0430\u0442\u0438 \u043e\u043d\u043e\u0432\u043b\u0435\u043d\u044c \u0447\u0438 \u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u044f\u043a \u0454?",
        "PR/Issue Number": "61"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/04-nlp-full-circle/parse_wiki.py",
        "Creation Date": "2020-04-22T11:39:38Z",
        "PR Comment": "\u0445\u043e\u0447\u0443 \u0441\u044c\u043e\u0433\u043e\u0434\u043d\u0456 \u0434\u043e\u0440\u043e\u0431\u0438\u0442\u0438\n\n\u0441\u0440, 22 \u043a\u0432\u0456\u0442. 2020 \u043e 12:17 Vsevolod Dyomkin <notifications@github.com> \u043f\u0438\u0448\u0435:\n\n> @holdbar <https://github.com/holdbar> \u0432\u0430\u0440\u0442\u043e \u0447\u0435\u043a\u0430\u0442\u0438 \u043e\u043d\u043e\u0432\u043b\u0435\u043d\u044c \u0447\u0438 \u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438\n> \u044f\u043a \u0454?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/vseloved/prj-nlp-2020/pull/61#issuecomment-617658299>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AFJY3HMTIZS26TZVLEM3OHLRN2YZRANCNFSM4L7CFBTA>\n> .\n>\n",
        "PR/Issue Number": "61"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/04-nlp-full-circle/parse_wiki.py",
        "Creation Date": "2020-04-22T15:19:18Z",
        "PR Comment": "\u0442\u0440\u043e\u0445\u0438 \u043d\u0435 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u043b\u0438\u0439 \u0432\u0438\u0432\u0456\u0434, \u0430\u043b\u0435, \u0432 \u043a\u0456\u043d\u0446\u0456 \u043a\u0456\u043d\u0446\u0456\u0432, \u0434\u043e \u043c\u0435\u043d\u0456 \u0434\u0456\u0439\u0448\u043b\u043e. \u0414\u0443\u043c\u0430\u044e, \u043d\u0435 \u0432\u0430\u0440\u0442\u043e \u0431\u0443\u043b\u043e \u0434\u043e\u043c\u043d\u043e\u0436\u0430\u0442\u0438 \u0456\u043d\u0434\u0438\u0432\u0456\u0434\u0443\u0430\u043b\u044c\u043d\u0456 \u043c\u0435\u0442\u0440\u0438\u043a\u0438 \u043d\u0430 \u043a\u043e\u0435\u0444\u0456\u0446\u0456\u0454\u043d\u0442. \u0422\u043e\u0434\u0456 \u0456 \u0432\u0438\u0433\u043b\u044f\u0434\u0430\u043b\u043e \u0431\u0438 \u043a\u0440\u0430\u0449\u0435, \u0456 \u0431\u0443\u043b\u043e \u0431 \u0431\u0456\u043b\u044c\u0448\u0435 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u043b\u043e, \u043d\u0430\u0441\u043a\u0456\u043b\u044c\u043a\u0438 \u044f\u043a\u0456\u0441\u043d\u043e \u0442\u0430 \u0447\u0438 \u0456\u043d\u0448\u0430 \u043f\u0440\u0430\u0446\u044e\u0454 (\u0431\u043e \u0432\u0430\u0433\u0430 \u043f\u0435\u0440\u0435\u0437\u0432\u0430\u0436\u0443\u0454 \u043e\u0446\u0456\u043d\u043a\u0443 \u044f\u043a\u043e\u0441\u0442\u0456).\n\u0424\u0456\u043d\u0430\u043b\u044c\u043d\u0430 \u043e\u0446\u0456\u043d\u043a\u0430: 50 (\u0437 80).",
        "PR/Issue Number": "61"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/04-nlp-full-circle/parse_wiki.py",
        "Creation Date": "2020-04-08T18:23:39Z",
        "PR Comment": "\u0413\u0430\u0440\u043d\u0438\u0439 \u0430\u043d\u0430\u043b\u0456\u0437, \u0430\u043b\u0435 \u0434\u0443\u0436\u0435 \u0432\u0436\u0435 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0430 \u0432\u0438\u0431\u0456\u0440\u043a\u0430. \u0412\u0430\u0440\u0442\u043e \u0431\u0443\u043b\u043e \u0432\u0437\u044f\u0442\u0438 \u0431\u0456\u043b\u044c\u0448\u0435 \u0434\u0430\u043d\u0438\u0445. \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0432\u0441\u0456 \u0445\u0430\u0440\u043a\u0456\u0432\u0441\u044c\u043a\u0456 \u043c\u0435\u0442\u0430\u043b-\u0433\u0443\u0440\u0442\u0438.\n\n\u0427\u0438 \u0454 \u0456\u0434\u0435\u0457 \u0449\u043e\u0434\u043e \u043c\u0435\u0442\u0440\u0438\u043a \u0434\u043b\u044f \u043a\u0443\u0440\u0441\u043e\u0432\u043e\u0433\u043e?",
        "PR/Issue Number": "61"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/04-nlp-full-circle/parse_wiki.py",
        "Creation Date": "2020-04-09T14:06:46Z",
        "PR Comment": "\u00af\\_(\u30c4)_/\u00af \u0437\u0433\u043e\u0434\u0435\u043d, \u043d\u0430 \u0431\u0456\u043b\u044c\u0448\u0456\u0439 \u0432\u0438\u0431\u0456\u0440\u0446\u0456 \u0431\u0443\u043b\u043e \u0431  \u0336\u0441\u0336\u043a\u0336\u043b\u0336\u0430\u0336\u0434\u0336\u043d\u0336\u0456\u0336\u0448\u0336\u0435\u0336 \u0446\u0456\u043a\u0430\u0432\u0456\u0448\u0435 (:\n\n\u0417 \u043f\u0440\u0438\u0432\u043e\u0434\u0443 \u043c\u0435\u0442\u0440\u0438\u043a - \u044f \u043f\u043e\u043a\u0438 \u0449\u0435 \u0437 \u043d\u0438\u043c\u0438 \u043d\u0435 \u0440\u043e\u0437\u0456\u0431\u0440\u0430\u0432\u0441\u044f ): ",
        "PR/Issue Number": "61"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/04-nlp-full-circle/parse_wiki.py",
        "Creation Date": "2020-04-20T11:26:04Z",
        "PR Comment": "@holdbar, \u0434\u043e\u0434\u0430\u0439, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u0432\u0438\u043c\u0456\u0440\u044e\u0432\u0430\u043d\u043d\u044f \u044f\u043a\u043e\u0441\u0442\u0456 \u0456 \u0437\u043c\u0435\u0440\u0434\u0436\u0438\u043c\u043e. \u042f \u0440\u043e\u0437\u0443\u043c\u0456\u044e, \u0449\u043e 12 \u043f\u0440\u0438\u043a\u043b\u0430\u0434\u0456\u0432 \u043c\u043e\u0436\u043d\u0430 \u0456 \u0440\u0443\u043a\u0430\u043c\u0438 \u043f\u043e\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438, \u0430\u043b\u0435 \u0432 \u0446\u0456\u0439 \u0434\u043e\u043c\u0430\u0448\u0446\u0456 \u0440\u043e\u0437\u0440\u043e\u0431\u043a\u0430 \u043c\u0435\u0442\u0440\u0438\u043a\u0438, \u044f\u043a\u0430 \u0432\u0440\u0430\u0445\u043e\u0432\u0443\u0454 \u0447\u0430\u0441\u0442\u043a\u043e\u0432\u0456 \u0437\u0431\u0456\u0433\u0438, \u0454 \u0432\u043b\u0430\u0441\u043d\u0435 \u0432\u0430\u0436\u043b\u0438\u0432\u0438\u043c \u043c\u043e\u043c\u0435\u043d\u0442\u043e\u043c.",
        "PR/Issue Number": "61"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/04-nlp-full-circle/parse_wiki.py",
        "Creation Date": "2020-04-21T06:57:26Z",
        "PR Comment": "\u043f\u043e\u0441\u0442\u0430\u0440\u0430\u044e\u0441\u044f \u0441\u044c\u043e\u0433\u043e\u0434\u043d\u0456-\u0437\u0430\u0432\u0442\u0440\u0430 \u0434\u043e\u0434\u0430\u0442\u0438",
        "PR/Issue Number": "61"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/04-nlp-full-circle/parse_wiki.py",
        "Creation Date": "2020-04-22T09:16:57Z",
        "PR Comment": "@holdbar \u0432\u0430\u0440\u0442\u043e \u0447\u0435\u043a\u0430\u0442\u0438 \u043e\u043d\u043e\u0432\u043b\u0435\u043d\u044c \u0447\u0438 \u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438 \u044f\u043a \u0454?",
        "PR/Issue Number": "61"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/04-nlp-full-circle/parse_wiki.py",
        "Creation Date": "2020-04-22T11:39:38Z",
        "PR Comment": "\u0445\u043e\u0447\u0443 \u0441\u044c\u043e\u0433\u043e\u0434\u043d\u0456 \u0434\u043e\u0440\u043e\u0431\u0438\u0442\u0438\n\n\u0441\u0440, 22 \u043a\u0432\u0456\u0442. 2020 \u043e 12:17 Vsevolod Dyomkin <notifications@github.com> \u043f\u0438\u0448\u0435:\n\n> @holdbar <https://github.com/holdbar> \u0432\u0430\u0440\u0442\u043e \u0447\u0435\u043a\u0430\u0442\u0438 \u043e\u043d\u043e\u0432\u043b\u0435\u043d\u044c \u0447\u0438 \u043c\u0435\u0440\u0434\u0436\u0438\u0442\u0438\n> \u044f\u043a \u0454?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/vseloved/prj-nlp-2020/pull/61#issuecomment-617658299>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AFJY3HMTIZS26TZVLEM3OHLRN2YZRANCNFSM4L7CFBTA>\n> .\n>\n",
        "PR/Issue Number": "61"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/04-nlp-full-circle/parse_wiki.py",
        "Creation Date": "2020-04-22T15:19:18Z",
        "PR Comment": "\u0442\u0440\u043e\u0445\u0438 \u043d\u0435 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u043b\u0438\u0439 \u0432\u0438\u0432\u0456\u0434, \u0430\u043b\u0435, \u0432 \u043a\u0456\u043d\u0446\u0456 \u043a\u0456\u043d\u0446\u0456\u0432, \u0434\u043e \u043c\u0435\u043d\u0456 \u0434\u0456\u0439\u0448\u043b\u043e. \u0414\u0443\u043c\u0430\u044e, \u043d\u0435 \u0432\u0430\u0440\u0442\u043e \u0431\u0443\u043b\u043e \u0434\u043e\u043c\u043d\u043e\u0436\u0430\u0442\u0438 \u0456\u043d\u0434\u0438\u0432\u0456\u0434\u0443\u0430\u043b\u044c\u043d\u0456 \u043c\u0435\u0442\u0440\u0438\u043a\u0438 \u043d\u0430 \u043a\u043e\u0435\u0444\u0456\u0446\u0456\u0454\u043d\u0442. \u0422\u043e\u0434\u0456 \u0456 \u0432\u0438\u0433\u043b\u044f\u0434\u0430\u043b\u043e \u0431\u0438 \u043a\u0440\u0430\u0449\u0435, \u0456 \u0431\u0443\u043b\u043e \u0431 \u0431\u0456\u043b\u044c\u0448\u0435 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u043b\u043e, \u043d\u0430\u0441\u043a\u0456\u043b\u044c\u043a\u0438 \u044f\u043a\u0456\u0441\u043d\u043e \u0442\u0430 \u0447\u0438 \u0456\u043d\u0448\u0430 \u043f\u0440\u0430\u0446\u044e\u0454 (\u0431\u043e \u0432\u0430\u0433\u0430 \u043f\u0435\u0440\u0435\u0437\u0432\u0430\u0436\u0443\u0454 \u043e\u0446\u0456\u043d\u043a\u0443 \u044f\u043a\u043e\u0441\u0442\u0456).\n\u0424\u0456\u043d\u0430\u043b\u044c\u043d\u0430 \u043e\u0446\u0456\u043d\u043a\u0430: 50 (\u0437 80).",
        "PR/Issue Number": "61"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DariaKarpenko/02-structural-lingvo/2-headlines.py",
        "Creation Date": "2020-03-25T15:19:59Z",
        "PR Comment": "\u0417\u0430\u043c\u0456\u0441\u0442\u044c `is_notional_pos(t) == True` \u043c\u043e\u0436\u043d\u0430 \u043f\u0438\u0441\u0430\u0442\u0438 \u043f\u0440\u043e\u0441\u0442\u043e `is_notional_pos(t)`.",
        "PR/Issue Number": "23"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DariaKarpenko/02-structural-lingvo/2-headlines.py",
        "Creation Date": "2020-03-25T15:22:57Z",
        "PR Comment": "\u041d\u0435 \u0437\u043d\u0430\u0439\u0448\u043b\u0430 \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0456 \u043d\u0430 \u0446\u0435\u0439 \u043f\u0443\u043d\u043a\u0442 \u0437 \u0434\u043e\u043c\u0430\u0448\u043a\u0438:\n\n> 3. \u043f\u0440\u043e\u0436\u0435\u043d\u0456\u0442\u044c \u0432\u0430\u0448\u0443 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 \u043d\u0430 \u043a\u043e\u0440\u043f\u0443\u0441\u0456 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0456\u0432 \u0437 The Examiner \u0456 \u0432\u0438\u0440\u0430\u0445\u0443\u0439\u0442\u0435, \u0441\u043a\u0456\u043b\u044c\u043a\u0438 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0456\u0432 \u0442\u0430\u043c \u0432\u0456\u0434\u0444\u043e\u0440\u043c\u0430\u0442\u043e\u0432\u0430\u043d\u043e \u0437\u0430 \u043f\u0440\u0430\u0432\u0438\u043b\u0430\u043c\u0438 (\u0441\u043a\u0456\u043b\u044c\u043a\u0438 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0456\u0432 \u0437\u0430\u043b\u0438\u0448\u0438\u043b\u0438\u0441\u044c \u043d\u0435\u0437\u043c\u0456\u043d\u043d\u0438\u043c\u0438 \u043f\u0456\u0441\u043b\u044f \u0444\u043e\u0440\u043c\u0430\u0442\u0443\u0432\u0430\u043d\u043d\u044f)\n\n\u0414\u043e\u0434\u0430\u0439, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430.",
        "PR/Issue Number": "23"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DariaKarpenko/02-structural-lingvo/2-headlines.py",
        "Creation Date": "2020-03-25T15:19:59Z",
        "PR Comment": "\u0417\u0430\u043c\u0456\u0441\u0442\u044c `is_notional_pos(t) == True` \u043c\u043e\u0436\u043d\u0430 \u043f\u0438\u0441\u0430\u0442\u0438 \u043f\u0440\u043e\u0441\u0442\u043e `is_notional_pos(t)`.",
        "PR/Issue Number": "23"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DariaKarpenko/02-structural-lingvo/2-headlines.py",
        "Creation Date": "2020-03-25T15:22:57Z",
        "PR Comment": "\u041d\u0435 \u0437\u043d\u0430\u0439\u0448\u043b\u0430 \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0456 \u043d\u0430 \u0446\u0435\u0439 \u043f\u0443\u043d\u043a\u0442 \u0437 \u0434\u043e\u043c\u0430\u0448\u043a\u0438:\n\n> 3. \u043f\u0440\u043e\u0436\u0435\u043d\u0456\u0442\u044c \u0432\u0430\u0448\u0443 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 \u043d\u0430 \u043a\u043e\u0440\u043f\u0443\u0441\u0456 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0456\u0432 \u0437 The Examiner \u0456 \u0432\u0438\u0440\u0430\u0445\u0443\u0439\u0442\u0435, \u0441\u043a\u0456\u043b\u044c\u043a\u0438 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0456\u0432 \u0442\u0430\u043c \u0432\u0456\u0434\u0444\u043e\u0440\u043c\u0430\u0442\u043e\u0432\u0430\u043d\u043e \u0437\u0430 \u043f\u0440\u0430\u0432\u0438\u043b\u0430\u043c\u0438 (\u0441\u043a\u0456\u043b\u044c\u043a\u0438 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0456\u0432 \u0437\u0430\u043b\u0438\u0448\u0438\u043b\u0438\u0441\u044c \u043d\u0435\u0437\u043c\u0456\u043d\u043d\u0438\u043c\u0438 \u043f\u0456\u0441\u043b\u044f \u0444\u043e\u0440\u043c\u0430\u0442\u0443\u0432\u0430\u043d\u043d\u044f)\n\n\u0414\u043e\u0434\u0430\u0439, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430.",
        "PR/Issue Number": "23"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/viral_news.py",
        "Creation Date": "2020-03-27T22:33:57Z",
        "PR Comment": "\u041e\u0442\u0443\u0442 \u0432\u0430\u0440\u0442\u043e \u0431\u0443\u043b\u043e \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u0430, \u044f\u043a\u0456 \u0432\u0436\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0456 \u0432\u0435\u043b\u0438\u043a\u0438\u043c\u0438 \u043b\u0456\u0442\u0435\u0440\u0430\u043c\u0438 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, USA) \u0442\u0430 \"n't\" (\u044f\u043a\u0435 \u0442\u0435\u0433\u0443\u0454\u0442\u044c\u0441\u044f \u044f\u043a \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a).",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/viral_news.py",
        "Creation Date": "2020-03-27T22:36:53Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/viral_news.py",
        "Creation Date": "2020-03-27T22:38:38Z",
        "PR Comment": "\u0429\u043e\u0431 \u043d\u0435 \u0440\u043e\u0431\u0438\u0442\u0438 \u0434\u0432\u0430 \u043f\u0440\u043e\u0445\u043e\u0434\u0438 \u043f\u043e \u0442\u043e\u043a\u0435\u043d\u0430\u0445, \u043c\u043e\u0436\u043d\u0430 \u0430\u0431\u043e \u0437\u0440\u043e\u0431\u0438\u0442\u0438 \u0446\u0438\u043a\u043b \u043f\u043e \u0434\u0456\u0442\u044f\u0445 \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430 (`.children`), \u0430\u0431\u043e \u0448\u0443\u043a\u0430\u0442\u0438 \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a, \u0430 \u0442\u043e\u0434\u0456 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0442\u0438, \u0447\u0438 \u0439\u043e\u0433\u043e \u0431\u0430\u0442\u044c\u043a\u043e\u043c \u0454 \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u0435 \u043d\u0430\u043c \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u043e.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/viral_news.py",
        "Creation Date": "2020-03-27T22:43:30Z",
        "PR Comment": "\u0422\u0443\u0442 \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043b\u0435\u043c\u0438 (`.normal_form`), \u0431\u043e \u0456\u043d\u0430\u043a\u0448\u0435 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u043f\u043e\u0442\u0440\u0430\u043f\u043b\u044f\u0454 \u0442\u0435 \u0441\u0430\u043c\u0435 \u0441\u043b\u043e\u0432\u043e\u0441\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044f \u043f\u043e \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432. \u0423 \u0442\u0432\u043e\u0457\u0445 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u0445: _\u0432\u0435\u043b\u0438\u043a\u0438\u0439 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a, \u0432\u0435\u043b\u0438\u043a\u0438\u043c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u043e\u043c, \u0432\u0435\u043b\u0438\u043a\u043e\u043c\u0443 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u043e\u0432\u0456, \u0432\u0435\u043b\u0438\u043a\u043e\u0433\u043e \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u0430._",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/viral_news.py",
        "Creation Date": "2020-03-27T22:18:38Z",
        "PR Comment": "\u0412\u0438\u0434\u0430\u043b\u0438, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `data/`, \u0449\u043e\u0431 \u043d\u0435 \u0440\u043e\u0437\u0434\u0443\u0432\u0430\u0442\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0456\u0439.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/viral_news.py",
        "Creation Date": "2020-03-27T22:33:57Z",
        "PR Comment": "\u041e\u0442\u0443\u0442 \u0432\u0430\u0440\u0442\u043e \u0431\u0443\u043b\u043e \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u0430, \u044f\u043a\u0456 \u0432\u0436\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0456 \u0432\u0435\u043b\u0438\u043a\u0438\u043c\u0438 \u043b\u0456\u0442\u0435\u0440\u0430\u043c\u0438 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, USA) \u0442\u0430 \"n't\" (\u044f\u043a\u0435 \u0442\u0435\u0433\u0443\u0454\u0442\u044c\u0441\u044f \u044f\u043a \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a).",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/viral_news.py",
        "Creation Date": "2020-03-27T22:36:53Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/viral_news.py",
        "Creation Date": "2020-03-27T22:38:38Z",
        "PR Comment": "\u0429\u043e\u0431 \u043d\u0435 \u0440\u043e\u0431\u0438\u0442\u0438 \u0434\u0432\u0430 \u043f\u0440\u043e\u0445\u043e\u0434\u0438 \u043f\u043e \u0442\u043e\u043a\u0435\u043d\u0430\u0445, \u043c\u043e\u0436\u043d\u0430 \u0430\u0431\u043e \u0437\u0440\u043e\u0431\u0438\u0442\u0438 \u0446\u0438\u043a\u043b \u043f\u043e \u0434\u0456\u0442\u044f\u0445 \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430 (`.children`), \u0430\u0431\u043e \u0448\u0443\u043a\u0430\u0442\u0438 \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a, \u0430 \u0442\u043e\u0434\u0456 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0442\u0438, \u0447\u0438 \u0439\u043e\u0433\u043e \u0431\u0430\u0442\u044c\u043a\u043e\u043c \u0454 \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u0435 \u043d\u0430\u043c \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u043e.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/viral_news.py",
        "Creation Date": "2020-03-27T22:43:30Z",
        "PR Comment": "\u0422\u0443\u0442 \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043b\u0435\u043c\u0438 (`.normal_form`), \u0431\u043e \u0456\u043d\u0430\u043a\u0448\u0435 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u043f\u043e\u0442\u0440\u0430\u043f\u043b\u044f\u0454 \u0442\u0435 \u0441\u0430\u043c\u0435 \u0441\u043b\u043e\u0432\u043e\u0441\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044f \u043f\u043e \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432. \u0423 \u0442\u0432\u043e\u0457\u0445 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u0445: _\u0432\u0435\u043b\u0438\u043a\u0438\u0439 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a, \u0432\u0435\u043b\u0438\u043a\u0438\u043c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u043e\u043c, \u0432\u0435\u043b\u0438\u043a\u043e\u043c\u0443 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u043e\u0432\u0456, \u0432\u0435\u043b\u0438\u043a\u043e\u0433\u043e \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u0430._",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/viral_news.py",
        "Creation Date": "2020-03-27T22:18:38Z",
        "PR Comment": "\u0412\u0438\u0434\u0430\u043b\u0438, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `data/`, \u0449\u043e\u0431 \u043d\u0435 \u0440\u043e\u0437\u0434\u0443\u0432\u0430\u0442\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0456\u0439.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/viral_news.py",
        "Creation Date": "2020-03-27T22:33:57Z",
        "PR Comment": "\u041e\u0442\u0443\u0442 \u0432\u0430\u0440\u0442\u043e \u0431\u0443\u043b\u043e \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u0430, \u044f\u043a\u0456 \u0432\u0436\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0456 \u0432\u0435\u043b\u0438\u043a\u0438\u043c\u0438 \u043b\u0456\u0442\u0435\u0440\u0430\u043c\u0438 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, USA) \u0442\u0430 \"n't\" (\u044f\u043a\u0435 \u0442\u0435\u0433\u0443\u0454\u0442\u044c\u0441\u044f \u044f\u043a \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a).",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/viral_news.py",
        "Creation Date": "2020-03-27T22:36:53Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/viral_news.py",
        "Creation Date": "2020-03-27T22:38:38Z",
        "PR Comment": "\u0429\u043e\u0431 \u043d\u0435 \u0440\u043e\u0431\u0438\u0442\u0438 \u0434\u0432\u0430 \u043f\u0440\u043e\u0445\u043e\u0434\u0438 \u043f\u043e \u0442\u043e\u043a\u0435\u043d\u0430\u0445, \u043c\u043e\u0436\u043d\u0430 \u0430\u0431\u043e \u0437\u0440\u043e\u0431\u0438\u0442\u0438 \u0446\u0438\u043a\u043b \u043f\u043e \u0434\u0456\u0442\u044f\u0445 \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430 (`.children`), \u0430\u0431\u043e \u0448\u0443\u043a\u0430\u0442\u0438 \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a, \u0430 \u0442\u043e\u0434\u0456 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0442\u0438, \u0447\u0438 \u0439\u043e\u0433\u043e \u0431\u0430\u0442\u044c\u043a\u043e\u043c \u0454 \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u0435 \u043d\u0430\u043c \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u043e.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/viral_news.py",
        "Creation Date": "2020-03-27T22:43:30Z",
        "PR Comment": "\u0422\u0443\u0442 \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043b\u0435\u043c\u0438 (`.normal_form`), \u0431\u043e \u0456\u043d\u0430\u043a\u0448\u0435 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u043f\u043e\u0442\u0440\u0430\u043f\u043b\u044f\u0454 \u0442\u0435 \u0441\u0430\u043c\u0435 \u0441\u043b\u043e\u0432\u043e\u0441\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044f \u043f\u043e \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432. \u0423 \u0442\u0432\u043e\u0457\u0445 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u0445: _\u0432\u0435\u043b\u0438\u043a\u0438\u0439 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a, \u0432\u0435\u043b\u0438\u043a\u0438\u043c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u043e\u043c, \u0432\u0435\u043b\u0438\u043a\u043e\u043c\u0443 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u043e\u0432\u0456, \u0432\u0435\u043b\u0438\u043a\u043e\u0433\u043e \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u0430._",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/viral_news.py",
        "Creation Date": "2020-03-27T22:18:38Z",
        "PR Comment": "\u0412\u0438\u0434\u0430\u043b\u0438, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `data/`, \u0449\u043e\u0431 \u043d\u0435 \u0440\u043e\u0437\u0434\u0443\u0432\u0430\u0442\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0456\u0439.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DariaKarpenko/02-structural-lingvo/3-collocations-eng.py",
        "Creation Date": "2020-03-25T15:31:44Z",
        "PR Comment": "\u0414\u043e\u0434\u0430\u0439, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u0438\u0439 \u0444\u0430\u0439\u043b \u0437 \u0432\u0438\u0432\u043e\u0434\u043e\u043c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0438:\n\n> 5. \u0437\u0431\u0435\u0440\u0435\u0436\u0456\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 \u0442\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u0430\u043d\u0430\u043b\u0456\u0437\u0443 \u043d\u0430 \u043a\u043e\u0440\u043f\u0443\u0441\u0456 (\u0432\u0438\u0432\u0456\u0434) \u0443 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0456\u0457 \u0437 \u0432\u0430\u0448\u0438\u043c \u0456\u043c\u0435\u043d\u0435\u043c",
        "PR/Issue Number": "28"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DariaKarpenko/02-structural-lingvo/3-collocations-eng.py",
        "Creation Date": "2020-03-25T15:33:45Z",
        "PR Comment": "\u0423 \u0446\u044c\u043e\u043c\u0443 \u0440\u0456\u0448\u0435\u043d\u043d\u0456 \u0454 \u043e\u0434\u0438\u043d \u043c\u043e\u043c\u0435\u043d\u0442 \u2014 \u0432\u043e\u043d\u043e \u043d\u0435 \u0440\u043e\u0437\u0440\u0456\u0437\u043d\u044f\u0454 \u0441\u0443\u0440\u044f\u0434\u043d\u0438\u0445 \u0456 \u043f\u0456\u0434\u0440\u044f\u0434\u043d\u0438\u0445 \u0434\u0456\u0442\u0435\u0439 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u0430. \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0443 \u0446\u0438\u0445 \u0434\u0432\u043e\u0445 \u0440\u0435\u0447\u0435\u043d\u043d\u044f\u0445 \"adequately\" \u043c\u0430\u0454 \u0434\u0456\u0442\u0435\u0439-\u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u0456\u0432 \u043d\u0430 \"ly\", \u0430\u043b\u0435 \u0442\u0456\u043b\u044c\u043a\u0438 \u0432 \u0434\u0440\u0443\u0433\u043e\u043c\u0443 \u043f\u0440\u0438\u043a\u043b\u0430\u0434\u0456 \u0437\u0432'\u044f\u0437\u043e\u043a \u0434\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a\u0430 \u0441\u0443\u0440\u044f\u0434\u043d\u0438\u0439 \u0456 \u0432\u0456\u043d \u0441\u0442\u043e\u0441\u0443\u0454\u0442\u044c\u0441\u044f \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430:\n\n_She implemented this really adequately._\n_She implemented this adequately and consciously._",
        "PR/Issue Number": "28"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T00:20:55Z",
        "PR Comment": "\u0426\u0435\u0439 \u0444\u0430\u0439\u043b\u0438\u043a \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u0437\u0430\u0431\u0440\u0430\u0442\u0438 \u0437 \u0446\u044c\u043e\u0433\u043e \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442\u0430. \u0414\u043b\u044f \u043a\u043e\u0436\u043d\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438 \u0442\u0440\u0435\u0431\u0430 \u0441\u0442\u0432\u043e\u0440\u044e\u0432\u0430\u0442\u0438 \u043d\u043e\u0432\u0443 \u0433\u0456\u043b\u043a\u0443 \u0437 \u043c\u0430\u0441\u0442\u0435\u0440\u0430.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T00:25:19Z",
        "PR Comment": "\u0422\u0430\u043a \u0456 \u043c\u0430\u0454 \u0431\u0443\u0442\u0438 :) \u0421\u0442\u0435\u043c\u043c\u0456\u043d\u0433 \u043f\u043e\u0432\u0438\u043d\u0435\u043d \u043f\u0440\u0438\u0431\u0438\u0440\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (derivational) \u0430\u0444\u0456\u043a\u0441\u0438, \u0430 \u043b\u0435\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0456\u044f \u2014 \u043b\u0438\u0448\u0435 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (inflectional).",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T00:25:53Z",
        "PR Comment": "\u042f \u043f\u0435\u0432\u043d\u043e \u043f\u043e\u0433\u0430\u043d\u043e \u043f\u043e\u044f\u0441\u043d\u044e\u0432\u0430\u043b\u0430, \u0431\u043e \u0446\u0456 \u0434\u0432\u0430 \u0442\u0438\u043f\u0438 \u043c\u0438 \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438 \u043d\u0430 \u0437\u0430\u043d\u044f\u0442\u0442\u0456. ;)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T00:47:34Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T00:52:28Z",
        "PR Comment": "\u041e\u0446\u044f \u043e\u0437\u043d\u0430\u043a\u0430 \u043d\u0435 \u0434\u0443\u0436\u0435 \u043f\u0456\u0434\u0445\u043e\u0434\u0438\u0442\u044c \u0434\u043b\u044f \u0432\u0438\u044f\u0432\u043b\u0435\u043d\u043d\u044f \u0456\u0441\u0442\u043e\u0442:\n1. \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043c\u0435\u043d\u043d\u0438\u043a\u0456\u0432-\u0456\u0441\u0442\u043e\u0442 \u043d\u0435 \u0454 \u0432\u043b\u0430\u0441\u043d\u0438\u043c\u0438 \u043d\u0430\u0437\u0432\u0430\u043c\u0438 (\u043b\u044e\u0434\u0438\u043d\u0430, \u0432\u0447\u0438\u0442\u0435\u043b\u044c, \u0434\u044f\u0434\u044c\u043a\u043e, \u043a\u0456\u0442 \u0442\u043e\u0449\u043e)\n2. \u0431\u0430\u0433\u0430\u0442\u043e \u0432\u043b\u0430\u0441\u043d\u0438\u0445 \u043d\u0430\u0437\u0432 \u043d\u0435 \u0454 \u0456\u0441\u0442\u043e\u0442\u0430\u043c\u0438 (\u0421\u0438\u0431\u0456\u0440, \u0412\u041a\u041f, \u0410\u043c\u0443\u0440)\n\n\u0423 StanfordNLP \u043c\u043e\u0436\u043d\u0430 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0433\u0440\u0430\u043c\u0430\u0442\u0438\u0447\u043d\u0443 \u043e\u0437\u043d\u0430\u043a\u0443 Animacy=Anim.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T10:57:12Z",
        "PR Comment": "\u0410\u043b\u0435 \u0434\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438, \u0430\u0431\u043e \u043f\u0438\u0441\u0430\u0442\u0438 \u044f\u043a\u0438\u0439\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437 \u0437 \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u0457... \u0422\u043e\u0431\u0442\u043e \u0430\u0431\u043e \u0437\u043e\u0432\u0441\u0456\u043c \u043f\u0440\u043e\u0441\u0442\u043e, \u0430\u0431\u043e \u044f\u043a\u043e\u0441\u044c \u0441\u043a\u043b\u0430\u0434\u043d\u043e. \u0422\u0430\u043a \u043d\u0430\u0447\u0435 \u043a\u0440\u0430\u0441\u0438\u0432\u0456\u0448\u0435. :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T10:58:06Z",
        "PR Comment": "\u0422\u0430\u043a, \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438. \u042f \u0442\u0430\u043c \u0434\u0430\u043b\u0456 \u043d\u0430\u043f\u0438\u0441\u0430\u0432, \u0449\u043e \u0437\u0430\u0431\u0443\u0432\u0441\u044f \u0441\u043f\u043e\u0447\u0430\u0442\u043a\u0443 \u0443 \u043b\u0435\u043a\u0446\u0456\u0457 \u043f\u043e\u0434\u0438\u0432\u0438\u0442\u0438\u0441\u044c )) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T10:58:57Z",
        "PR Comment": "\u043d\u0430\u0447\u0435 \u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T11:00:27Z",
        "PR Comment": "\u0410\u043b\u0435 \u044f \u0442\u043e\u0434\u0456 \u043d\u0435 \u0440\u043e\u0437\u0443\u043c\u0456\u044e... \u042f\u043a\u0449\u043e \u043f\u0440\u0438\u0431\u0440\u0430\u0442\u0438 \u0456 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 \u0456 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456, \u0442\u043e \u0437\u0430\u043b\u0438\u0448\u0438\u0442\u044c\u0441\u044f \u043a\u043e\u0440\u0456\u043d\u044c, \u0442\u0430\u043a? \u0427\u0438\u043c \u0442\u043e\u0434\u0456 \u0441\u0442\u0435\u043c \u0432\u0456\u0434\u0440\u0456\u0437\u043d\u044f\u0454\u0442\u044c\u0441\u044f \u0432\u0456\u0434 \u043a\u043e\u0440\u0435\u043d\u044f?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T11:47:30Z",
        "PR Comment": "\u0421\u0442\u0435\u043c - \u0442\u043e \u0456 \u0454 \u043a\u043e\u0440\u0456\u043d\u044c :) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T11:51:29Z",
        "PR Comment": "\u0414\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438 :) \u041e\u0441\u044c \u0432\u0435\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437: `\"ly\\b\"`. \u0410 \u0447\u0430\u0441 \u043e\u043f\u0440\u0430\u0446\u044e\u0432\u0430\u043d\u043d\u044f \u043a\u043e\u0440\u043f\u0443\u0441\u0443 \u0437\u043c\u0435\u043d\u0448\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T13:44:30Z",
        "PR Comment": "\u042f \u0434\u043e\u0432\u0433\u043e \u043d\u0435 \u043c\u043e\u0433\u043b\u0430 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u0442\u0438, \u0447\u043e\u043c\u0443 \u0443 \u0442\u0435\u0431\u0435 \u0442\u0430\u0456 \u0434\u0438\u0432\u043d\u0456 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u0432\u0438\u0439\u0448\u043b\u0438. \u0410\u0436 \u043e\u0441\u044c \u0432\u043e\u043d\u0430, \u0431\u0430\u0436\u0438\u043d\u0430! \u0422\u0430\u043c \u0456\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0456\u044f \u0437 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0454\u0442\u044c\u0441\u044f. \u0417\u043c\u0456\u043d\u0438 \u043d\u0430 `s.words[w.head-1]` \u0456 \u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0436\u0435\u043d\u0438 :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T14:11:19Z",
        "PR Comment": "\u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T19:20:48Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432. \u0442\u0430 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0432 \u0449\u043e \u043d\u0456\u0447\u043e\u0433\u043e \u043d\u0435 \u0437\u0430\u0433\u0443\u0431\u0438\u043b\u043e\u0441\u044f ) \u0434\u0456\u0439\u0441\u043d\u043e, \"\u0442\u0440\u043e\u0445\u0438\" \u043b\u0435\u0433\u0448\u0435 \u0441\u0442\u0430\u043b\u043e )",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T00:20:55Z",
        "PR Comment": "\u0426\u0435\u0439 \u0444\u0430\u0439\u043b\u0438\u043a \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u0437\u0430\u0431\u0440\u0430\u0442\u0438 \u0437 \u0446\u044c\u043e\u0433\u043e \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442\u0430. \u0414\u043b\u044f \u043a\u043e\u0436\u043d\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438 \u0442\u0440\u0435\u0431\u0430 \u0441\u0442\u0432\u043e\u0440\u044e\u0432\u0430\u0442\u0438 \u043d\u043e\u0432\u0443 \u0433\u0456\u043b\u043a\u0443 \u0437 \u043c\u0430\u0441\u0442\u0435\u0440\u0430.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T00:25:19Z",
        "PR Comment": "\u0422\u0430\u043a \u0456 \u043c\u0430\u0454 \u0431\u0443\u0442\u0438 :) \u0421\u0442\u0435\u043c\u043c\u0456\u043d\u0433 \u043f\u043e\u0432\u0438\u043d\u0435\u043d \u043f\u0440\u0438\u0431\u0438\u0440\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (derivational) \u0430\u0444\u0456\u043a\u0441\u0438, \u0430 \u043b\u0435\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0456\u044f \u2014 \u043b\u0438\u0448\u0435 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (inflectional).",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T00:25:53Z",
        "PR Comment": "\u042f \u043f\u0435\u0432\u043d\u043e \u043f\u043e\u0433\u0430\u043d\u043e \u043f\u043e\u044f\u0441\u043d\u044e\u0432\u0430\u043b\u0430, \u0431\u043e \u0446\u0456 \u0434\u0432\u0430 \u0442\u0438\u043f\u0438 \u043c\u0438 \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438 \u043d\u0430 \u0437\u0430\u043d\u044f\u0442\u0442\u0456. ;)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T00:47:34Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T00:52:28Z",
        "PR Comment": "\u041e\u0446\u044f \u043e\u0437\u043d\u0430\u043a\u0430 \u043d\u0435 \u0434\u0443\u0436\u0435 \u043f\u0456\u0434\u0445\u043e\u0434\u0438\u0442\u044c \u0434\u043b\u044f \u0432\u0438\u044f\u0432\u043b\u0435\u043d\u043d\u044f \u0456\u0441\u0442\u043e\u0442:\n1. \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043c\u0435\u043d\u043d\u0438\u043a\u0456\u0432-\u0456\u0441\u0442\u043e\u0442 \u043d\u0435 \u0454 \u0432\u043b\u0430\u0441\u043d\u0438\u043c\u0438 \u043d\u0430\u0437\u0432\u0430\u043c\u0438 (\u043b\u044e\u0434\u0438\u043d\u0430, \u0432\u0447\u0438\u0442\u0435\u043b\u044c, \u0434\u044f\u0434\u044c\u043a\u043e, \u043a\u0456\u0442 \u0442\u043e\u0449\u043e)\n2. \u0431\u0430\u0433\u0430\u0442\u043e \u0432\u043b\u0430\u0441\u043d\u0438\u0445 \u043d\u0430\u0437\u0432 \u043d\u0435 \u0454 \u0456\u0441\u0442\u043e\u0442\u0430\u043c\u0438 (\u0421\u0438\u0431\u0456\u0440, \u0412\u041a\u041f, \u0410\u043c\u0443\u0440)\n\n\u0423 StanfordNLP \u043c\u043e\u0436\u043d\u0430 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0433\u0440\u0430\u043c\u0430\u0442\u0438\u0447\u043d\u0443 \u043e\u0437\u043d\u0430\u043a\u0443 Animacy=Anim.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T10:57:12Z",
        "PR Comment": "\u0410\u043b\u0435 \u0434\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438, \u0430\u0431\u043e \u043f\u0438\u0441\u0430\u0442\u0438 \u044f\u043a\u0438\u0439\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437 \u0437 \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u0457... \u0422\u043e\u0431\u0442\u043e \u0430\u0431\u043e \u0437\u043e\u0432\u0441\u0456\u043c \u043f\u0440\u043e\u0441\u0442\u043e, \u0430\u0431\u043e \u044f\u043a\u043e\u0441\u044c \u0441\u043a\u043b\u0430\u0434\u043d\u043e. \u0422\u0430\u043a \u043d\u0430\u0447\u0435 \u043a\u0440\u0430\u0441\u0438\u0432\u0456\u0448\u0435. :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T10:58:06Z",
        "PR Comment": "\u0422\u0430\u043a, \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438. \u042f \u0442\u0430\u043c \u0434\u0430\u043b\u0456 \u043d\u0430\u043f\u0438\u0441\u0430\u0432, \u0449\u043e \u0437\u0430\u0431\u0443\u0432\u0441\u044f \u0441\u043f\u043e\u0447\u0430\u0442\u043a\u0443 \u0443 \u043b\u0435\u043a\u0446\u0456\u0457 \u043f\u043e\u0434\u0438\u0432\u0438\u0442\u0438\u0441\u044c )) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T10:58:57Z",
        "PR Comment": "\u043d\u0430\u0447\u0435 \u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T11:00:27Z",
        "PR Comment": "\u0410\u043b\u0435 \u044f \u0442\u043e\u0434\u0456 \u043d\u0435 \u0440\u043e\u0437\u0443\u043c\u0456\u044e... \u042f\u043a\u0449\u043e \u043f\u0440\u0438\u0431\u0440\u0430\u0442\u0438 \u0456 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 \u0456 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456, \u0442\u043e \u0437\u0430\u043b\u0438\u0448\u0438\u0442\u044c\u0441\u044f \u043a\u043e\u0440\u0456\u043d\u044c, \u0442\u0430\u043a? \u0427\u0438\u043c \u0442\u043e\u0434\u0456 \u0441\u0442\u0435\u043c \u0432\u0456\u0434\u0440\u0456\u0437\u043d\u044f\u0454\u0442\u044c\u0441\u044f \u0432\u0456\u0434 \u043a\u043e\u0440\u0435\u043d\u044f?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T11:47:30Z",
        "PR Comment": "\u0421\u0442\u0435\u043c - \u0442\u043e \u0456 \u0454 \u043a\u043e\u0440\u0456\u043d\u044c :) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T11:51:29Z",
        "PR Comment": "\u0414\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438 :) \u041e\u0441\u044c \u0432\u0435\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437: `\"ly\\b\"`. \u0410 \u0447\u0430\u0441 \u043e\u043f\u0440\u0430\u0446\u044e\u0432\u0430\u043d\u043d\u044f \u043a\u043e\u0440\u043f\u0443\u0441\u0443 \u0437\u043c\u0435\u043d\u0448\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T13:44:30Z",
        "PR Comment": "\u042f \u0434\u043e\u0432\u0433\u043e \u043d\u0435 \u043c\u043e\u0433\u043b\u0430 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u0442\u0438, \u0447\u043e\u043c\u0443 \u0443 \u0442\u0435\u0431\u0435 \u0442\u0430\u0456 \u0434\u0438\u0432\u043d\u0456 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u0432\u0438\u0439\u0448\u043b\u0438. \u0410\u0436 \u043e\u0441\u044c \u0432\u043e\u043d\u0430, \u0431\u0430\u0436\u0438\u043d\u0430! \u0422\u0430\u043c \u0456\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0456\u044f \u0437 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0454\u0442\u044c\u0441\u044f. \u0417\u043c\u0456\u043d\u0438 \u043d\u0430 `s.words[w.head-1]` \u0456 \u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0436\u0435\u043d\u0438 :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T14:11:19Z",
        "PR Comment": "\u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T19:20:48Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432. \u0442\u0430 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0432 \u0449\u043e \u043d\u0456\u0447\u043e\u0433\u043e \u043d\u0435 \u0437\u0430\u0433\u0443\u0431\u0438\u043b\u043e\u0441\u044f ) \u0434\u0456\u0439\u0441\u043d\u043e, \"\u0442\u0440\u043e\u0445\u0438\" \u043b\u0435\u0433\u0448\u0435 \u0441\u0442\u0430\u043b\u043e )",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T00:20:55Z",
        "PR Comment": "\u0426\u0435\u0439 \u0444\u0430\u0439\u043b\u0438\u043a \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u0437\u0430\u0431\u0440\u0430\u0442\u0438 \u0437 \u0446\u044c\u043e\u0433\u043e \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442\u0430. \u0414\u043b\u044f \u043a\u043e\u0436\u043d\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438 \u0442\u0440\u0435\u0431\u0430 \u0441\u0442\u0432\u043e\u0440\u044e\u0432\u0430\u0442\u0438 \u043d\u043e\u0432\u0443 \u0433\u0456\u043b\u043a\u0443 \u0437 \u043c\u0430\u0441\u0442\u0435\u0440\u0430.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T00:25:19Z",
        "PR Comment": "\u0422\u0430\u043a \u0456 \u043c\u0430\u0454 \u0431\u0443\u0442\u0438 :) \u0421\u0442\u0435\u043c\u043c\u0456\u043d\u0433 \u043f\u043e\u0432\u0438\u043d\u0435\u043d \u043f\u0440\u0438\u0431\u0438\u0440\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (derivational) \u0430\u0444\u0456\u043a\u0441\u0438, \u0430 \u043b\u0435\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0456\u044f \u2014 \u043b\u0438\u0448\u0435 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (inflectional).",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T00:25:53Z",
        "PR Comment": "\u042f \u043f\u0435\u0432\u043d\u043e \u043f\u043e\u0433\u0430\u043d\u043e \u043f\u043e\u044f\u0441\u043d\u044e\u0432\u0430\u043b\u0430, \u0431\u043e \u0446\u0456 \u0434\u0432\u0430 \u0442\u0438\u043f\u0438 \u043c\u0438 \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438 \u043d\u0430 \u0437\u0430\u043d\u044f\u0442\u0442\u0456. ;)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T00:47:34Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T00:52:28Z",
        "PR Comment": "\u041e\u0446\u044f \u043e\u0437\u043d\u0430\u043a\u0430 \u043d\u0435 \u0434\u0443\u0436\u0435 \u043f\u0456\u0434\u0445\u043e\u0434\u0438\u0442\u044c \u0434\u043b\u044f \u0432\u0438\u044f\u0432\u043b\u0435\u043d\u043d\u044f \u0456\u0441\u0442\u043e\u0442:\n1. \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043c\u0435\u043d\u043d\u0438\u043a\u0456\u0432-\u0456\u0441\u0442\u043e\u0442 \u043d\u0435 \u0454 \u0432\u043b\u0430\u0441\u043d\u0438\u043c\u0438 \u043d\u0430\u0437\u0432\u0430\u043c\u0438 (\u043b\u044e\u0434\u0438\u043d\u0430, \u0432\u0447\u0438\u0442\u0435\u043b\u044c, \u0434\u044f\u0434\u044c\u043a\u043e, \u043a\u0456\u0442 \u0442\u043e\u0449\u043e)\n2. \u0431\u0430\u0433\u0430\u0442\u043e \u0432\u043b\u0430\u0441\u043d\u0438\u0445 \u043d\u0430\u0437\u0432 \u043d\u0435 \u0454 \u0456\u0441\u0442\u043e\u0442\u0430\u043c\u0438 (\u0421\u0438\u0431\u0456\u0440, \u0412\u041a\u041f, \u0410\u043c\u0443\u0440)\n\n\u0423 StanfordNLP \u043c\u043e\u0436\u043d\u0430 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0433\u0440\u0430\u043c\u0430\u0442\u0438\u0447\u043d\u0443 \u043e\u0437\u043d\u0430\u043a\u0443 Animacy=Anim.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T10:57:12Z",
        "PR Comment": "\u0410\u043b\u0435 \u0434\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438, \u0430\u0431\u043e \u043f\u0438\u0441\u0430\u0442\u0438 \u044f\u043a\u0438\u0439\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437 \u0437 \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u0457... \u0422\u043e\u0431\u0442\u043e \u0430\u0431\u043e \u0437\u043e\u0432\u0441\u0456\u043c \u043f\u0440\u043e\u0441\u0442\u043e, \u0430\u0431\u043e \u044f\u043a\u043e\u0441\u044c \u0441\u043a\u043b\u0430\u0434\u043d\u043e. \u0422\u0430\u043a \u043d\u0430\u0447\u0435 \u043a\u0440\u0430\u0441\u0438\u0432\u0456\u0448\u0435. :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T10:58:06Z",
        "PR Comment": "\u0422\u0430\u043a, \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438. \u042f \u0442\u0430\u043c \u0434\u0430\u043b\u0456 \u043d\u0430\u043f\u0438\u0441\u0430\u0432, \u0449\u043e \u0437\u0430\u0431\u0443\u0432\u0441\u044f \u0441\u043f\u043e\u0447\u0430\u0442\u043a\u0443 \u0443 \u043b\u0435\u043a\u0446\u0456\u0457 \u043f\u043e\u0434\u0438\u0432\u0438\u0442\u0438\u0441\u044c )) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T10:58:57Z",
        "PR Comment": "\u043d\u0430\u0447\u0435 \u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T11:00:27Z",
        "PR Comment": "\u0410\u043b\u0435 \u044f \u0442\u043e\u0434\u0456 \u043d\u0435 \u0440\u043e\u0437\u0443\u043c\u0456\u044e... \u042f\u043a\u0449\u043e \u043f\u0440\u0438\u0431\u0440\u0430\u0442\u0438 \u0456 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 \u0456 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456, \u0442\u043e \u0437\u0430\u043b\u0438\u0448\u0438\u0442\u044c\u0441\u044f \u043a\u043e\u0440\u0456\u043d\u044c, \u0442\u0430\u043a? \u0427\u0438\u043c \u0442\u043e\u0434\u0456 \u0441\u0442\u0435\u043c \u0432\u0456\u0434\u0440\u0456\u0437\u043d\u044f\u0454\u0442\u044c\u0441\u044f \u0432\u0456\u0434 \u043a\u043e\u0440\u0435\u043d\u044f?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T11:47:30Z",
        "PR Comment": "\u0421\u0442\u0435\u043c - \u0442\u043e \u0456 \u0454 \u043a\u043e\u0440\u0456\u043d\u044c :) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T11:51:29Z",
        "PR Comment": "\u0414\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438 :) \u041e\u0441\u044c \u0432\u0435\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437: `\"ly\\b\"`. \u0410 \u0447\u0430\u0441 \u043e\u043f\u0440\u0430\u0446\u044e\u0432\u0430\u043d\u043d\u044f \u043a\u043e\u0440\u043f\u0443\u0441\u0443 \u0437\u043c\u0435\u043d\u0448\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T13:44:30Z",
        "PR Comment": "\u042f \u0434\u043e\u0432\u0433\u043e \u043d\u0435 \u043c\u043e\u0433\u043b\u0430 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u0442\u0438, \u0447\u043e\u043c\u0443 \u0443 \u0442\u0435\u0431\u0435 \u0442\u0430\u0456 \u0434\u0438\u0432\u043d\u0456 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u0432\u0438\u0439\u0448\u043b\u0438. \u0410\u0436 \u043e\u0441\u044c \u0432\u043e\u043d\u0430, \u0431\u0430\u0436\u0438\u043d\u0430! \u0422\u0430\u043c \u0456\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0456\u044f \u0437 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0454\u0442\u044c\u0441\u044f. \u0417\u043c\u0456\u043d\u0438 \u043d\u0430 `s.words[w.head-1]` \u0456 \u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0436\u0435\u043d\u0438 :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T14:11:19Z",
        "PR Comment": "\u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T19:20:48Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432. \u0442\u0430 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0432 \u0449\u043e \u043d\u0456\u0447\u043e\u0433\u043e \u043d\u0435 \u0437\u0430\u0433\u0443\u0431\u0438\u043b\u043e\u0441\u044f ) \u0434\u0456\u0439\u0441\u043d\u043e, \"\u0442\u0440\u043e\u0445\u0438\" \u043b\u0435\u0433\u0448\u0435 \u0441\u0442\u0430\u043b\u043e )",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T00:20:55Z",
        "PR Comment": "\u0426\u0435\u0439 \u0444\u0430\u0439\u043b\u0438\u043a \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u0437\u0430\u0431\u0440\u0430\u0442\u0438 \u0437 \u0446\u044c\u043e\u0433\u043e \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442\u0430. \u0414\u043b\u044f \u043a\u043e\u0436\u043d\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438 \u0442\u0440\u0435\u0431\u0430 \u0441\u0442\u0432\u043e\u0440\u044e\u0432\u0430\u0442\u0438 \u043d\u043e\u0432\u0443 \u0433\u0456\u043b\u043a\u0443 \u0437 \u043c\u0430\u0441\u0442\u0435\u0440\u0430.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T00:25:19Z",
        "PR Comment": "\u0422\u0430\u043a \u0456 \u043c\u0430\u0454 \u0431\u0443\u0442\u0438 :) \u0421\u0442\u0435\u043c\u043c\u0456\u043d\u0433 \u043f\u043e\u0432\u0438\u043d\u0435\u043d \u043f\u0440\u0438\u0431\u0438\u0440\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (derivational) \u0430\u0444\u0456\u043a\u0441\u0438, \u0430 \u043b\u0435\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0456\u044f \u2014 \u043b\u0438\u0448\u0435 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (inflectional).",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T00:25:53Z",
        "PR Comment": "\u042f \u043f\u0435\u0432\u043d\u043e \u043f\u043e\u0433\u0430\u043d\u043e \u043f\u043e\u044f\u0441\u043d\u044e\u0432\u0430\u043b\u0430, \u0431\u043e \u0446\u0456 \u0434\u0432\u0430 \u0442\u0438\u043f\u0438 \u043c\u0438 \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438 \u043d\u0430 \u0437\u0430\u043d\u044f\u0442\u0442\u0456. ;)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T00:47:34Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T00:52:28Z",
        "PR Comment": "\u041e\u0446\u044f \u043e\u0437\u043d\u0430\u043a\u0430 \u043d\u0435 \u0434\u0443\u0436\u0435 \u043f\u0456\u0434\u0445\u043e\u0434\u0438\u0442\u044c \u0434\u043b\u044f \u0432\u0438\u044f\u0432\u043b\u0435\u043d\u043d\u044f \u0456\u0441\u0442\u043e\u0442:\n1. \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043c\u0435\u043d\u043d\u0438\u043a\u0456\u0432-\u0456\u0441\u0442\u043e\u0442 \u043d\u0435 \u0454 \u0432\u043b\u0430\u0441\u043d\u0438\u043c\u0438 \u043d\u0430\u0437\u0432\u0430\u043c\u0438 (\u043b\u044e\u0434\u0438\u043d\u0430, \u0432\u0447\u0438\u0442\u0435\u043b\u044c, \u0434\u044f\u0434\u044c\u043a\u043e, \u043a\u0456\u0442 \u0442\u043e\u0449\u043e)\n2. \u0431\u0430\u0433\u0430\u0442\u043e \u0432\u043b\u0430\u0441\u043d\u0438\u0445 \u043d\u0430\u0437\u0432 \u043d\u0435 \u0454 \u0456\u0441\u0442\u043e\u0442\u0430\u043c\u0438 (\u0421\u0438\u0431\u0456\u0440, \u0412\u041a\u041f, \u0410\u043c\u0443\u0440)\n\n\u0423 StanfordNLP \u043c\u043e\u0436\u043d\u0430 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0433\u0440\u0430\u043c\u0430\u0442\u0438\u0447\u043d\u0443 \u043e\u0437\u043d\u0430\u043a\u0443 Animacy=Anim.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T10:57:12Z",
        "PR Comment": "\u0410\u043b\u0435 \u0434\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438, \u0430\u0431\u043e \u043f\u0438\u0441\u0430\u0442\u0438 \u044f\u043a\u0438\u0439\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437 \u0437 \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u0457... \u0422\u043e\u0431\u0442\u043e \u0430\u0431\u043e \u0437\u043e\u0432\u0441\u0456\u043c \u043f\u0440\u043e\u0441\u0442\u043e, \u0430\u0431\u043e \u044f\u043a\u043e\u0441\u044c \u0441\u043a\u043b\u0430\u0434\u043d\u043e. \u0422\u0430\u043a \u043d\u0430\u0447\u0435 \u043a\u0440\u0430\u0441\u0438\u0432\u0456\u0448\u0435. :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T10:58:06Z",
        "PR Comment": "\u0422\u0430\u043a, \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438. \u042f \u0442\u0430\u043c \u0434\u0430\u043b\u0456 \u043d\u0430\u043f\u0438\u0441\u0430\u0432, \u0449\u043e \u0437\u0430\u0431\u0443\u0432\u0441\u044f \u0441\u043f\u043e\u0447\u0430\u0442\u043a\u0443 \u0443 \u043b\u0435\u043a\u0446\u0456\u0457 \u043f\u043e\u0434\u0438\u0432\u0438\u0442\u0438\u0441\u044c )) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T10:58:57Z",
        "PR Comment": "\u043d\u0430\u0447\u0435 \u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T11:00:27Z",
        "PR Comment": "\u0410\u043b\u0435 \u044f \u0442\u043e\u0434\u0456 \u043d\u0435 \u0440\u043e\u0437\u0443\u043c\u0456\u044e... \u042f\u043a\u0449\u043e \u043f\u0440\u0438\u0431\u0440\u0430\u0442\u0438 \u0456 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 \u0456 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456, \u0442\u043e \u0437\u0430\u043b\u0438\u0448\u0438\u0442\u044c\u0441\u044f \u043a\u043e\u0440\u0456\u043d\u044c, \u0442\u0430\u043a? \u0427\u0438\u043c \u0442\u043e\u0434\u0456 \u0441\u0442\u0435\u043c \u0432\u0456\u0434\u0440\u0456\u0437\u043d\u044f\u0454\u0442\u044c\u0441\u044f \u0432\u0456\u0434 \u043a\u043e\u0440\u0435\u043d\u044f?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T11:47:30Z",
        "PR Comment": "\u0421\u0442\u0435\u043c - \u0442\u043e \u0456 \u0454 \u043a\u043e\u0440\u0456\u043d\u044c :) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T11:51:29Z",
        "PR Comment": "\u0414\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438 :) \u041e\u0441\u044c \u0432\u0435\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437: `\"ly\\b\"`. \u0410 \u0447\u0430\u0441 \u043e\u043f\u0440\u0430\u0446\u044e\u0432\u0430\u043d\u043d\u044f \u043a\u043e\u0440\u043f\u0443\u0441\u0443 \u0437\u043c\u0435\u043d\u0448\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T13:44:30Z",
        "PR Comment": "\u042f \u0434\u043e\u0432\u0433\u043e \u043d\u0435 \u043c\u043e\u0433\u043b\u0430 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u0442\u0438, \u0447\u043e\u043c\u0443 \u0443 \u0442\u0435\u0431\u0435 \u0442\u0430\u0456 \u0434\u0438\u0432\u043d\u0456 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u0432\u0438\u0439\u0448\u043b\u0438. \u0410\u0436 \u043e\u0441\u044c \u0432\u043e\u043d\u0430, \u0431\u0430\u0436\u0438\u043d\u0430! \u0422\u0430\u043c \u0456\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0456\u044f \u0437 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0454\u0442\u044c\u0441\u044f. \u0417\u043c\u0456\u043d\u0438 \u043d\u0430 `s.words[w.head-1]` \u0456 \u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0436\u0435\u043d\u0438 :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T14:11:19Z",
        "PR Comment": "\u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.2.headlines.py",
        "Creation Date": "2020-03-28T19:20:48Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432. \u0442\u0430 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0432 \u0449\u043e \u043d\u0456\u0447\u043e\u0433\u043e \u043d\u0435 \u0437\u0430\u0433\u0443\u0431\u0438\u043b\u043e\u0441\u044f ) \u0434\u0456\u0439\u0441\u043d\u043e, \"\u0442\u0440\u043e\u0445\u0438\" \u043b\u0435\u0433\u0448\u0435 \u0441\u0442\u0430\u043b\u043e )",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:20:55Z",
        "PR Comment": "\u0426\u0435\u0439 \u0444\u0430\u0439\u043b\u0438\u043a \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u0437\u0430\u0431\u0440\u0430\u0442\u0438 \u0437 \u0446\u044c\u043e\u0433\u043e \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442\u0430. \u0414\u043b\u044f \u043a\u043e\u0436\u043d\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438 \u0442\u0440\u0435\u0431\u0430 \u0441\u0442\u0432\u043e\u0440\u044e\u0432\u0430\u0442\u0438 \u043d\u043e\u0432\u0443 \u0433\u0456\u043b\u043a\u0443 \u0437 \u043c\u0430\u0441\u0442\u0435\u0440\u0430.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:25:19Z",
        "PR Comment": "\u0422\u0430\u043a \u0456 \u043c\u0430\u0454 \u0431\u0443\u0442\u0438 :) \u0421\u0442\u0435\u043c\u043c\u0456\u043d\u0433 \u043f\u043e\u0432\u0438\u043d\u0435\u043d \u043f\u0440\u0438\u0431\u0438\u0440\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (derivational) \u0430\u0444\u0456\u043a\u0441\u0438, \u0430 \u043b\u0435\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0456\u044f \u2014 \u043b\u0438\u0448\u0435 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (inflectional).",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:25:53Z",
        "PR Comment": "\u042f \u043f\u0435\u0432\u043d\u043e \u043f\u043e\u0433\u0430\u043d\u043e \u043f\u043e\u044f\u0441\u043d\u044e\u0432\u0430\u043b\u0430, \u0431\u043e \u0446\u0456 \u0434\u0432\u0430 \u0442\u0438\u043f\u0438 \u043c\u0438 \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438 \u043d\u0430 \u0437\u0430\u043d\u044f\u0442\u0442\u0456. ;)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:47:34Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:52:28Z",
        "PR Comment": "\u041e\u0446\u044f \u043e\u0437\u043d\u0430\u043a\u0430 \u043d\u0435 \u0434\u0443\u0436\u0435 \u043f\u0456\u0434\u0445\u043e\u0434\u0438\u0442\u044c \u0434\u043b\u044f \u0432\u0438\u044f\u0432\u043b\u0435\u043d\u043d\u044f \u0456\u0441\u0442\u043e\u0442:\n1. \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043c\u0435\u043d\u043d\u0438\u043a\u0456\u0432-\u0456\u0441\u0442\u043e\u0442 \u043d\u0435 \u0454 \u0432\u043b\u0430\u0441\u043d\u0438\u043c\u0438 \u043d\u0430\u0437\u0432\u0430\u043c\u0438 (\u043b\u044e\u0434\u0438\u043d\u0430, \u0432\u0447\u0438\u0442\u0435\u043b\u044c, \u0434\u044f\u0434\u044c\u043a\u043e, \u043a\u0456\u0442 \u0442\u043e\u0449\u043e)\n2. \u0431\u0430\u0433\u0430\u0442\u043e \u0432\u043b\u0430\u0441\u043d\u0438\u0445 \u043d\u0430\u0437\u0432 \u043d\u0435 \u0454 \u0456\u0441\u0442\u043e\u0442\u0430\u043c\u0438 (\u0421\u0438\u0431\u0456\u0440, \u0412\u041a\u041f, \u0410\u043c\u0443\u0440)\n\n\u0423 StanfordNLP \u043c\u043e\u0436\u043d\u0430 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0433\u0440\u0430\u043c\u0430\u0442\u0438\u0447\u043d\u0443 \u043e\u0437\u043d\u0430\u043a\u0443 Animacy=Anim.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T10:57:12Z",
        "PR Comment": "\u0410\u043b\u0435 \u0434\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438, \u0430\u0431\u043e \u043f\u0438\u0441\u0430\u0442\u0438 \u044f\u043a\u0438\u0439\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437 \u0437 \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u0457... \u0422\u043e\u0431\u0442\u043e \u0430\u0431\u043e \u0437\u043e\u0432\u0441\u0456\u043c \u043f\u0440\u043e\u0441\u0442\u043e, \u0430\u0431\u043e \u044f\u043a\u043e\u0441\u044c \u0441\u043a\u043b\u0430\u0434\u043d\u043e. \u0422\u0430\u043a \u043d\u0430\u0447\u0435 \u043a\u0440\u0430\u0441\u0438\u0432\u0456\u0448\u0435. :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T10:58:06Z",
        "PR Comment": "\u0422\u0430\u043a, \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438. \u042f \u0442\u0430\u043c \u0434\u0430\u043b\u0456 \u043d\u0430\u043f\u0438\u0441\u0430\u0432, \u0449\u043e \u0437\u0430\u0431\u0443\u0432\u0441\u044f \u0441\u043f\u043e\u0447\u0430\u0442\u043a\u0443 \u0443 \u043b\u0435\u043a\u0446\u0456\u0457 \u043f\u043e\u0434\u0438\u0432\u0438\u0442\u0438\u0441\u044c )) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T10:58:57Z",
        "PR Comment": "\u043d\u0430\u0447\u0435 \u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T11:00:27Z",
        "PR Comment": "\u0410\u043b\u0435 \u044f \u0442\u043e\u0434\u0456 \u043d\u0435 \u0440\u043e\u0437\u0443\u043c\u0456\u044e... \u042f\u043a\u0449\u043e \u043f\u0440\u0438\u0431\u0440\u0430\u0442\u0438 \u0456 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 \u0456 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456, \u0442\u043e \u0437\u0430\u043b\u0438\u0448\u0438\u0442\u044c\u0441\u044f \u043a\u043e\u0440\u0456\u043d\u044c, \u0442\u0430\u043a? \u0427\u0438\u043c \u0442\u043e\u0434\u0456 \u0441\u0442\u0435\u043c \u0432\u0456\u0434\u0440\u0456\u0437\u043d\u044f\u0454\u0442\u044c\u0441\u044f \u0432\u0456\u0434 \u043a\u043e\u0440\u0435\u043d\u044f?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T11:47:30Z",
        "PR Comment": "\u0421\u0442\u0435\u043c - \u0442\u043e \u0456 \u0454 \u043a\u043e\u0440\u0456\u043d\u044c :) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T11:51:29Z",
        "PR Comment": "\u0414\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438 :) \u041e\u0441\u044c \u0432\u0435\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437: `\"ly\\b\"`. \u0410 \u0447\u0430\u0441 \u043e\u043f\u0440\u0430\u0446\u044e\u0432\u0430\u043d\u043d\u044f \u043a\u043e\u0440\u043f\u0443\u0441\u0443 \u0437\u043c\u0435\u043d\u0448\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T13:44:30Z",
        "PR Comment": "\u042f \u0434\u043e\u0432\u0433\u043e \u043d\u0435 \u043c\u043e\u0433\u043b\u0430 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u0442\u0438, \u0447\u043e\u043c\u0443 \u0443 \u0442\u0435\u0431\u0435 \u0442\u0430\u0456 \u0434\u0438\u0432\u043d\u0456 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u0432\u0438\u0439\u0448\u043b\u0438. \u0410\u0436 \u043e\u0441\u044c \u0432\u043e\u043d\u0430, \u0431\u0430\u0436\u0438\u043d\u0430! \u0422\u0430\u043c \u0456\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0456\u044f \u0437 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0454\u0442\u044c\u0441\u044f. \u0417\u043c\u0456\u043d\u0438 \u043d\u0430 `s.words[w.head-1]` \u0456 \u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0436\u0435\u043d\u0438 :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T14:11:19Z",
        "PR Comment": "\u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T19:20:48Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432. \u0442\u0430 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0432 \u0449\u043e \u043d\u0456\u0447\u043e\u0433\u043e \u043d\u0435 \u0437\u0430\u0433\u0443\u0431\u0438\u043b\u043e\u0441\u044f ) \u0434\u0456\u0439\u0441\u043d\u043e, \"\u0442\u0440\u043e\u0445\u0438\" \u043b\u0435\u0433\u0448\u0435 \u0441\u0442\u0430\u043b\u043e )",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:20:55Z",
        "PR Comment": "\u0426\u0435\u0439 \u0444\u0430\u0439\u043b\u0438\u043a \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u0437\u0430\u0431\u0440\u0430\u0442\u0438 \u0437 \u0446\u044c\u043e\u0433\u043e \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442\u0430. \u0414\u043b\u044f \u043a\u043e\u0436\u043d\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438 \u0442\u0440\u0435\u0431\u0430 \u0441\u0442\u0432\u043e\u0440\u044e\u0432\u0430\u0442\u0438 \u043d\u043e\u0432\u0443 \u0433\u0456\u043b\u043a\u0443 \u0437 \u043c\u0430\u0441\u0442\u0435\u0440\u0430.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:25:19Z",
        "PR Comment": "\u0422\u0430\u043a \u0456 \u043c\u0430\u0454 \u0431\u0443\u0442\u0438 :) \u0421\u0442\u0435\u043c\u043c\u0456\u043d\u0433 \u043f\u043e\u0432\u0438\u043d\u0435\u043d \u043f\u0440\u0438\u0431\u0438\u0440\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (derivational) \u0430\u0444\u0456\u043a\u0441\u0438, \u0430 \u043b\u0435\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0456\u044f \u2014 \u043b\u0438\u0448\u0435 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (inflectional).",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:25:53Z",
        "PR Comment": "\u042f \u043f\u0435\u0432\u043d\u043e \u043f\u043e\u0433\u0430\u043d\u043e \u043f\u043e\u044f\u0441\u043d\u044e\u0432\u0430\u043b\u0430, \u0431\u043e \u0446\u0456 \u0434\u0432\u0430 \u0442\u0438\u043f\u0438 \u043c\u0438 \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438 \u043d\u0430 \u0437\u0430\u043d\u044f\u0442\u0442\u0456. ;)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:47:34Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:52:28Z",
        "PR Comment": "\u041e\u0446\u044f \u043e\u0437\u043d\u0430\u043a\u0430 \u043d\u0435 \u0434\u0443\u0436\u0435 \u043f\u0456\u0434\u0445\u043e\u0434\u0438\u0442\u044c \u0434\u043b\u044f \u0432\u0438\u044f\u0432\u043b\u0435\u043d\u043d\u044f \u0456\u0441\u0442\u043e\u0442:\n1. \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043c\u0435\u043d\u043d\u0438\u043a\u0456\u0432-\u0456\u0441\u0442\u043e\u0442 \u043d\u0435 \u0454 \u0432\u043b\u0430\u0441\u043d\u0438\u043c\u0438 \u043d\u0430\u0437\u0432\u0430\u043c\u0438 (\u043b\u044e\u0434\u0438\u043d\u0430, \u0432\u0447\u0438\u0442\u0435\u043b\u044c, \u0434\u044f\u0434\u044c\u043a\u043e, \u043a\u0456\u0442 \u0442\u043e\u0449\u043e)\n2. \u0431\u0430\u0433\u0430\u0442\u043e \u0432\u043b\u0430\u0441\u043d\u0438\u0445 \u043d\u0430\u0437\u0432 \u043d\u0435 \u0454 \u0456\u0441\u0442\u043e\u0442\u0430\u043c\u0438 (\u0421\u0438\u0431\u0456\u0440, \u0412\u041a\u041f, \u0410\u043c\u0443\u0440)\n\n\u0423 StanfordNLP \u043c\u043e\u0436\u043d\u0430 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0433\u0440\u0430\u043c\u0430\u0442\u0438\u0447\u043d\u0443 \u043e\u0437\u043d\u0430\u043a\u0443 Animacy=Anim.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T10:57:12Z",
        "PR Comment": "\u0410\u043b\u0435 \u0434\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438, \u0430\u0431\u043e \u043f\u0438\u0441\u0430\u0442\u0438 \u044f\u043a\u0438\u0439\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437 \u0437 \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u0457... \u0422\u043e\u0431\u0442\u043e \u0430\u0431\u043e \u0437\u043e\u0432\u0441\u0456\u043c \u043f\u0440\u043e\u0441\u0442\u043e, \u0430\u0431\u043e \u044f\u043a\u043e\u0441\u044c \u0441\u043a\u043b\u0430\u0434\u043d\u043e. \u0422\u0430\u043a \u043d\u0430\u0447\u0435 \u043a\u0440\u0430\u0441\u0438\u0432\u0456\u0448\u0435. :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T10:58:06Z",
        "PR Comment": "\u0422\u0430\u043a, \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438. \u042f \u0442\u0430\u043c \u0434\u0430\u043b\u0456 \u043d\u0430\u043f\u0438\u0441\u0430\u0432, \u0449\u043e \u0437\u0430\u0431\u0443\u0432\u0441\u044f \u0441\u043f\u043e\u0447\u0430\u0442\u043a\u0443 \u0443 \u043b\u0435\u043a\u0446\u0456\u0457 \u043f\u043e\u0434\u0438\u0432\u0438\u0442\u0438\u0441\u044c )) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T10:58:57Z",
        "PR Comment": "\u043d\u0430\u0447\u0435 \u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T11:00:27Z",
        "PR Comment": "\u0410\u043b\u0435 \u044f \u0442\u043e\u0434\u0456 \u043d\u0435 \u0440\u043e\u0437\u0443\u043c\u0456\u044e... \u042f\u043a\u0449\u043e \u043f\u0440\u0438\u0431\u0440\u0430\u0442\u0438 \u0456 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 \u0456 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456, \u0442\u043e \u0437\u0430\u043b\u0438\u0448\u0438\u0442\u044c\u0441\u044f \u043a\u043e\u0440\u0456\u043d\u044c, \u0442\u0430\u043a? \u0427\u0438\u043c \u0442\u043e\u0434\u0456 \u0441\u0442\u0435\u043c \u0432\u0456\u0434\u0440\u0456\u0437\u043d\u044f\u0454\u0442\u044c\u0441\u044f \u0432\u0456\u0434 \u043a\u043e\u0440\u0435\u043d\u044f?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T11:47:30Z",
        "PR Comment": "\u0421\u0442\u0435\u043c - \u0442\u043e \u0456 \u0454 \u043a\u043e\u0440\u0456\u043d\u044c :) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T11:51:29Z",
        "PR Comment": "\u0414\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438 :) \u041e\u0441\u044c \u0432\u0435\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437: `\"ly\\b\"`. \u0410 \u0447\u0430\u0441 \u043e\u043f\u0440\u0430\u0446\u044e\u0432\u0430\u043d\u043d\u044f \u043a\u043e\u0440\u043f\u0443\u0441\u0443 \u0437\u043c\u0435\u043d\u0448\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T13:44:30Z",
        "PR Comment": "\u042f \u0434\u043e\u0432\u0433\u043e \u043d\u0435 \u043c\u043e\u0433\u043b\u0430 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u0442\u0438, \u0447\u043e\u043c\u0443 \u0443 \u0442\u0435\u0431\u0435 \u0442\u0430\u0456 \u0434\u0438\u0432\u043d\u0456 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u0432\u0438\u0439\u0448\u043b\u0438. \u0410\u0436 \u043e\u0441\u044c \u0432\u043e\u043d\u0430, \u0431\u0430\u0436\u0438\u043d\u0430! \u0422\u0430\u043c \u0456\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0456\u044f \u0437 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0454\u0442\u044c\u0441\u044f. \u0417\u043c\u0456\u043d\u0438 \u043d\u0430 `s.words[w.head-1]` \u0456 \u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0436\u0435\u043d\u0438 :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T14:11:19Z",
        "PR Comment": "\u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T19:20:48Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432. \u0442\u0430 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0432 \u0449\u043e \u043d\u0456\u0447\u043e\u0433\u043e \u043d\u0435 \u0437\u0430\u0433\u0443\u0431\u0438\u043b\u043e\u0441\u044f ) \u0434\u0456\u0439\u0441\u043d\u043e, \"\u0442\u0440\u043e\u0445\u0438\" \u043b\u0435\u0433\u0448\u0435 \u0441\u0442\u0430\u043b\u043e )",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:20:55Z",
        "PR Comment": "\u0426\u0435\u0439 \u0444\u0430\u0439\u043b\u0438\u043a \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u0437\u0430\u0431\u0440\u0430\u0442\u0438 \u0437 \u0446\u044c\u043e\u0433\u043e \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442\u0430. \u0414\u043b\u044f \u043a\u043e\u0436\u043d\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438 \u0442\u0440\u0435\u0431\u0430 \u0441\u0442\u0432\u043e\u0440\u044e\u0432\u0430\u0442\u0438 \u043d\u043e\u0432\u0443 \u0433\u0456\u043b\u043a\u0443 \u0437 \u043c\u0430\u0441\u0442\u0435\u0440\u0430.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:25:19Z",
        "PR Comment": "\u0422\u0430\u043a \u0456 \u043c\u0430\u0454 \u0431\u0443\u0442\u0438 :) \u0421\u0442\u0435\u043c\u043c\u0456\u043d\u0433 \u043f\u043e\u0432\u0438\u043d\u0435\u043d \u043f\u0440\u0438\u0431\u0438\u0440\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (derivational) \u0430\u0444\u0456\u043a\u0441\u0438, \u0430 \u043b\u0435\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0456\u044f \u2014 \u043b\u0438\u0448\u0435 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (inflectional).",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:25:53Z",
        "PR Comment": "\u042f \u043f\u0435\u0432\u043d\u043e \u043f\u043e\u0433\u0430\u043d\u043e \u043f\u043e\u044f\u0441\u043d\u044e\u0432\u0430\u043b\u0430, \u0431\u043e \u0446\u0456 \u0434\u0432\u0430 \u0442\u0438\u043f\u0438 \u043c\u0438 \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438 \u043d\u0430 \u0437\u0430\u043d\u044f\u0442\u0442\u0456. ;)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:47:34Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:52:28Z",
        "PR Comment": "\u041e\u0446\u044f \u043e\u0437\u043d\u0430\u043a\u0430 \u043d\u0435 \u0434\u0443\u0436\u0435 \u043f\u0456\u0434\u0445\u043e\u0434\u0438\u0442\u044c \u0434\u043b\u044f \u0432\u0438\u044f\u0432\u043b\u0435\u043d\u043d\u044f \u0456\u0441\u0442\u043e\u0442:\n1. \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043c\u0435\u043d\u043d\u0438\u043a\u0456\u0432-\u0456\u0441\u0442\u043e\u0442 \u043d\u0435 \u0454 \u0432\u043b\u0430\u0441\u043d\u0438\u043c\u0438 \u043d\u0430\u0437\u0432\u0430\u043c\u0438 (\u043b\u044e\u0434\u0438\u043d\u0430, \u0432\u0447\u0438\u0442\u0435\u043b\u044c, \u0434\u044f\u0434\u044c\u043a\u043e, \u043a\u0456\u0442 \u0442\u043e\u0449\u043e)\n2. \u0431\u0430\u0433\u0430\u0442\u043e \u0432\u043b\u0430\u0441\u043d\u0438\u0445 \u043d\u0430\u0437\u0432 \u043d\u0435 \u0454 \u0456\u0441\u0442\u043e\u0442\u0430\u043c\u0438 (\u0421\u0438\u0431\u0456\u0440, \u0412\u041a\u041f, \u0410\u043c\u0443\u0440)\n\n\u0423 StanfordNLP \u043c\u043e\u0436\u043d\u0430 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0433\u0440\u0430\u043c\u0430\u0442\u0438\u0447\u043d\u0443 \u043e\u0437\u043d\u0430\u043a\u0443 Animacy=Anim.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T10:57:12Z",
        "PR Comment": "\u0410\u043b\u0435 \u0434\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438, \u0430\u0431\u043e \u043f\u0438\u0441\u0430\u0442\u0438 \u044f\u043a\u0438\u0439\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437 \u0437 \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u0457... \u0422\u043e\u0431\u0442\u043e \u0430\u0431\u043e \u0437\u043e\u0432\u0441\u0456\u043c \u043f\u0440\u043e\u0441\u0442\u043e, \u0430\u0431\u043e \u044f\u043a\u043e\u0441\u044c \u0441\u043a\u043b\u0430\u0434\u043d\u043e. \u0422\u0430\u043a \u043d\u0430\u0447\u0435 \u043a\u0440\u0430\u0441\u0438\u0432\u0456\u0448\u0435. :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T10:58:06Z",
        "PR Comment": "\u0422\u0430\u043a, \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438. \u042f \u0442\u0430\u043c \u0434\u0430\u043b\u0456 \u043d\u0430\u043f\u0438\u0441\u0430\u0432, \u0449\u043e \u0437\u0430\u0431\u0443\u0432\u0441\u044f \u0441\u043f\u043e\u0447\u0430\u0442\u043a\u0443 \u0443 \u043b\u0435\u043a\u0446\u0456\u0457 \u043f\u043e\u0434\u0438\u0432\u0438\u0442\u0438\u0441\u044c )) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T10:58:57Z",
        "PR Comment": "\u043d\u0430\u0447\u0435 \u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T11:00:27Z",
        "PR Comment": "\u0410\u043b\u0435 \u044f \u0442\u043e\u0434\u0456 \u043d\u0435 \u0440\u043e\u0437\u0443\u043c\u0456\u044e... \u042f\u043a\u0449\u043e \u043f\u0440\u0438\u0431\u0440\u0430\u0442\u0438 \u0456 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 \u0456 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456, \u0442\u043e \u0437\u0430\u043b\u0438\u0448\u0438\u0442\u044c\u0441\u044f \u043a\u043e\u0440\u0456\u043d\u044c, \u0442\u0430\u043a? \u0427\u0438\u043c \u0442\u043e\u0434\u0456 \u0441\u0442\u0435\u043c \u0432\u0456\u0434\u0440\u0456\u0437\u043d\u044f\u0454\u0442\u044c\u0441\u044f \u0432\u0456\u0434 \u043a\u043e\u0440\u0435\u043d\u044f?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T11:47:30Z",
        "PR Comment": "\u0421\u0442\u0435\u043c - \u0442\u043e \u0456 \u0454 \u043a\u043e\u0440\u0456\u043d\u044c :) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T11:51:29Z",
        "PR Comment": "\u0414\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438 :) \u041e\u0441\u044c \u0432\u0435\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437: `\"ly\\b\"`. \u0410 \u0447\u0430\u0441 \u043e\u043f\u0440\u0430\u0446\u044e\u0432\u0430\u043d\u043d\u044f \u043a\u043e\u0440\u043f\u0443\u0441\u0443 \u0437\u043c\u0435\u043d\u0448\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T13:44:30Z",
        "PR Comment": "\u042f \u0434\u043e\u0432\u0433\u043e \u043d\u0435 \u043c\u043e\u0433\u043b\u0430 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u0442\u0438, \u0447\u043e\u043c\u0443 \u0443 \u0442\u0435\u0431\u0435 \u0442\u0430\u0456 \u0434\u0438\u0432\u043d\u0456 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u0432\u0438\u0439\u0448\u043b\u0438. \u0410\u0436 \u043e\u0441\u044c \u0432\u043e\u043d\u0430, \u0431\u0430\u0436\u0438\u043d\u0430! \u0422\u0430\u043c \u0456\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0456\u044f \u0437 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0454\u0442\u044c\u0441\u044f. \u0417\u043c\u0456\u043d\u0438 \u043d\u0430 `s.words[w.head-1]` \u0456 \u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0436\u0435\u043d\u0438 :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T14:11:19Z",
        "PR Comment": "\u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T19:20:48Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432. \u0442\u0430 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0432 \u0449\u043e \u043d\u0456\u0447\u043e\u0433\u043e \u043d\u0435 \u0437\u0430\u0433\u0443\u0431\u0438\u043b\u043e\u0441\u044f ) \u0434\u0456\u0439\u0441\u043d\u043e, \"\u0442\u0440\u043e\u0445\u0438\" \u043b\u0435\u0433\u0448\u0435 \u0441\u0442\u0430\u043b\u043e )",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:20:55Z",
        "PR Comment": "\u0426\u0435\u0439 \u0444\u0430\u0439\u043b\u0438\u043a \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u0437\u0430\u0431\u0440\u0430\u0442\u0438 \u0437 \u0446\u044c\u043e\u0433\u043e \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442\u0430. \u0414\u043b\u044f \u043a\u043e\u0436\u043d\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438 \u0442\u0440\u0435\u0431\u0430 \u0441\u0442\u0432\u043e\u0440\u044e\u0432\u0430\u0442\u0438 \u043d\u043e\u0432\u0443 \u0433\u0456\u043b\u043a\u0443 \u0437 \u043c\u0430\u0441\u0442\u0435\u0440\u0430.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:25:19Z",
        "PR Comment": "\u0422\u0430\u043a \u0456 \u043c\u0430\u0454 \u0431\u0443\u0442\u0438 :) \u0421\u0442\u0435\u043c\u043c\u0456\u043d\u0433 \u043f\u043e\u0432\u0438\u043d\u0435\u043d \u043f\u0440\u0438\u0431\u0438\u0440\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (derivational) \u0430\u0444\u0456\u043a\u0441\u0438, \u0430 \u043b\u0435\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0456\u044f \u2014 \u043b\u0438\u0448\u0435 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (inflectional).",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:25:53Z",
        "PR Comment": "\u042f \u043f\u0435\u0432\u043d\u043e \u043f\u043e\u0433\u0430\u043d\u043e \u043f\u043e\u044f\u0441\u043d\u044e\u0432\u0430\u043b\u0430, \u0431\u043e \u0446\u0456 \u0434\u0432\u0430 \u0442\u0438\u043f\u0438 \u043c\u0438 \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438 \u043d\u0430 \u0437\u0430\u043d\u044f\u0442\u0442\u0456. ;)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:47:34Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:52:28Z",
        "PR Comment": "\u041e\u0446\u044f \u043e\u0437\u043d\u0430\u043a\u0430 \u043d\u0435 \u0434\u0443\u0436\u0435 \u043f\u0456\u0434\u0445\u043e\u0434\u0438\u0442\u044c \u0434\u043b\u044f \u0432\u0438\u044f\u0432\u043b\u0435\u043d\u043d\u044f \u0456\u0441\u0442\u043e\u0442:\n1. \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043c\u0435\u043d\u043d\u0438\u043a\u0456\u0432-\u0456\u0441\u0442\u043e\u0442 \u043d\u0435 \u0454 \u0432\u043b\u0430\u0441\u043d\u0438\u043c\u0438 \u043d\u0430\u0437\u0432\u0430\u043c\u0438 (\u043b\u044e\u0434\u0438\u043d\u0430, \u0432\u0447\u0438\u0442\u0435\u043b\u044c, \u0434\u044f\u0434\u044c\u043a\u043e, \u043a\u0456\u0442 \u0442\u043e\u0449\u043e)\n2. \u0431\u0430\u0433\u0430\u0442\u043e \u0432\u043b\u0430\u0441\u043d\u0438\u0445 \u043d\u0430\u0437\u0432 \u043d\u0435 \u0454 \u0456\u0441\u0442\u043e\u0442\u0430\u043c\u0438 (\u0421\u0438\u0431\u0456\u0440, \u0412\u041a\u041f, \u0410\u043c\u0443\u0440)\n\n\u0423 StanfordNLP \u043c\u043e\u0436\u043d\u0430 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0433\u0440\u0430\u043c\u0430\u0442\u0438\u0447\u043d\u0443 \u043e\u0437\u043d\u0430\u043a\u0443 Animacy=Anim.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T10:57:12Z",
        "PR Comment": "\u0410\u043b\u0435 \u0434\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438, \u0430\u0431\u043e \u043f\u0438\u0441\u0430\u0442\u0438 \u044f\u043a\u0438\u0439\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437 \u0437 \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u0457... \u0422\u043e\u0431\u0442\u043e \u0430\u0431\u043e \u0437\u043e\u0432\u0441\u0456\u043c \u043f\u0440\u043e\u0441\u0442\u043e, \u0430\u0431\u043e \u044f\u043a\u043e\u0441\u044c \u0441\u043a\u043b\u0430\u0434\u043d\u043e. \u0422\u0430\u043a \u043d\u0430\u0447\u0435 \u043a\u0440\u0430\u0441\u0438\u0432\u0456\u0448\u0435. :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T10:58:06Z",
        "PR Comment": "\u0422\u0430\u043a, \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438. \u042f \u0442\u0430\u043c \u0434\u0430\u043b\u0456 \u043d\u0430\u043f\u0438\u0441\u0430\u0432, \u0449\u043e \u0437\u0430\u0431\u0443\u0432\u0441\u044f \u0441\u043f\u043e\u0447\u0430\u0442\u043a\u0443 \u0443 \u043b\u0435\u043a\u0446\u0456\u0457 \u043f\u043e\u0434\u0438\u0432\u0438\u0442\u0438\u0441\u044c )) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T10:58:57Z",
        "PR Comment": "\u043d\u0430\u0447\u0435 \u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T11:00:27Z",
        "PR Comment": "\u0410\u043b\u0435 \u044f \u0442\u043e\u0434\u0456 \u043d\u0435 \u0440\u043e\u0437\u0443\u043c\u0456\u044e... \u042f\u043a\u0449\u043e \u043f\u0440\u0438\u0431\u0440\u0430\u0442\u0438 \u0456 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 \u0456 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456, \u0442\u043e \u0437\u0430\u043b\u0438\u0448\u0438\u0442\u044c\u0441\u044f \u043a\u043e\u0440\u0456\u043d\u044c, \u0442\u0430\u043a? \u0427\u0438\u043c \u0442\u043e\u0434\u0456 \u0441\u0442\u0435\u043c \u0432\u0456\u0434\u0440\u0456\u0437\u043d\u044f\u0454\u0442\u044c\u0441\u044f \u0432\u0456\u0434 \u043a\u043e\u0440\u0435\u043d\u044f?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T11:47:30Z",
        "PR Comment": "\u0421\u0442\u0435\u043c - \u0442\u043e \u0456 \u0454 \u043a\u043e\u0440\u0456\u043d\u044c :) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T11:51:29Z",
        "PR Comment": "\u0414\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438 :) \u041e\u0441\u044c \u0432\u0435\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437: `\"ly\\b\"`. \u0410 \u0447\u0430\u0441 \u043e\u043f\u0440\u0430\u0446\u044e\u0432\u0430\u043d\u043d\u044f \u043a\u043e\u0440\u043f\u0443\u0441\u0443 \u0437\u043c\u0435\u043d\u0448\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T13:44:30Z",
        "PR Comment": "\u042f \u0434\u043e\u0432\u0433\u043e \u043d\u0435 \u043c\u043e\u0433\u043b\u0430 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u0442\u0438, \u0447\u043e\u043c\u0443 \u0443 \u0442\u0435\u0431\u0435 \u0442\u0430\u0456 \u0434\u0438\u0432\u043d\u0456 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u0432\u0438\u0439\u0448\u043b\u0438. \u0410\u0436 \u043e\u0441\u044c \u0432\u043e\u043d\u0430, \u0431\u0430\u0436\u0438\u043d\u0430! \u0422\u0430\u043c \u0456\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0456\u044f \u0437 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0454\u0442\u044c\u0441\u044f. \u0417\u043c\u0456\u043d\u0438 \u043d\u0430 `s.words[w.head-1]` \u0456 \u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0436\u0435\u043d\u0438 :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T14:11:19Z",
        "PR Comment": "\u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T19:20:48Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432. \u0442\u0430 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0432 \u0449\u043e \u043d\u0456\u0447\u043e\u0433\u043e \u043d\u0435 \u0437\u0430\u0433\u0443\u0431\u0438\u043b\u043e\u0441\u044f ) \u0434\u0456\u0439\u0441\u043d\u043e, \"\u0442\u0440\u043e\u0445\u0438\" \u043b\u0435\u0433\u0448\u0435 \u0441\u0442\u0430\u043b\u043e )",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:20:55Z",
        "PR Comment": "\u0426\u0435\u0439 \u0444\u0430\u0439\u043b\u0438\u043a \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u0437\u0430\u0431\u0440\u0430\u0442\u0438 \u0437 \u0446\u044c\u043e\u0433\u043e \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442\u0430. \u0414\u043b\u044f \u043a\u043e\u0436\u043d\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438 \u0442\u0440\u0435\u0431\u0430 \u0441\u0442\u0432\u043e\u0440\u044e\u0432\u0430\u0442\u0438 \u043d\u043e\u0432\u0443 \u0433\u0456\u043b\u043a\u0443 \u0437 \u043c\u0430\u0441\u0442\u0435\u0440\u0430.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:25:19Z",
        "PR Comment": "\u0422\u0430\u043a \u0456 \u043c\u0430\u0454 \u0431\u0443\u0442\u0438 :) \u0421\u0442\u0435\u043c\u043c\u0456\u043d\u0433 \u043f\u043e\u0432\u0438\u043d\u0435\u043d \u043f\u0440\u0438\u0431\u0438\u0440\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (derivational) \u0430\u0444\u0456\u043a\u0441\u0438, \u0430 \u043b\u0435\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0456\u044f \u2014 \u043b\u0438\u0448\u0435 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (inflectional).",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:25:53Z",
        "PR Comment": "\u042f \u043f\u0435\u0432\u043d\u043e \u043f\u043e\u0433\u0430\u043d\u043e \u043f\u043e\u044f\u0441\u043d\u044e\u0432\u0430\u043b\u0430, \u0431\u043e \u0446\u0456 \u0434\u0432\u0430 \u0442\u0438\u043f\u0438 \u043c\u0438 \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438 \u043d\u0430 \u0437\u0430\u043d\u044f\u0442\u0442\u0456. ;)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:47:34Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T00:52:28Z",
        "PR Comment": "\u041e\u0446\u044f \u043e\u0437\u043d\u0430\u043a\u0430 \u043d\u0435 \u0434\u0443\u0436\u0435 \u043f\u0456\u0434\u0445\u043e\u0434\u0438\u0442\u044c \u0434\u043b\u044f \u0432\u0438\u044f\u0432\u043b\u0435\u043d\u043d\u044f \u0456\u0441\u0442\u043e\u0442:\n1. \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043c\u0435\u043d\u043d\u0438\u043a\u0456\u0432-\u0456\u0441\u0442\u043e\u0442 \u043d\u0435 \u0454 \u0432\u043b\u0430\u0441\u043d\u0438\u043c\u0438 \u043d\u0430\u0437\u0432\u0430\u043c\u0438 (\u043b\u044e\u0434\u0438\u043d\u0430, \u0432\u0447\u0438\u0442\u0435\u043b\u044c, \u0434\u044f\u0434\u044c\u043a\u043e, \u043a\u0456\u0442 \u0442\u043e\u0449\u043e)\n2. \u0431\u0430\u0433\u0430\u0442\u043e \u0432\u043b\u0430\u0441\u043d\u0438\u0445 \u043d\u0430\u0437\u0432 \u043d\u0435 \u0454 \u0456\u0441\u0442\u043e\u0442\u0430\u043c\u0438 (\u0421\u0438\u0431\u0456\u0440, \u0412\u041a\u041f, \u0410\u043c\u0443\u0440)\n\n\u0423 StanfordNLP \u043c\u043e\u0436\u043d\u0430 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0433\u0440\u0430\u043c\u0430\u0442\u0438\u0447\u043d\u0443 \u043e\u0437\u043d\u0430\u043a\u0443 Animacy=Anim.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T10:57:12Z",
        "PR Comment": "\u0410\u043b\u0435 \u0434\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438, \u0430\u0431\u043e \u043f\u0438\u0441\u0430\u0442\u0438 \u044f\u043a\u0438\u0439\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437 \u0437 \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u0457... \u0422\u043e\u0431\u0442\u043e \u0430\u0431\u043e \u0437\u043e\u0432\u0441\u0456\u043c \u043f\u0440\u043e\u0441\u0442\u043e, \u0430\u0431\u043e \u044f\u043a\u043e\u0441\u044c \u0441\u043a\u043b\u0430\u0434\u043d\u043e. \u0422\u0430\u043a \u043d\u0430\u0447\u0435 \u043a\u0440\u0430\u0441\u0438\u0432\u0456\u0448\u0435. :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T10:58:06Z",
        "PR Comment": "\u0422\u0430\u043a, \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438. \u042f \u0442\u0430\u043c \u0434\u0430\u043b\u0456 \u043d\u0430\u043f\u0438\u0441\u0430\u0432, \u0449\u043e \u0437\u0430\u0431\u0443\u0432\u0441\u044f \u0441\u043f\u043e\u0447\u0430\u0442\u043a\u0443 \u0443 \u043b\u0435\u043a\u0446\u0456\u0457 \u043f\u043e\u0434\u0438\u0432\u0438\u0442\u0438\u0441\u044c )) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T10:58:57Z",
        "PR Comment": "\u043d\u0430\u0447\u0435 \u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T11:00:27Z",
        "PR Comment": "\u0410\u043b\u0435 \u044f \u0442\u043e\u0434\u0456 \u043d\u0435 \u0440\u043e\u0437\u0443\u043c\u0456\u044e... \u042f\u043a\u0449\u043e \u043f\u0440\u0438\u0431\u0440\u0430\u0442\u0438 \u0456 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 \u0456 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456, \u0442\u043e \u0437\u0430\u043b\u0438\u0448\u0438\u0442\u044c\u0441\u044f \u043a\u043e\u0440\u0456\u043d\u044c, \u0442\u0430\u043a? \u0427\u0438\u043c \u0442\u043e\u0434\u0456 \u0441\u0442\u0435\u043c \u0432\u0456\u0434\u0440\u0456\u0437\u043d\u044f\u0454\u0442\u044c\u0441\u044f \u0432\u0456\u0434 \u043a\u043e\u0440\u0435\u043d\u044f?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T11:47:30Z",
        "PR Comment": "\u0421\u0442\u0435\u043c - \u0442\u043e \u0456 \u0454 \u043a\u043e\u0440\u0456\u043d\u044c :) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T11:51:29Z",
        "PR Comment": "\u0414\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438 :) \u041e\u0441\u044c \u0432\u0435\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437: `\"ly\\b\"`. \u0410 \u0447\u0430\u0441 \u043e\u043f\u0440\u0430\u0446\u044e\u0432\u0430\u043d\u043d\u044f \u043a\u043e\u0440\u043f\u0443\u0441\u0443 \u0437\u043c\u0435\u043d\u0448\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T13:44:30Z",
        "PR Comment": "\u042f \u0434\u043e\u0432\u0433\u043e \u043d\u0435 \u043c\u043e\u0433\u043b\u0430 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u0442\u0438, \u0447\u043e\u043c\u0443 \u0443 \u0442\u0435\u0431\u0435 \u0442\u0430\u0456 \u0434\u0438\u0432\u043d\u0456 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u0432\u0438\u0439\u0448\u043b\u0438. \u0410\u0436 \u043e\u0441\u044c \u0432\u043e\u043d\u0430, \u0431\u0430\u0436\u0438\u043d\u0430! \u0422\u0430\u043c \u0456\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0456\u044f \u0437 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0454\u0442\u044c\u0441\u044f. \u0417\u043c\u0456\u043d\u0438 \u043d\u0430 `s.words[w.head-1]` \u0456 \u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0436\u0435\u043d\u0438 :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T14:11:19Z",
        "PR Comment": "\u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/2.1.headlines.py",
        "Creation Date": "2020-03-28T19:20:48Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432. \u0442\u0430 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0432 \u0449\u043e \u043d\u0456\u0447\u043e\u0433\u043e \u043d\u0435 \u0437\u0430\u0433\u0443\u0431\u0438\u043b\u043e\u0441\u044f ) \u0434\u0456\u0439\u0441\u043d\u043e, \"\u0442\u0440\u043e\u0445\u0438\" \u043b\u0435\u0433\u0448\u0435 \u0441\u0442\u0430\u043b\u043e )",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DmytroMindra/06-language-as-sequence/src/03-ngram-builder.py",
        "Creation Date": "2020-04-25T13:17:10Z",
        "PR Comment": "\u043a\u0430\u0436\u0443\u0442\u044c, \u0449\u043e \u043d\u0435 \u0433\u0430\u0440\u043d\u043e \u043f\u043e\u0454\u0434\u043d\u0443\u0432\u0430\u0442\u0438 \u0440\u0456\u0437\u043d\u0456 case-\u0441\u0442\u0438\u043b\u0456: camelCase \u0442\u0430 underscore_case ;)",
        "PR/Issue Number": "80"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DmytroMindra/06-language-as-sequence/src/03-ngram-builder.py",
        "Creation Date": "2020-05-30T09:26:41Z",
        "PR Comment": "`cross_val_score` \u0437\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u0432\u0438\u0434\u0430\u0454 \u0442\u043e\u0431\u0456 `accuracy`, \u0449\u043e \u043d\u0456\u0447\u043e\u0433\u043e \u043d\u0435 \u0433\u043e\u0432\u043e\u0440\u0438\u0442\u044c \u043f\u0440\u043e \u044f\u043a\u0456\u0441\u0442\u044c \u0432\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0446\u0456\u043b\u044c\u043e\u0432\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0443. \u0422\u0443\u0442 \u0432\u0430\u0440\u0442\u043e \u0431\u0443\u043b\u043e \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 `cross_validate` \u0456 \u043c\u0456\u0440\u044f\u0442\u0438 \u0445\u043e\u0447\u0430 \u0431 \u043f\u043e `f1_macro`.",
        "PR/Issue Number": "80"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DmytroMindra/06-language-as-sequence/src/03-ngram-builder.py",
        "Creation Date": "2020-05-30T09:30:41Z",
        "PR Comment": "\u0411\u0430\u0447\u0443, \u0449\u043e CRF \u043d\u0456\u0447\u043e\u0433\u043e \u043d\u0435 \u043d\u0430\u0432\u0447\u0438\u0432\u0441\u044f. \u041c\u0430\u044e \u043f\u0456\u0434\u043e\u0437\u0440\u0443, \u0449\u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0443 \u0432\u0445\u0456\u0434\u043d\u0438\u0445 \u0434\u0430\u043d\u0438\u0445. \u042f\u043a\u0449\u043e \u0434\u043b\u044f \u043b\u043e\u0433\u0440\u0435\u0433\u0440\u0435\u0441\u0456\u0457 \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u0438 \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0437\u043d\u0430\u043a \u0456 \u0441\u043f\u0438\u0441\u043e\u043a \u043c\u0456\u0442\u043e\u043a, \u0442\u043e CRF \u0432\u0430\u0440\u0442\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u0438 \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043f\u0438\u0441\u043a\u0456\u0432 \u043e\u0437\u043d\u0430\u043a \u0456 \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043f\u0438\u0441\u043a\u0456\u0432 \u043c\u0456\u0442\u043e\u043a, \u0434\u0435 \u043a\u043e\u0436\u0435\u043d \u0432\u043d\u0443\u0442\u0440\u0456\u0448\u043d\u0456\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u2014 \u0446\u0435 \u043e\u043a\u0437\u0435\u043c\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f. CRF \u0432\u0447\u0438\u0442\u044c\u0441\u044f \u043f\u0435\u0440\u0435\u0434\u0431\u0430\u0447\u0430\u0442\u0438 \u043f\u043e\u0432\u043d\u0443 \u043f\u043e\u0441\u043b\u0456\u0434\u043e\u0432\u043d\u0456\u0441\u0442\u044c (\u044f\u043a HMM).",
        "PR/Issue Number": "80"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DmytroMindra/06-language-as-sequence/src/03-ngram-builder.py",
        "Creation Date": "2020-04-25T13:49:11Z",
        "PR Comment": "\u043a\u043e\u0440\u043e\u0442\u0448\u0435, \u0431\u0435\u0437 jupyter-\u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0443 \u0432\u0441\u0435 \u043d\u0430\u0431\u0430\u0433\u0430\u0442\u043e \u0441\u043a\u043b\u0430\u0434\u043d\u0456\u0448\u0435 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u0442\u0438 :(",
        "PR/Issue Number": "80"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DmytroMindra/06-language-as-sequence/src/03-ngram-builder.py",
        "Creation Date": "2020-04-25T13:56:03Z",
        "PR Comment": "\u0421\u043e\u0433\u043b\u0430\u0441\u0435\u043d. \u042f \u0434\u0443\u043c\u0430\u044e, \u0447\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e, \u0435\u0441\u043b\u0438 \u044f \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0443 \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u044b \u0432 jupyter \u043d\u043e\u0443\u0442\u0431\u0443\u043a \u0438   \u0434\u043e\u0431\u0430\u0432\u043b\u044e sequence-\u043c\u043e\u0434\u0435\u043b\u044c: HMM, CRF.  \u0417\u0430\u0432\u0442\u0440\u0430 \u0432 \u0442\u0435\u0447\u0435\u043d\u0438\u0435 \u0434\u043d\u044f \u044f \u0441\u043c\u043e\u0433\u0443 \u0432\u0441\u0435 \u0438\u0441\u043f\u0440\u0430\u0432\u0438\u0442\u044c.",
        "PR/Issue Number": "80"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DmytroMindra/06-language-as-sequence/src/03-ngram-builder.py",
        "Creation Date": "2020-05-09T06:45:31Z",
        "PR Comment": "@DmytroMindra, \u0431\u0443\u0434\u0435\u0448 \u0434\u043e\u0434\u0430\u0432\u0430\u0442\u0438 \u0449\u0435 \u043e\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044f \u0447\u0438 \u0444\u043e\u043a\u0443\u0441\u0443\u0454\u043c\u043e\u0441\u044c \u043d\u0430 \u0456\u043d\u0448\u0438\u0445 \u0437\u0430\u0434\u0430\u0447\u0430\u0445?",
        "PR/Issue Number": "80"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DmytroMindra/06-language-as-sequence/src/03-ngram-builder.py",
        "Creation Date": "2020-05-09T15:06:44Z",
        "PR Comment": "@mariana-scorp, \u044f \u0445\u043e\u0447\u0443 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c HMM \u0438 CRF. \u0423 \u043c\u0435\u043d\u044f \u0443\u0436\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\u044b \u043d\u0430 Google Drive. \u041e\u0442\u0441\u0430\u043b\u043e\u0441\u044c \u0441\u043e\u0432\u0441\u0435\u043c \u0447\u0443\u0442\u044c-\u0447\u0443\u0442\u044c. \u041e\u0431\u0438\u0434\u043d\u043e \u0443\u0436\u0435 \u0431\u0440\u043e\u0441\u0430\u0442\u044c.",
        "PR/Issue Number": "80"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DmytroMindra/06-language-as-sequence/src/03-ngram-builder.py",
        "Creation Date": "2020-05-26T17:53:41Z",
        "PR Comment": "\u0414\u043e\u0431\u0430\u0432\u0438\u043b CRF, Summary \u0438 \u043f\u0435\u0440\u0435\u0434\u0435\u043b\u0430\u043b \u0440\u0430\u0431\u043e\u0442\u0443 \u0432 Jupyter Notebook. ",
        "PR/Issue Number": "80"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/en_collocations.py",
        "Creation Date": "2020-03-27T22:33:57Z",
        "PR Comment": "\u041e\u0442\u0443\u0442 \u0432\u0430\u0440\u0442\u043e \u0431\u0443\u043b\u043e \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u0430, \u044f\u043a\u0456 \u0432\u0436\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0456 \u0432\u0435\u043b\u0438\u043a\u0438\u043c\u0438 \u043b\u0456\u0442\u0435\u0440\u0430\u043c\u0438 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, USA) \u0442\u0430 \"n't\" (\u044f\u043a\u0435 \u0442\u0435\u0433\u0443\u0454\u0442\u044c\u0441\u044f \u044f\u043a \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a).",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/en_collocations.py",
        "Creation Date": "2020-03-27T22:36:53Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/en_collocations.py",
        "Creation Date": "2020-03-27T22:38:38Z",
        "PR Comment": "\u0429\u043e\u0431 \u043d\u0435 \u0440\u043e\u0431\u0438\u0442\u0438 \u0434\u0432\u0430 \u043f\u0440\u043e\u0445\u043e\u0434\u0438 \u043f\u043e \u0442\u043e\u043a\u0435\u043d\u0430\u0445, \u043c\u043e\u0436\u043d\u0430 \u0430\u0431\u043e \u0437\u0440\u043e\u0431\u0438\u0442\u0438 \u0446\u0438\u043a\u043b \u043f\u043e \u0434\u0456\u0442\u044f\u0445 \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430 (`.children`), \u0430\u0431\u043e \u0448\u0443\u043a\u0430\u0442\u0438 \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a, \u0430 \u0442\u043e\u0434\u0456 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0442\u0438, \u0447\u0438 \u0439\u043e\u0433\u043e \u0431\u0430\u0442\u044c\u043a\u043e\u043c \u0454 \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u0435 \u043d\u0430\u043c \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u043e.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/en_collocations.py",
        "Creation Date": "2020-03-27T22:43:30Z",
        "PR Comment": "\u0422\u0443\u0442 \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043b\u0435\u043c\u0438 (`.normal_form`), \u0431\u043e \u0456\u043d\u0430\u043a\u0448\u0435 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u043f\u043e\u0442\u0440\u0430\u043f\u043b\u044f\u0454 \u0442\u0435 \u0441\u0430\u043c\u0435 \u0441\u043b\u043e\u0432\u043e\u0441\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044f \u043f\u043e \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432. \u0423 \u0442\u0432\u043e\u0457\u0445 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u0445: _\u0432\u0435\u043b\u0438\u043a\u0438\u0439 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a, \u0432\u0435\u043b\u0438\u043a\u0438\u043c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u043e\u043c, \u0432\u0435\u043b\u0438\u043a\u043e\u043c\u0443 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u043e\u0432\u0456, \u0432\u0435\u043b\u0438\u043a\u043e\u0433\u043e \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u0430._",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/en_collocations.py",
        "Creation Date": "2020-03-27T22:18:38Z",
        "PR Comment": "\u0412\u0438\u0434\u0430\u043b\u0438, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `data/`, \u0449\u043e\u0431 \u043d\u0435 \u0440\u043e\u0437\u0434\u0443\u0432\u0430\u0442\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0456\u0439.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/en_collocations.py",
        "Creation Date": "2020-03-27T22:33:57Z",
        "PR Comment": "\u041e\u0442\u0443\u0442 \u0432\u0430\u0440\u0442\u043e \u0431\u0443\u043b\u043e \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u0430, \u044f\u043a\u0456 \u0432\u0436\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0456 \u0432\u0435\u043b\u0438\u043a\u0438\u043c\u0438 \u043b\u0456\u0442\u0435\u0440\u0430\u043c\u0438 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, USA) \u0442\u0430 \"n't\" (\u044f\u043a\u0435 \u0442\u0435\u0433\u0443\u0454\u0442\u044c\u0441\u044f \u044f\u043a \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a).",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/en_collocations.py",
        "Creation Date": "2020-03-27T22:36:53Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/en_collocations.py",
        "Creation Date": "2020-03-27T22:38:38Z",
        "PR Comment": "\u0429\u043e\u0431 \u043d\u0435 \u0440\u043e\u0431\u0438\u0442\u0438 \u0434\u0432\u0430 \u043f\u0440\u043e\u0445\u043e\u0434\u0438 \u043f\u043e \u0442\u043e\u043a\u0435\u043d\u0430\u0445, \u043c\u043e\u0436\u043d\u0430 \u0430\u0431\u043e \u0437\u0440\u043e\u0431\u0438\u0442\u0438 \u0446\u0438\u043a\u043b \u043f\u043e \u0434\u0456\u0442\u044f\u0445 \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430 (`.children`), \u0430\u0431\u043e \u0448\u0443\u043a\u0430\u0442\u0438 \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a, \u0430 \u0442\u043e\u0434\u0456 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0442\u0438, \u0447\u0438 \u0439\u043e\u0433\u043e \u0431\u0430\u0442\u044c\u043a\u043e\u043c \u0454 \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u0435 \u043d\u0430\u043c \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u043e.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/en_collocations.py",
        "Creation Date": "2020-03-27T22:43:30Z",
        "PR Comment": "\u0422\u0443\u0442 \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043b\u0435\u043c\u0438 (`.normal_form`), \u0431\u043e \u0456\u043d\u0430\u043a\u0448\u0435 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u043f\u043e\u0442\u0440\u0430\u043f\u043b\u044f\u0454 \u0442\u0435 \u0441\u0430\u043c\u0435 \u0441\u043b\u043e\u0432\u043e\u0441\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044f \u043f\u043e \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432. \u0423 \u0442\u0432\u043e\u0457\u0445 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u0445: _\u0432\u0435\u043b\u0438\u043a\u0438\u0439 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a, \u0432\u0435\u043b\u0438\u043a\u0438\u043c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u043e\u043c, \u0432\u0435\u043b\u0438\u043a\u043e\u043c\u0443 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u043e\u0432\u0456, \u0432\u0435\u043b\u0438\u043a\u043e\u0433\u043e \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u0430._",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/en_collocations.py",
        "Creation Date": "2020-03-27T22:18:38Z",
        "PR Comment": "\u0412\u0438\u0434\u0430\u043b\u0438, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `data/`, \u0449\u043e\u0431 \u043d\u0435 \u0440\u043e\u0437\u0434\u0443\u0432\u0430\u0442\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0456\u0439.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/en_collocations.py",
        "Creation Date": "2020-03-27T22:33:57Z",
        "PR Comment": "\u041e\u0442\u0443\u0442 \u0432\u0430\u0440\u0442\u043e \u0431\u0443\u043b\u043e \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u0430, \u044f\u043a\u0456 \u0432\u0436\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0456 \u0432\u0435\u043b\u0438\u043a\u0438\u043c\u0438 \u043b\u0456\u0442\u0435\u0440\u0430\u043c\u0438 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, USA) \u0442\u0430 \"n't\" (\u044f\u043a\u0435 \u0442\u0435\u0433\u0443\u0454\u0442\u044c\u0441\u044f \u044f\u043a \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a).",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/en_collocations.py",
        "Creation Date": "2020-03-27T22:36:53Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/en_collocations.py",
        "Creation Date": "2020-03-27T22:38:38Z",
        "PR Comment": "\u0429\u043e\u0431 \u043d\u0435 \u0440\u043e\u0431\u0438\u0442\u0438 \u0434\u0432\u0430 \u043f\u0440\u043e\u0445\u043e\u0434\u0438 \u043f\u043e \u0442\u043e\u043a\u0435\u043d\u0430\u0445, \u043c\u043e\u0436\u043d\u0430 \u0430\u0431\u043e \u0437\u0440\u043e\u0431\u0438\u0442\u0438 \u0446\u0438\u043a\u043b \u043f\u043e \u0434\u0456\u0442\u044f\u0445 \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430 (`.children`), \u0430\u0431\u043e \u0448\u0443\u043a\u0430\u0442\u0438 \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a, \u0430 \u0442\u043e\u0434\u0456 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0442\u0438, \u0447\u0438 \u0439\u043e\u0433\u043e \u0431\u0430\u0442\u044c\u043a\u043e\u043c \u0454 \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u0435 \u043d\u0430\u043c \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u043e.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/en_collocations.py",
        "Creation Date": "2020-03-27T22:43:30Z",
        "PR Comment": "\u0422\u0443\u0442 \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043b\u0435\u043c\u0438 (`.normal_form`), \u0431\u043e \u0456\u043d\u0430\u043a\u0448\u0435 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u043f\u043e\u0442\u0440\u0430\u043f\u043b\u044f\u0454 \u0442\u0435 \u0441\u0430\u043c\u0435 \u0441\u043b\u043e\u0432\u043e\u0441\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044f \u043f\u043e \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432. \u0423 \u0442\u0432\u043e\u0457\u0445 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u0445: _\u0432\u0435\u043b\u0438\u043a\u0438\u0439 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a, \u0432\u0435\u043b\u0438\u043a\u0438\u043c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u043e\u043c, \u0432\u0435\u043b\u0438\u043a\u043e\u043c\u0443 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u043e\u0432\u0456, \u0432\u0435\u043b\u0438\u043a\u043e\u0433\u043e \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u0430._",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/en_collocations.py",
        "Creation Date": "2020-03-27T22:18:38Z",
        "PR Comment": "\u0412\u0438\u0434\u0430\u043b\u0438, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `data/`, \u0449\u043e\u0431 \u043d\u0435 \u0440\u043e\u0437\u0434\u0443\u0432\u0430\u0442\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0456\u0439.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T00:20:55Z",
        "PR Comment": "\u0426\u0435\u0439 \u0444\u0430\u0439\u043b\u0438\u043a \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u0437\u0430\u0431\u0440\u0430\u0442\u0438 \u0437 \u0446\u044c\u043e\u0433\u043e \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442\u0430. \u0414\u043b\u044f \u043a\u043e\u0436\u043d\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438 \u0442\u0440\u0435\u0431\u0430 \u0441\u0442\u0432\u043e\u0440\u044e\u0432\u0430\u0442\u0438 \u043d\u043e\u0432\u0443 \u0433\u0456\u043b\u043a\u0443 \u0437 \u043c\u0430\u0441\u0442\u0435\u0440\u0430.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T00:25:19Z",
        "PR Comment": "\u0422\u0430\u043a \u0456 \u043c\u0430\u0454 \u0431\u0443\u0442\u0438 :) \u0421\u0442\u0435\u043c\u043c\u0456\u043d\u0433 \u043f\u043e\u0432\u0438\u043d\u0435\u043d \u043f\u0440\u0438\u0431\u0438\u0440\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (derivational) \u0430\u0444\u0456\u043a\u0441\u0438, \u0430 \u043b\u0435\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0456\u044f \u2014 \u043b\u0438\u0448\u0435 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (inflectional).",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T00:25:53Z",
        "PR Comment": "\u042f \u043f\u0435\u0432\u043d\u043e \u043f\u043e\u0433\u0430\u043d\u043e \u043f\u043e\u044f\u0441\u043d\u044e\u0432\u0430\u043b\u0430, \u0431\u043e \u0446\u0456 \u0434\u0432\u0430 \u0442\u0438\u043f\u0438 \u043c\u0438 \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438 \u043d\u0430 \u0437\u0430\u043d\u044f\u0442\u0442\u0456. ;)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T00:47:34Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T00:52:28Z",
        "PR Comment": "\u041e\u0446\u044f \u043e\u0437\u043d\u0430\u043a\u0430 \u043d\u0435 \u0434\u0443\u0436\u0435 \u043f\u0456\u0434\u0445\u043e\u0434\u0438\u0442\u044c \u0434\u043b\u044f \u0432\u0438\u044f\u0432\u043b\u0435\u043d\u043d\u044f \u0456\u0441\u0442\u043e\u0442:\n1. \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043c\u0435\u043d\u043d\u0438\u043a\u0456\u0432-\u0456\u0441\u0442\u043e\u0442 \u043d\u0435 \u0454 \u0432\u043b\u0430\u0441\u043d\u0438\u043c\u0438 \u043d\u0430\u0437\u0432\u0430\u043c\u0438 (\u043b\u044e\u0434\u0438\u043d\u0430, \u0432\u0447\u0438\u0442\u0435\u043b\u044c, \u0434\u044f\u0434\u044c\u043a\u043e, \u043a\u0456\u0442 \u0442\u043e\u0449\u043e)\n2. \u0431\u0430\u0433\u0430\u0442\u043e \u0432\u043b\u0430\u0441\u043d\u0438\u0445 \u043d\u0430\u0437\u0432 \u043d\u0435 \u0454 \u0456\u0441\u0442\u043e\u0442\u0430\u043c\u0438 (\u0421\u0438\u0431\u0456\u0440, \u0412\u041a\u041f, \u0410\u043c\u0443\u0440)\n\n\u0423 StanfordNLP \u043c\u043e\u0436\u043d\u0430 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0433\u0440\u0430\u043c\u0430\u0442\u0438\u0447\u043d\u0443 \u043e\u0437\u043d\u0430\u043a\u0443 Animacy=Anim.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T10:57:12Z",
        "PR Comment": "\u0410\u043b\u0435 \u0434\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438, \u0430\u0431\u043e \u043f\u0438\u0441\u0430\u0442\u0438 \u044f\u043a\u0438\u0439\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437 \u0437 \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u0457... \u0422\u043e\u0431\u0442\u043e \u0430\u0431\u043e \u0437\u043e\u0432\u0441\u0456\u043c \u043f\u0440\u043e\u0441\u0442\u043e, \u0430\u0431\u043e \u044f\u043a\u043e\u0441\u044c \u0441\u043a\u043b\u0430\u0434\u043d\u043e. \u0422\u0430\u043a \u043d\u0430\u0447\u0435 \u043a\u0440\u0430\u0441\u0438\u0432\u0456\u0448\u0435. :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T10:58:06Z",
        "PR Comment": "\u0422\u0430\u043a, \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438. \u042f \u0442\u0430\u043c \u0434\u0430\u043b\u0456 \u043d\u0430\u043f\u0438\u0441\u0430\u0432, \u0449\u043e \u0437\u0430\u0431\u0443\u0432\u0441\u044f \u0441\u043f\u043e\u0447\u0430\u0442\u043a\u0443 \u0443 \u043b\u0435\u043a\u0446\u0456\u0457 \u043f\u043e\u0434\u0438\u0432\u0438\u0442\u0438\u0441\u044c )) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T10:58:57Z",
        "PR Comment": "\u043d\u0430\u0447\u0435 \u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T11:00:27Z",
        "PR Comment": "\u0410\u043b\u0435 \u044f \u0442\u043e\u0434\u0456 \u043d\u0435 \u0440\u043e\u0437\u0443\u043c\u0456\u044e... \u042f\u043a\u0449\u043e \u043f\u0440\u0438\u0431\u0440\u0430\u0442\u0438 \u0456 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 \u0456 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456, \u0442\u043e \u0437\u0430\u043b\u0438\u0448\u0438\u0442\u044c\u0441\u044f \u043a\u043e\u0440\u0456\u043d\u044c, \u0442\u0430\u043a? \u0427\u0438\u043c \u0442\u043e\u0434\u0456 \u0441\u0442\u0435\u043c \u0432\u0456\u0434\u0440\u0456\u0437\u043d\u044f\u0454\u0442\u044c\u0441\u044f \u0432\u0456\u0434 \u043a\u043e\u0440\u0435\u043d\u044f?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T11:47:30Z",
        "PR Comment": "\u0421\u0442\u0435\u043c - \u0442\u043e \u0456 \u0454 \u043a\u043e\u0440\u0456\u043d\u044c :) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T11:51:29Z",
        "PR Comment": "\u0414\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438 :) \u041e\u0441\u044c \u0432\u0435\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437: `\"ly\\b\"`. \u0410 \u0447\u0430\u0441 \u043e\u043f\u0440\u0430\u0446\u044e\u0432\u0430\u043d\u043d\u044f \u043a\u043e\u0440\u043f\u0443\u0441\u0443 \u0437\u043c\u0435\u043d\u0448\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T13:44:30Z",
        "PR Comment": "\u042f \u0434\u043e\u0432\u0433\u043e \u043d\u0435 \u043c\u043e\u0433\u043b\u0430 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u0442\u0438, \u0447\u043e\u043c\u0443 \u0443 \u0442\u0435\u0431\u0435 \u0442\u0430\u0456 \u0434\u0438\u0432\u043d\u0456 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u0432\u0438\u0439\u0448\u043b\u0438. \u0410\u0436 \u043e\u0441\u044c \u0432\u043e\u043d\u0430, \u0431\u0430\u0436\u0438\u043d\u0430! \u0422\u0430\u043c \u0456\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0456\u044f \u0437 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0454\u0442\u044c\u0441\u044f. \u0417\u043c\u0456\u043d\u0438 \u043d\u0430 `s.words[w.head-1]` \u0456 \u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0436\u0435\u043d\u0438 :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T14:11:19Z",
        "PR Comment": "\u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T19:20:48Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432. \u0442\u0430 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0432 \u0449\u043e \u043d\u0456\u0447\u043e\u0433\u043e \u043d\u0435 \u0437\u0430\u0433\u0443\u0431\u0438\u043b\u043e\u0441\u044f ) \u0434\u0456\u0439\u0441\u043d\u043e, \"\u0442\u0440\u043e\u0445\u0438\" \u043b\u0435\u0433\u0448\u0435 \u0441\u0442\u0430\u043b\u043e )",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T00:20:55Z",
        "PR Comment": "\u0426\u0435\u0439 \u0444\u0430\u0439\u043b\u0438\u043a \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u0437\u0430\u0431\u0440\u0430\u0442\u0438 \u0437 \u0446\u044c\u043e\u0433\u043e \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442\u0430. \u0414\u043b\u044f \u043a\u043e\u0436\u043d\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438 \u0442\u0440\u0435\u0431\u0430 \u0441\u0442\u0432\u043e\u0440\u044e\u0432\u0430\u0442\u0438 \u043d\u043e\u0432\u0443 \u0433\u0456\u043b\u043a\u0443 \u0437 \u043c\u0430\u0441\u0442\u0435\u0440\u0430.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T00:25:19Z",
        "PR Comment": "\u0422\u0430\u043a \u0456 \u043c\u0430\u0454 \u0431\u0443\u0442\u0438 :) \u0421\u0442\u0435\u043c\u043c\u0456\u043d\u0433 \u043f\u043e\u0432\u0438\u043d\u0435\u043d \u043f\u0440\u0438\u0431\u0438\u0440\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (derivational) \u0430\u0444\u0456\u043a\u0441\u0438, \u0430 \u043b\u0435\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0456\u044f \u2014 \u043b\u0438\u0448\u0435 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (inflectional).",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T00:25:53Z",
        "PR Comment": "\u042f \u043f\u0435\u0432\u043d\u043e \u043f\u043e\u0433\u0430\u043d\u043e \u043f\u043e\u044f\u0441\u043d\u044e\u0432\u0430\u043b\u0430, \u0431\u043e \u0446\u0456 \u0434\u0432\u0430 \u0442\u0438\u043f\u0438 \u043c\u0438 \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438 \u043d\u0430 \u0437\u0430\u043d\u044f\u0442\u0442\u0456. ;)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T00:47:34Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T00:52:28Z",
        "PR Comment": "\u041e\u0446\u044f \u043e\u0437\u043d\u0430\u043a\u0430 \u043d\u0435 \u0434\u0443\u0436\u0435 \u043f\u0456\u0434\u0445\u043e\u0434\u0438\u0442\u044c \u0434\u043b\u044f \u0432\u0438\u044f\u0432\u043b\u0435\u043d\u043d\u044f \u0456\u0441\u0442\u043e\u0442:\n1. \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043c\u0435\u043d\u043d\u0438\u043a\u0456\u0432-\u0456\u0441\u0442\u043e\u0442 \u043d\u0435 \u0454 \u0432\u043b\u0430\u0441\u043d\u0438\u043c\u0438 \u043d\u0430\u0437\u0432\u0430\u043c\u0438 (\u043b\u044e\u0434\u0438\u043d\u0430, \u0432\u0447\u0438\u0442\u0435\u043b\u044c, \u0434\u044f\u0434\u044c\u043a\u043e, \u043a\u0456\u0442 \u0442\u043e\u0449\u043e)\n2. \u0431\u0430\u0433\u0430\u0442\u043e \u0432\u043b\u0430\u0441\u043d\u0438\u0445 \u043d\u0430\u0437\u0432 \u043d\u0435 \u0454 \u0456\u0441\u0442\u043e\u0442\u0430\u043c\u0438 (\u0421\u0438\u0431\u0456\u0440, \u0412\u041a\u041f, \u0410\u043c\u0443\u0440)\n\n\u0423 StanfordNLP \u043c\u043e\u0436\u043d\u0430 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0433\u0440\u0430\u043c\u0430\u0442\u0438\u0447\u043d\u0443 \u043e\u0437\u043d\u0430\u043a\u0443 Animacy=Anim.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T10:57:12Z",
        "PR Comment": "\u0410\u043b\u0435 \u0434\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438, \u0430\u0431\u043e \u043f\u0438\u0441\u0430\u0442\u0438 \u044f\u043a\u0438\u0439\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437 \u0437 \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u0457... \u0422\u043e\u0431\u0442\u043e \u0430\u0431\u043e \u0437\u043e\u0432\u0441\u0456\u043c \u043f\u0440\u043e\u0441\u0442\u043e, \u0430\u0431\u043e \u044f\u043a\u043e\u0441\u044c \u0441\u043a\u043b\u0430\u0434\u043d\u043e. \u0422\u0430\u043a \u043d\u0430\u0447\u0435 \u043a\u0440\u0430\u0441\u0438\u0432\u0456\u0448\u0435. :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T10:58:06Z",
        "PR Comment": "\u0422\u0430\u043a, \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438. \u042f \u0442\u0430\u043c \u0434\u0430\u043b\u0456 \u043d\u0430\u043f\u0438\u0441\u0430\u0432, \u0449\u043e \u0437\u0430\u0431\u0443\u0432\u0441\u044f \u0441\u043f\u043e\u0447\u0430\u0442\u043a\u0443 \u0443 \u043b\u0435\u043a\u0446\u0456\u0457 \u043f\u043e\u0434\u0438\u0432\u0438\u0442\u0438\u0441\u044c )) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T10:58:57Z",
        "PR Comment": "\u043d\u0430\u0447\u0435 \u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T11:00:27Z",
        "PR Comment": "\u0410\u043b\u0435 \u044f \u0442\u043e\u0434\u0456 \u043d\u0435 \u0440\u043e\u0437\u0443\u043c\u0456\u044e... \u042f\u043a\u0449\u043e \u043f\u0440\u0438\u0431\u0440\u0430\u0442\u0438 \u0456 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 \u0456 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456, \u0442\u043e \u0437\u0430\u043b\u0438\u0448\u0438\u0442\u044c\u0441\u044f \u043a\u043e\u0440\u0456\u043d\u044c, \u0442\u0430\u043a? \u0427\u0438\u043c \u0442\u043e\u0434\u0456 \u0441\u0442\u0435\u043c \u0432\u0456\u0434\u0440\u0456\u0437\u043d\u044f\u0454\u0442\u044c\u0441\u044f \u0432\u0456\u0434 \u043a\u043e\u0440\u0435\u043d\u044f?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T11:47:30Z",
        "PR Comment": "\u0421\u0442\u0435\u043c - \u0442\u043e \u0456 \u0454 \u043a\u043e\u0440\u0456\u043d\u044c :) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T11:51:29Z",
        "PR Comment": "\u0414\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438 :) \u041e\u0441\u044c \u0432\u0435\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437: `\"ly\\b\"`. \u0410 \u0447\u0430\u0441 \u043e\u043f\u0440\u0430\u0446\u044e\u0432\u0430\u043d\u043d\u044f \u043a\u043e\u0440\u043f\u0443\u0441\u0443 \u0437\u043c\u0435\u043d\u0448\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T13:44:30Z",
        "PR Comment": "\u042f \u0434\u043e\u0432\u0433\u043e \u043d\u0435 \u043c\u043e\u0433\u043b\u0430 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u0442\u0438, \u0447\u043e\u043c\u0443 \u0443 \u0442\u0435\u0431\u0435 \u0442\u0430\u0456 \u0434\u0438\u0432\u043d\u0456 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u0432\u0438\u0439\u0448\u043b\u0438. \u0410\u0436 \u043e\u0441\u044c \u0432\u043e\u043d\u0430, \u0431\u0430\u0436\u0438\u043d\u0430! \u0422\u0430\u043c \u0456\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0456\u044f \u0437 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0454\u0442\u044c\u0441\u044f. \u0417\u043c\u0456\u043d\u0438 \u043d\u0430 `s.words[w.head-1]` \u0456 \u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0436\u0435\u043d\u0438 :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T14:11:19Z",
        "PR Comment": "\u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T19:20:48Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432. \u0442\u0430 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0432 \u0449\u043e \u043d\u0456\u0447\u043e\u0433\u043e \u043d\u0435 \u0437\u0430\u0433\u0443\u0431\u0438\u043b\u043e\u0441\u044f ) \u0434\u0456\u0439\u0441\u043d\u043e, \"\u0442\u0440\u043e\u0445\u0438\" \u043b\u0435\u0433\u0448\u0435 \u0441\u0442\u0430\u043b\u043e )",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T00:20:55Z",
        "PR Comment": "\u0426\u0435\u0439 \u0444\u0430\u0439\u043b\u0438\u043a \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u0437\u0430\u0431\u0440\u0430\u0442\u0438 \u0437 \u0446\u044c\u043e\u0433\u043e \u043f\u0443\u043b-\u0440\u0456\u043a\u0432\u0435\u0441\u0442\u0430. \u0414\u043b\u044f \u043a\u043e\u0436\u043d\u043e\u0457 \u0434\u043e\u043c\u0430\u0448\u043a\u0438 \u0442\u0440\u0435\u0431\u0430 \u0441\u0442\u0432\u043e\u0440\u044e\u0432\u0430\u0442\u0438 \u043d\u043e\u0432\u0443 \u0433\u0456\u043b\u043a\u0443 \u0437 \u043c\u0430\u0441\u0442\u0435\u0440\u0430.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T00:25:19Z",
        "PR Comment": "\u0422\u0430\u043a \u0456 \u043c\u0430\u0454 \u0431\u0443\u0442\u0438 :) \u0421\u0442\u0435\u043c\u043c\u0456\u043d\u0433 \u043f\u043e\u0432\u0438\u043d\u0435\u043d \u043f\u0440\u0438\u0431\u0438\u0440\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (derivational) \u0430\u0444\u0456\u043a\u0441\u0438, \u0430 \u043b\u0435\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0456\u044f \u2014 \u043b\u0438\u0448\u0435 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456 (inflectional).",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T00:25:53Z",
        "PR Comment": "\u042f \u043f\u0435\u0432\u043d\u043e \u043f\u043e\u0433\u0430\u043d\u043e \u043f\u043e\u044f\u0441\u043d\u044e\u0432\u0430\u043b\u0430, \u0431\u043e \u0446\u0456 \u0434\u0432\u0430 \u0442\u0438\u043f\u0438 \u043c\u0438 \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438 \u043d\u0430 \u0437\u0430\u043d\u044f\u0442\u0442\u0456. ;)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T00:47:34Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T00:52:28Z",
        "PR Comment": "\u041e\u0446\u044f \u043e\u0437\u043d\u0430\u043a\u0430 \u043d\u0435 \u0434\u0443\u0436\u0435 \u043f\u0456\u0434\u0445\u043e\u0434\u0438\u0442\u044c \u0434\u043b\u044f \u0432\u0438\u044f\u0432\u043b\u0435\u043d\u043d\u044f \u0456\u0441\u0442\u043e\u0442:\n1. \u0431\u0430\u0433\u0430\u0442\u043e \u0456\u043c\u0435\u043d\u043d\u0438\u043a\u0456\u0432-\u0456\u0441\u0442\u043e\u0442 \u043d\u0435 \u0454 \u0432\u043b\u0430\u0441\u043d\u0438\u043c\u0438 \u043d\u0430\u0437\u0432\u0430\u043c\u0438 (\u043b\u044e\u0434\u0438\u043d\u0430, \u0432\u0447\u0438\u0442\u0435\u043b\u044c, \u0434\u044f\u0434\u044c\u043a\u043e, \u043a\u0456\u0442 \u0442\u043e\u0449\u043e)\n2. \u0431\u0430\u0433\u0430\u0442\u043e \u0432\u043b\u0430\u0441\u043d\u0438\u0445 \u043d\u0430\u0437\u0432 \u043d\u0435 \u0454 \u0456\u0441\u0442\u043e\u0442\u0430\u043c\u0438 (\u0421\u0438\u0431\u0456\u0440, \u0412\u041a\u041f, \u0410\u043c\u0443\u0440)\n\n\u0423 StanfordNLP \u043c\u043e\u0436\u043d\u0430 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0433\u0440\u0430\u043c\u0430\u0442\u0438\u0447\u043d\u0443 \u043e\u0437\u043d\u0430\u043a\u0443 Animacy=Anim.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T10:57:12Z",
        "PR Comment": "\u0410\u043b\u0435 \u0434\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438, \u0430\u0431\u043e \u043f\u0438\u0441\u0430\u0442\u0438 \u044f\u043a\u0438\u0439\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437 \u0437 \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0456\u0457... \u0422\u043e\u0431\u0442\u043e \u0430\u0431\u043e \u0437\u043e\u0432\u0441\u0456\u043c \u043f\u0440\u043e\u0441\u0442\u043e, \u0430\u0431\u043e \u044f\u043a\u043e\u0441\u044c \u0441\u043a\u043b\u0430\u0434\u043d\u043e. \u0422\u0430\u043a \u043d\u0430\u0447\u0435 \u043a\u0440\u0430\u0441\u0438\u0432\u0456\u0448\u0435. :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T10:58:06Z",
        "PR Comment": "\u0422\u0430\u043a, \u0440\u043e\u0437\u0431\u0438\u0440\u0430\u043b\u0438. \u042f \u0442\u0430\u043c \u0434\u0430\u043b\u0456 \u043d\u0430\u043f\u0438\u0441\u0430\u0432, \u0449\u043e \u0437\u0430\u0431\u0443\u0432\u0441\u044f \u0441\u043f\u043e\u0447\u0430\u0442\u043a\u0443 \u0443 \u043b\u0435\u043a\u0446\u0456\u0457 \u043f\u043e\u0434\u0438\u0432\u0438\u0442\u0438\u0441\u044c )) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T10:58:57Z",
        "PR Comment": "\u043d\u0430\u0447\u0435 \u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T11:00:27Z",
        "PR Comment": "\u0410\u043b\u0435 \u044f \u0442\u043e\u0434\u0456 \u043d\u0435 \u0440\u043e\u0437\u0443\u043c\u0456\u044e... \u042f\u043a\u0449\u043e \u043f\u0440\u0438\u0431\u0440\u0430\u0442\u0438 \u0456 \u0441\u043b\u043e\u0432\u043e\u0442\u0432\u043e\u0440\u0447\u0456 \u0456 \u0444\u043e\u0440\u043c\u043e\u0442\u0432\u043e\u0440\u0447\u0456, \u0442\u043e \u0437\u0430\u043b\u0438\u0448\u0438\u0442\u044c\u0441\u044f \u043a\u043e\u0440\u0456\u043d\u044c, \u0442\u0430\u043a? \u0427\u0438\u043c \u0442\u043e\u0434\u0456 \u0441\u0442\u0435\u043c \u0432\u0456\u0434\u0440\u0456\u0437\u043d\u044f\u0454\u0442\u044c\u0441\u044f \u0432\u0456\u0434 \u043a\u043e\u0440\u0435\u043d\u044f?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T11:47:30Z",
        "PR Comment": "\u0421\u0442\u0435\u043c - \u0442\u043e \u0456 \u0454 \u043a\u043e\u0440\u0456\u043d\u044c :) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T11:51:29Z",
        "PR Comment": "\u0414\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0442\u043e\u043a\u0435\u043d\u0438 :) \u041e\u0441\u044c \u0432\u0435\u0441\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u0439 \u0432\u0438\u0440\u0430\u0437: `\"ly\\b\"`. \u0410 \u0447\u0430\u0441 \u043e\u043f\u0440\u0430\u0446\u044e\u0432\u0430\u043d\u043d\u044f \u043a\u043e\u0440\u043f\u0443\u0441\u0443 \u0437\u043c\u0435\u043d\u0448\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T13:44:30Z",
        "PR Comment": "\u042f \u0434\u043e\u0432\u0433\u043e \u043d\u0435 \u043c\u043e\u0433\u043b\u0430 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u0442\u0438, \u0447\u043e\u043c\u0443 \u0443 \u0442\u0435\u0431\u0435 \u0442\u0430\u0456 \u0434\u0438\u0432\u043d\u0456 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u0432\u0438\u0439\u0448\u043b\u0438. \u0410\u0436 \u043e\u0441\u044c \u0432\u043e\u043d\u0430, \u0431\u0430\u0436\u0438\u043d\u0430! \u0422\u0430\u043c \u0456\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0456\u044f \u0437 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0454\u0442\u044c\u0441\u044f. \u0417\u043c\u0456\u043d\u0438 \u043d\u0430 `s.words[w.head-1]` \u0456 \u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0436\u0435\u043d\u0438 :)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T14:11:19Z",
        "PR Comment": "\u043f\u043e\u0444\u0456\u043a\u0441\u0438\u0432",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/OleksandrPetrov/02-structural-linguistics/3.1.collocations.py",
        "Creation Date": "2020-03-28T19:20:48Z",
        "PR Comment": "\u0434\u043e\u0431\u0430\u0432\u0438\u0432. \u0442\u0430 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0432 \u0449\u043e \u043d\u0456\u0447\u043e\u0433\u043e \u043d\u0435 \u0437\u0430\u0433\u0443\u0431\u0438\u043b\u043e\u0441\u044f ) \u0434\u0456\u0439\u0441\u043d\u043e, \"\u0442\u0440\u043e\u0445\u0438\" \u043b\u0435\u0433\u0448\u0435 \u0441\u0442\u0430\u043b\u043e )",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/headline_formatter.py",
        "Creation Date": "2020-03-27T22:33:57Z",
        "PR Comment": "\u041e\u0442\u0443\u0442 \u0432\u0430\u0440\u0442\u043e \u0431\u0443\u043b\u043e \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u0430, \u044f\u043a\u0456 \u0432\u0436\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0456 \u0432\u0435\u043b\u0438\u043a\u0438\u043c\u0438 \u043b\u0456\u0442\u0435\u0440\u0430\u043c\u0438 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, USA) \u0442\u0430 \"n't\" (\u044f\u043a\u0435 \u0442\u0435\u0433\u0443\u0454\u0442\u044c\u0441\u044f \u044f\u043a \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a).",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/headline_formatter.py",
        "Creation Date": "2020-03-27T22:36:53Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/headline_formatter.py",
        "Creation Date": "2020-03-27T22:38:38Z",
        "PR Comment": "\u0429\u043e\u0431 \u043d\u0435 \u0440\u043e\u0431\u0438\u0442\u0438 \u0434\u0432\u0430 \u043f\u0440\u043e\u0445\u043e\u0434\u0438 \u043f\u043e \u0442\u043e\u043a\u0435\u043d\u0430\u0445, \u043c\u043e\u0436\u043d\u0430 \u0430\u0431\u043e \u0437\u0440\u043e\u0431\u0438\u0442\u0438 \u0446\u0438\u043a\u043b \u043f\u043e \u0434\u0456\u0442\u044f\u0445 \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430 (`.children`), \u0430\u0431\u043e \u0448\u0443\u043a\u0430\u0442\u0438 \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a, \u0430 \u0442\u043e\u0434\u0456 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0442\u0438, \u0447\u0438 \u0439\u043e\u0433\u043e \u0431\u0430\u0442\u044c\u043a\u043e\u043c \u0454 \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u0435 \u043d\u0430\u043c \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u043e.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/headline_formatter.py",
        "Creation Date": "2020-03-27T22:43:30Z",
        "PR Comment": "\u0422\u0443\u0442 \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043b\u0435\u043c\u0438 (`.normal_form`), \u0431\u043e \u0456\u043d\u0430\u043a\u0448\u0435 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u043f\u043e\u0442\u0440\u0430\u043f\u043b\u044f\u0454 \u0442\u0435 \u0441\u0430\u043c\u0435 \u0441\u043b\u043e\u0432\u043e\u0441\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044f \u043f\u043e \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432. \u0423 \u0442\u0432\u043e\u0457\u0445 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u0445: _\u0432\u0435\u043b\u0438\u043a\u0438\u0439 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a, \u0432\u0435\u043b\u0438\u043a\u0438\u043c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u043e\u043c, \u0432\u0435\u043b\u0438\u043a\u043e\u043c\u0443 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u043e\u0432\u0456, \u0432\u0435\u043b\u0438\u043a\u043e\u0433\u043e \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u0430._",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/headline_formatter.py",
        "Creation Date": "2020-03-27T22:18:38Z",
        "PR Comment": "\u0412\u0438\u0434\u0430\u043b\u0438, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `data/`, \u0449\u043e\u0431 \u043d\u0435 \u0440\u043e\u0437\u0434\u0443\u0432\u0430\u0442\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0456\u0439.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/headline_formatter.py",
        "Creation Date": "2020-03-27T22:33:57Z",
        "PR Comment": "\u041e\u0442\u0443\u0442 \u0432\u0430\u0440\u0442\u043e \u0431\u0443\u043b\u043e \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u0430, \u044f\u043a\u0456 \u0432\u0436\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0456 \u0432\u0435\u043b\u0438\u043a\u0438\u043c\u0438 \u043b\u0456\u0442\u0435\u0440\u0430\u043c\u0438 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, USA) \u0442\u0430 \"n't\" (\u044f\u043a\u0435 \u0442\u0435\u0433\u0443\u0454\u0442\u044c\u0441\u044f \u044f\u043a \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a).",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/headline_formatter.py",
        "Creation Date": "2020-03-27T22:36:53Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/headline_formatter.py",
        "Creation Date": "2020-03-27T22:38:38Z",
        "PR Comment": "\u0429\u043e\u0431 \u043d\u0435 \u0440\u043e\u0431\u0438\u0442\u0438 \u0434\u0432\u0430 \u043f\u0440\u043e\u0445\u043e\u0434\u0438 \u043f\u043e \u0442\u043e\u043a\u0435\u043d\u0430\u0445, \u043c\u043e\u0436\u043d\u0430 \u0430\u0431\u043e \u0437\u0440\u043e\u0431\u0438\u0442\u0438 \u0446\u0438\u043a\u043b \u043f\u043e \u0434\u0456\u0442\u044f\u0445 \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430 (`.children`), \u0430\u0431\u043e \u0448\u0443\u043a\u0430\u0442\u0438 \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a, \u0430 \u0442\u043e\u0434\u0456 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0442\u0438, \u0447\u0438 \u0439\u043e\u0433\u043e \u0431\u0430\u0442\u044c\u043a\u043e\u043c \u0454 \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u0435 \u043d\u0430\u043c \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u043e.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/headline_formatter.py",
        "Creation Date": "2020-03-27T22:43:30Z",
        "PR Comment": "\u0422\u0443\u0442 \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043b\u0435\u043c\u0438 (`.normal_form`), \u0431\u043e \u0456\u043d\u0430\u043a\u0448\u0435 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u043f\u043e\u0442\u0440\u0430\u043f\u043b\u044f\u0454 \u0442\u0435 \u0441\u0430\u043c\u0435 \u0441\u043b\u043e\u0432\u043e\u0441\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044f \u043f\u043e \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432. \u0423 \u0442\u0432\u043e\u0457\u0445 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u0445: _\u0432\u0435\u043b\u0438\u043a\u0438\u0439 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a, \u0432\u0435\u043b\u0438\u043a\u0438\u043c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u043e\u043c, \u0432\u0435\u043b\u0438\u043a\u043e\u043c\u0443 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u043e\u0432\u0456, \u0432\u0435\u043b\u0438\u043a\u043e\u0433\u043e \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u0430._",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/headline_formatter.py",
        "Creation Date": "2020-03-27T22:18:38Z",
        "PR Comment": "\u0412\u0438\u0434\u0430\u043b\u0438, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `data/`, \u0449\u043e\u0431 \u043d\u0435 \u0440\u043e\u0437\u0434\u0443\u0432\u0430\u0442\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0456\u0439.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/headline_formatter.py",
        "Creation Date": "2020-03-27T22:33:57Z",
        "PR Comment": "\u041e\u0442\u0443\u0442 \u0432\u0430\u0440\u0442\u043e \u0431\u0443\u043b\u043e \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u0430, \u044f\u043a\u0456 \u0432\u0436\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0456 \u0432\u0435\u043b\u0438\u043a\u0438\u043c\u0438 \u043b\u0456\u0442\u0435\u0440\u0430\u043c\u0438 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, USA) \u0442\u0430 \"n't\" (\u044f\u043a\u0435 \u0442\u0435\u0433\u0443\u0454\u0442\u044c\u0441\u044f \u044f\u043a \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a).",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/headline_formatter.py",
        "Creation Date": "2020-03-27T22:36:53Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/headline_formatter.py",
        "Creation Date": "2020-03-27T22:38:38Z",
        "PR Comment": "\u0429\u043e\u0431 \u043d\u0435 \u0440\u043e\u0431\u0438\u0442\u0438 \u0434\u0432\u0430 \u043f\u0440\u043e\u0445\u043e\u0434\u0438 \u043f\u043e \u0442\u043e\u043a\u0435\u043d\u0430\u0445, \u043c\u043e\u0436\u043d\u0430 \u0430\u0431\u043e \u0437\u0440\u043e\u0431\u0438\u0442\u0438 \u0446\u0438\u043a\u043b \u043f\u043e \u0434\u0456\u0442\u044f\u0445 \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430 (`.children`), \u0430\u0431\u043e \u0448\u0443\u043a\u0430\u0442\u0438 \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a, \u0430 \u0442\u043e\u0434\u0456 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0442\u0438, \u0447\u0438 \u0439\u043e\u0433\u043e \u0431\u0430\u0442\u044c\u043a\u043e\u043c \u0454 \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u0435 \u043d\u0430\u043c \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u043e.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/headline_formatter.py",
        "Creation Date": "2020-03-27T22:43:30Z",
        "PR Comment": "\u0422\u0443\u0442 \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043b\u0435\u043c\u0438 (`.normal_form`), \u0431\u043e \u0456\u043d\u0430\u043a\u0448\u0435 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u043f\u043e\u0442\u0440\u0430\u043f\u043b\u044f\u0454 \u0442\u0435 \u0441\u0430\u043c\u0435 \u0441\u043b\u043e\u0432\u043e\u0441\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044f \u043f\u043e \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432. \u0423 \u0442\u0432\u043e\u0457\u0445 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u0445: _\u0432\u0435\u043b\u0438\u043a\u0438\u0439 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a, \u0432\u0435\u043b\u0438\u043a\u0438\u043c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u043e\u043c, \u0432\u0435\u043b\u0438\u043a\u043e\u043c\u0443 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u043e\u0432\u0456, \u0432\u0435\u043b\u0438\u043a\u043e\u0433\u043e \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u0430._",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/headline_formatter.py",
        "Creation Date": "2020-03-27T22:18:38Z",
        "PR Comment": "\u0412\u0438\u0434\u0430\u043b\u0438, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `data/`, \u0449\u043e\u0431 \u043d\u0435 \u0440\u043e\u0437\u0434\u0443\u0432\u0430\u0442\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0456\u0439.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/headline_formatter.py",
        "Creation Date": "2020-03-27T22:33:57Z",
        "PR Comment": "\u041e\u0442\u0443\u0442 \u0432\u0430\u0440\u0442\u043e \u0431\u0443\u043b\u043e \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438 \u0441\u043b\u043e\u0432\u0430, \u044f\u043a\u0456 \u0432\u0436\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0456 \u0432\u0435\u043b\u0438\u043a\u0438\u043c\u0438 \u043b\u0456\u0442\u0435\u0440\u0430\u043c\u0438 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, USA) \u0442\u0430 \"n't\" (\u044f\u043a\u0435 \u0442\u0435\u0433\u0443\u0454\u0442\u044c\u0441\u044f \u044f\u043a \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a).",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/headline_formatter.py",
        "Creation Date": "2020-03-27T22:36:53Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/headline_formatter.py",
        "Creation Date": "2020-03-27T22:38:38Z",
        "PR Comment": "\u0429\u043e\u0431 \u043d\u0435 \u0440\u043e\u0431\u0438\u0442\u0438 \u0434\u0432\u0430 \u043f\u0440\u043e\u0445\u043e\u0434\u0438 \u043f\u043e \u0442\u043e\u043a\u0435\u043d\u0430\u0445, \u043c\u043e\u0436\u043d\u0430 \u0430\u0431\u043e \u0437\u0440\u043e\u0431\u0438\u0442\u0438 \u0446\u0438\u043a\u043b \u043f\u043e \u0434\u0456\u0442\u044f\u0445 \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u0430 (`.children`), \u0430\u0431\u043e \u0448\u0443\u043a\u0430\u0442\u0438 \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0440\u0438\u0441\u043b\u0456\u0432\u043d\u0438\u043a, \u0430 \u0442\u043e\u0434\u0456 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u044f\u0442\u0438, \u0447\u0438 \u0439\u043e\u0433\u043e \u0431\u0430\u0442\u044c\u043a\u043e\u043c \u0454 \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u0435 \u043d\u0430\u043c \u0434\u0456\u0454\u0441\u043b\u043e\u0432\u043e.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/headline_formatter.py",
        "Creation Date": "2020-03-27T22:43:30Z",
        "PR Comment": "\u0422\u0443\u0442 \u0442\u0440\u0435\u0431\u0430 \u0431\u0443\u043b\u043e \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043b\u0435\u043c\u0438 (`.normal_form`), \u0431\u043e \u0456\u043d\u0430\u043a\u0448\u0435 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u043f\u043e\u0442\u0440\u0430\u043f\u043b\u044f\u0454 \u0442\u0435 \u0441\u0430\u043c\u0435 \u0441\u043b\u043e\u0432\u043e\u0441\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044f \u043f\u043e \u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432. \u0423 \u0442\u0432\u043e\u0457\u0445 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u0445: _\u0432\u0435\u043b\u0438\u043a\u0438\u0439 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a, \u0432\u0435\u043b\u0438\u043a\u0438\u043c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u043e\u043c, \u0432\u0435\u043b\u0438\u043a\u043e\u043c\u0443 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u043e\u0432\u0456, \u0432\u0435\u043b\u0438\u043a\u043e\u0433\u043e \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a\u0430._",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/KostiantynZuiev/02-structural-linguistics/headline_formatter.py",
        "Creation Date": "2020-03-27T22:18:38Z",
        "PR Comment": "\u0412\u0438\u0434\u0430\u043b\u0438, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `data/`, \u0449\u043e\u0431 \u043d\u0435 \u0440\u043e\u0437\u0434\u0443\u0432\u0430\u0442\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0456\u0439.",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DmytroMindra/02-structural-linguistics/2-headlines/headlines/formatting/formatting.py",
        "Creation Date": "2020-03-25T20:30:55Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438. \u0422\u043e\u0434\u0456 \u0442\u0438 \u0437\u043c\u0456\u0433 \u0431\u0438 \u0456 \u0441\u0435\u0440\u0435\u0434\u043d\u044e \u043c\u043e\u0434\u0435\u043b\u044c\u043a\u0443 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438.",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DmytroMindra/02-structural-linguistics/2-headlines/headlines/formatting/formatting.py",
        "Creation Date": "2020-03-25T20:04:00Z",
        "PR Comment": "\u0412\u0438\u0434\u0430\u043b\u0438, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `2-headlines/examiner-headlines-output.txt`, \u0449\u043e\u0431 \u043d\u0435 \u0440\u043e\u0437\u0434\u0443\u0432\u0430\u0442\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0456\u0439.",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DmytroMindra/02-structural-linguistics/2-headlines/headlines/virality/rate_header_virality.py",
        "Creation Date": "2020-03-25T20:30:55Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438. \u0422\u043e\u0434\u0456 \u0442\u0438 \u0437\u043c\u0456\u0433 \u0431\u0438 \u0456 \u0441\u0435\u0440\u0435\u0434\u043d\u044e \u043c\u043e\u0434\u0435\u043b\u044c\u043a\u0443 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438.",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DmytroMindra/02-structural-linguistics/2-headlines/headlines/virality/rate_header_virality.py",
        "Creation Date": "2020-03-25T20:04:00Z",
        "PR Comment": "\u0412\u0438\u0434\u0430\u043b\u0438, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `2-headlines/examiner-headlines-output.txt`, \u0449\u043e\u0431 \u043d\u0435 \u0440\u043e\u0437\u0434\u0443\u0432\u0430\u0442\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0456\u0439.",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DmytroMindra/02-structural-linguistics/2-headlines/headlines/tests/test_separate_word_processing.py",
        "Creation Date": "2020-03-25T20:30:55Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438. \u0422\u043e\u0434\u0456 \u0442\u0438 \u0437\u043c\u0456\u0433 \u0431\u0438 \u0456 \u0441\u0435\u0440\u0435\u0434\u043d\u044e \u043c\u043e\u0434\u0435\u043b\u044c\u043a\u0443 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438.",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DmytroMindra/02-structural-linguistics/2-headlines/headlines/tests/test_separate_word_processing.py",
        "Creation Date": "2020-03-25T20:04:00Z",
        "PR Comment": "\u0412\u0438\u0434\u0430\u043b\u0438, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `2-headlines/examiner-headlines-output.txt`, \u0449\u043e\u0431 \u043d\u0435 \u0440\u043e\u0437\u0434\u0443\u0432\u0430\u0442\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0456\u0439.",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DmytroMindra/02-structural-linguistics/3-collocations/english_collocations/tests/test_collocations.py",
        "Creation Date": "2020-03-25T20:30:55Z",
        "PR Comment": "\u0429\u043e\u0431 \u043f\u0440\u0438\u0448\u0432\u0438\u0434\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443 (\u0456 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0438 \u043a\u043e\u0436\u043d\u0435 \u0440\u0435\u0447\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0456), \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u043b\u043e \u0441\u043f\u0435\u0440\u0448\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438, \u0449\u043e \u0432 \u0440\u0435\u0447\u0435\u043d\u043d\u0456 \u0454 \u0441\u043b\u043e\u0432\u043e, \u0449\u043e \u0437\u0430\u043a\u0456\u043d\u0447\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \"-ly\". \u041d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0440\u0435\u0433\u0435\u043a\u0441\u043f\u0430\u043c\u0438. \u0422\u043e\u0434\u0456 \u0442\u0438 \u0437\u043c\u0456\u0433 \u0431\u0438 \u0456 \u0441\u0435\u0440\u0435\u0434\u043d\u044e \u043c\u043e\u0434\u0435\u043b\u044c\u043a\u0443 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438.",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/vseloved/prj-nlp-2020",
        "filepath": "students/DmytroMindra/02-structural-linguistics/3-collocations/english_collocations/tests/test_collocations.py",
        "Creation Date": "2020-03-25T20:04:00Z",
        "PR Comment": "\u0412\u0438\u0434\u0430\u043b\u0438, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, `2-headlines/examiner-headlines-output.txt`, \u0449\u043e\u0431 \u043d\u0435 \u0440\u043e\u0437\u0434\u0443\u0432\u0430\u0442\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0456\u0439.",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-24T11:45:06Z",
        "PR Comment": "```suggestion\n    tokens_number = data[Columns.Split].apply(lambda x: len(str(x).split()))\n```\nI think it fits more.",
        "PR/Issue Number": "784"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-25T08:42:56Z",
        "PR Comment": "```suggestion\n        \"adjust_frequencies\": True,  # Whether to divide identifiers frequencies by tokens number.\n```\nPlease adjust the comment if I get it wrongly. ",
        "PR/Issue Number": "784"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-24T12:21:49Z",
        "PR Comment": "It doesn't affect performance significantly afaik, but this way the distribution for sample is more fair, like more correct. Actually this division by the number of tokens makes sense only for some data format, that is used by default, and probably it should be made a function argument.\nWDYT? ",
        "PR/Issue Number": "784"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-24T12:43:32Z",
        "PR Comment": "let's put it to `config`.",
        "PR/Issue Number": "784"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-24T11:45:06Z",
        "PR Comment": "```suggestion\n    tokens_number = data[Columns.Split].apply(lambda x: len(str(x).split()))\n```\nI think it fits more.",
        "PR/Issue Number": "784"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-25T08:42:56Z",
        "PR Comment": "```suggestion\n        \"adjust_frequencies\": True,  # Whether to divide identifiers frequencies by tokens number.\n```\nPlease adjust the comment if I get it wrongly. ",
        "PR/Issue Number": "784"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-24T12:21:49Z",
        "PR Comment": "It doesn't affect performance significantly afaik, but this way the distribution for sample is more fair, like more correct. Actually this division by the number of tokens makes sense only for some data format, that is used by default, and probably it should be made a function argument.\nWDYT? ",
        "PR/Issue Number": "784"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-24T12:43:32Z",
        "PR Comment": "let's put it to `config`.",
        "PR/Issue Number": "784"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:02:59Z",
        "PR Comment": "sorted is already a list",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:04:21Z",
        "PR Comment": "`else` is not required, though it's up to you",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:05:49Z",
        "PR Comment": "How big is the file? Can we download it directly to the memory?\n\nWe need to cache it if it is big enough to require an FS file. ",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:08:23Z",
        "PR Comment": "Wow this is a big hack :) First of all, you should always use subprocess.\nSecond, sys.executable instead of hardcoding python3. Third, you can do the same by a Python import and running the function inplace. ",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:08:44Z",
        "PR Comment": "Single quotes",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:21:29Z",
        "PR Comment": "4MB, I was not sure whether it's good to keep it in our repo.",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:22:17Z",
        "PR Comment": "Compress it with xz and include then",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:22:38Z",
        "PR Comment": "```suggestion\ndef generate_vocabulary(frequencies_path: str, config: Mapping[str, Any]) -> Dict[str, int]:\n```",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:23:19Z",
        "PR Comment": "```suggestion\n    Compose vocabulary from a set of tokens with known frequencies.\n```",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:24:00Z",
        "PR Comment": "```suggestion\n                   stable: How many tokens, which don't have more frequent \\\n```",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:24:11Z",
        "PR Comment": "```suggestion\n                   suspicious: How many tokens, whose more frequent edit-distance-neighbor is\n```",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:24:19Z",
        "PR Comment": "```suggestion\n                   non_suspicious: How many tokens, whose more frequent edit-distance-neighbor \\\n```",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-03T08:59:17Z",
        "PR Comment": "@irinakhismatullina conflicts",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-03T10:18:28Z",
        "PR Comment": "@zurk A lot of [test failures](https://travis-ci.com/src-d/style-analyzer/jobs/204907620#L2229) with annotations, only out-of-docker",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-03T14:57:18Z",
        "PR Comment": "should fix the issue https://github.com/src-d/style-analyzer/pull/777",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-03T15:33:18Z",
        "PR Comment": "@irinakhismatullina Konst has fixed the tests, can you please rebase",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:02:59Z",
        "PR Comment": "sorted is already a list",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:04:21Z",
        "PR Comment": "`else` is not required, though it's up to you",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:05:49Z",
        "PR Comment": "How big is the file? Can we download it directly to the memory?\n\nWe need to cache it if it is big enough to require an FS file. ",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:08:23Z",
        "PR Comment": "Wow this is a big hack :) First of all, you should always use subprocess.\nSecond, sys.executable instead of hardcoding python3. Third, you can do the same by a Python import and running the function inplace. ",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:08:44Z",
        "PR Comment": "Single quotes",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:21:29Z",
        "PR Comment": "4MB, I was not sure whether it's good to keep it in our repo.",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:22:17Z",
        "PR Comment": "Compress it with xz and include then",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:22:38Z",
        "PR Comment": "```suggestion\ndef generate_vocabulary(frequencies_path: str, config: Mapping[str, Any]) -> Dict[str, int]:\n```",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:23:19Z",
        "PR Comment": "```suggestion\n    Compose vocabulary from a set of tokens with known frequencies.\n```",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:24:00Z",
        "PR Comment": "```suggestion\n                   stable: How many tokens, which don't have more frequent \\\n```",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:24:11Z",
        "PR Comment": "```suggestion\n                   suspicious: How many tokens, whose more frequent edit-distance-neighbor is\n```",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:24:19Z",
        "PR Comment": "```suggestion\n                   non_suspicious: How many tokens, whose more frequent edit-distance-neighbor \\\n```",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-03T08:59:17Z",
        "PR Comment": "@irinakhismatullina conflicts",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-03T10:18:28Z",
        "PR Comment": "@zurk A lot of [test failures](https://travis-ci.com/src-d/style-analyzer/jobs/204907620#L2229) with annotations, only out-of-docker",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-03T14:57:18Z",
        "PR Comment": "should fix the issue https://github.com/src-d/style-analyzer/pull/777",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-03T15:33:18Z",
        "PR Comment": "@irinakhismatullina Konst has fixed the tests, can you please rebase",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:02:59Z",
        "PR Comment": "sorted is already a list",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:04:21Z",
        "PR Comment": "`else` is not required, though it's up to you",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:05:49Z",
        "PR Comment": "How big is the file? Can we download it directly to the memory?\n\nWe need to cache it if it is big enough to require an FS file. ",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:08:23Z",
        "PR Comment": "Wow this is a big hack :) First of all, you should always use subprocess.\nSecond, sys.executable instead of hardcoding python3. Third, you can do the same by a Python import and running the function inplace. ",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:08:44Z",
        "PR Comment": "Single quotes",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:21:29Z",
        "PR Comment": "4MB, I was not sure whether it's good to keep it in our repo.",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:22:17Z",
        "PR Comment": "Compress it with xz and include then",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:22:38Z",
        "PR Comment": "```suggestion\ndef generate_vocabulary(frequencies_path: str, config: Mapping[str, Any]) -> Dict[str, int]:\n```",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:23:19Z",
        "PR Comment": "```suggestion\n    Compose vocabulary from a set of tokens with known frequencies.\n```",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:24:00Z",
        "PR Comment": "```suggestion\n                   stable: How many tokens, which don't have more frequent \\\n```",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:24:11Z",
        "PR Comment": "```suggestion\n                   suspicious: How many tokens, whose more frequent edit-distance-neighbor is\n```",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:24:19Z",
        "PR Comment": "```suggestion\n                   non_suspicious: How many tokens, whose more frequent edit-distance-neighbor \\\n```",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-03T08:59:17Z",
        "PR Comment": "@irinakhismatullina conflicts",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-03T10:18:28Z",
        "PR Comment": "@zurk A lot of [test failures](https://travis-ci.com/src-d/style-analyzer/jobs/204907620#L2229) with annotations, only out-of-docker",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-03T14:57:18Z",
        "PR Comment": "should fix the issue https://github.com/src-d/style-analyzer/pull/777",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-03T15:33:18Z",
        "PR Comment": "@irinakhismatullina Konst has fixed the tests, can you please rebase",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:02:59Z",
        "PR Comment": "sorted is already a list",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:04:21Z",
        "PR Comment": "`else` is not required, though it's up to you",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:05:49Z",
        "PR Comment": "How big is the file? Can we download it directly to the memory?\n\nWe need to cache it if it is big enough to require an FS file. ",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:08:23Z",
        "PR Comment": "Wow this is a big hack :) First of all, you should always use subprocess.\nSecond, sys.executable instead of hardcoding python3. Third, you can do the same by a Python import and running the function inplace. ",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:08:44Z",
        "PR Comment": "Single quotes",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:21:29Z",
        "PR Comment": "4MB, I was not sure whether it's good to keep it in our repo.",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-24T14:22:17Z",
        "PR Comment": "Compress it with xz and include then",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:22:38Z",
        "PR Comment": "```suggestion\ndef generate_vocabulary(frequencies_path: str, config: Mapping[str, Any]) -> Dict[str, int]:\n```",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:23:19Z",
        "PR Comment": "```suggestion\n    Compose vocabulary from a set of tokens with known frequencies.\n```",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:24:00Z",
        "PR Comment": "```suggestion\n                   stable: How many tokens, which don't have more frequent \\\n```",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:24:11Z",
        "PR Comment": "```suggestion\n                   suspicious: How many tokens, whose more frequent edit-distance-neighbor is\n```",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:24:19Z",
        "PR Comment": "```suggestion\n                   non_suspicious: How many tokens, whose more frequent edit-distance-neighbor \\\n```",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-03T08:59:17Z",
        "PR Comment": "@irinakhismatullina conflicts",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-03T10:18:28Z",
        "PR Comment": "@zurk A lot of [test failures](https://travis-ci.com/src-d/style-analyzer/jobs/204907620#L2229) with annotations, only out-of-docker",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-03T14:57:18Z",
        "PR Comment": "should fix the issue https://github.com/src-d/style-analyzer/pull/777",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-06-03T15:33:18Z",
        "PR Comment": "@irinakhismatullina Konst has fixed the tests, can you please rebase",
        "PR/Issue Number": "773"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:21:44Z",
        "PR Comment": "@irinakhismatullina `./lookout/style/typos/preparation.py:17:1: F401 'lookout.style.typos.utils.filter_splits' imported but unused`",
        "PR/Issue Number": "775"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-05-25T10:21:44Z",
        "PR Comment": "@irinakhismatullina `./lookout/style/typos/preparation.py:17:1: F401 'lookout.style.typos.utils.filter_splits' imported but unused`",
        "PR/Issue Number": "775"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-04-03T15:25:13Z",
        "PR Comment": "??? Some new test is unstable? https://travis-ci.com/src-d/style-analyzer/jobs/190041356#L3794",
        "PR/Issue Number": "742"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-04-03T15:31:16Z",
        "PR Comment": "Try to rebuild, looks like a Babelfish failure.",
        "PR/Issue Number": "742"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-04-03T17:38:14Z",
        "PR Comment": "@vmarkovtsev Ok, it's fine.",
        "PR/Issue Number": "742"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T15:03:45Z",
        "PR Comment": "let's try to avoid as many `config.get(\"something\", {})`  as possible. You can merge the config with a `DEFAULT_CONFIG` via `merge_dicts` function.\n\nI think with this change many configs in `__init__` methods become non-optional which is good. ",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T15:06:01Z",
        "PR Comment": "```python\n        \"boost_param\": {\n            \"max_depth\": 6,\n            ...\n```",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T15:08:11Z",
        "PR Comment": "Let's call it `DEFAULT_PRETRAIN_CONFIG` or something to not confuse with `DEFAULT_CONFIG` which is for Analyzer in FormatAnalyzer",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T15:15:24Z",
        "PR Comment": "```suggestion\n        self.generator.set_config(config)\n```\nI assume",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T15:16:52Z",
        "PR Comment": "I hope that all parameters description are moved somewhere and not just deleted. ",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T15:28:58Z",
        "PR Comment": "I do not think we should allow changing the config. Let's just inline this function into __init__.\nOr rename it to `_set_config`,\n\nFor all `set_config` functions.",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T16:09:24Z",
        "PR Comment": "It's the only place i do that, here it's unavoidable: we get the config with possible `\"ranking\" and \"generation\"` fields, but the `train_and_evaluate` function expects them separately.",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T16:10:37Z",
        "PR Comment": "Yes that is so",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T16:15:14Z",
        "PR Comment": "```python\nconfig = merge_dicts(DEFAULT_CONFIG, config)\nmodel = train_and_evaluate(train, test, vocabulary_path, frequencies_path, fasttext_path,\n                               config[\"generation\"], config[\"ranking\"]))\n```\nCan be a solution?",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T16:17:18Z",
        "PR Comment": "I'm not shure this is so important. Both Ranker and Generator can be used several times with different configurations after init, and it won't break anything. In the same time loading other non-config data can time some time.\nTLDR i want to use that feature while experimenting with configurations, so i think it has some value",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T16:23:24Z",
        "PR Comment": "No, too much excessive information will be added that way",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T16:24:47Z",
        "PR Comment": "BTW about merge_configs - what would really improve the situation is to accept also None dict and treat is as empty one.",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T16:28:56Z",
        "PR Comment": "ok",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T16:32:25Z",
        "PR Comment": "The colution here would be for example to do smth like that `\"corrector\": {\"generation\": {}, \"ranking\"}}`(and pass this `config[\"corrector\"]` to the function). This was actually my first idea, but i decided to change it to the present one to avoid the growth of the nesting (`DEFAULT_CORRECTOR_CONFIG[\"corrector\"][\"generation\"]).",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T16:42:27Z",
        "PR Comment": "ok, let's keep it",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-25T12:06:50Z",
        "PR Comment": "Pro tip: you can use [munchify](https://github.com/Infinidat/munch) to work with it like `self.config.chunksize` instead of `self.config[\"chunk_size\"]` while leaving it a `dict`.",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-25T12:07:31Z",
        "PR Comment": "Missing \"\\\" in the ends of lines.",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-25T12:09:42Z",
        "PR Comment": "```suggestion\n                       edit_dist_number: Number of the most frequent tokens among tokens at \\\n```",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-25T12:11:33Z",
        "PR Comment": "```suggestion\n                       edit_dist_number: Number of the most frequent tokens among tokens at \\\n```",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-25T12:12:05Z",
        "PR Comment": "```suggestion\n                       edit_dist_number: Number of the most frequent tokens among tokens at \\\n```",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-25T12:12:37Z",
        "PR Comment": "Would be nice if you also document the types",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-25T12:13:31Z",
        "PR Comment": "Not required in this PR, of course",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-25T15:01:49Z",
        "PR Comment": "Missing what exactly? \"\\\" will put everything in one line afaik",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-25T15:02:02Z",
        "PR Comment": "Oh i see:) I also tried to write`\"\\\"`",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T14:54:45Z",
        "PR Comment": "No, here i merged only the configs for generating TyposCorrector model (and those configs that I added are actually saved with the model, as was before). Here just all the defaults for the model creating and training are stored in one place. The changes are in no way connected to the analyzer.",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T15:03:45Z",
        "PR Comment": "let's try to avoid as many `config.get(\"something\", {})`  as possible. You can merge the config with a `DEFAULT_CONFIG` via `merge_dicts` function.\n\nI think with this change many configs in `__init__` methods become non-optional which is good. ",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T15:06:01Z",
        "PR Comment": "```python\n        \"boost_param\": {\n            \"max_depth\": 6,\n            ...\n```",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T15:08:11Z",
        "PR Comment": "Let's call it `DEFAULT_PRETRAIN_CONFIG` or something to not confuse with `DEFAULT_CONFIG` which is for Analyzer in FormatAnalyzer",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T15:15:24Z",
        "PR Comment": "```suggestion\n        self.generator.set_config(config)\n```\nI assume",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T15:16:52Z",
        "PR Comment": "I hope that all parameters description are moved somewhere and not just deleted. ",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T15:28:58Z",
        "PR Comment": "I do not think we should allow changing the config. Let's just inline this function into __init__.\nOr rename it to `_set_config`,\n\nFor all `set_config` functions.",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T16:09:24Z",
        "PR Comment": "It's the only place i do that, here it's unavoidable: we get the config with possible `\"ranking\" and \"generation\"` fields, but the `train_and_evaluate` function expects them separately.",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T16:10:37Z",
        "PR Comment": "Yes that is so",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T16:15:14Z",
        "PR Comment": "```python\nconfig = merge_dicts(DEFAULT_CONFIG, config)\nmodel = train_and_evaluate(train, test, vocabulary_path, frequencies_path, fasttext_path,\n                               config[\"generation\"], config[\"ranking\"]))\n```\nCan be a solution?",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T16:17:18Z",
        "PR Comment": "I'm not shure this is so important. Both Ranker and Generator can be used several times with different configurations after init, and it won't break anything. In the same time loading other non-config data can time some time.\nTLDR i want to use that feature while experimenting with configurations, so i think it has some value",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T16:23:24Z",
        "PR Comment": "No, too much excessive information will be added that way",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T16:24:47Z",
        "PR Comment": "BTW about merge_configs - what would really improve the situation is to accept also None dict and treat is as empty one.",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T16:28:56Z",
        "PR Comment": "ok",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T16:32:25Z",
        "PR Comment": "The colution here would be for example to do smth like that `\"corrector\": {\"generation\": {}, \"ranking\"}}`(and pass this `config[\"corrector\"]` to the function). This was actually my first idea, but i decided to change it to the present one to avoid the growth of the nesting (`DEFAULT_CORRECTOR_CONFIG[\"corrector\"][\"generation\"]).",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T16:42:27Z",
        "PR Comment": "ok, let's keep it",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-25T12:06:50Z",
        "PR Comment": "Pro tip: you can use [munchify](https://github.com/Infinidat/munch) to work with it like `self.config.chunksize` instead of `self.config[\"chunk_size\"]` while leaving it a `dict`.",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-25T12:07:31Z",
        "PR Comment": "Missing \"\\\" in the ends of lines.",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-25T12:09:42Z",
        "PR Comment": "```suggestion\n                       edit_dist_number: Number of the most frequent tokens among tokens at \\\n```",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-25T12:11:33Z",
        "PR Comment": "```suggestion\n                       edit_dist_number: Number of the most frequent tokens among tokens at \\\n```",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-25T12:12:05Z",
        "PR Comment": "```suggestion\n                       edit_dist_number: Number of the most frequent tokens among tokens at \\\n```",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-25T12:12:37Z",
        "PR Comment": "Would be nice if you also document the types",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-25T12:13:31Z",
        "PR Comment": "Not required in this PR, of course",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-25T15:01:49Z",
        "PR Comment": "Missing what exactly? \"\\\" will put everything in one line afaik",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-25T15:02:02Z",
        "PR Comment": "Oh i see:) I also tried to write`\"\\\"`",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-21T14:54:45Z",
        "PR Comment": "No, here i merged only the configs for generating TyposCorrector model (and those configs that I added are actually saved with the model, as was before). Here just all the defaults for the model creating and training are stored in one place. The changes are in no way connected to the analyzer.",
        "PR/Issue Number": "718"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:37:47Z",
        "PR Comment": "If `repr` includes the class name, we should remove redundant \"Ranker\" from the logs.",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:37:56Z",
        "PR Comment": "same here",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:38:28Z",
        "PR Comment": "```suggestion\n            self._log.info(\"Candidates were not provided and will be generated.\")\n```",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:39:23Z",
        "PR Comment": "```suggestion\n        self._log.info(\"Train input: %s of %s\", data.shape, data.dtype)\n```",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:40:21Z",
        "PR Comment": "(it is better to make logs shorter and don't write long NL sentences - they make it longer to understand the logs)",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:41:28Z",
        "PR Comment": "```suggestion\n            self._log.info(\"Loaded candidates from %s\", candidates)\n```",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:42:13Z",
        "PR Comment": "```suggestion\n        log.warning(\"Raw dataset was not found. Downloading to %s from %s\",\n```",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:42:48Z",
        "PR Comment": "Order: first \"from\", second \"to\" \ud83d\ude04 ",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:43:22Z",
        "PR Comment": "```suggestion\n    log.info(\"Derive the new vocabulary\")\n```",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:43:52Z",
        "PR Comment": "The logs should all start with a capital letter or with a small letter",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:44:13Z",
        "PR Comment": "```suggestion\n    log.info(\"Tokens with frequencies data are saved to %s\", frequencies_tokens_filepath)\n```",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:45:06Z",
        "PR Comment": "```suggestion\n        self._log.info(\"Fitting has started.\")\n```",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:50:47Z",
        "PR Comment": "dtype is always the same so I'd rather use\n```python\nself._log.info(\"Train input shape: %s\", data.shape)\n```",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:59:02Z",
        "PR Comment": "wdym the same? I will call this function on an array of strings and watch it burn in fire.\n\nAfter all, the purpose of this line is to be a replacement for `repr`, but without the array contents. Let's be consistent.",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T12:09:33Z",
        "PR Comment": "@zurk Missed this ^",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T12:29:55Z",
        "PR Comment": "All logs start with small letter now:)",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T13:22:19Z",
        "PR Comment": "Oh \ud83d\ude04 ",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T12:01:50Z",
        "PR Comment": "Thanks, @vmarkovtsev, fixed!",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:37:47Z",
        "PR Comment": "If `repr` includes the class name, we should remove redundant \"Ranker\" from the logs.",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:37:56Z",
        "PR Comment": "same here",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:38:28Z",
        "PR Comment": "```suggestion\n            self._log.info(\"Candidates were not provided and will be generated.\")\n```",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:39:23Z",
        "PR Comment": "```suggestion\n        self._log.info(\"Train input: %s of %s\", data.shape, data.dtype)\n```",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:40:21Z",
        "PR Comment": "(it is better to make logs shorter and don't write long NL sentences - they make it longer to understand the logs)",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:41:28Z",
        "PR Comment": "```suggestion\n            self._log.info(\"Loaded candidates from %s\", candidates)\n```",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:42:13Z",
        "PR Comment": "```suggestion\n        log.warning(\"Raw dataset was not found. Downloading to %s from %s\",\n```",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:42:48Z",
        "PR Comment": "Order: first \"from\", second \"to\" \ud83d\ude04 ",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:43:22Z",
        "PR Comment": "```suggestion\n    log.info(\"Derive the new vocabulary\")\n```",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:43:52Z",
        "PR Comment": "The logs should all start with a capital letter or with a small letter",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:44:13Z",
        "PR Comment": "```suggestion\n    log.info(\"Tokens with frequencies data are saved to %s\", frequencies_tokens_filepath)\n```",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:45:06Z",
        "PR Comment": "```suggestion\n        self._log.info(\"Fitting has started.\")\n```",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:50:47Z",
        "PR Comment": "dtype is always the same so I'd rather use\n```python\nself._log.info(\"Train input shape: %s\", data.shape)\n```",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T11:59:02Z",
        "PR Comment": "wdym the same? I will call this function on an array of strings and watch it burn in fire.\n\nAfter all, the purpose of this line is to be a replacement for `repr`, but without the array contents. Let's be consistent.",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T12:09:33Z",
        "PR Comment": "@zurk Missed this ^",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T12:29:55Z",
        "PR Comment": "All logs start with small letter now:)",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T13:22:19Z",
        "PR Comment": "Oh \ud83d\ude04 ",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T12:01:50Z",
        "PR Comment": "Thanks, @vmarkovtsev, fixed!",
        "PR/Issue Number": "698"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T12:16:57Z",
        "PR Comment": "We shouldn't change this. Most likely this caused problems for you because you have outdated version of gensim. The requirements were updated recently, you should use the version stated there.",
        "PR/Issue Number": "700"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T12:19:37Z",
        "PR Comment": "Thank you, this needed to be done, but I suggest moving it to the beginning of `prepare_data()` function, as the same problem (directory doesn't exist) may also happen when the raw dataset is loaded from the local path.",
        "PR/Issue Number": "700"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-14T12:07:24Z",
        "PR Comment": "At this point I have got the idea of a very very simple Lookout analyzer to find these goddamn double whitespaces everywhere and bust them. I have hit this problem again and again since many years ago. @marnovo @campoy @smola ",
        "PR/Issue Number": "699"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-12T16:17:45Z",
        "PR Comment": "`slogging.setup` is not needed",
        "PR/Issue Number": "691"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-12T16:18:50Z",
        "PR Comment": "```python\nfor log_arg in (\"log_level\", \"...\"):\n    delattr(args, log_arg)\n```",
        "PR/Issue Number": "691"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-12T16:20:09Z",
        "PR Comment": "Can you please add \"erase_args\" boolean parameter to `add_logging_args` in sdk-ml so that it delattr-s those three arguments automatically (separately of this PR).",
        "PR/Issue Number": "691"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-12T16:21:14Z",
        "PR Comment": "I miss one last command here: `do_everything_in_one_single_command_without_parameters` \ud83d\ude04 ",
        "PR/Issue Number": "691"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-12T16:48:40Z",
        "PR Comment": "Hm, this actually must be done right here, in `train_from_scratch`, just by using default for `save_model_path`:)",
        "PR/Issue Number": "691"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-12T16:59:05Z",
        "PR Comment": "Ah OK. Can you please mark it with\n\n```python\n########################################\n# single command to rule them all\n########################################\n```\n\nso that nobody misses it :)",
        "PR/Issue Number": "691"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-12T16:17:45Z",
        "PR Comment": "`slogging.setup` is not needed",
        "PR/Issue Number": "691"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-12T16:18:50Z",
        "PR Comment": "```python\nfor log_arg in (\"log_level\", \"...\"):\n    delattr(args, log_arg)\n```",
        "PR/Issue Number": "691"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-12T16:20:09Z",
        "PR Comment": "Can you please add \"erase_args\" boolean parameter to `add_logging_args` in sdk-ml so that it delattr-s those three arguments automatically (separately of this PR).",
        "PR/Issue Number": "691"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-12T16:21:14Z",
        "PR Comment": "I miss one last command here: `do_everything_in_one_single_command_without_parameters` \ud83d\ude04 ",
        "PR/Issue Number": "691"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-12T16:48:40Z",
        "PR Comment": "Hm, this actually must be done right here, in `train_from_scratch`, just by using default for `save_model_path`:)",
        "PR/Issue Number": "691"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-12T16:59:05Z",
        "PR Comment": "Ah OK. Can you please mark it with\n\n```python\n########################################\n# single command to rule them all\n########################################\n```\n\nso that nobody misses it :)",
        "PR/Issue Number": "691"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-11T13:16:56Z",
        "PR Comment": "Would be nice to have a comment here what does this huge size mean",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-11T13:18:22Z",
        "PR Comment": "Better to use long names: embeddings.bin\n\nAnd btw what is `bin`? If it is the numpy format, we should use `npy`, etc.",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-11T13:19:02Z",
        "PR Comment": "```suggestion\n                   vocabulary_filename: Name of the .csv file in `data_dir` to save vocabulary to.\n```\n\n(the same below)",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-11T13:19:54Z",
        "PR Comment": "You should never hardcode these values. `multiprocessing.cpu_count()`",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-11T13:20:17Z",
        "PR Comment": "same here - `threads_number`",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-11T13:22:26Z",
        "PR Comment": "It's fasttext default format for saving full model.",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-12T10:30:49Z",
        "PR Comment": "multiprocessing works with processes, not with threads. Those two are very different, especially for Python. So do you mean `processes_number` here?",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-12T13:30:15Z",
        "PR Comment": "Yes, it's processes, changing it everywhere.",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-11T13:16:56Z",
        "PR Comment": "Would be nice to have a comment here what does this huge size mean",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-11T13:18:22Z",
        "PR Comment": "Better to use long names: embeddings.bin\n\nAnd btw what is `bin`? If it is the numpy format, we should use `npy`, etc.",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-11T13:19:02Z",
        "PR Comment": "```suggestion\n                   vocabulary_filename: Name of the .csv file in `data_dir` to save vocabulary to.\n```\n\n(the same below)",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-11T13:19:54Z",
        "PR Comment": "You should never hardcode these values. `multiprocessing.cpu_count()`",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-11T13:20:17Z",
        "PR Comment": "same here - `threads_number`",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-11T13:22:26Z",
        "PR Comment": "It's fasttext default format for saving full model.",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-12T10:30:49Z",
        "PR Comment": "multiprocessing works with processes, not with threads. Those two are very different, especially for Python. So do you mean `processes_number` here?",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-12T13:30:15Z",
        "PR Comment": "Yes, it's processes, changing it everywhere.",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-11T13:16:56Z",
        "PR Comment": "Would be nice to have a comment here what does this huge size mean",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-11T13:18:22Z",
        "PR Comment": "Better to use long names: embeddings.bin\n\nAnd btw what is `bin`? If it is the numpy format, we should use `npy`, etc.",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-11T13:19:02Z",
        "PR Comment": "```suggestion\n                   vocabulary_filename: Name of the .csv file in `data_dir` to save vocabulary to.\n```\n\n(the same below)",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-11T13:19:54Z",
        "PR Comment": "You should never hardcode these values. `multiprocessing.cpu_count()`",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-11T13:20:17Z",
        "PR Comment": "same here - `threads_number`",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-11T13:22:26Z",
        "PR Comment": "It's fasttext default format for saving full model.",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-12T10:30:49Z",
        "PR Comment": "multiprocessing works with processes, not with threads. Those two are very different, especially for Python. So do you mean `processes_number` here?",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-12T13:30:15Z",
        "PR Comment": "Yes, it's processes, changing it everywhere.",
        "PR/Issue Number": "684"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-07T08:58:32Z",
        "PR Comment": "thanks!",
        "PR/Issue Number": "669"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-05T16:04:10Z",
        "PR Comment": "```suggestion\n    Create and train TyposCorrector model on the given data.\n```",
        "PR/Issue Number": "661"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-05T16:04:27Z",
        "PR Comment": "Should always be a dataframe only",
        "PR/Issue Number": "661"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-05T16:05:01Z",
        "PR Comment": "```suggestion\n                       Columns.CorrectToken, column Columns.Split is optional, but used \\\n```",
        "PR/Issue Number": "661"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-05T16:05:17Z",
        "PR Comment": "same here: only dataframe",
        "PR/Issue Number": "661"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-05T16:05:27Z",
        "PR Comment": "```suggestion\n    :param test_data: Dataframe or its .csv dump, containing columns \\\n```",
        "PR/Issue Number": "661"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-06T07:52:10Z",
        "PR Comment": "One build has failed for no reason, looks like it has nothing to do with the code, how to rerun it without pushing smth?",
        "PR/Issue Number": "661"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-06T11:49:36Z",
        "PR Comment": "Conflicts here and in #660 after merging #659",
        "PR/Issue Number": "661"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-06T12:12:02Z",
        "PR Comment": "> One build has failed for no reason, looks like it has nothing to do with the code, how to rerun it without pushing smth?\n\nYou should be able to restart the build in Travis. Usually it happens because of random networking problems.",
        "PR/Issue Number": "661"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-06T13:42:32Z",
        "PR Comment": "@irinakhismatullina Conflicts again :(",
        "PR/Issue Number": "661"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-05T16:04:10Z",
        "PR Comment": "```suggestion\n    Create and train TyposCorrector model on the given data.\n```",
        "PR/Issue Number": "661"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-05T16:04:27Z",
        "PR Comment": "Should always be a dataframe only",
        "PR/Issue Number": "661"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-05T16:05:01Z",
        "PR Comment": "```suggestion\n                       Columns.CorrectToken, column Columns.Split is optional, but used \\\n```",
        "PR/Issue Number": "661"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-05T16:05:17Z",
        "PR Comment": "same here: only dataframe",
        "PR/Issue Number": "661"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-05T16:05:27Z",
        "PR Comment": "```suggestion\n    :param test_data: Dataframe or its .csv dump, containing columns \\\n```",
        "PR/Issue Number": "661"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-06T07:52:10Z",
        "PR Comment": "One build has failed for no reason, looks like it has nothing to do with the code, how to rerun it without pushing smth?",
        "PR/Issue Number": "661"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-06T11:49:36Z",
        "PR Comment": "Conflicts here and in #660 after merging #659",
        "PR/Issue Number": "661"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-06T12:12:02Z",
        "PR Comment": "> One build has failed for no reason, looks like it has nothing to do with the code, how to rerun it without pushing smth?\n\nYou should be able to restart the build in Travis. Usually it happens because of random networking problems.",
        "PR/Issue Number": "661"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/preparation.py",
        "Creation Date": "2019-03-06T13:42:32Z",
        "PR Comment": "@irinakhismatullina Conflicts again :(",
        "PR/Issue Number": "661"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-06-06T07:58:37Z",
        "PR Comment": "Ok, I see that cmd module was not added to sourced.ml.core. \nI think it is fine to copy-paste this util function here. ",
        "PR/Issue Number": "778"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-06-07T05:17:11Z",
        "PR Comment": "It's not OK to remove tests. ",
        "PR/Issue Number": "778"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-06-11T12:48:18Z",
        "PR Comment": "But it's OK to add tests :)",
        "PR/Issue Number": "778"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-22T10:48:30Z",
        "PR Comment": "Awesome. We should not make the same mistake twice and check PEP8 in the future research projects. ",
        "PR/Issue Number": "769"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-16T08:57:58Z",
        "PR Comment": "`commits_with_typo` already filtered from https://github.com/src-d/style-analyzer/blob/master/lookout/style/typos/research/eval_dataset/typos_dataset.csv.xz\n\nWe should replace the old `\"commits_with_typo.csv.xz\"` file with a new one. ",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-16T08:58:05Z",
        "PR Comment": "Can you add a docstring with the same explanation you add to a PR? ",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T14:47:26Z",
        "PR Comment": "```suggestion\n    Extract non-typo-ed identifiers from the dataset.\n```\nSomeone has to write a linter rule to disable repeating the function name parts in the docstring.",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T14:49:18Z",
        "PR Comment": "```suggestion\n    1. Filter items, where token splits of the wrong and the correct identifiers are equal (they differ in non-alpha \\\n```",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T14:51:43Z",
        "PR Comment": "```suggestion\n    chars or casing).\n```",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T14:52:17Z",
        "PR Comment": "**test** dataset?",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T14:52:36Z",
        "PR Comment": "Single quotes.",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T15:05:53Z",
        "PR Comment": "Don't you think that it's cool if the function name really reflects the best way you would describe it's work in a text?\nAnyway I thought of the better name which gives clearer understanding of what the function does.",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T15:17:31Z",
        "PR Comment": "Totally cool, that's right. Not cool to have a docstring which does not give any additional information about the function, that's my point :)",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T15:21:17Z",
        "PR Comment": "I particularly don't like the word \"filter\" in source code because it can mean different things:\n\n1. Remove something and return the rest.\n2. Extract something, return it, and discard the rest.\n\nThose are two opposite actions. Many programmers all over the world keep using \"filter\" at random and it really puzzles every time when you read their code. This is why repeating \"filter\" in the docstring is so unhelpful.",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T15:23:25Z",
        "PR Comment": "Totally agree, I think I myself sometimes use it for both, and always feel confused, so i really like the new name:)",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T15:44:17Z",
        "PR Comment": "This line is 120 characters. How come that it passed the CI?",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T15:45:19Z",
        "PR Comment": "Ah, because we do not check `research` for formatting. We should change this.",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-16T09:45:08Z",
        "PR Comment": "Btw src-d/ml-core has [old TokenParser](https://github.com/src-d/ml-core/blob/master/sourced/ml/core/algorithms/token_parser.py), so right now it cannot be used.",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-16T09:54:18Z",
        "PR Comment": "Ok, I will update it.",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-16T11:46:55Z",
        "PR Comment": "PR with an update: https://github.com/src-d/ml-core/pull/13",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-16T08:57:58Z",
        "PR Comment": "`commits_with_typo` already filtered from https://github.com/src-d/style-analyzer/blob/master/lookout/style/typos/research/eval_dataset/typos_dataset.csv.xz\n\nWe should replace the old `\"commits_with_typo.csv.xz\"` file with a new one. ",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-16T08:58:05Z",
        "PR Comment": "Can you add a docstring with the same explanation you add to a PR? ",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T14:47:26Z",
        "PR Comment": "```suggestion\n    Extract non-typo-ed identifiers from the dataset.\n```\nSomeone has to write a linter rule to disable repeating the function name parts in the docstring.",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T14:49:18Z",
        "PR Comment": "```suggestion\n    1. Filter items, where token splits of the wrong and the correct identifiers are equal (they differ in non-alpha \\\n```",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T14:51:43Z",
        "PR Comment": "```suggestion\n    chars or casing).\n```",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T14:52:17Z",
        "PR Comment": "**test** dataset?",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T14:52:36Z",
        "PR Comment": "Single quotes.",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T15:05:53Z",
        "PR Comment": "Don't you think that it's cool if the function name really reflects the best way you would describe it's work in a text?\nAnyway I thought of the better name which gives clearer understanding of what the function does.",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T15:17:31Z",
        "PR Comment": "Totally cool, that's right. Not cool to have a docstring which does not give any additional information about the function, that's my point :)",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T15:21:17Z",
        "PR Comment": "I particularly don't like the word \"filter\" in source code because it can mean different things:\n\n1. Remove something and return the rest.\n2. Extract something, return it, and discard the rest.\n\nThose are two opposite actions. Many programmers all over the world keep using \"filter\" at random and it really puzzles every time when you read their code. This is why repeating \"filter\" in the docstring is so unhelpful.",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T15:23:25Z",
        "PR Comment": "Totally agree, I think I myself sometimes use it for both, and always feel confused, so i really like the new name:)",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T15:44:17Z",
        "PR Comment": "This line is 120 characters. How come that it passed the CI?",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T15:45:19Z",
        "PR Comment": "Ah, because we do not check `research` for formatting. We should change this.",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-16T09:45:08Z",
        "PR Comment": "Btw src-d/ml-core has [old TokenParser](https://github.com/src-d/ml-core/blob/master/sourced/ml/core/algorithms/token_parser.py), so right now it cannot be used.",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-16T09:54:18Z",
        "PR Comment": "Ok, I will update it.",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-16T11:46:55Z",
        "PR Comment": "PR with an update: https://github.com/src-d/ml-core/pull/13",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-16T08:57:58Z",
        "PR Comment": "`commits_with_typo` already filtered from https://github.com/src-d/style-analyzer/blob/master/lookout/style/typos/research/eval_dataset/typos_dataset.csv.xz\n\nWe should replace the old `\"commits_with_typo.csv.xz\"` file with a new one. ",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-16T08:58:05Z",
        "PR Comment": "Can you add a docstring with the same explanation you add to a PR? ",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T14:47:26Z",
        "PR Comment": "```suggestion\n    Extract non-typo-ed identifiers from the dataset.\n```\nSomeone has to write a linter rule to disable repeating the function name parts in the docstring.",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T14:49:18Z",
        "PR Comment": "```suggestion\n    1. Filter items, where token splits of the wrong and the correct identifiers are equal (they differ in non-alpha \\\n```",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T14:51:43Z",
        "PR Comment": "```suggestion\n    chars or casing).\n```",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T14:52:17Z",
        "PR Comment": "**test** dataset?",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T14:52:36Z",
        "PR Comment": "Single quotes.",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T15:05:53Z",
        "PR Comment": "Don't you think that it's cool if the function name really reflects the best way you would describe it's work in a text?\nAnyway I thought of the better name which gives clearer understanding of what the function does.",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T15:17:31Z",
        "PR Comment": "Totally cool, that's right. Not cool to have a docstring which does not give any additional information about the function, that's my point :)",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T15:21:17Z",
        "PR Comment": "I particularly don't like the word \"filter\" in source code because it can mean different things:\n\n1. Remove something and return the rest.\n2. Extract something, return it, and discard the rest.\n\nThose are two opposite actions. Many programmers all over the world keep using \"filter\" at random and it really puzzles every time when you read their code. This is why repeating \"filter\" in the docstring is so unhelpful.",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T15:23:25Z",
        "PR Comment": "Totally agree, I think I myself sometimes use it for both, and always feel confused, so i really like the new name:)",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T15:44:17Z",
        "PR Comment": "This line is 120 characters. How come that it passed the CI?",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-21T15:45:19Z",
        "PR Comment": "Ah, because we do not check `research` for formatting. We should change this.",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-16T09:45:08Z",
        "PR Comment": "Btw src-d/ml-core has [old TokenParser](https://github.com/src-d/ml-core/blob/master/sourced/ml/core/algorithms/token_parser.py), so right now it cannot be used.",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-16T09:54:18Z",
        "PR Comment": "Ok, I will update it.",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/src-d/style-analyzer",
        "filepath": "lookout/style/typos/research/eval_dataset/filter_dataset.py",
        "Creation Date": "2019-05-16T11:46:55Z",
        "PR Comment": "PR with an update: https://github.com/src-d/ml-core/pull/13",
        "PR/Issue Number": "763"
    },
    {
        "repo_url": "github.com/equinor/eNLP",
        "filepath": "enlp/processing/stdtools.py",
        "Creation Date": "2020-04-16T21:49:35Z",
        "PR Comment": "Also fixed one of the Codacy issues :) the one with the reimport in `stdtools.py`.",
        "PR/Issue Number": "5"
    },
    {
        "repo_url": "github.com/equinor/eNLP",
        "filepath": "enlp/processing/stdtools.py",
        "Creation Date": "2020-04-17T12:58:20Z",
        "PR Comment": "This is great! Thank you for adding to the library \ud83e\udd47 ",
        "PR/Issue Number": "5"
    },
    {
        "repo_url": "github.com/equinor/eNLP",
        "filepath": "tests/processing/test_tokenise.py",
        "Creation Date": "2020-04-20T08:17:51Z",
        "PR Comment": "Hei, this is a great PR and I really welcome your feedback, thank you. \n\nI like the formatting from black however I do not wish to enforce black formatting for the moment. My understanding is at the moment it is still slightly contended within the software development community. I am conscious not to incorporate anything that may reduce accessibility to the library, so whilst it is nice to have the code formatted in that manner then I do not wish to enforce it automatically and risk causing additional conflicts to contributors.\n\nThe aim of the library is really to be easy to use and contribute back to by other data scientists. We will of course ensure that all contributions meet a minimum coding standard however as the majority of data scientists are not trained software developers then I do not wish to strictly enforce aspects of software development that may discourage some more junior contributors.\n\nThanks \ud83d\udc4d ",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/equinor/eNLP",
        "filepath": "tests/processing/test_tokenise.py",
        "Creation Date": "2020-04-20T13:44:53Z",
        "PR Comment": "Gotcha :thumbsup:\n\nThe `black` module is still in the requirements.txt, so anyone wanting to run the formatter can still do so.",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-15T20:20:55Z",
        "PR Comment": "This line is throwing the error. If you remove it the CI tests should pass :) ",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-19T07:04:54Z",
        "PR Comment": "\nOkay I found out why the check didn't work :)",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-19T07:04:27Z",
        "PR Comment": "Okay I found out why the check didn't work :)",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-15T20:20:55Z",
        "PR Comment": "This line is throwing the error. If you remove it the CI tests should pass :) ",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-19T07:04:54Z",
        "PR Comment": "\nOkay I found out why the check didn't work :)",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-19T07:04:27Z",
        "PR Comment": "Okay I found out why the check didn't work :)",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-15T20:20:55Z",
        "PR Comment": "This line is throwing the error. If you remove it the CI tests should pass :) ",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-19T07:04:54Z",
        "PR Comment": "\nOkay I found out why the check didn't work :)",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-19T07:04:27Z",
        "PR Comment": "Okay I found out why the check didn't work :)",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-15T20:20:55Z",
        "PR Comment": "This line is throwing the error. If you remove it the CI tests should pass :) ",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-19T07:04:54Z",
        "PR Comment": "\nOkay I found out why the check didn't work :)",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-19T07:04:27Z",
        "PR Comment": "Okay I found out why the check didn't work :)",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-15T20:20:55Z",
        "PR Comment": "This line is throwing the error. If you remove it the CI tests should pass :) ",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-19T07:04:54Z",
        "PR Comment": "\nOkay I found out why the check didn't work :)",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-19T07:04:27Z",
        "PR Comment": "Okay I found out why the check didn't work :)",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-15T20:20:55Z",
        "PR Comment": "This line is throwing the error. If you remove it the CI tests should pass :) ",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-19T07:04:54Z",
        "PR Comment": "\nOkay I found out why the check didn't work :)",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-19T07:04:27Z",
        "PR Comment": "Okay I found out why the check didn't work :)",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-15T20:20:55Z",
        "PR Comment": "This line is throwing the error. If you remove it the CI tests should pass :) ",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-19T07:04:54Z",
        "PR Comment": "\nOkay I found out why the check didn't work :)",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-19T07:04:27Z",
        "PR Comment": "Okay I found out why the check didn't work :)",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-15T20:20:55Z",
        "PR Comment": "This line is throwing the error. If you remove it the CI tests should pass :) ",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-19T07:04:54Z",
        "PR Comment": "\nOkay I found out why the check didn't work :)",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-19T07:04:27Z",
        "PR Comment": "Okay I found out why the check didn't work :)",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-15T20:20:55Z",
        "PR Comment": "This line is throwing the error. If you remove it the CI tests should pass :) ",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-19T07:04:54Z",
        "PR Comment": "\nOkay I found out why the check didn't work :)",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-19T07:04:27Z",
        "PR Comment": "Okay I found out why the check didn't work :)",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-12-02T18:16:59Z",
        "PR Comment": "No need to create a new variable, let's just return stat_total",
        "PR/Issue Number": "134"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-12-02T18:17:22Z",
        "PR Comment": "No need to create a new variable, let's just return stat_adv",
        "PR/Issue Number": "134"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-12-02T18:19:42Z",
        "PR Comment": "Let's also leverage a similarity threshold in case the query was misclassified and return `None` for the extracted stat if the threshold is not met.",
        "PR/Issue Number": "134"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-12-02T19:50:34Z",
        "PR Comment": "> Have you found any cases where this returns an unexpected value? Would be good to note for the future.\n\nNothing unexpected like the initial issue from what I can tell, but I am not totally sure how the Chat was performing, other than the rebound/3-point confusion, before I started working on it. \n\nThere are times when the return is more specific than expected, eg:\n```\nQuery: What is Kobe Bryan't shooting percentage?\nOutput: Kobe Bryant has a true shooting percentage of 0.544\n```\nBut a completely different stat has not come up during my tests. ",
        "PR/Issue Number": "134"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-12-02T20:58:59Z",
        "PR Comment": "> > Have you found any cases where this returns an unexpected value? Would be good to note for the future.\n> \n> Nothing unexpected like the initial issue from what I can tell, but I am not totally sure how the Chat was performing, other than the rebound/3-point confusion, before I started working on it.\n> \n> There are times when the return is more specific than expected, eg:\n> \n> ```\n> Query: What is Kobe Bryan't shooting percentage?\n> Output: Kobe Bryant has a true shooting percentage of 0.544\n> ```\n> \n> But a completely different stat has not come up during my tests.\n\nAwesome! Not a problem, better to have a stat that it too accurate than incorrect \ud83d\ude04 ",
        "PR/Issue Number": "134"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-12-02T21:43:45Z",
        "PR Comment": "Ok great! Thank you for all your communication on this, it's a fun project and I will try to keep contributing as issues come up. \n\n> @AidanKenney great work! Out of curiosity how did you decide the similarity threshold? Was a higher similarity threshold returning `None` more often than necessary?\n\nThe lowest match ratio I saw that still gave the desired result was a 57, so I gave it a little extra cushion. Happy to change it up though!",
        "PR/Issue Number": "134"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-12-02T22:07:31Z",
        "PR Comment": "> Ok great! Thank you for all your communication on this, it's a fun project and I will try to keep contributing as issues come up.\n> \n> > @AidanKenney great work! Out of curiosity how did you decide the similarity threshold? Was a higher similarity threshold returning `None` more often than necessary?\n> \n> The lowest match ratio I saw that still gave the desired result was a 57, so I gave it a little extra cushion. Happy to change it up though!\n\nSeems, like it is working fine! I'll go ahead and merge the PR.",
        "PR/Issue Number": "134"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-12-02T22:08:22Z",
        "PR Comment": "Awesome! Thanks @skekre98 ",
        "PR/Issue Number": "134"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-12-02T18:16:59Z",
        "PR Comment": "No need to create a new variable, let's just return stat_total",
        "PR/Issue Number": "134"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-12-02T18:17:22Z",
        "PR Comment": "No need to create a new variable, let's just return stat_adv",
        "PR/Issue Number": "134"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-12-02T18:19:42Z",
        "PR Comment": "Let's also leverage a similarity threshold in case the query was misclassified and return `None` for the extracted stat if the threshold is not met.",
        "PR/Issue Number": "134"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-12-02T19:50:34Z",
        "PR Comment": "> Have you found any cases where this returns an unexpected value? Would be good to note for the future.\n\nNothing unexpected like the initial issue from what I can tell, but I am not totally sure how the Chat was performing, other than the rebound/3-point confusion, before I started working on it. \n\nThere are times when the return is more specific than expected, eg:\n```\nQuery: What is Kobe Bryan't shooting percentage?\nOutput: Kobe Bryant has a true shooting percentage of 0.544\n```\nBut a completely different stat has not come up during my tests. ",
        "PR/Issue Number": "134"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-12-02T20:58:59Z",
        "PR Comment": "> > Have you found any cases where this returns an unexpected value? Would be good to note for the future.\n> \n> Nothing unexpected like the initial issue from what I can tell, but I am not totally sure how the Chat was performing, other than the rebound/3-point confusion, before I started working on it.\n> \n> There are times when the return is more specific than expected, eg:\n> \n> ```\n> Query: What is Kobe Bryan't shooting percentage?\n> Output: Kobe Bryant has a true shooting percentage of 0.544\n> ```\n> \n> But a completely different stat has not come up during my tests.\n\nAwesome! Not a problem, better to have a stat that it too accurate than incorrect \ud83d\ude04 ",
        "PR/Issue Number": "134"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-12-02T21:43:45Z",
        "PR Comment": "Ok great! Thank you for all your communication on this, it's a fun project and I will try to keep contributing as issues come up. \n\n> @AidanKenney great work! Out of curiosity how did you decide the similarity threshold? Was a higher similarity threshold returning `None` more often than necessary?\n\nThe lowest match ratio I saw that still gave the desired result was a 57, so I gave it a little extra cushion. Happy to change it up though!",
        "PR/Issue Number": "134"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-12-02T22:07:31Z",
        "PR Comment": "> Ok great! Thank you for all your communication on this, it's a fun project and I will try to keep contributing as issues come up.\n> \n> > @AidanKenney great work! Out of curiosity how did you decide the similarity threshold? Was a higher similarity threshold returning `None` more often than necessary?\n> \n> The lowest match ratio I saw that still gave the desired result was a 57, so I gave it a little extra cushion. Happy to change it up though!\n\nSeems, like it is working fine! I'll go ahead and merge the PR.",
        "PR/Issue Number": "134"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-12-02T22:08:22Z",
        "PR Comment": "Awesome! Thanks @skekre98 ",
        "PR/Issue Number": "134"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-15T20:20:55Z",
        "PR Comment": "This line is throwing the error. If you remove it the CI tests should pass :) ",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-19T07:04:54Z",
        "PR Comment": "\nOkay I found out why the check didn't work :)",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2021-01-19T07:04:27Z",
        "PR Comment": "Okay I found out why the check didn't work :)",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-30T17:54:01Z",
        "PR Comment": "Let's move functions to extract name, stat, and stat_val into `response`. Just leave `generate_random_response` to actually create the string response from these values. See `ranknode.py` for an example.",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-31T18:46:01Z",
        "PR Comment": "You are missing `stat` as an input parameter.",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-31T18:47:22Z",
        "PR Comment": "You need to move this before `get_player_stat` is called",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-31T18:48:08Z",
        "PR Comment": "You need to move this before `get_player_stat` is called",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-30T17:55:40Z",
        "PR Comment": "@Ervin66 Looks close, the CI pipeline is complaining because `response` is being used incorrectly. Responses look good though, so just one change and we should be ready to merge \ud83d\udc4d ",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-31T18:36:41Z",
        "PR Comment": "I don't understand the errors",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-31T18:49:38Z",
        "PR Comment": "@Ervin66 see comments. There are a few issues about the way you have implemented `response`",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-30T17:54:01Z",
        "PR Comment": "Let's move functions to extract name, stat, and stat_val into `response`. Just leave `generate_random_response` to actually create the string response from these values. See `ranknode.py` for an example.",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-31T18:46:01Z",
        "PR Comment": "You are missing `stat` as an input parameter.",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-31T18:47:22Z",
        "PR Comment": "You need to move this before `get_player_stat` is called",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-31T18:48:08Z",
        "PR Comment": "You need to move this before `get_player_stat` is called",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-30T17:55:40Z",
        "PR Comment": "@Ervin66 Looks close, the CI pipeline is complaining because `response` is being used incorrectly. Responses look good though, so just one change and we should be ready to merge \ud83d\udc4d ",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-31T18:36:41Z",
        "PR Comment": "I don't understand the errors",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-31T18:49:38Z",
        "PR Comment": "@Ervin66 see comments. There are a few issues about the way you have implemented `response`",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-30T17:54:01Z",
        "PR Comment": "Let's move functions to extract name, stat, and stat_val into `response`. Just leave `generate_random_response` to actually create the string response from these values. See `ranknode.py` for an example.",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-31T18:46:01Z",
        "PR Comment": "You are missing `stat` as an input parameter.",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-31T18:47:22Z",
        "PR Comment": "You need to move this before `get_player_stat` is called",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-31T18:48:08Z",
        "PR Comment": "You need to move this before `get_player_stat` is called",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-30T17:55:40Z",
        "PR Comment": "@Ervin66 Looks close, the CI pipeline is complaining because `response` is being used incorrectly. Responses look good though, so just one change and we should be ready to merge \ud83d\udc4d ",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-31T18:36:41Z",
        "PR Comment": "I don't understand the errors",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-31T18:49:38Z",
        "PR Comment": "@Ervin66 see comments. There are a few issues about the way you have implemented `response`",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-30T17:54:01Z",
        "PR Comment": "Let's move functions to extract name, stat, and stat_val into `response`. Just leave `generate_random_response` to actually create the string response from these values. See `ranknode.py` for an example.",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-31T18:46:01Z",
        "PR Comment": "You are missing `stat` as an input parameter.",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-31T18:47:22Z",
        "PR Comment": "You need to move this before `get_player_stat` is called",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-31T18:48:08Z",
        "PR Comment": "You need to move this before `get_player_stat` is called",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-30T17:55:40Z",
        "PR Comment": "@Ervin66 Looks close, the CI pipeline is complaining because `response` is being used incorrectly. Responses look good though, so just one change and we should be ready to merge \ud83d\udc4d ",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-31T18:36:41Z",
        "PR Comment": "I don't understand the errors",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/statnode.py",
        "Creation Date": "2020-10-31T18:49:38Z",
        "PR Comment": "@Ervin66 see comments. There are a few issues about the way you have implemented `response`",
        "PR/Issue Number": "106"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/infonode.py",
        "Creation Date": "2020-11-10T19:51:54Z",
        "PR Comment": "described*",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/infonode.py",
        "Creation Date": "2020-11-10T19:54:22Z",
        "PR Comment": "Perhaps remove the \"I\" after the and to just leave it as \"and skekre98 is leading them.\"",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/infonode.py",
        "Creation Date": "2020-11-10T19:51:54Z",
        "PR Comment": "described*",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/infonode.py",
        "Creation Date": "2020-11-10T19:54:22Z",
        "PR Comment": "Perhaps remove the \"I\" after the and to just leave it as \"and skekre98 is leading them.\"",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/infonode.py",
        "Creation Date": "2020-10-22T16:53:22Z",
        "PR Comment": "Can you convert this return to a set. Will make _in_ command in test constant time instead of linear.\n```python\nreturn({'do','be'})\n```",
        "PR/Issue Number": "83"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/infonode.py",
        "Creation Date": "2020-10-22T16:54:15Z",
        "PR Comment": "Can you convert this return to a set. Will make _in_ command in test constant time instead of linear.\n```python\nreturn({'make','build'})\n```",
        "PR/Issue Number": "83"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/infonode.py",
        "Creation Date": "2020-10-22T17:10:56Z",
        "PR Comment": "All set.",
        "PR/Issue Number": "83"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/infonode.py",
        "Creation Date": "2020-10-22T17:11:01Z",
        "PR Comment": "All set.",
        "PR/Issue Number": "83"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/infonode.py",
        "Creation Date": "2020-10-22T17:43:01Z",
        "PR Comment": "Any way you can add the hacktoberfest-accepted label? I would be very grateful. ",
        "PR/Issue Number": "83"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/infonode.py",
        "Creation Date": "2020-10-22T16:53:22Z",
        "PR Comment": "Can you convert this return to a set. Will make _in_ command in test constant time instead of linear.\n```python\nreturn({'do','be'})\n```",
        "PR/Issue Number": "83"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/infonode.py",
        "Creation Date": "2020-10-22T16:54:15Z",
        "PR Comment": "Can you convert this return to a set. Will make _in_ command in test constant time instead of linear.\n```python\nreturn({'make','build'})\n```",
        "PR/Issue Number": "83"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/infonode.py",
        "Creation Date": "2020-10-22T17:10:56Z",
        "PR Comment": "All set.",
        "PR/Issue Number": "83"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/infonode.py",
        "Creation Date": "2020-10-22T17:11:01Z",
        "PR Comment": "All set.",
        "PR/Issue Number": "83"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/infonode.py",
        "Creation Date": "2020-10-22T17:43:01Z",
        "PR Comment": "Any way you can add the hacktoberfest-accepted label? I would be very grateful. ",
        "PR/Issue Number": "83"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/infonode.py",
        "Creation Date": "2020-10-22T16:53:22Z",
        "PR Comment": "Can you convert this return to a set. Will make _in_ command in test constant time instead of linear.\n```python\nreturn({'do','be'})\n```",
        "PR/Issue Number": "83"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/infonode.py",
        "Creation Date": "2020-10-22T16:54:15Z",
        "PR Comment": "Can you convert this return to a set. Will make _in_ command in test constant time instead of linear.\n```python\nreturn({'make','build'})\n```",
        "PR/Issue Number": "83"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/infonode.py",
        "Creation Date": "2020-10-22T17:10:56Z",
        "PR Comment": "All set.",
        "PR/Issue Number": "83"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/infonode.py",
        "Creation Date": "2020-10-22T17:11:01Z",
        "PR Comment": "All set.",
        "PR/Issue Number": "83"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/infonode.py",
        "Creation Date": "2020-10-22T17:43:01Z",
        "PR Comment": "Any way you can add the hacktoberfest-accepted label? I would be very grateful. ",
        "PR/Issue Number": "83"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/infonode.py",
        "Creation Date": "2020-10-19T15:11:35Z",
        "PR Comment": "just removed the variables and imports, ready to merge",
        "PR/Issue Number": "74"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "inference/infonode.py",
        "Creation Date": "2020-10-19T15:11:35Z",
        "PR Comment": "just removed the variables and imports, ready to merge",
        "PR/Issue Number": "74"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T19:22:54Z",
        "PR Comment": "You can just change this to `if not west[0] or not east[0]:` no need to create a new list for conditional.",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T19:23:06Z",
        "PR Comment": "Please remove this prior to merge.",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T23:49:56Z",
        "PR Comment": "@MishalAshraf can you change the inner entries to tuples. Let's try to keep it in sync with the other entries in the `dict`. See line 131 as an example.\n\nSo `[\"\",\"\"],[\"\",\"\"]` should be `(\"\",\"\"),(\"\",\"\")` for all entries in the map",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-06T20:14:47Z",
        "PR Comment": "Awesome @MishalAshraf, please also see my comment on #145 regarding the null pointer check. Can you also show me a screenshot of what the playoff bracket looks like now?",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T23:50:31Z",
        "PR Comment": "Great work @MishalAshraf, one minor change and we should be good to merge \ud83d\udc4d  ",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T23:57:01Z",
        "PR Comment": "> LGTM \ud83c\udf89\n\nAwesome! Thanks for your patience, my first actual PR!",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-08T00:09:26Z",
        "PR Comment": " > Awesome! Thanks for your patience, my first actual PR!\n\nCongrats on your first successful open source commit \ud83c\udf89 ",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T19:22:54Z",
        "PR Comment": "You can just change this to `if not west[0] or not east[0]:` no need to create a new list for conditional.",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T19:23:06Z",
        "PR Comment": "Please remove this prior to merge.",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T23:49:56Z",
        "PR Comment": "@MishalAshraf can you change the inner entries to tuples. Let's try to keep it in sync with the other entries in the `dict`. See line 131 as an example.\n\nSo `[\"\",\"\"],[\"\",\"\"]` should be `(\"\",\"\"),(\"\",\"\")` for all entries in the map",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-06T20:14:47Z",
        "PR Comment": "Awesome @MishalAshraf, please also see my comment on #145 regarding the null pointer check. Can you also show me a screenshot of what the playoff bracket looks like now?",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T23:50:31Z",
        "PR Comment": "Great work @MishalAshraf, one minor change and we should be good to merge \ud83d\udc4d  ",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T23:57:01Z",
        "PR Comment": "> LGTM \ud83c\udf89\n\nAwesome! Thanks for your patience, my first actual PR!",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-08T00:09:26Z",
        "PR Comment": " > Awesome! Thanks for your patience, my first actual PR!\n\nCongrats on your first successful open source commit \ud83c\udf89 ",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T19:22:54Z",
        "PR Comment": "You can just change this to `if not west[0] or not east[0]:` no need to create a new list for conditional.",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T19:23:06Z",
        "PR Comment": "Please remove this prior to merge.",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T23:49:56Z",
        "PR Comment": "@MishalAshraf can you change the inner entries to tuples. Let's try to keep it in sync with the other entries in the `dict`. See line 131 as an example.\n\nSo `[\"\",\"\"],[\"\",\"\"]` should be `(\"\",\"\"),(\"\",\"\")` for all entries in the map",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-06T20:14:47Z",
        "PR Comment": "Awesome @MishalAshraf, please also see my comment on #145 regarding the null pointer check. Can you also show me a screenshot of what the playoff bracket looks like now?",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T23:50:31Z",
        "PR Comment": "Great work @MishalAshraf, one minor change and we should be good to merge \ud83d\udc4d  ",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T23:57:01Z",
        "PR Comment": "> LGTM \ud83c\udf89\n\nAwesome! Thanks for your patience, my first actual PR!",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-08T00:09:26Z",
        "PR Comment": " > Awesome! Thanks for your patience, my first actual PR!\n\nCongrats on your first successful open source commit \ud83c\udf89 ",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T19:22:54Z",
        "PR Comment": "You can just change this to `if not west[0] or not east[0]:` no need to create a new list for conditional.",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T19:23:06Z",
        "PR Comment": "Please remove this prior to merge.",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T23:49:56Z",
        "PR Comment": "@MishalAshraf can you change the inner entries to tuples. Let's try to keep it in sync with the other entries in the `dict`. See line 131 as an example.\n\nSo `[\"\",\"\"],[\"\",\"\"]` should be `(\"\",\"\"),(\"\",\"\")` for all entries in the map",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-06T20:14:47Z",
        "PR Comment": "Awesome @MishalAshraf, please also see my comment on #145 regarding the null pointer check. Can you also show me a screenshot of what the playoff bracket looks like now?",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T23:50:31Z",
        "PR Comment": "Great work @MishalAshraf, one minor change and we should be good to merge \ud83d\udc4d  ",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T23:57:01Z",
        "PR Comment": "> LGTM \ud83c\udf89\n\nAwesome! Thanks for your patience, my first actual PR!",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-08T00:09:26Z",
        "PR Comment": " > Awesome! Thanks for your patience, my first actual PR!\n\nCongrats on your first successful open source commit \ud83c\udf89 ",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T19:22:54Z",
        "PR Comment": "You can just change this to `if not west[0] or not east[0]:` no need to create a new list for conditional.",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T19:23:06Z",
        "PR Comment": "Please remove this prior to merge.",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T23:49:56Z",
        "PR Comment": "@MishalAshraf can you change the inner entries to tuples. Let's try to keep it in sync with the other entries in the `dict`. See line 131 as an example.\n\nSo `[\"\",\"\"],[\"\",\"\"]` should be `(\"\",\"\"),(\"\",\"\")` for all entries in the map",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-06T20:14:47Z",
        "PR Comment": "Awesome @MishalAshraf, please also see my comment on #145 regarding the null pointer check. Can you also show me a screenshot of what the playoff bracket looks like now?",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T23:50:31Z",
        "PR Comment": "Great work @MishalAshraf, one minor change and we should be good to merge \ud83d\udc4d  ",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-07T23:57:01Z",
        "PR Comment": "> LGTM \ud83c\udf89\n\nAwesome! Thanks for your patience, my first actual PR!",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2021-01-08T00:09:26Z",
        "PR Comment": " > Awesome! Thanks for your patience, my first actual PR!\n\nCongrats on your first successful open source commit \ud83c\udf89 ",
        "PR/Issue Number": "146"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2020-12-16T17:06:49Z",
        "PR Comment": "Great work @Nahoyhp! ",
        "PR/Issue Number": "139"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2020-10-01T15:57:15Z",
        "PR Comment": "Cool, looks good to me!",
        "PR/Issue Number": "27"
    },
    {
        "repo_url": "github.com/skekre98/NBA-Search",
        "filepath": "modules/transformer.py",
        "Creation Date": "2020-10-01T15:57:15Z",
        "PR Comment": "Cool, looks good to me!",
        "PR/Issue Number": "27"
    },
    {
        "repo_url": "github.com/connorjoleary/DeepCite",
        "filepath": "backend/model/tokenizer.py",
        "Creation Date": "2020-08-21T22:19:12Z",
        "PR Comment": "Quick question did you find out that `spacy` is better than Google's Vector stuff?",
        "PR/Issue Number": "67"
    },
    {
        "repo_url": "github.com/connorjoleary/DeepCite",
        "filepath": "backend/model/tokenizer.py",
        "Creation Date": "2020-08-21T22:46:33Z",
        "PR Comment": "Not really, but I did to a ton of investigation and found out that if I want to save About $100 a month, then this is the way to do it.",
        "PR/Issue Number": "67"
    },
    {
        "repo_url": "github.com/connorjoleary/DeepCite",
        "filepath": "backend/model/tokenizer.py",
        "Creation Date": "2020-08-21T22:47:33Z",
        "PR Comment": "I didn't post the changes, but let me know if you want db access to run them yourself",
        "PR/Issue Number": "67"
    },
    {
        "repo_url": "github.com/connorjoleary/DeepCite",
        "filepath": "backend/model/tokenizer.py",
        "Creation Date": "2020-08-22T21:22:47Z",
        "PR Comment": "Ahh I see, makes sense",
        "PR/Issue Number": "67"
    },
    {
        "repo_url": "github.com/connorjoleary/DeepCite",
        "filepath": "lightweight_docker/main.py",
        "Creation Date": "2021-03-08T05:43:39Z",
        "PR Comment": "Update",
        "PR/Issue Number": "71"
    },
    {
        "repo_url": "github.com/connorjoleary/DeepCite",
        "filepath": "lightweight_docker/main.py",
        "Creation Date": "2021-03-08T05:44:10Z",
        "PR Comment": "Update folder names",
        "PR/Issue Number": "71"
    },
    {
        "repo_url": "github.com/connorjoleary/DeepCite",
        "filepath": "lightweight_docker/main.py",
        "Creation Date": "2021-03-08T05:46:10Z",
        "PR Comment": "Add readme for this folder",
        "PR/Issue Number": "71"
    },
    {
        "repo_url": "github.com/connorjoleary/DeepCite",
        "filepath": "lightweight_docker/main.py",
        "Creation Date": "2021-03-08T05:46:40Z",
        "PR Comment": "add issue for this hack",
        "PR/Issue Number": "71"
    },
    {
        "repo_url": "github.com/connorjoleary/DeepCite",
        "filepath": "lightweight_docker/main.py",
        "Creation Date": "2021-03-11T07:04:19Z",
        "PR Comment": "#61",
        "PR/Issue Number": "71"
    },
    {
        "repo_url": "github.com/rubra-ai/rubra",
        "filepath": "core/local_model.py",
        "Creation Date": "2024-02-20T23:31:43Z",
        "PR Comment": "why is this change necessary?",
        "PR/Issue Number": "89"
    },
    {
        "repo_url": "github.com/rubra-ai/rubra",
        "filepath": "core/local_model.py",
        "Creation Date": "2024-02-21T00:38:42Z",
        "PR Comment": "## Deploying with &nbsp;<a href=\"https://pages.dev\"><img alt=\"Cloudflare Pages\" src=\"https://user-images.githubusercontent.com/23264/106598434-9e719e00-654f-11eb-9e59-6167043cfa01.png\" width=\"16\"></a> &nbsp;Cloudflare Pages\n\n<table><tr><td><strong>Latest commit:</strong> </td><td>\n<code>c1dcb29</code>\n</td></tr>\n<tr><td><strong>Status:</strong></td><td>&nbsp;\u2705&nbsp; Deploy successful!</td></tr>\n<tr><td><strong>Preview URL:</strong></td><td>\n<a href='https://02854f14.rubra.pages.dev'>https://02854f14.rubra.pages.dev</a>\n</td></tr>\n<tr><td><strong>Branch Preview URL:</strong></td><td>\n<a href='https://assistant-update-fix.rubra.pages.dev'>https://assistant-update-fix.rubra.pages.dev</a>\n</td></tr>\n</table>\n\n[View logs](https://dash.cloudflare.com/?to=/:account/pages/view/rubra/02854f14-97d8-43a1-8d3b-779a4ed6b729)\n",
        "PR/Issue Number": "89"
    },
    {
        "repo_url": "github.com/rubra-ai/rubra",
        "filepath": "core/local_model.py",
        "Creation Date": "2024-02-21T17:44:28Z",
        "PR Comment": "> The build context needs to be added to the build and push image target\n> \n> `docker buildx build --build-context core=./core`\n\nupdated.",
        "PR/Issue Number": "89"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-11-05T20:52:19Z",
        "PR Comment": "When would commit be false?",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-11-05T20:58:33Z",
        "PR Comment": "Doing a `save()` one object at a time is painful for big datasets. Can we make this an add_objects() that takes a list of objects and goes through and does bulk operations to index them? See [this playground branch].(https://github.com/UW-COSMOS/Cosmos/blob/ians_oct20_api_changes/cosmos/retrieval/retrieval/elastic_retriever.py#L181)",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-11-05T21:00:36Z",
        "PR Comment": "I've never used `joins`... How is the performance?",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-11-10T17:56:25Z",
        "PR Comment": "I would expect that the performance is OK, given that the objects are denormalized and duplicated across entities. We can do perform a profile in the future.",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-11-10T17:57:32Z",
        "PR Comment": "This is important. I'll make the bulk change.",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-11-10T17:58:10Z",
        "PR Comment": "specifically if you want to do things like bulk inserts.",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-11-13T04:14:18Z",
        "PR Comment": "not a huge deal but spelling on scheduluer",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-12-02T21:59:43Z",
        "PR Comment": "Added in acda80e",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-12-02T22:01:21Z",
        "PR Comment": "It actually was a big deal ;)  Fixed in 0463b8d",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-12-02T22:17:05Z",
        "PR Comment": "My big issue with this implementation is the duplication of the objects for each occurrence of an entity. It seems wasteful, but _ok_ in the table/figure caption cases, since there's a low number of entities in those. But sections ends up being pretty bloated and equations even worse. In a test of 1,000 docs with 1158 equations, I'm seeing over **500,000** objects with cls:Equation in eo-site, verified by looking at the average number of  linked entities for the equation dataframe:\n\n```\n>>> q['ents_linked'].apply(len).mean()\n463.2262521588946\n```\n\nWorse, each equation is associated with its page contents (https://github.com/UW-COSMOS/Cosmos/blob/d60cfb18196052d2155562957aaf317dae62b502/cosmos/ingestion/ingest/process/aggregation/aggregate.py#L229). So we're getting both huge numbers of entities linked to each equation _and_ we're saving 463 copies of these pages' contents.. The end result is a 20GB index for a 1,000 document set. So we'd be looking at a ~2TB index for the covid set.\n\nI'll experiment with some alternatives..",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-12-02T22:24:26Z",
        "PR Comment": "This is intentional. Having it be denormalized like this makes it faster to query (we don\u2019t need to do joins), at the cost of space. The alternative is a normalized entity/object table, which will be really slow to join on an online setting like we have.\n\nWe have a normalized join happening between pdfs and objects, if you want to implement a normalized version.\nOn Dec 2, 2020, 4:17 PM -0600, Ian Ross <notifications@github.com>, wrote:\n> My big issue with this implementation is the duplication of the objects for each occurrence of an entity. It seems wasteful, but ok in the table/figure caption cases, since there's a low number of entities in those. But sections ends up being pretty bloated and equations even worse. In a test of 1,000 docs with 1158 equations, I'm seeing over 500,000 objects with cls:Equation in eo-site, verified by looking at the average number of linked entities for the equation dataframe:\n> >>> q['ents_linked'].apply(len).mean()\n> 463.2262521588946\n> Worse, each equation is associated with its page contents (https://github.com/UW-COSMOS/Cosmos/blob/d60cfb18196052d2155562957aaf317dae62b502/cosmos/ingestion/ingest/process/aggregation/aggregate.py#L229). So we're getting both huge numbers of entities linked to each equation and we're saving 463 copies of these pages' contents.. The end result is a 20GB index for a 1,000 document set. So we'd be looking at a ~2TB index for the covid set.\n> I'll experiment with some alternatives..\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-11-05T20:52:19Z",
        "PR Comment": "When would commit be false?",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-11-05T20:58:33Z",
        "PR Comment": "Doing a `save()` one object at a time is painful for big datasets. Can we make this an add_objects() that takes a list of objects and goes through and does bulk operations to index them? See [this playground branch].(https://github.com/UW-COSMOS/Cosmos/blob/ians_oct20_api_changes/cosmos/retrieval/retrieval/elastic_retriever.py#L181)",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-11-05T21:00:36Z",
        "PR Comment": "I've never used `joins`... How is the performance?",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-11-10T17:56:25Z",
        "PR Comment": "I would expect that the performance is OK, given that the objects are denormalized and duplicated across entities. We can do perform a profile in the future.",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-11-10T17:57:32Z",
        "PR Comment": "This is important. I'll make the bulk change.",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-11-10T17:58:10Z",
        "PR Comment": "specifically if you want to do things like bulk inserts.",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-11-13T04:14:18Z",
        "PR Comment": "not a huge deal but spelling on scheduluer",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-12-02T21:59:43Z",
        "PR Comment": "Added in acda80e",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-12-02T22:01:21Z",
        "PR Comment": "It actually was a big deal ;)  Fixed in 0463b8d",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-12-02T22:17:05Z",
        "PR Comment": "My big issue with this implementation is the duplication of the objects for each occurrence of an entity. It seems wasteful, but _ok_ in the table/figure caption cases, since there's a low number of entities in those. But sections ends up being pretty bloated and equations even worse. In a test of 1,000 docs with 1158 equations, I'm seeing over **500,000** objects with cls:Equation in eo-site, verified by looking at the average number of  linked entities for the equation dataframe:\n\n```\n>>> q['ents_linked'].apply(len).mean()\n463.2262521588946\n```\n\nWorse, each equation is associated with its page contents (https://github.com/UW-COSMOS/Cosmos/blob/d60cfb18196052d2155562957aaf317dae62b502/cosmos/ingestion/ingest/process/aggregation/aggregate.py#L229). So we're getting both huge numbers of entities linked to each equation _and_ we're saving 463 copies of these pages' contents.. The end result is a 20GB index for a 1,000 document set. So we'd be looking at a ~2TB index for the covid set.\n\nI'll experiment with some alternatives..",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/UW-COSMOS/Cosmos",
        "filepath": "cosmos/ingestion/ingest/preload_plugins/linking_setup.py",
        "Creation Date": "2020-12-02T22:24:26Z",
        "PR Comment": "This is intentional. Having it be denormalized like this makes it faster to query (we don\u2019t need to do joins), at the cost of space. The alternative is a normalized entity/object table, which will be really slow to join on an online setting like we have.\n\nWe have a normalized join happening between pdfs and objects, if you want to implement a normalized version.\nOn Dec 2, 2020, 4:17 PM -0600, Ian Ross <notifications@github.com>, wrote:\n> My big issue with this implementation is the duplication of the objects for each occurrence of an entity. It seems wasteful, but ok in the table/figure caption cases, since there's a low number of entities in those. But sections ends up being pretty bloated and equations even worse. In a test of 1,000 docs with 1158 equations, I'm seeing over 500,000 objects with cls:Equation in eo-site, verified by looking at the average number of linked entities for the equation dataframe:\n> >>> q['ents_linked'].apply(len).mean()\n> 463.2262521588946\n> Worse, each equation is associated with its page contents (https://github.com/UW-COSMOS/Cosmos/blob/d60cfb18196052d2155562957aaf317dae62b502/cosmos/ingestion/ingest/process/aggregation/aggregate.py#L229). So we're getting both huge numbers of entities linked to each equation and we're saving 463 copies of these pages' contents.. The end result is a 20GB index for a 1,000 document set. So we'd be looking at a ~2TB index for the covid set.\n> I'll experiment with some alternatives..\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/amazon-science/fact-graph",
        "filepath": "data/preprocess/utils.py",
        "Creation Date": "2022-04-29T04:46:32Z",
        "PR Comment": "README update the code upload.",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/amazon-science/fact-graph",
        "filepath": "data/preprocess/augmentation_ops.py",
        "Creation Date": "2022-04-29T04:46:32Z",
        "PR Comment": "README update the code upload.",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/amazon-science/fact-graph",
        "filepath": "data/preprocess/02.1.1_align_amrs.py",
        "Creation Date": "2022-04-29T04:46:32Z",
        "PR Comment": "README update the code upload.",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/amazon-science/fact-graph",
        "filepath": "data/preprocess/02.1.1_align_amrs.py",
        "Creation Date": "2022-04-29T04:46:32Z",
        "PR Comment": "README update the code upload.",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/amazon-science/fact-graph",
        "filepath": "data/preprocess/preprocess_evaluate.py",
        "Creation Date": "2022-04-29T04:46:32Z",
        "PR Comment": "README update the code upload.",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/bcgov/digital-journeys",
        "filepath": "forms-flow-data-analysis-api/jobs/spacy_ner_trainer.py",
        "Creation Date": "2022-08-15T17:28:05Z",
        "PR Comment": "We added a role, \"manager\", for the supervisors. May need to update this if planned to return applications for that role in the future. Don't think have an issue at the moment.",
        "PR/Issue Number": "504"
    },
    {
        "repo_url": "github.com/bcgov/digital-journeys",
        "filepath": "forms-flow-data-analysis-api/jobs/spacy_ner_trainer.py",
        "Creation Date": "2022-08-15T17:48:16Z",
        "PR Comment": "We may want to review this endpoint to make sure it does not have security implications. It'll be interesting to see what fields a user can update about his/her profile. Whether email/IDIR or user group/role are one of them?\n\nWe can also disable it until there is a need for it.\n\nOh just saw it is only for updating user locale, should be fine then.",
        "PR/Issue Number": "504"
    },
    {
        "repo_url": "github.com/bcgov/digital-journeys",
        "filepath": "forms-flow-data-analysis-api/jobs/spacy_ner_trainer.py",
        "Creation Date": "2022-08-15T18:44:34Z",
        "PR Comment": "This should help get rid of some of the security vulnerability warnings we get on the repo :)",
        "PR/Issue Number": "504"
    },
    {
        "repo_url": "github.com/bcgov/digital-journeys",
        "filepath": "forms-flow-data-analysis-api/jobs/spacy_ner_trainer.py",
        "Creation Date": "2022-08-15T19:36:15Z",
        "PR Comment": "Seems like `handleChange` is duplicated. There is another instance just below.",
        "PR/Issue Number": "504"
    },
    {
        "repo_url": "github.com/bcgov/digital-journeys",
        "filepath": "forms-flow-data-analysis-api/jobs/spacy_ner_trainer.py",
        "Creation Date": "2022-08-16T16:00:07Z",
        "PR Comment": "good catch, change is added to my current commit for fixing build issues",
        "PR/Issue Number": "504"
    },
    {
        "repo_url": "github.com/bcgov/digital-journeys",
        "filepath": "forms-flow-data-analysis-api/jobs/spacy_ner_trainer.py",
        "Creation Date": "2022-08-16T16:02:23Z",
        "PR Comment": "I'm not seeing any mention of the 'Manager' role in this file on other branches. I'll look for where to re-add it though.",
        "PR/Issue Number": "504"
    },
    {
        "repo_url": "github.com/bcgov/digital-journeys",
        "filepath": "forms-flow-data-analysis-api/jobs/spacy_ner_trainer.py",
        "Creation Date": "2022-08-16T16:42:42Z",
        "PR Comment": "@david-sabadash @iman-jamali-fw We should keep this as the `REVIEWER` group. The manager role should not have any additional permissions for now. It's currently purely a concept used in the context of hiding / displaying things on the frontend. The `REVIEWER` group is a built in part of formsflow that we should not touch as it comes with a lot of different permissions",
        "PR/Issue Number": "504"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-07-27T18:45:43Z",
        "PR Comment": "OK, now it works with all languages.\n\nResults for this commit:\nTesting on  english - News.\nmacro-F1: 0.733\n\nTesting on  english - WikiNews.\nmacro-F1: 0.692\n\nTesting on  english - Wikipedia.\nmacro-F1: 0.690\n\nTesting on  german - German.\nmacro-F1: 0.659\n\nTesting on  spanish - Spanish.\nmacro-F1: 0.645\n\nTesting on  french - French.\nmacro-F1: 0.226",
        "PR/Issue Number": "31"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-07-27T19:55:50Z",
        "PR Comment": "Ok! I suggest we use to drive progress, as this is the obvious test case in\nthis, and the main comparison against previous work!\nOn Fri, 27 Jul 2018 at 19:47, IntoThePit <notifications@github.com> wrote:\n\n> OK, now it works with all languages.\n>\n> Results for this commit:\n> Testing on english - News.\n> macro-F1: 0.733\n>\n> Testing on english - WikiNews.\n> macro-F1: 0.692\n>\n> Testing on english - Wikipedia.\n> macro-F1: 0.690\n>\n> Testing on german - German.\n> macro-F1: 0.659\n>\n> Testing on spanish - Spanish.\n> macro-F1: 0.645\n>\n> Testing on french - French.\n> macro-F1: 0.226\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/31#issuecomment-408506615>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABbUhQgPvd77fSqHa1zVSwThJrd_NbW3ks5uK1_XgaJpZM4VkaZi>\n> .\n>\n",
        "PR/Issue Number": "31"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-07-02T14:53:45Z",
        "PR Comment": "Thank you.",
        "PR/Issue Number": "8"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-06-30T11:17:15Z",
        "PR Comment": "Hi Tom,\n\nThank you for the code. It looks good overall. There is one detail that I think we need to figure out.\n\nWhat's going to be the purpose of the getter methods in the Dataset class: train_set(), dev_set(), test_set()? Originally, the idea was to read the data (if it hadn't been read before) and then return it. Now that we have the pickle objects. Is anyone who calls train_set(), for example, going to expect to have the data from the pickle objects too? If that is the case, then I think we could modify the code from those functions a little bit.  Something like this:\n\n```\n        if self._trainset is None: \n            trainset_raw = self.read_dataset(self._trainset_path)\n            trainset_spacy = self.read_spacy_pickle(self._trainset_spacy_path)\n            self._trainset = pd.concat([trainset_raw, trainset_spacy], axis=1)\n        \n        return  self._trainset\n```\n\nWhat do you think? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-06-30T11:26:02Z",
        "PR Comment": "Regarding your question about the pickle objects, we could put them in the Google Drive and then each one will have to download them and put them in the right folder. We should also add a .gitignore in those folders. Is that reasonable? Any other ideas @andreasvlachos?",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-06-30T11:29:40Z",
        "PR Comment": "Hi Fernando,\n\nI agree, that looks good. Will pandas behave OK if there is no spacy set there to concatenate?\n\nCheers,\nTom\n\nOn 30 Jun 2018, at 12:17, Fernando Alva Manchego <notifications@github.com<mailto:notifications@github.com>> wrote:\n\n\nHi Tom,\n\nThank you for the code. It looks good overall. There is one detail that I think we need to figure out.\n\nWhat's going to be the purpose of the getter methods in the Dataset class: train_set(), dev_set(), test_set()? Originally, the idea was to read the data (if it hadn't been read before) and then return it. Now that we have the pickle objects. Is anyone who calls train_set(), for example, going to expect to have the data from the pickle objects too? If that is the case, then I think we could modify the code from those functions a little bit. Something like this:\n\n        if self._trainset is None:\n            trainset_raw = self.read_dataset(self._trainset_path)\n            trainset_spacy = self.read_spacy_pickle(self._trainset_spacy_path)\n            self._trainset = pd.concat([trainset_raw, trainset_spacy], axis=1)\n\n        return  self._trainset\n\n\nWhat do you think?\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401534627>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AfUBhOIlqoh_PzZfexTZoBhInvY7km-Oks5uB148gaJpZM4U9hnK>.\n\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-06-30T11:32:10Z",
        "PR Comment": "Cool. I did have another idea about this, which is that by running\n\n$ python3 src/data/build_spacy_objects.py <LANGUAGE>\n\nFor each language locally, we can each build the pickles on our own machines.\n\nI don\u2019t know which is more appropriate\u2026\n\nCheers,\nTom\n\nOn 30 Jun 2018, at 12:26, Fernando Alva Manchego <notifications@github.com<mailto:notifications@github.com>> wrote:\n\n\nRegarding your question about the pickle objects, we could put them in the Google Drive and then each one will have to download them and put them in the right folder. We should also add a .gitignore in those folders. Is that reasonable? Any other ideas @andreasvlachos<https://github.com/andreasvlachos>?\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401534995>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AfUBhF_kZmrhdLtIaZr59gfyOBUj5UABks5uB2BKgaJpZM4U9hnK>.\n\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-06-30T11:49:27Z",
        "PR Comment": "If everything going forward relies on the spacy data being loaded, then we need to make sure that the pickle object exists. Two ways that I could think of for handling this:\n\n1. If the pickle object does not exist, we could send an error message requesting that it be created, and then terminate the program because we cannot continue.\n\n2. If the pickle object does not exist, we could send a warning message, and then internally process the data using spacy and create the pickle object.\n\nRemember that the idea of having the pickle objects was to avoid having to run the spacy parsers every time that we need to train and test. I personally prefer option 1.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-07-01T11:21:59Z",
        "PR Comment": "Hi guys,\n\nThanks for the good conversation. I think that both options Fernando\nmentions will eventually be used, option 1 to quickly setup an experiment\non a new machine, option 2 to experiment with the spacy preprocessing and\nensure we can replicate our work from scratch. Let\u2019s support both. Maybe\nthe easiest would be to implement option 2, and the user sees the message\nand decides whether to wait for the preprocessing to finish or interrupts\nit and downloads, Google drive would be the place for the large files.\n\nCheers,\nAndreas\nOn Sat, 30 Jun 2018 at 12:49, Fernando Alva Manchego <\nnotifications@github.com> wrote:\n\n> If everything going forward relies on the spacy data being loaded, then we\n> need to make sure that the pickle object exists. Two ways that I could\n> think of for handling this:\n>\n>    1.\n>\n>    If the pickle object does not exist, we could send an error message\n>    requesting that it be created, and then terminate the program because we\n>    cannot continue.\n>    2.\n>\n>    If the pickle object does not exist, we could send a warning message,\n>    and then internally process the data using spacy and create the pickle\n>    object.\n>\n> Remember that the idea of having the pickle objects was to avoid having to\n> run the spacy parsers every time that we need to train and test. I\n> personally prefer option 1.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401536118>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABbUhaJ8xdsqKNg9Fhsvf2REBbiPKbByks5uB2XHgaJpZM4U9hnK>\n> .\n>\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-07-02T07:53:14Z",
        "PR Comment": "Hi,\n\nThat sounds good. Should I code this up on my fork as it is and submit a new pull request, Fernando?\n\nThanks,\nTom\n\nOn 1 Jul 2018, at 12:21, Andreas Vlachos <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nHi guys,\n\nThanks for the good conversation. I think that both options Fernando\nmentions will eventually be used, option 1 to quickly setup an experiment\non a new machine, option 2 to experiment with the spacy preprocessing and\nensure we can replicate our work from scratch. Let\u2019s support both. Maybe\nthe easiest would be to implement option 2, and the user sees the message\nand decides whether to wait for the preprocessing to finish or interrupts\nit and downloads, Google drive would be the place for the large files.\n\nCheers,\nAndreas\nOn Sat, 30 Jun 2018 at 12:49, Fernando Alva Manchego <\nnotifications@github.com<mailto:notifications@github.com>> wrote:\n\n> If everything going forward relies on the spacy data being loaded, then we\n> need to make sure that the pickle object exists. Two ways that I could\n> think of for handling this:\n>\n> 1.\n>\n> If the pickle object does not exist, we could send an error message\n> requesting that it be created, and then terminate the program because we\n> cannot continue.\n> 2.\n>\n> If the pickle object does not exist, we could send a warning message,\n> and then internally process the data using spacy and create the pickle\n> object.\n>\n> Remember that the idea of having the pickle objects was to avoid having to\n> run the spacy parsers every time that we need to train and test. I\n> personally prefer option 1.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401536118>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABbUhaJ8xdsqKNg9Fhsvf2REBbiPKbByks5uB2XHgaJpZM4U9hnK>\n> .\n>\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401600359>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AfUBhF3-PKb7TJ6MQrB6Oftelb0wkEpjks5uCLDXgaJpZM4U9hnK>.\n\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-07-02T09:25:05Z",
        "PR Comment": "Yes, please.\n\nOn 2 July 2018 at 08:53, tomdakin <notifications@github.com> wrote:\n\n> Hi,\n>\n> That sounds good. Should I code this up on my fork as it is and submit a\n> new pull request, Fernando?\n>\n> Thanks,\n> Tom\n>\n> On 1 Jul 2018, at 12:21, Andreas Vlachos <notifications@github.com<mailto:\n> notifications@github.com>> wrote:\n>\n> Hi guys,\n>\n> Thanks for the good conversation. I think that both options Fernando\n> mentions will eventually be used, option 1 to quickly setup an experiment\n> on a new machine, option 2 to experiment with the spacy preprocessing and\n> ensure we can replicate our work from scratch. Let\u2019s support both. Maybe\n> the easiest would be to implement option 2, and the user sees the message\n> and decides whether to wait for the preprocessing to finish or interrupts\n> it and downloads, Google drive would be the place for the large files.\n>\n> Cheers,\n> Andreas\n> On Sat, 30 Jun 2018 at 12:49, Fernando Alva Manchego <\n> notifications@github.com<mailto:notifications@github.com>> wrote:\n>\n> > If everything going forward relies on the spacy data being loaded, then\n> we\n> > need to make sure that the pickle object exists. Two ways that I could\n> > think of for handling this:\n> >\n> > 1.\n> >\n> > If the pickle object does not exist, we could send an error message\n> > requesting that it be created, and then terminate the program because we\n> > cannot continue.\n> > 2.\n> >\n> > If the pickle object does not exist, we could send a warning message,\n> > and then internally process the data using spacy and create the pickle\n> > object.\n> >\n> > Remember that the idea of having the pickle objects was to avoid having\n> to\n> > run the spacy parsers every time that we need to train and test. I\n> > personally prefer option 1.\n> >\n> > \u2014\n> > You are receiving this because you were mentioned.\n> > Reply to this email directly, view it on GitHub\n> > <https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401536118>, or\n> mute\n> > the thread\n> > <https://github.com/notifications/unsubscribe-auth/\n> ABbUhaJ8xdsqKNg9Fhsvf2REBbiPKbByks5uB2XHgaJpZM4U9hnK>\n> > .\n> >\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub<https://github.com/\n> sheffieldnlp/cwi/pull/7#issuecomment-401600359>, or mute the thread<\n> https://github.com/notifications/unsubscribe-auth/AfUBhF3-\n> PKb7TJ6MQrB6Oftelb0wkEpjks5uCLDXgaJpZM4U9hnK>.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401701776>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ACof6KVctrZaVGlcXctEHL6Vn_aoOP45ks5uCdFrgaJpZM4U9hnK>\n> .\n>\n\n\n\n-- \nFernando Alva Manchego\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-07-02T14:07:02Z",
        "PR Comment": "Hi Fernando, \nI've updated the spacy/raw dataset structure as per your suggestion. \nThanks,\nTom",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-07-02T14:42:06Z",
        "PR Comment": "P.S. Do I need to wait for you to merge the pull before I make further changes? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-07-02T14:49:51Z",
        "PR Comment": "Merge done.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-07-02T14:53:45Z",
        "PR Comment": "Thank you.",
        "PR/Issue Number": "8"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-06-30T11:17:15Z",
        "PR Comment": "Hi Tom,\n\nThank you for the code. It looks good overall. There is one detail that I think we need to figure out.\n\nWhat's going to be the purpose of the getter methods in the Dataset class: train_set(), dev_set(), test_set()? Originally, the idea was to read the data (if it hadn't been read before) and then return it. Now that we have the pickle objects. Is anyone who calls train_set(), for example, going to expect to have the data from the pickle objects too? If that is the case, then I think we could modify the code from those functions a little bit.  Something like this:\n\n```\n        if self._trainset is None: \n            trainset_raw = self.read_dataset(self._trainset_path)\n            trainset_spacy = self.read_spacy_pickle(self._trainset_spacy_path)\n            self._trainset = pd.concat([trainset_raw, trainset_spacy], axis=1)\n        \n        return  self._trainset\n```\n\nWhat do you think? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-06-30T11:26:02Z",
        "PR Comment": "Regarding your question about the pickle objects, we could put them in the Google Drive and then each one will have to download them and put them in the right folder. We should also add a .gitignore in those folders. Is that reasonable? Any other ideas @andreasvlachos?",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-06-30T11:29:40Z",
        "PR Comment": "Hi Fernando,\n\nI agree, that looks good. Will pandas behave OK if there is no spacy set there to concatenate?\n\nCheers,\nTom\n\nOn 30 Jun 2018, at 12:17, Fernando Alva Manchego <notifications@github.com<mailto:notifications@github.com>> wrote:\n\n\nHi Tom,\n\nThank you for the code. It looks good overall. There is one detail that I think we need to figure out.\n\nWhat's going to be the purpose of the getter methods in the Dataset class: train_set(), dev_set(), test_set()? Originally, the idea was to read the data (if it hadn't been read before) and then return it. Now that we have the pickle objects. Is anyone who calls train_set(), for example, going to expect to have the data from the pickle objects too? If that is the case, then I think we could modify the code from those functions a little bit. Something like this:\n\n        if self._trainset is None:\n            trainset_raw = self.read_dataset(self._trainset_path)\n            trainset_spacy = self.read_spacy_pickle(self._trainset_spacy_path)\n            self._trainset = pd.concat([trainset_raw, trainset_spacy], axis=1)\n\n        return  self._trainset\n\n\nWhat do you think?\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401534627>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AfUBhOIlqoh_PzZfexTZoBhInvY7km-Oks5uB148gaJpZM4U9hnK>.\n\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-06-30T11:32:10Z",
        "PR Comment": "Cool. I did have another idea about this, which is that by running\n\n$ python3 src/data/build_spacy_objects.py <LANGUAGE>\n\nFor each language locally, we can each build the pickles on our own machines.\n\nI don\u2019t know which is more appropriate\u2026\n\nCheers,\nTom\n\nOn 30 Jun 2018, at 12:26, Fernando Alva Manchego <notifications@github.com<mailto:notifications@github.com>> wrote:\n\n\nRegarding your question about the pickle objects, we could put them in the Google Drive and then each one will have to download them and put them in the right folder. We should also add a .gitignore in those folders. Is that reasonable? Any other ideas @andreasvlachos<https://github.com/andreasvlachos>?\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401534995>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AfUBhF_kZmrhdLtIaZr59gfyOBUj5UABks5uB2BKgaJpZM4U9hnK>.\n\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-06-30T11:49:27Z",
        "PR Comment": "If everything going forward relies on the spacy data being loaded, then we need to make sure that the pickle object exists. Two ways that I could think of for handling this:\n\n1. If the pickle object does not exist, we could send an error message requesting that it be created, and then terminate the program because we cannot continue.\n\n2. If the pickle object does not exist, we could send a warning message, and then internally process the data using spacy and create the pickle object.\n\nRemember that the idea of having the pickle objects was to avoid having to run the spacy parsers every time that we need to train and test. I personally prefer option 1.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-07-01T11:21:59Z",
        "PR Comment": "Hi guys,\n\nThanks for the good conversation. I think that both options Fernando\nmentions will eventually be used, option 1 to quickly setup an experiment\non a new machine, option 2 to experiment with the spacy preprocessing and\nensure we can replicate our work from scratch. Let\u2019s support both. Maybe\nthe easiest would be to implement option 2, and the user sees the message\nand decides whether to wait for the preprocessing to finish or interrupts\nit and downloads, Google drive would be the place for the large files.\n\nCheers,\nAndreas\nOn Sat, 30 Jun 2018 at 12:49, Fernando Alva Manchego <\nnotifications@github.com> wrote:\n\n> If everything going forward relies on the spacy data being loaded, then we\n> need to make sure that the pickle object exists. Two ways that I could\n> think of for handling this:\n>\n>    1.\n>\n>    If the pickle object does not exist, we could send an error message\n>    requesting that it be created, and then terminate the program because we\n>    cannot continue.\n>    2.\n>\n>    If the pickle object does not exist, we could send a warning message,\n>    and then internally process the data using spacy and create the pickle\n>    object.\n>\n> Remember that the idea of having the pickle objects was to avoid having to\n> run the spacy parsers every time that we need to train and test. I\n> personally prefer option 1.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401536118>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABbUhaJ8xdsqKNg9Fhsvf2REBbiPKbByks5uB2XHgaJpZM4U9hnK>\n> .\n>\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-07-02T07:53:14Z",
        "PR Comment": "Hi,\n\nThat sounds good. Should I code this up on my fork as it is and submit a new pull request, Fernando?\n\nThanks,\nTom\n\nOn 1 Jul 2018, at 12:21, Andreas Vlachos <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nHi guys,\n\nThanks for the good conversation. I think that both options Fernando\nmentions will eventually be used, option 1 to quickly setup an experiment\non a new machine, option 2 to experiment with the spacy preprocessing and\nensure we can replicate our work from scratch. Let\u2019s support both. Maybe\nthe easiest would be to implement option 2, and the user sees the message\nand decides whether to wait for the preprocessing to finish or interrupts\nit and downloads, Google drive would be the place for the large files.\n\nCheers,\nAndreas\nOn Sat, 30 Jun 2018 at 12:49, Fernando Alva Manchego <\nnotifications@github.com<mailto:notifications@github.com>> wrote:\n\n> If everything going forward relies on the spacy data being loaded, then we\n> need to make sure that the pickle object exists. Two ways that I could\n> think of for handling this:\n>\n> 1.\n>\n> If the pickle object does not exist, we could send an error message\n> requesting that it be created, and then terminate the program because we\n> cannot continue.\n> 2.\n>\n> If the pickle object does not exist, we could send a warning message,\n> and then internally process the data using spacy and create the pickle\n> object.\n>\n> Remember that the idea of having the pickle objects was to avoid having to\n> run the spacy parsers every time that we need to train and test. I\n> personally prefer option 1.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401536118>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABbUhaJ8xdsqKNg9Fhsvf2REBbiPKbByks5uB2XHgaJpZM4U9hnK>\n> .\n>\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401600359>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AfUBhF3-PKb7TJ6MQrB6Oftelb0wkEpjks5uCLDXgaJpZM4U9hnK>.\n\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-07-02T09:25:05Z",
        "PR Comment": "Yes, please.\n\nOn 2 July 2018 at 08:53, tomdakin <notifications@github.com> wrote:\n\n> Hi,\n>\n> That sounds good. Should I code this up on my fork as it is and submit a\n> new pull request, Fernando?\n>\n> Thanks,\n> Tom\n>\n> On 1 Jul 2018, at 12:21, Andreas Vlachos <notifications@github.com<mailto:\n> notifications@github.com>> wrote:\n>\n> Hi guys,\n>\n> Thanks for the good conversation. I think that both options Fernando\n> mentions will eventually be used, option 1 to quickly setup an experiment\n> on a new machine, option 2 to experiment with the spacy preprocessing and\n> ensure we can replicate our work from scratch. Let\u2019s support both. Maybe\n> the easiest would be to implement option 2, and the user sees the message\n> and decides whether to wait for the preprocessing to finish or interrupts\n> it and downloads, Google drive would be the place for the large files.\n>\n> Cheers,\n> Andreas\n> On Sat, 30 Jun 2018 at 12:49, Fernando Alva Manchego <\n> notifications@github.com<mailto:notifications@github.com>> wrote:\n>\n> > If everything going forward relies on the spacy data being loaded, then\n> we\n> > need to make sure that the pickle object exists. Two ways that I could\n> > think of for handling this:\n> >\n> > 1.\n> >\n> > If the pickle object does not exist, we could send an error message\n> > requesting that it be created, and then terminate the program because we\n> > cannot continue.\n> > 2.\n> >\n> > If the pickle object does not exist, we could send a warning message,\n> > and then internally process the data using spacy and create the pickle\n> > object.\n> >\n> > Remember that the idea of having the pickle objects was to avoid having\n> to\n> > run the spacy parsers every time that we need to train and test. I\n> > personally prefer option 1.\n> >\n> > \u2014\n> > You are receiving this because you were mentioned.\n> > Reply to this email directly, view it on GitHub\n> > <https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401536118>, or\n> mute\n> > the thread\n> > <https://github.com/notifications/unsubscribe-auth/\n> ABbUhaJ8xdsqKNg9Fhsvf2REBbiPKbByks5uB2XHgaJpZM4U9hnK>\n> > .\n> >\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub<https://github.com/\n> sheffieldnlp/cwi/pull/7#issuecomment-401600359>, or mute the thread<\n> https://github.com/notifications/unsubscribe-auth/AfUBhF3-\n> PKb7TJ6MQrB6Oftelb0wkEpjks5uCLDXgaJpZM4U9hnK>.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401701776>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ACof6KVctrZaVGlcXctEHL6Vn_aoOP45ks5uCdFrgaJpZM4U9hnK>\n> .\n>\n\n\n\n-- \nFernando Alva Manchego\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-07-02T14:07:02Z",
        "PR Comment": "Hi Fernando, \nI've updated the spacy/raw dataset structure as per your suggestion. \nThanks,\nTom",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-07-02T14:42:06Z",
        "PR Comment": "P.S. Do I need to wait for you to merge the pull before I make further changes? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-07-02T14:49:51Z",
        "PR Comment": "Merge done.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-07-02T14:53:45Z",
        "PR Comment": "Thank you.",
        "PR/Issue Number": "8"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/dataset.py",
        "Creation Date": "2018-06-27T14:57:02Z",
        "PR Comment": "If this is necessary, I have no problem with it. Thank you.",
        "PR/Issue Number": "5"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-07-24T13:47:45Z",
        "PR Comment": "Hi Tom,\n\nThank you for this. I have just tested the model and, indeed, the code is back at running at a very reasonable speed. Nice work!\n\nWhat you mention is very odd. I would suggest to first perform a sort of sanity check, and make sure that even by moving code between extractors, we are obtaining the same number and values for all features. \nAll of our features are deterministic, so we should always get the same feature table. This may not seem meaningful, but I would just like to make sure we are not making a silly mistake in the code.\n\nIf we indeed get the same feature table but still different predictions, then I currently have no other ideas. Any thoughts @andreasvlachos ?\n\nBest,\nFernando\n",
        "PR/Issue Number": "27"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-07-24T17:07:27Z",
        "PR Comment": "Hi Fernando,\n\nThanks for the debug tip - it worked. For some reason the features are coming back differently when they are in different extractor classes. This is obviously bad, but I will fix it. It is much easier to fix than the case where the algorithm is giving different predictions for the same features!\n\nI\u2019ll work on it and hopefully get the bug ironed out tonight.\n\nCheers\nTom\n\nOn 24 Jul 2018, at 14:47, Fernando Alva Manchego <notifications@github.com<mailto:notifications@github.com>> wrote:\n\n\nHi Tom,\n\nThank you for this. I have just tested the model and, indeed, the code is back at running at a very reasonable speed. Nice work!\n\nWhat you mention is very odd. I would suggest to first perform a sort of sanity check, and make sure that even by moving code between extractors, we are obtaining the same number and values for all features.\nAll of our features are deterministic, so we should always get the same feature table. This may not seem meaningful, but I would just like to make sure we are not making a silly mistake in the code.\n\nIf we indeed get the same feature table but still different predictions, then I currently have no other ideas. Any thoughts @andreasvlachos<https://github.com/andreasvlachos> ?\n\nBest,\nFernando\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407412711>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AfUBhEmK3-FMbJv1RDmMKHrPirQH75iuks5uJyWBgaJpZM4VcuGr>.\n\n",
        "PR/Issue Number": "27"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-07-24T17:13:45Z",
        "PR Comment": "I spoke too soon - I misread my output. The feature is in fact being extracted the same in both classes!\nT\n\nOn 24 Jul 2018, at 18:07, Tom Dakin <tom.a.dakin@hotmail.co.uk<mailto:tom.a.dakin@hotmail.co.uk>> wrote:\n\nHi Fernando,\n\nThanks for the debug tip - it worked. For some reason the features are coming back differently when they are in different extractor classes. This is obviously bad, but I will fix it. It is much easier to fix than the case where the algorithm is giving different predictions for the same features!\n\nI\u2019ll work on it and hopefully get the bug ironed out tonight.\n\nCheers\nTom\n\nOn 24 Jul 2018, at 14:47, Fernando Alva Manchego <notifications@github.com<mailto:notifications@github.com>> wrote:\n\n\nHi Tom,\n\nThank you for this. I have just tested the model and, indeed, the code is back at running at a very reasonable speed. Nice work!\n\nWhat you mention is very odd. I would suggest to first perform a sort of sanity check, and make sure that even by moving code between extractors, we are obtaining the same number and values for all features.\nAll of our features are deterministic, so we should always get the same feature table. This may not seem meaningful, but I would just like to make sure we are not making a silly mistake in the code.\n\nIf we indeed get the same feature table but still different predictions, then I currently have no other ideas. Any thoughts @andreasvlachos<https://github.com/andreasvlachos> ?\n\nBest,\nFernando\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407412711>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AfUBhEmK3-FMbJv1RDmMKHrPirQH75iuks5uJyWBgaJpZM4VcuGr>.\n\n\n",
        "PR/Issue Number": "27"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-07-24T18:51:06Z",
        "PR Comment": "Does this happen with any feature that you change or with one feature in\nparticular?\n\nOn Tue, 24 Jul 2018 at 18:13, tomdakin <notifications@github.com> wrote:\n\n> I spoke too soon - I misread my output. The feature is in fact being\n> extracted the same in both classes!\n> T\n>\n> On 24 Jul 2018, at 18:07, Tom Dakin <tom.a.dakin@hotmail.co.uk<mailto:\n> tom.a.dakin@hotmail.co.uk>> wrote:\n>\n> Hi Fernando,\n>\n> Thanks for the debug tip - it worked. For some reason the features are\n> coming back differently when they are in different extractor classes. This\n> is obviously bad, but I will fix it. It is much easier to fix than the case\n> where the algorithm is giving different predictions for the same features!\n>\n> I\u2019ll work on it and hopefully get the bug ironed out tonight.\n>\n> Cheers\n> Tom\n>\n> On 24 Jul 2018, at 14:47, Fernando Alva Manchego <notifications@github.com\n> <mailto:notifications@github.com>> wrote:\n>\n>\n> Hi Tom,\n>\n> Thank you for this. I have just tested the model and, indeed, the code is\n> back at running at a very reasonable speed. Nice work!\n>\n> What you mention is very odd. I would suggest to first perform a sort of\n> sanity check, and make sure that even by moving code between extractors, we\n> are obtaining the same number and values for all features.\n> All of our features are deterministic, so we should always get the same\n> feature table. This may not seem meaningful, but I would just like to make\n> sure we are not making a silly mistake in the code.\n>\n> If we indeed get the same feature table but still different predictions,\n> then I currently have no other ideas. Any thoughts @andreasvlachos<\n> https://github.com/andreasvlachos> ?\n>\n> Best,\n> Fernando\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub<\n> https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407412711>, or\n> mute the thread<\n> https://github.com/notifications/unsubscribe-auth/AfUBhEmK3-FMbJv1RDmMKHrPirQH75iuks5uJyWBgaJpZM4VcuGr>.\n>\n>\n>\n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407482321>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ACof6Nf-64WBS_jUoybsXsCVG_5aYI7Bks5uJ1XKgaJpZM4VcuGr>\n> .\n>\n\n\n-- \nFernando Alva Manchego\n",
        "PR/Issue Number": "27"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-07-24T20:00:33Z",
        "PR Comment": "It seems to happen with every feature I\u2019ve tried so far.\nT\n\nOn 24 Jul 2018, at 19:51, Fernando Alva Manchego <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nDoes this happen with any feature that you change or with one feature in\nparticular?\n\nOn Tue, 24 Jul 2018 at 18:13, tomdakin <notifications@github.com<mailto:notifications@github.com>> wrote:\n\n> I spoke too soon - I misread my output. The feature is in fact being\n> extracted the same in both classes!\n> T\n>\n> On 24 Jul 2018, at 18:07, Tom Dakin <tom.a.dakin@hotmail.co.uk<mailto:tom.a.dakin@hotmail.co.uk><mailto:\n> tom.a.dakin@hotmail.co.uk<mailto:tom.a.dakin@hotmail.co.uk>>> wrote:\n>\n> Hi Fernando,\n>\n> Thanks for the debug tip - it worked. For some reason the features are\n> coming back differently when they are in different extractor classes. This\n> is obviously bad, but I will fix it. It is much easier to fix than the case\n> where the algorithm is giving different predictions for the same features!\n>\n> I\u2019ll work on it and hopefully get the bug ironed out tonight.\n>\n> Cheers\n> Tom\n>\n> On 24 Jul 2018, at 14:47, Fernando Alva Manchego <notifications@github.com<mailto:notifications@github.com>\n> <mailto:notifications@github.com>> wrote:\n>\n>\n> Hi Tom,\n>\n> Thank you for this. I have just tested the model and, indeed, the code is\n> back at running at a very reasonable speed. Nice work!\n>\n> What you mention is very odd. I would suggest to first perform a sort of\n> sanity check, and make sure that even by moving code between extractors, we\n> are obtaining the same number and values for all features.\n> All of our features are deterministic, so we should always get the same\n> feature table. This may not seem meaningful, but I would just like to make\n> sure we are not making a silly mistake in the code.\n>\n> If we indeed get the same feature table but still different predictions,\n> then I currently have no other ideas. Any thoughts @andreasvlachos<\n> https://github.com/andreasvlachos> ?\n>\n> Best,\n> Fernando\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub<\n> https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407412711>, or\n> mute the thread<\n> https://github.com/notifications/unsubscribe-auth/AfUBhEmK3-FMbJv1RDmMKHrPirQH75iuks5uJyWBgaJpZM4VcuGr>.\n>\n>\n>\n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407482321>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ACof6Nf-64WBS_jUoybsXsCVG_5aYI7Bks5uJ1XKgaJpZM4VcuGr>\n> .\n>\n\n\n--\nFernando Alva Manchego\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407513586>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AfUBhPJaiBUvmZbmPTsiV27gq8iDwDTwks5uJ2ycgaJpZM4VcuGr>.\n\n",
        "PR/Issue Number": "27"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-07-24T20:15:34Z",
        "PR Comment": "Hi all,\n\nSorry, was travelling today, haven't been able to take a look at the code\nyet. A guess: could the order/names of the features matter?\n\nCheers,\nAndreas\n\nOn Tue, 24 Jul 2018 at 21:00 tomdakin <notifications@github.com> wrote:\n\n> It seems to happen with every feature I\u2019ve tried so far.\n> T\n>\n> On 24 Jul 2018, at 19:51, Fernando Alva Manchego <notifications@github.com\n> <mailto:notifications@github.com>> wrote:\n>\n> Does this happen with any feature that you change or with one feature in\n> particular?\n>\n> On Tue, 24 Jul 2018 at 18:13, tomdakin <notifications@github.com<mailto:\n> notifications@github.com>> wrote:\n>\n> > I spoke too soon - I misread my output. The feature is in fact being\n> > extracted the same in both classes!\n> > T\n> >\n> > On 24 Jul 2018, at 18:07, Tom Dakin <tom.a.dakin@hotmail.co.uk<mailto:\n> tom.a.dakin@hotmail.co.uk><mailto:\n> > tom.a.dakin@hotmail.co.uk<mailto:tom.a.dakin@hotmail.co.uk>>> wrote:\n> >\n> > Hi Fernando,\n> >\n> > Thanks for the debug tip - it worked. For some reason the features are\n> > coming back differently when they are in different extractor classes.\n> This\n> > is obviously bad, but I will fix it. It is much easier to fix than the\n> case\n> > where the algorithm is giving different predictions for the same\n> features!\n> >\n> > I\u2019ll work on it and hopefully get the bug ironed out tonight.\n> >\n> > Cheers\n> > Tom\n> >\n> > On 24 Jul 2018, at 14:47, Fernando Alva Manchego <\n> notifications@github.com<mailto:notifications@github.com>\n> > <mailto:notifications@github.com>> wrote:\n> >\n> >\n> > Hi Tom,\n> >\n> > Thank you for this. I have just tested the model and, indeed, the code\n> is\n> > back at running at a very reasonable speed. Nice work!\n> >\n> > What you mention is very odd. I would suggest to first perform a sort of\n> > sanity check, and make sure that even by moving code between extractors,\n> we\n> > are obtaining the same number and values for all features.\n> > All of our features are deterministic, so we should always get the same\n> > feature table. This may not seem meaningful, but I would just like to\n> make\n> > sure we are not making a silly mistake in the code.\n> >\n> > If we indeed get the same feature table but still different predictions,\n> > then I currently have no other ideas. Any thoughts @andreasvlachos<\n> > https://github.com/andreasvlachos> ?\n> >\n> > Best,\n> > Fernando\n> >\n> > \u2014\n> > You are receiving this because you authored the thread.\n> > Reply to this email directly, view it on GitHub<\n> > https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407412711>, or\n> > mute the thread<\n> >\n> https://github.com/notifications/unsubscribe-auth/AfUBhEmK3-FMbJv1RDmMKHrPirQH75iuks5uJyWBgaJpZM4VcuGr>.\n>\n> >\n> >\n> >\n> > \u2014\n> > You are receiving this because you modified the open/close state.\n> > Reply to this email directly, view it on GitHub\n> > <https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407482321>,\n> or mute\n> > the thread\n> > <\n> https://github.com/notifications/unsubscribe-auth/ACof6Nf-64WBS_jUoybsXsCVG_5aYI7Bks5uJ1XKgaJpZM4VcuGr>\n>\n> > .\n> >\n>\n>\n> --\n> Fernando Alva Manchego\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub<\n> https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407513586>, or\n> mute the thread<\n> https://github.com/notifications/unsubscribe-auth/AfUBhPJaiBUvmZbmPTsiV27gq8iDwDTwks5uJ2ycgaJpZM4VcuGr>.\n>\n>\n> \u2014\n> You are receiving this because you were mentioned.\n>\n>\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407532941>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABbUhT5Wd9gv0yXSzqb6vUiQmec-QqAHks5uJ3zigaJpZM4VcuGr>\n> .\n>\n",
        "PR/Issue Number": "27"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-07-24T20:45:32Z",
        "PR Comment": "Hi Andreas & All,\n\nThat\u2019s the only thing we could think of when Aneeq and I were looking at this earlier - that the order of the features somehow matters. I figure that there could be some randomness in the solver for the logistic regression, and giving it the features in a different order could lead to a different solution. It is pretty high dimensional data. I\u2019m experimenting with different solvers now for LR to see if I can find a setup that is consistent under changing feature order.\n\nCheers,\nTom\n\nOn 24 Jul 2018, at 21:15, Andreas Vlachos <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nHi all,\n\nSorry, was travelling today, haven't been able to take a look at the code\nyet. A guess: could the order/names of the features matter?\n\nCheers,\nAndreas\n\nOn Tue, 24 Jul 2018 at 21:00 tomdakin <notifications@github.com<mailto:notifications@github.com>> wrote:\n\n> It seems to happen with every feature I\u2019ve tried so far.\n> T\n>\n> On 24 Jul 2018, at 19:51, Fernando Alva Manchego <notifications@github.com<mailto:notifications@github.com>\n> <mailto:notifications@github.com>> wrote:\n>\n> Does this happen with any feature that you change or with one feature in\n> particular?\n>\n> On Tue, 24 Jul 2018 at 18:13, tomdakin <notifications@github.com<mailto:notifications@github.com><mailto:\n> notifications@github.com<mailto:notifications@github.com>>> wrote:\n>\n> > I spoke too soon - I misread my output. The feature is in fact being\n> > extracted the same in both classes!\n> > T\n> >\n> > On 24 Jul 2018, at 18:07, Tom Dakin <tom.a.dakin@hotmail.co.uk<mailto:tom.a.dakin@hotmail.co.uk><mailto:\n> tom.a.dakin@hotmail.co.uk<mailto:tom.a.dakin@hotmail.co.uk>><mailto:\n> > tom.a.dakin@hotmail.co.uk<mailto:tom.a.dakin@hotmail.co.uk><mailto:tom.a.dakin@hotmail.co.uk>>> wrote:\n> >\n> > Hi Fernando,\n> >\n> > Thanks for the debug tip - it worked. For some reason the features are\n> > coming back differently when they are in different extractor classes.\n> This\n> > is obviously bad, but I will fix it. It is much easier to fix than the\n> case\n> > where the algorithm is giving different predictions for the same\n> features!\n> >\n> > I\u2019ll work on it and hopefully get the bug ironed out tonight.\n> >\n> > Cheers\n> > Tom\n> >\n> > On 24 Jul 2018, at 14:47, Fernando Alva Manchego <\n> notifications@github.com<mailto:notifications@github.com><mailto:notifications@github.com>\n> > <mailto:notifications@github.com>> wrote:\n> >\n> >\n> > Hi Tom,\n> >\n> > Thank you for this. I have just tested the model and, indeed, the code\n> is\n> > back at running at a very reasonable speed. Nice work!\n> >\n> > What you mention is very odd. I would suggest to first perform a sort of\n> > sanity check, and make sure that even by moving code between extractors,\n> we\n> > are obtaining the same number and values for all features.\n> > All of our features are deterministic, so we should always get the same\n> > feature table. This may not seem meaningful, but I would just like to\n> make\n> > sure we are not making a silly mistake in the code.\n> >\n> > If we indeed get the same feature table but still different predictions,\n> > then I currently have no other ideas. Any thoughts @andreasvlachos<\n> > https://github.com/andreasvlachos> ?\n> >\n> > Best,\n> > Fernando\n> >\n> > \u2014\n> > You are receiving this because you authored the thread.\n> > Reply to this email directly, view it on GitHub<\n> > https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407412711>, or\n> > mute the thread<\n> >\n> https://github.com/notifications/unsubscribe-auth/AfUBhEmK3-FMbJv1RDmMKHrPirQH75iuks5uJyWBgaJpZM4VcuGr>.\n>\n> >\n> >\n> >\n> > \u2014\n> > You are receiving this because you modified the open/close state.\n> > Reply to this email directly, view it on GitHub\n> > <https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407482321>,\n> or mute\n> > the thread\n> > <\n> https://github.com/notifications/unsubscribe-auth/ACof6Nf-64WBS_jUoybsXsCVG_5aYI7Bks5uJ1XKgaJpZM4VcuGr>\n>\n> > .\n> >\n>\n>\n> --\n> Fernando Alva Manchego\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub<\n> https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407513586>, or\n> mute the thread<\n> https://github.com/notifications/unsubscribe-auth/AfUBhPJaiBUvmZbmPTsiV27gq8iDwDTwks5uJ2ycgaJpZM4VcuGr>.\n>\n>\n> \u2014\n> You are receiving this because you were mentioned.\n>\n>\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407532941>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABbUhT5Wd9gv0yXSzqb6vUiQmec-QqAHks5uJ3zigaJpZM4VcuGr>\n> .\n>\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407537371>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AfUBhNDIa4CN_mtkBUPyxPOdbjTLVoxGks5uJ4BngaJpZM4VcuGr>.\n\n",
        "PR/Issue Number": "27"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-06-30T11:17:15Z",
        "PR Comment": "Hi Tom,\n\nThank you for the code. It looks good overall. There is one detail that I think we need to figure out.\n\nWhat's going to be the purpose of the getter methods in the Dataset class: train_set(), dev_set(), test_set()? Originally, the idea was to read the data (if it hadn't been read before) and then return it. Now that we have the pickle objects. Is anyone who calls train_set(), for example, going to expect to have the data from the pickle objects too? If that is the case, then I think we could modify the code from those functions a little bit.  Something like this:\n\n```\n        if self._trainset is None: \n            trainset_raw = self.read_dataset(self._trainset_path)\n            trainset_spacy = self.read_spacy_pickle(self._trainset_spacy_path)\n            self._trainset = pd.concat([trainset_raw, trainset_spacy], axis=1)\n        \n        return  self._trainset\n```\n\nWhat do you think? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-06-30T11:26:02Z",
        "PR Comment": "Regarding your question about the pickle objects, we could put them in the Google Drive and then each one will have to download them and put them in the right folder. We should also add a .gitignore in those folders. Is that reasonable? Any other ideas @andreasvlachos?",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-06-30T11:29:40Z",
        "PR Comment": "Hi Fernando,\n\nI agree, that looks good. Will pandas behave OK if there is no spacy set there to concatenate?\n\nCheers,\nTom\n\nOn 30 Jun 2018, at 12:17, Fernando Alva Manchego <notifications@github.com<mailto:notifications@github.com>> wrote:\n\n\nHi Tom,\n\nThank you for the code. It looks good overall. There is one detail that I think we need to figure out.\n\nWhat's going to be the purpose of the getter methods in the Dataset class: train_set(), dev_set(), test_set()? Originally, the idea was to read the data (if it hadn't been read before) and then return it. Now that we have the pickle objects. Is anyone who calls train_set(), for example, going to expect to have the data from the pickle objects too? If that is the case, then I think we could modify the code from those functions a little bit. Something like this:\n\n        if self._trainset is None:\n            trainset_raw = self.read_dataset(self._trainset_path)\n            trainset_spacy = self.read_spacy_pickle(self._trainset_spacy_path)\n            self._trainset = pd.concat([trainset_raw, trainset_spacy], axis=1)\n\n        return  self._trainset\n\n\nWhat do you think?\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401534627>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AfUBhOIlqoh_PzZfexTZoBhInvY7km-Oks5uB148gaJpZM4U9hnK>.\n\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-06-30T11:32:10Z",
        "PR Comment": "Cool. I did have another idea about this, which is that by running\n\n$ python3 src/data/build_spacy_objects.py <LANGUAGE>\n\nFor each language locally, we can each build the pickles on our own machines.\n\nI don\u2019t know which is more appropriate\u2026\n\nCheers,\nTom\n\nOn 30 Jun 2018, at 12:26, Fernando Alva Manchego <notifications@github.com<mailto:notifications@github.com>> wrote:\n\n\nRegarding your question about the pickle objects, we could put them in the Google Drive and then each one will have to download them and put them in the right folder. We should also add a .gitignore in those folders. Is that reasonable? Any other ideas @andreasvlachos<https://github.com/andreasvlachos>?\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401534995>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AfUBhF_kZmrhdLtIaZr59gfyOBUj5UABks5uB2BKgaJpZM4U9hnK>.\n\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-06-30T11:49:27Z",
        "PR Comment": "If everything going forward relies on the spacy data being loaded, then we need to make sure that the pickle object exists. Two ways that I could think of for handling this:\n\n1. If the pickle object does not exist, we could send an error message requesting that it be created, and then terminate the program because we cannot continue.\n\n2. If the pickle object does not exist, we could send a warning message, and then internally process the data using spacy and create the pickle object.\n\nRemember that the idea of having the pickle objects was to avoid having to run the spacy parsers every time that we need to train and test. I personally prefer option 1.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-07-01T11:21:59Z",
        "PR Comment": "Hi guys,\n\nThanks for the good conversation. I think that both options Fernando\nmentions will eventually be used, option 1 to quickly setup an experiment\non a new machine, option 2 to experiment with the spacy preprocessing and\nensure we can replicate our work from scratch. Let\u2019s support both. Maybe\nthe easiest would be to implement option 2, and the user sees the message\nand decides whether to wait for the preprocessing to finish or interrupts\nit and downloads, Google drive would be the place for the large files.\n\nCheers,\nAndreas\nOn Sat, 30 Jun 2018 at 12:49, Fernando Alva Manchego <\nnotifications@github.com> wrote:\n\n> If everything going forward relies on the spacy data being loaded, then we\n> need to make sure that the pickle object exists. Two ways that I could\n> think of for handling this:\n>\n>    1.\n>\n>    If the pickle object does not exist, we could send an error message\n>    requesting that it be created, and then terminate the program because we\n>    cannot continue.\n>    2.\n>\n>    If the pickle object does not exist, we could send a warning message,\n>    and then internally process the data using spacy and create the pickle\n>    object.\n>\n> Remember that the idea of having the pickle objects was to avoid having to\n> run the spacy parsers every time that we need to train and test. I\n> personally prefer option 1.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401536118>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABbUhaJ8xdsqKNg9Fhsvf2REBbiPKbByks5uB2XHgaJpZM4U9hnK>\n> .\n>\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-07-02T07:53:14Z",
        "PR Comment": "Hi,\n\nThat sounds good. Should I code this up on my fork as it is and submit a new pull request, Fernando?\n\nThanks,\nTom\n\nOn 1 Jul 2018, at 12:21, Andreas Vlachos <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nHi guys,\n\nThanks for the good conversation. I think that both options Fernando\nmentions will eventually be used, option 1 to quickly setup an experiment\non a new machine, option 2 to experiment with the spacy preprocessing and\nensure we can replicate our work from scratch. Let\u2019s support both. Maybe\nthe easiest would be to implement option 2, and the user sees the message\nand decides whether to wait for the preprocessing to finish or interrupts\nit and downloads, Google drive would be the place for the large files.\n\nCheers,\nAndreas\nOn Sat, 30 Jun 2018 at 12:49, Fernando Alva Manchego <\nnotifications@github.com<mailto:notifications@github.com>> wrote:\n\n> If everything going forward relies on the spacy data being loaded, then we\n> need to make sure that the pickle object exists. Two ways that I could\n> think of for handling this:\n>\n> 1.\n>\n> If the pickle object does not exist, we could send an error message\n> requesting that it be created, and then terminate the program because we\n> cannot continue.\n> 2.\n>\n> If the pickle object does not exist, we could send a warning message,\n> and then internally process the data using spacy and create the pickle\n> object.\n>\n> Remember that the idea of having the pickle objects was to avoid having to\n> run the spacy parsers every time that we need to train and test. I\n> personally prefer option 1.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401536118>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABbUhaJ8xdsqKNg9Fhsvf2REBbiPKbByks5uB2XHgaJpZM4U9hnK>\n> .\n>\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401600359>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AfUBhF3-PKb7TJ6MQrB6Oftelb0wkEpjks5uCLDXgaJpZM4U9hnK>.\n\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-07-02T09:25:05Z",
        "PR Comment": "Yes, please.\n\nOn 2 July 2018 at 08:53, tomdakin <notifications@github.com> wrote:\n\n> Hi,\n>\n> That sounds good. Should I code this up on my fork as it is and submit a\n> new pull request, Fernando?\n>\n> Thanks,\n> Tom\n>\n> On 1 Jul 2018, at 12:21, Andreas Vlachos <notifications@github.com<mailto:\n> notifications@github.com>> wrote:\n>\n> Hi guys,\n>\n> Thanks for the good conversation. I think that both options Fernando\n> mentions will eventually be used, option 1 to quickly setup an experiment\n> on a new machine, option 2 to experiment with the spacy preprocessing and\n> ensure we can replicate our work from scratch. Let\u2019s support both. Maybe\n> the easiest would be to implement option 2, and the user sees the message\n> and decides whether to wait for the preprocessing to finish or interrupts\n> it and downloads, Google drive would be the place for the large files.\n>\n> Cheers,\n> Andreas\n> On Sat, 30 Jun 2018 at 12:49, Fernando Alva Manchego <\n> notifications@github.com<mailto:notifications@github.com>> wrote:\n>\n> > If everything going forward relies on the spacy data being loaded, then\n> we\n> > need to make sure that the pickle object exists. Two ways that I could\n> > think of for handling this:\n> >\n> > 1.\n> >\n> > If the pickle object does not exist, we could send an error message\n> > requesting that it be created, and then terminate the program because we\n> > cannot continue.\n> > 2.\n> >\n> > If the pickle object does not exist, we could send a warning message,\n> > and then internally process the data using spacy and create the pickle\n> > object.\n> >\n> > Remember that the idea of having the pickle objects was to avoid having\n> to\n> > run the spacy parsers every time that we need to train and test. I\n> > personally prefer option 1.\n> >\n> > \u2014\n> > You are receiving this because you were mentioned.\n> > Reply to this email directly, view it on GitHub\n> > <https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401536118>, or\n> mute\n> > the thread\n> > <https://github.com/notifications/unsubscribe-auth/\n> ABbUhaJ8xdsqKNg9Fhsvf2REBbiPKbByks5uB2XHgaJpZM4U9hnK>\n> > .\n> >\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub<https://github.com/\n> sheffieldnlp/cwi/pull/7#issuecomment-401600359>, or mute the thread<\n> https://github.com/notifications/unsubscribe-auth/AfUBhF3-\n> PKb7TJ6MQrB6Oftelb0wkEpjks5uCLDXgaJpZM4U9hnK>.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401701776>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ACof6KVctrZaVGlcXctEHL6Vn_aoOP45ks5uCdFrgaJpZM4U9hnK>\n> .\n>\n\n\n\n-- \nFernando Alva Manchego\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-07-02T14:07:02Z",
        "PR Comment": "Hi Fernando, \nI've updated the spacy/raw dataset structure as per your suggestion. \nThanks,\nTom",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-07-02T14:42:06Z",
        "PR Comment": "P.S. Do I need to wait for you to merge the pull before I make further changes? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-07-02T14:49:51Z",
        "PR Comment": "Merge done.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-06-30T11:17:15Z",
        "PR Comment": "Hi Tom,\n\nThank you for the code. It looks good overall. There is one detail that I think we need to figure out.\n\nWhat's going to be the purpose of the getter methods in the Dataset class: train_set(), dev_set(), test_set()? Originally, the idea was to read the data (if it hadn't been read before) and then return it. Now that we have the pickle objects. Is anyone who calls train_set(), for example, going to expect to have the data from the pickle objects too? If that is the case, then I think we could modify the code from those functions a little bit.  Something like this:\n\n```\n        if self._trainset is None: \n            trainset_raw = self.read_dataset(self._trainset_path)\n            trainset_spacy = self.read_spacy_pickle(self._trainset_spacy_path)\n            self._trainset = pd.concat([trainset_raw, trainset_spacy], axis=1)\n        \n        return  self._trainset\n```\n\nWhat do you think? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-06-30T11:26:02Z",
        "PR Comment": "Regarding your question about the pickle objects, we could put them in the Google Drive and then each one will have to download them and put them in the right folder. We should also add a .gitignore in those folders. Is that reasonable? Any other ideas @andreasvlachos?",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-06-30T11:29:40Z",
        "PR Comment": "Hi Fernando,\n\nI agree, that looks good. Will pandas behave OK if there is no spacy set there to concatenate?\n\nCheers,\nTom\n\nOn 30 Jun 2018, at 12:17, Fernando Alva Manchego <notifications@github.com<mailto:notifications@github.com>> wrote:\n\n\nHi Tom,\n\nThank you for the code. It looks good overall. There is one detail that I think we need to figure out.\n\nWhat's going to be the purpose of the getter methods in the Dataset class: train_set(), dev_set(), test_set()? Originally, the idea was to read the data (if it hadn't been read before) and then return it. Now that we have the pickle objects. Is anyone who calls train_set(), for example, going to expect to have the data from the pickle objects too? If that is the case, then I think we could modify the code from those functions a little bit. Something like this:\n\n        if self._trainset is None:\n            trainset_raw = self.read_dataset(self._trainset_path)\n            trainset_spacy = self.read_spacy_pickle(self._trainset_spacy_path)\n            self._trainset = pd.concat([trainset_raw, trainset_spacy], axis=1)\n\n        return  self._trainset\n\n\nWhat do you think?\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401534627>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AfUBhOIlqoh_PzZfexTZoBhInvY7km-Oks5uB148gaJpZM4U9hnK>.\n\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-06-30T11:32:10Z",
        "PR Comment": "Cool. I did have another idea about this, which is that by running\n\n$ python3 src/data/build_spacy_objects.py <LANGUAGE>\n\nFor each language locally, we can each build the pickles on our own machines.\n\nI don\u2019t know which is more appropriate\u2026\n\nCheers,\nTom\n\nOn 30 Jun 2018, at 12:26, Fernando Alva Manchego <notifications@github.com<mailto:notifications@github.com>> wrote:\n\n\nRegarding your question about the pickle objects, we could put them in the Google Drive and then each one will have to download them and put them in the right folder. We should also add a .gitignore in those folders. Is that reasonable? Any other ideas @andreasvlachos<https://github.com/andreasvlachos>?\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401534995>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AfUBhF_kZmrhdLtIaZr59gfyOBUj5UABks5uB2BKgaJpZM4U9hnK>.\n\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-06-30T11:49:27Z",
        "PR Comment": "If everything going forward relies on the spacy data being loaded, then we need to make sure that the pickle object exists. Two ways that I could think of for handling this:\n\n1. If the pickle object does not exist, we could send an error message requesting that it be created, and then terminate the program because we cannot continue.\n\n2. If the pickle object does not exist, we could send a warning message, and then internally process the data using spacy and create the pickle object.\n\nRemember that the idea of having the pickle objects was to avoid having to run the spacy parsers every time that we need to train and test. I personally prefer option 1.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-07-01T11:21:59Z",
        "PR Comment": "Hi guys,\n\nThanks for the good conversation. I think that both options Fernando\nmentions will eventually be used, option 1 to quickly setup an experiment\non a new machine, option 2 to experiment with the spacy preprocessing and\nensure we can replicate our work from scratch. Let\u2019s support both. Maybe\nthe easiest would be to implement option 2, and the user sees the message\nand decides whether to wait for the preprocessing to finish or interrupts\nit and downloads, Google drive would be the place for the large files.\n\nCheers,\nAndreas\nOn Sat, 30 Jun 2018 at 12:49, Fernando Alva Manchego <\nnotifications@github.com> wrote:\n\n> If everything going forward relies on the spacy data being loaded, then we\n> need to make sure that the pickle object exists. Two ways that I could\n> think of for handling this:\n>\n>    1.\n>\n>    If the pickle object does not exist, we could send an error message\n>    requesting that it be created, and then terminate the program because we\n>    cannot continue.\n>    2.\n>\n>    If the pickle object does not exist, we could send a warning message,\n>    and then internally process the data using spacy and create the pickle\n>    object.\n>\n> Remember that the idea of having the pickle objects was to avoid having to\n> run the spacy parsers every time that we need to train and test. I\n> personally prefer option 1.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401536118>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABbUhaJ8xdsqKNg9Fhsvf2REBbiPKbByks5uB2XHgaJpZM4U9hnK>\n> .\n>\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-07-02T07:53:14Z",
        "PR Comment": "Hi,\n\nThat sounds good. Should I code this up on my fork as it is and submit a new pull request, Fernando?\n\nThanks,\nTom\n\nOn 1 Jul 2018, at 12:21, Andreas Vlachos <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nHi guys,\n\nThanks for the good conversation. I think that both options Fernando\nmentions will eventually be used, option 1 to quickly setup an experiment\non a new machine, option 2 to experiment with the spacy preprocessing and\nensure we can replicate our work from scratch. Let\u2019s support both. Maybe\nthe easiest would be to implement option 2, and the user sees the message\nand decides whether to wait for the preprocessing to finish or interrupts\nit and downloads, Google drive would be the place for the large files.\n\nCheers,\nAndreas\nOn Sat, 30 Jun 2018 at 12:49, Fernando Alva Manchego <\nnotifications@github.com<mailto:notifications@github.com>> wrote:\n\n> If everything going forward relies on the spacy data being loaded, then we\n> need to make sure that the pickle object exists. Two ways that I could\n> think of for handling this:\n>\n> 1.\n>\n> If the pickle object does not exist, we could send an error message\n> requesting that it be created, and then terminate the program because we\n> cannot continue.\n> 2.\n>\n> If the pickle object does not exist, we could send a warning message,\n> and then internally process the data using spacy and create the pickle\n> object.\n>\n> Remember that the idea of having the pickle objects was to avoid having to\n> run the spacy parsers every time that we need to train and test. I\n> personally prefer option 1.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401536118>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABbUhaJ8xdsqKNg9Fhsvf2REBbiPKbByks5uB2XHgaJpZM4U9hnK>\n> .\n>\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401600359>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AfUBhF3-PKb7TJ6MQrB6Oftelb0wkEpjks5uCLDXgaJpZM4U9hnK>.\n\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-07-02T09:25:05Z",
        "PR Comment": "Yes, please.\n\nOn 2 July 2018 at 08:53, tomdakin <notifications@github.com> wrote:\n\n> Hi,\n>\n> That sounds good. Should I code this up on my fork as it is and submit a\n> new pull request, Fernando?\n>\n> Thanks,\n> Tom\n>\n> On 1 Jul 2018, at 12:21, Andreas Vlachos <notifications@github.com<mailto:\n> notifications@github.com>> wrote:\n>\n> Hi guys,\n>\n> Thanks for the good conversation. I think that both options Fernando\n> mentions will eventually be used, option 1 to quickly setup an experiment\n> on a new machine, option 2 to experiment with the spacy preprocessing and\n> ensure we can replicate our work from scratch. Let\u2019s support both. Maybe\n> the easiest would be to implement option 2, and the user sees the message\n> and decides whether to wait for the preprocessing to finish or interrupts\n> it and downloads, Google drive would be the place for the large files.\n>\n> Cheers,\n> Andreas\n> On Sat, 30 Jun 2018 at 12:49, Fernando Alva Manchego <\n> notifications@github.com<mailto:notifications@github.com>> wrote:\n>\n> > If everything going forward relies on the spacy data being loaded, then\n> we\n> > need to make sure that the pickle object exists. Two ways that I could\n> > think of for handling this:\n> >\n> > 1.\n> >\n> > If the pickle object does not exist, we could send an error message\n> > requesting that it be created, and then terminate the program because we\n> > cannot continue.\n> > 2.\n> >\n> > If the pickle object does not exist, we could send a warning message,\n> > and then internally process the data using spacy and create the pickle\n> > object.\n> >\n> > Remember that the idea of having the pickle objects was to avoid having\n> to\n> > run the spacy parsers every time that we need to train and test. I\n> > personally prefer option 1.\n> >\n> > \u2014\n> > You are receiving this because you were mentioned.\n> > Reply to this email directly, view it on GitHub\n> > <https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401536118>, or\n> mute\n> > the thread\n> > <https://github.com/notifications/unsubscribe-auth/\n> ABbUhaJ8xdsqKNg9Fhsvf2REBbiPKbByks5uB2XHgaJpZM4U9hnK>\n> > .\n> >\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub<https://github.com/\n> sheffieldnlp/cwi/pull/7#issuecomment-401600359>, or mute the thread<\n> https://github.com/notifications/unsubscribe-auth/AfUBhF3-\n> PKb7TJ6MQrB6Oftelb0wkEpjks5uCLDXgaJpZM4U9hnK>.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/7#issuecomment-401701776>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ACof6KVctrZaVGlcXctEHL6Vn_aoOP45ks5uCdFrgaJpZM4U9hnK>\n> .\n>\n\n\n\n-- \nFernando Alva Manchego\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-07-02T14:07:02Z",
        "PR Comment": "Hi Fernando, \nI've updated the spacy/raw dataset structure as per your suggestion. \nThanks,\nTom",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-07-02T14:42:06Z",
        "PR Comment": "P.S. Do I need to wait for you to merge the pull before I make further changes? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/data/build_spacy_objects.py",
        "Creation Date": "2018-07-02T14:49:51Z",
        "PR Comment": "Merge done.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-10-26T19:28:49Z",
        "PR Comment": "I also did some tests with a Random Forest Classifier. Average performance dropped, but some languages were a reasonable amount better-off.\n```\nCrosslingual Model\nLang\tLogReg\tRandFor\nFr\t0.643\t0.691\nEnN\t0.729\t0.653\nEnWN\t0.675\t0.591\nEnW\t0.685\t0.591\nEs\t0.689\t0.712\nDe\t0.703\t0.626\n---------------------\nAvg\t0.687\t0.644\n```",
        "PR/Issue Number": "34"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-10-27T16:59:46Z",
        "PR Comment": "Thanks Pierre. Interesting results.",
        "PR/Issue Number": "34"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-10-26T19:28:49Z",
        "PR Comment": "I also did some tests with a Random Forest Classifier. Average performance dropped, but some languages were a reasonable amount better-off.\n```\nCrosslingual Model\nLang\tLogReg\tRandFor\nFr\t0.643\t0.691\nEnN\t0.729\t0.653\nEnWN\t0.675\t0.591\nEnW\t0.685\t0.591\nEs\t0.689\t0.712\nDe\t0.703\t0.626\n---------------------\nAvg\t0.687\t0.644\n```",
        "PR/Issue Number": "34"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-10-27T16:59:46Z",
        "PR Comment": "Thanks Pierre. Interesting results.",
        "PR/Issue Number": "34"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-27T18:45:43Z",
        "PR Comment": "OK, now it works with all languages.\n\nResults for this commit:\nTesting on  english - News.\nmacro-F1: 0.733\n\nTesting on  english - WikiNews.\nmacro-F1: 0.692\n\nTesting on  english - Wikipedia.\nmacro-F1: 0.690\n\nTesting on  german - German.\nmacro-F1: 0.659\n\nTesting on  spanish - Spanish.\nmacro-F1: 0.645\n\nTesting on  french - French.\nmacro-F1: 0.226",
        "PR/Issue Number": "31"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-27T19:55:50Z",
        "PR Comment": "Ok! I suggest we use to drive progress, as this is the obvious test case in\nthis, and the main comparison against previous work!\nOn Fri, 27 Jul 2018 at 19:47, IntoThePit <notifications@github.com> wrote:\n\n> OK, now it works with all languages.\n>\n> Results for this commit:\n> Testing on english - News.\n> macro-F1: 0.733\n>\n> Testing on english - WikiNews.\n> macro-F1: 0.692\n>\n> Testing on english - Wikipedia.\n> macro-F1: 0.690\n>\n> Testing on german - German.\n> macro-F1: 0.659\n>\n> Testing on spanish - Spanish.\n> macro-F1: 0.645\n>\n> Testing on french - French.\n> macro-F1: 0.226\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/31#issuecomment-408506615>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABbUhQgPvd77fSqHa1zVSwThJrd_NbW3ks5uK1_XgaJpZM4VkaZi>\n> .\n>\n",
        "PR/Issue Number": "31"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-26T16:28:15Z",
        "PR Comment": "\"run_monolingual **should** still work.\"\n\nCould you make sure that they indeed work?",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-26T17:22:15Z",
        "PR Comment": "Whoops, yeah I meant it did still work as far as I can test on my Windows machine.\n\nThough, looking at it now, it only produces results for English? Is this a more recent change that I'm unaware of? It doesn't error or anything, it just completes having tested on English. As far as I'm aware, this isn't a change I've introduced.\n\nModel for english - News.\n\nResults on Test Data\nmacro-F1: 0.864\n\n\nModel for english - WikiNews.\n\nResults on Test Data\nmacro-F1: 0.818\n\n\nModel for english - Wikipedia.\n\nResults on Test Data\nmacro-F1: 0.789",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-26T17:25:07Z",
        "PR Comment": "Hi Pierre,\n\nAre you using the -l flag and specifying language when running\nrun_monolingual? The default (no flag) shows results only for English.\n\nKind regards,\nSanjana\n\nOn 26 July 2018 at 18:22, IntoThePit <notifications@github.com> wrote:\n\n> Whoops, yeah I meant it did still work as far as I can test on my Windows\n> machine.\n>\n> Though, looking at it now, it only produces results for English? Is this a\n> more recent change that I'm unaware of? It doesn't error or anything, it\n> just completes having tested on English. As far as I'm aware, this isn't a\n> change I've introduced.\n>\n> Model for english - News.\n>\n> Results on Test Data\n> macro-F1: 0.864\n>\n> Model for english - WikiNews.\n>\n> Results on Test Data\n> macro-F1: 0.818\n>\n> Model for english - Wikipedia.\n>\n> Results on Test Data\n> macro-F1: 0.789\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/30#issuecomment-408171386>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/APaUw3Kx19Ond7q1JDbbkUcTrpqvcPKcks5uKfrHgaJpZM4ViHuL>\n> .\n>\n",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-26T17:39:00Z",
        "PR Comment": "Thanks Sanjana, I just found it, and there was another unrelated error relating to Spanish encoding, which I just fixed by adding the usual encoding='utf-8' to the file open.\n\nIt'd be quite nice to have an ability to select \"all languages\" option for testing",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-26T16:28:15Z",
        "PR Comment": "\"run_monolingual **should** still work.\"\n\nCould you make sure that they indeed work?",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-26T17:22:15Z",
        "PR Comment": "Whoops, yeah I meant it did still work as far as I can test on my Windows machine.\n\nThough, looking at it now, it only produces results for English? Is this a more recent change that I'm unaware of? It doesn't error or anything, it just completes having tested on English. As far as I'm aware, this isn't a change I've introduced.\n\nModel for english - News.\n\nResults on Test Data\nmacro-F1: 0.864\n\n\nModel for english - WikiNews.\n\nResults on Test Data\nmacro-F1: 0.818\n\n\nModel for english - Wikipedia.\n\nResults on Test Data\nmacro-F1: 0.789",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-26T17:25:07Z",
        "PR Comment": "Hi Pierre,\n\nAre you using the -l flag and specifying language when running\nrun_monolingual? The default (no flag) shows results only for English.\n\nKind regards,\nSanjana\n\nOn 26 July 2018 at 18:22, IntoThePit <notifications@github.com> wrote:\n\n> Whoops, yeah I meant it did still work as far as I can test on my Windows\n> machine.\n>\n> Though, looking at it now, it only produces results for English? Is this a\n> more recent change that I'm unaware of? It doesn't error or anything, it\n> just completes having tested on English. As far as I'm aware, this isn't a\n> change I've introduced.\n>\n> Model for english - News.\n>\n> Results on Test Data\n> macro-F1: 0.864\n>\n> Model for english - WikiNews.\n>\n> Results on Test Data\n> macro-F1: 0.818\n>\n> Model for english - Wikipedia.\n>\n> Results on Test Data\n> macro-F1: 0.789\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/30#issuecomment-408171386>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/APaUw3Kx19Ond7q1JDbbkUcTrpqvcPKcks5uKfrHgaJpZM4ViHuL>\n> .\n>\n",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-26T17:39:00Z",
        "PR Comment": "Thanks Sanjana, I just found it, and there was another unrelated error relating to Spanish encoding, which I just fixed by adding the usual encoding='utf-8' to the file open.\n\nIt'd be quite nice to have an ability to select \"all languages\" option for testing",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-25T09:48:33Z",
        "PR Comment": "Thanks Tom. I would try to take a look at it, and will encourage everyone else to try it to.",
        "PR/Issue Number": "28"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-24T13:47:45Z",
        "PR Comment": "Hi Tom,\n\nThank you for this. I have just tested the model and, indeed, the code is back at running at a very reasonable speed. Nice work!\n\nWhat you mention is very odd. I would suggest to first perform a sort of sanity check, and make sure that even by moving code between extractors, we are obtaining the same number and values for all features. \nAll of our features are deterministic, so we should always get the same feature table. This may not seem meaningful, but I would just like to make sure we are not making a silly mistake in the code.\n\nIf we indeed get the same feature table but still different predictions, then I currently have no other ideas. Any thoughts @andreasvlachos ?\n\nBest,\nFernando\n",
        "PR/Issue Number": "27"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-24T17:07:27Z",
        "PR Comment": "Hi Fernando,\n\nThanks for the debug tip - it worked. For some reason the features are coming back differently when they are in different extractor classes. This is obviously bad, but I will fix it. It is much easier to fix than the case where the algorithm is giving different predictions for the same features!\n\nI\u2019ll work on it and hopefully get the bug ironed out tonight.\n\nCheers\nTom\n\nOn 24 Jul 2018, at 14:47, Fernando Alva Manchego <notifications@github.com<mailto:notifications@github.com>> wrote:\n\n\nHi Tom,\n\nThank you for this. I have just tested the model and, indeed, the code is back at running at a very reasonable speed. Nice work!\n\nWhat you mention is very odd. I would suggest to first perform a sort of sanity check, and make sure that even by moving code between extractors, we are obtaining the same number and values for all features.\nAll of our features are deterministic, so we should always get the same feature table. This may not seem meaningful, but I would just like to make sure we are not making a silly mistake in the code.\n\nIf we indeed get the same feature table but still different predictions, then I currently have no other ideas. Any thoughts @andreasvlachos<https://github.com/andreasvlachos> ?\n\nBest,\nFernando\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407412711>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AfUBhEmK3-FMbJv1RDmMKHrPirQH75iuks5uJyWBgaJpZM4VcuGr>.\n\n",
        "PR/Issue Number": "27"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-24T17:13:45Z",
        "PR Comment": "I spoke too soon - I misread my output. The feature is in fact being extracted the same in both classes!\nT\n\nOn 24 Jul 2018, at 18:07, Tom Dakin <tom.a.dakin@hotmail.co.uk<mailto:tom.a.dakin@hotmail.co.uk>> wrote:\n\nHi Fernando,\n\nThanks for the debug tip - it worked. For some reason the features are coming back differently when they are in different extractor classes. This is obviously bad, but I will fix it. It is much easier to fix than the case where the algorithm is giving different predictions for the same features!\n\nI\u2019ll work on it and hopefully get the bug ironed out tonight.\n\nCheers\nTom\n\nOn 24 Jul 2018, at 14:47, Fernando Alva Manchego <notifications@github.com<mailto:notifications@github.com>> wrote:\n\n\nHi Tom,\n\nThank you for this. I have just tested the model and, indeed, the code is back at running at a very reasonable speed. Nice work!\n\nWhat you mention is very odd. I would suggest to first perform a sort of sanity check, and make sure that even by moving code between extractors, we are obtaining the same number and values for all features.\nAll of our features are deterministic, so we should always get the same feature table. This may not seem meaningful, but I would just like to make sure we are not making a silly mistake in the code.\n\nIf we indeed get the same feature table but still different predictions, then I currently have no other ideas. Any thoughts @andreasvlachos<https://github.com/andreasvlachos> ?\n\nBest,\nFernando\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407412711>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AfUBhEmK3-FMbJv1RDmMKHrPirQH75iuks5uJyWBgaJpZM4VcuGr>.\n\n\n",
        "PR/Issue Number": "27"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-24T18:51:06Z",
        "PR Comment": "Does this happen with any feature that you change or with one feature in\nparticular?\n\nOn Tue, 24 Jul 2018 at 18:13, tomdakin <notifications@github.com> wrote:\n\n> I spoke too soon - I misread my output. The feature is in fact being\n> extracted the same in both classes!\n> T\n>\n> On 24 Jul 2018, at 18:07, Tom Dakin <tom.a.dakin@hotmail.co.uk<mailto:\n> tom.a.dakin@hotmail.co.uk>> wrote:\n>\n> Hi Fernando,\n>\n> Thanks for the debug tip - it worked. For some reason the features are\n> coming back differently when they are in different extractor classes. This\n> is obviously bad, but I will fix it. It is much easier to fix than the case\n> where the algorithm is giving different predictions for the same features!\n>\n> I\u2019ll work on it and hopefully get the bug ironed out tonight.\n>\n> Cheers\n> Tom\n>\n> On 24 Jul 2018, at 14:47, Fernando Alva Manchego <notifications@github.com\n> <mailto:notifications@github.com>> wrote:\n>\n>\n> Hi Tom,\n>\n> Thank you for this. I have just tested the model and, indeed, the code is\n> back at running at a very reasonable speed. Nice work!\n>\n> What you mention is very odd. I would suggest to first perform a sort of\n> sanity check, and make sure that even by moving code between extractors, we\n> are obtaining the same number and values for all features.\n> All of our features are deterministic, so we should always get the same\n> feature table. This may not seem meaningful, but I would just like to make\n> sure we are not making a silly mistake in the code.\n>\n> If we indeed get the same feature table but still different predictions,\n> then I currently have no other ideas. Any thoughts @andreasvlachos<\n> https://github.com/andreasvlachos> ?\n>\n> Best,\n> Fernando\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub<\n> https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407412711>, or\n> mute the thread<\n> https://github.com/notifications/unsubscribe-auth/AfUBhEmK3-FMbJv1RDmMKHrPirQH75iuks5uJyWBgaJpZM4VcuGr>.\n>\n>\n>\n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407482321>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ACof6Nf-64WBS_jUoybsXsCVG_5aYI7Bks5uJ1XKgaJpZM4VcuGr>\n> .\n>\n\n\n-- \nFernando Alva Manchego\n",
        "PR/Issue Number": "27"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-24T20:00:33Z",
        "PR Comment": "It seems to happen with every feature I\u2019ve tried so far.\nT\n\nOn 24 Jul 2018, at 19:51, Fernando Alva Manchego <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nDoes this happen with any feature that you change or with one feature in\nparticular?\n\nOn Tue, 24 Jul 2018 at 18:13, tomdakin <notifications@github.com<mailto:notifications@github.com>> wrote:\n\n> I spoke too soon - I misread my output. The feature is in fact being\n> extracted the same in both classes!\n> T\n>\n> On 24 Jul 2018, at 18:07, Tom Dakin <tom.a.dakin@hotmail.co.uk<mailto:tom.a.dakin@hotmail.co.uk><mailto:\n> tom.a.dakin@hotmail.co.uk<mailto:tom.a.dakin@hotmail.co.uk>>> wrote:\n>\n> Hi Fernando,\n>\n> Thanks for the debug tip - it worked. For some reason the features are\n> coming back differently when they are in different extractor classes. This\n> is obviously bad, but I will fix it. It is much easier to fix than the case\n> where the algorithm is giving different predictions for the same features!\n>\n> I\u2019ll work on it and hopefully get the bug ironed out tonight.\n>\n> Cheers\n> Tom\n>\n> On 24 Jul 2018, at 14:47, Fernando Alva Manchego <notifications@github.com<mailto:notifications@github.com>\n> <mailto:notifications@github.com>> wrote:\n>\n>\n> Hi Tom,\n>\n> Thank you for this. I have just tested the model and, indeed, the code is\n> back at running at a very reasonable speed. Nice work!\n>\n> What you mention is very odd. I would suggest to first perform a sort of\n> sanity check, and make sure that even by moving code between extractors, we\n> are obtaining the same number and values for all features.\n> All of our features are deterministic, so we should always get the same\n> feature table. This may not seem meaningful, but I would just like to make\n> sure we are not making a silly mistake in the code.\n>\n> If we indeed get the same feature table but still different predictions,\n> then I currently have no other ideas. Any thoughts @andreasvlachos<\n> https://github.com/andreasvlachos> ?\n>\n> Best,\n> Fernando\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub<\n> https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407412711>, or\n> mute the thread<\n> https://github.com/notifications/unsubscribe-auth/AfUBhEmK3-FMbJv1RDmMKHrPirQH75iuks5uJyWBgaJpZM4VcuGr>.\n>\n>\n>\n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407482321>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ACof6Nf-64WBS_jUoybsXsCVG_5aYI7Bks5uJ1XKgaJpZM4VcuGr>\n> .\n>\n\n\n--\nFernando Alva Manchego\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407513586>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AfUBhPJaiBUvmZbmPTsiV27gq8iDwDTwks5uJ2ycgaJpZM4VcuGr>.\n\n",
        "PR/Issue Number": "27"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-24T20:15:34Z",
        "PR Comment": "Hi all,\n\nSorry, was travelling today, haven't been able to take a look at the code\nyet. A guess: could the order/names of the features matter?\n\nCheers,\nAndreas\n\nOn Tue, 24 Jul 2018 at 21:00 tomdakin <notifications@github.com> wrote:\n\n> It seems to happen with every feature I\u2019ve tried so far.\n> T\n>\n> On 24 Jul 2018, at 19:51, Fernando Alva Manchego <notifications@github.com\n> <mailto:notifications@github.com>> wrote:\n>\n> Does this happen with any feature that you change or with one feature in\n> particular?\n>\n> On Tue, 24 Jul 2018 at 18:13, tomdakin <notifications@github.com<mailto:\n> notifications@github.com>> wrote:\n>\n> > I spoke too soon - I misread my output. The feature is in fact being\n> > extracted the same in both classes!\n> > T\n> >\n> > On 24 Jul 2018, at 18:07, Tom Dakin <tom.a.dakin@hotmail.co.uk<mailto:\n> tom.a.dakin@hotmail.co.uk><mailto:\n> > tom.a.dakin@hotmail.co.uk<mailto:tom.a.dakin@hotmail.co.uk>>> wrote:\n> >\n> > Hi Fernando,\n> >\n> > Thanks for the debug tip - it worked. For some reason the features are\n> > coming back differently when they are in different extractor classes.\n> This\n> > is obviously bad, but I will fix it. It is much easier to fix than the\n> case\n> > where the algorithm is giving different predictions for the same\n> features!\n> >\n> > I\u2019ll work on it and hopefully get the bug ironed out tonight.\n> >\n> > Cheers\n> > Tom\n> >\n> > On 24 Jul 2018, at 14:47, Fernando Alva Manchego <\n> notifications@github.com<mailto:notifications@github.com>\n> > <mailto:notifications@github.com>> wrote:\n> >\n> >\n> > Hi Tom,\n> >\n> > Thank you for this. I have just tested the model and, indeed, the code\n> is\n> > back at running at a very reasonable speed. Nice work!\n> >\n> > What you mention is very odd. I would suggest to first perform a sort of\n> > sanity check, and make sure that even by moving code between extractors,\n> we\n> > are obtaining the same number and values for all features.\n> > All of our features are deterministic, so we should always get the same\n> > feature table. This may not seem meaningful, but I would just like to\n> make\n> > sure we are not making a silly mistake in the code.\n> >\n> > If we indeed get the same feature table but still different predictions,\n> > then I currently have no other ideas. Any thoughts @andreasvlachos<\n> > https://github.com/andreasvlachos> ?\n> >\n> > Best,\n> > Fernando\n> >\n> > \u2014\n> > You are receiving this because you authored the thread.\n> > Reply to this email directly, view it on GitHub<\n> > https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407412711>, or\n> > mute the thread<\n> >\n> https://github.com/notifications/unsubscribe-auth/AfUBhEmK3-FMbJv1RDmMKHrPirQH75iuks5uJyWBgaJpZM4VcuGr>.\n>\n> >\n> >\n> >\n> > \u2014\n> > You are receiving this because you modified the open/close state.\n> > Reply to this email directly, view it on GitHub\n> > <https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407482321>,\n> or mute\n> > the thread\n> > <\n> https://github.com/notifications/unsubscribe-auth/ACof6Nf-64WBS_jUoybsXsCVG_5aYI7Bks5uJ1XKgaJpZM4VcuGr>\n>\n> > .\n> >\n>\n>\n> --\n> Fernando Alva Manchego\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub<\n> https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407513586>, or\n> mute the thread<\n> https://github.com/notifications/unsubscribe-auth/AfUBhPJaiBUvmZbmPTsiV27gq8iDwDTwks5uJ2ycgaJpZM4VcuGr>.\n>\n>\n> \u2014\n> You are receiving this because you were mentioned.\n>\n>\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407532941>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABbUhT5Wd9gv0yXSzqb6vUiQmec-QqAHks5uJ3zigaJpZM4VcuGr>\n> .\n>\n",
        "PR/Issue Number": "27"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-24T20:45:32Z",
        "PR Comment": "Hi Andreas & All,\n\nThat\u2019s the only thing we could think of when Aneeq and I were looking at this earlier - that the order of the features somehow matters. I figure that there could be some randomness in the solver for the logistic regression, and giving it the features in a different order could lead to a different solution. It is pretty high dimensional data. I\u2019m experimenting with different solvers now for LR to see if I can find a setup that is consistent under changing feature order.\n\nCheers,\nTom\n\nOn 24 Jul 2018, at 21:15, Andreas Vlachos <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nHi all,\n\nSorry, was travelling today, haven't been able to take a look at the code\nyet. A guess: could the order/names of the features matter?\n\nCheers,\nAndreas\n\nOn Tue, 24 Jul 2018 at 21:00 tomdakin <notifications@github.com<mailto:notifications@github.com>> wrote:\n\n> It seems to happen with every feature I\u2019ve tried so far.\n> T\n>\n> On 24 Jul 2018, at 19:51, Fernando Alva Manchego <notifications@github.com<mailto:notifications@github.com>\n> <mailto:notifications@github.com>> wrote:\n>\n> Does this happen with any feature that you change or with one feature in\n> particular?\n>\n> On Tue, 24 Jul 2018 at 18:13, tomdakin <notifications@github.com<mailto:notifications@github.com><mailto:\n> notifications@github.com<mailto:notifications@github.com>>> wrote:\n>\n> > I spoke too soon - I misread my output. The feature is in fact being\n> > extracted the same in both classes!\n> > T\n> >\n> > On 24 Jul 2018, at 18:07, Tom Dakin <tom.a.dakin@hotmail.co.uk<mailto:tom.a.dakin@hotmail.co.uk><mailto:\n> tom.a.dakin@hotmail.co.uk<mailto:tom.a.dakin@hotmail.co.uk>><mailto:\n> > tom.a.dakin@hotmail.co.uk<mailto:tom.a.dakin@hotmail.co.uk><mailto:tom.a.dakin@hotmail.co.uk>>> wrote:\n> >\n> > Hi Fernando,\n> >\n> > Thanks for the debug tip - it worked. For some reason the features are\n> > coming back differently when they are in different extractor classes.\n> This\n> > is obviously bad, but I will fix it. It is much easier to fix than the\n> case\n> > where the algorithm is giving different predictions for the same\n> features!\n> >\n> > I\u2019ll work on it and hopefully get the bug ironed out tonight.\n> >\n> > Cheers\n> > Tom\n> >\n> > On 24 Jul 2018, at 14:47, Fernando Alva Manchego <\n> notifications@github.com<mailto:notifications@github.com><mailto:notifications@github.com>\n> > <mailto:notifications@github.com>> wrote:\n> >\n> >\n> > Hi Tom,\n> >\n> > Thank you for this. I have just tested the model and, indeed, the code\n> is\n> > back at running at a very reasonable speed. Nice work!\n> >\n> > What you mention is very odd. I would suggest to first perform a sort of\n> > sanity check, and make sure that even by moving code between extractors,\n> we\n> > are obtaining the same number and values for all features.\n> > All of our features are deterministic, so we should always get the same\n> > feature table. This may not seem meaningful, but I would just like to\n> make\n> > sure we are not making a silly mistake in the code.\n> >\n> > If we indeed get the same feature table but still different predictions,\n> > then I currently have no other ideas. Any thoughts @andreasvlachos<\n> > https://github.com/andreasvlachos> ?\n> >\n> > Best,\n> > Fernando\n> >\n> > \u2014\n> > You are receiving this because you authored the thread.\n> > Reply to this email directly, view it on GitHub<\n> > https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407412711>, or\n> > mute the thread<\n> >\n> https://github.com/notifications/unsubscribe-auth/AfUBhEmK3-FMbJv1RDmMKHrPirQH75iuks5uJyWBgaJpZM4VcuGr>.\n>\n> >\n> >\n> >\n> > \u2014\n> > You are receiving this because you modified the open/close state.\n> > Reply to this email directly, view it on GitHub\n> > <https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407482321>,\n> or mute\n> > the thread\n> > <\n> https://github.com/notifications/unsubscribe-auth/ACof6Nf-64WBS_jUoybsXsCVG_5aYI7Bks5uJ1XKgaJpZM4VcuGr>\n>\n> > .\n> >\n>\n>\n> --\n> Fernando Alva Manchego\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub<\n> https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407513586>, or\n> mute the thread<\n> https://github.com/notifications/unsubscribe-auth/AfUBhPJaiBUvmZbmPTsiV27gq8iDwDTwks5uJ2ycgaJpZM4VcuGr>.\n>\n>\n> \u2014\n> You are receiving this because you were mentioned.\n>\n>\n> Reply to this email directly, view it on GitHub\n> <https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407532941>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABbUhT5Wd9gv0yXSzqb6vUiQmec-QqAHks5uJ3zigaJpZM4VcuGr>\n> .\n>\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/sheffieldnlp/cwi/pull/27#issuecomment-407537371>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AfUBhNDIa4CN_mtkBUPyxPOdbjTLVoxGks5uJ4BngaJpZM4VcuGr>.\n\n",
        "PR/Issue Number": "27"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-11T10:05:55Z",
        "PR Comment": "Hi Sanjana,\nThanks for the code. I have checked the Google Drive and found the spacy objects you are mentioning. Could you check that again please?\n\nAlso, it appears that there are some conflicts in the file `src/features/feature_transfomers.py`. Would you mind fixing that? Probably they were caused by the merge I did a few minutes ago of Tom's code. Apologies for that.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-22T11:36:02Z",
        "PR Comment": "Hi Fernando, \n\nCan this be merged now? I have fixed conflicts and incorporated all spacy objects.\n\nKind regards,\nSanjana",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-22T12:02:58Z",
        "PR Comment": "There are some errors originating from I think Advanced Extractor for Spanish at the moment. Something related to 'noun chunks'.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-11T10:05:55Z",
        "PR Comment": "Hi Sanjana,\nThanks for the code. I have checked the Google Drive and found the spacy objects you are mentioning. Could you check that again please?\n\nAlso, it appears that there are some conflicts in the file `src/features/feature_transfomers.py`. Would you mind fixing that? Probably they were caused by the merge I did a few minutes ago of Tom's code. Apologies for that.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-22T11:36:02Z",
        "PR Comment": "Hi Fernando, \n\nCan this be merged now? I have fixed conflicts and incorporated all spacy objects.\n\nKind regards,\nSanjana",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-22T12:02:58Z",
        "PR Comment": "There are some errors originating from I think Advanced Extractor for Spanish at the moment. Something related to 'noun chunks'.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-11T10:05:55Z",
        "PR Comment": "Hi Sanjana,\nThanks for the code. I have checked the Google Drive and found the spacy objects you are mentioning. Could you check that again please?\n\nAlso, it appears that there are some conflicts in the file `src/features/feature_transfomers.py`. Would you mind fixing that? Probably they were caused by the merge I did a few minutes ago of Tom's code. Apologies for that.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-22T11:36:02Z",
        "PR Comment": "Hi Fernando, \n\nCan this be merged now? I have fixed conflicts and incorporated all spacy objects.\n\nKind regards,\nSanjana",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-22T12:02:58Z",
        "PR Comment": "There are some errors originating from I think Advanced Extractor for Spanish at the moment. Something related to 'noun chunks'.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-11T10:05:55Z",
        "PR Comment": "Hi Sanjana,\nThanks for the code. I have checked the Google Drive and found the spacy objects you are mentioning. Could you check that again please?\n\nAlso, it appears that there are some conflicts in the file `src/features/feature_transfomers.py`. Would you mind fixing that? Probably they were caused by the merge I did a few minutes ago of Tom's code. Apologies for that.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-22T11:36:02Z",
        "PR Comment": "Hi Fernando, \n\nCan this be merged now? I have fixed conflicts and incorporated all spacy objects.\n\nKind regards,\nSanjana",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-22T12:02:58Z",
        "PR Comment": "There are some errors originating from I think Advanced Extractor for Spanish at the moment. Something related to 'noun chunks'.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-11T10:05:55Z",
        "PR Comment": "Hi Sanjana,\nThanks for the code. I have checked the Google Drive and found the spacy objects you are mentioning. Could you check that again please?\n\nAlso, it appears that there are some conflicts in the file `src/features/feature_transfomers.py`. Would you mind fixing that? Probably they were caused by the merge I did a few minutes ago of Tom's code. Apologies for that.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-22T11:36:02Z",
        "PR Comment": "Hi Fernando, \n\nCan this be merged now? I have fixed conflicts and incorporated all spacy objects.\n\nKind regards,\nSanjana",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-22T12:02:58Z",
        "PR Comment": "There are some errors originating from I think Advanced Extractor for Spanish at the moment. Something related to 'noun chunks'.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-11T10:05:55Z",
        "PR Comment": "Hi Sanjana,\nThanks for the code. I have checked the Google Drive and found the spacy objects you are mentioning. Could you check that again please?\n\nAlso, it appears that there are some conflicts in the file `src/features/feature_transfomers.py`. Would you mind fixing that? Probably they were caused by the merge I did a few minutes ago of Tom's code. Apologies for that.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-22T11:36:02Z",
        "PR Comment": "Hi Fernando, \n\nCan this be merged now? I have fixed conflicts and incorporated all spacy objects.\n\nKind regards,\nSanjana",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-22T12:02:58Z",
        "PR Comment": "There are some errors originating from I think Advanced Extractor for Spanish at the moment. Something related to 'noun chunks'.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-11T10:05:55Z",
        "PR Comment": "Hi Sanjana,\nThanks for the code. I have checked the Google Drive and found the spacy objects you are mentioning. Could you check that again please?\n\nAlso, it appears that there are some conflicts in the file `src/features/feature_transfomers.py`. Would you mind fixing that? Probably they were caused by the merge I did a few minutes ago of Tom's code. Apologies for that.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-22T11:36:02Z",
        "PR Comment": "Hi Fernando, \n\nCan this be merged now? I have fixed conflicts and incorporated all spacy objects.\n\nKind regards,\nSanjana",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-22T12:02:58Z",
        "PR Comment": "There are some errors originating from I think Advanced Extractor for Spanish at the moment. Something related to 'noun chunks'.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-11T10:05:55Z",
        "PR Comment": "Hi Sanjana,\nThanks for the code. I have checked the Google Drive and found the spacy objects you are mentioning. Could you check that again please?\n\nAlso, it appears that there are some conflicts in the file `src/features/feature_transfomers.py`. Would you mind fixing that? Probably they were caused by the merge I did a few minutes ago of Tom's code. Apologies for that.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-22T11:36:02Z",
        "PR Comment": "Hi Fernando, \n\nCan this be merged now? I have fixed conflicts and incorporated all spacy objects.\n\nKind regards,\nSanjana",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-22T12:02:58Z",
        "PR Comment": "There are some errors originating from I think Advanced Extractor for Spanish at the moment. Something related to 'noun chunks'.",
        "PR/Issue Number": "17"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-06T15:12:06Z",
        "PR Comment": "Thank you.",
        "PR/Issue Number": "14"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-03T19:48:08Z",
        "PR Comment": "Now this also includes unigrams, bigrams and trigrams, though these seemed to harm performance in non-English languages (maybe just because there's less training data in those languages):\n\nOld --> New:\nNews: 0.81 --> 0.83(+0.02)\nWikinews: 0.73 --> 0.79(+0.06)\nWikipedia:  0.71 --> 0.73(+0.02)\nSpanish: 0.77 --> 0.75(-0.02)\nGerman: 0.75 --> 0.74 (-0.01)",
        "PR/Issue Number": "13"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-04T09:21:49Z",
        "PR Comment": "Nice work! :)",
        "PR/Issue Number": "13"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-03T19:48:08Z",
        "PR Comment": "Now this also includes unigrams, bigrams and trigrams, though these seemed to harm performance in non-English languages (maybe just because there's less training data in those languages):\n\nOld --> New:\nNews: 0.81 --> 0.83(+0.02)\nWikinews: 0.73 --> 0.79(+0.06)\nWikipedia:  0.71 --> 0.73(+0.02)\nSpanish: 0.77 --> 0.75(-0.02)\nGerman: 0.75 --> 0.74 (-0.01)",
        "PR/Issue Number": "13"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-04T09:21:49Z",
        "PR Comment": "Nice work! :)",
        "PR/Issue Number": "13"
    },
    {
        "repo_url": "github.com/sheffieldnlp/cwi",
        "filepath": "src/features/feature_transfomers.py",
        "Creation Date": "2018-07-02T14:53:45Z",
        "PR Comment": "Thank you.",
        "PR/Issue Number": "8"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-04-07T03:58:19Z",
        "PR Comment": "Is there a better way to test if a ```date string``` specifies a particular date (e.g. '16th December' vs 'a week ago')? I don't really want to use another library just for this test...\n\nIf we are going to stick with this, should we move this somewhere else? (in case we need to handle non-english articles)",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-04-05T00:29:47Z",
        "PR Comment": "Based on a couple of tests, I don't think its working quite as expected.\n\nFor example, using a publication date of 30th October 2016\n````\npublication_date = datetime.datetime(2016, 10, 30)\n````\nExample: \"Friday evening\"\nExpected result: `datetime.datetime(2016, 10, 28, 0, 0)`\nActual result: `datetime.datetime(2016, 10, 24, 6, 0)`\n\nExample: \"'28th October'\"\nExpected result: `datetime.datetime(2016, 10, 28, 0, 0)`\nActual result: `datetime.datetime(2015, 11, 2, 0, 0)`\n\n\n\n\n",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-04-09T19:34:07Z",
        "PR Comment": "Hey, so that I can merge can I ask you to make one small change:\nOn line 152 change `return datetime.datetime(`  to `return datetime(` ",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-04-10T00:03:03Z",
        "PR Comment": "Done :)",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-04-07T03:58:19Z",
        "PR Comment": "Is there a better way to test if a ```date string``` specifies a particular date (e.g. '16th December' vs 'a week ago')? I don't really want to use another library just for this test...\n\nIf we are going to stick with this, should we move this somewhere else? (in case we need to handle non-english articles)",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-04-05T00:29:47Z",
        "PR Comment": "Based on a couple of tests, I don't think its working quite as expected.\n\nFor example, using a publication date of 30th October 2016\n````\npublication_date = datetime.datetime(2016, 10, 30)\n````\nExample: \"Friday evening\"\nExpected result: `datetime.datetime(2016, 10, 28, 0, 0)`\nActual result: `datetime.datetime(2016, 10, 24, 6, 0)`\n\nExample: \"'28th October'\"\nExpected result: `datetime.datetime(2016, 10, 28, 0, 0)`\nActual result: `datetime.datetime(2015, 11, 2, 0, 0)`\n\n\n\n\n",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-04-09T19:34:07Z",
        "PR Comment": "Hey, so that I can merge can I ask you to make one small change:\nOn line 152 change `return datetime.datetime(`  to `return datetime(` ",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-04-10T00:03:03Z",
        "PR Comment": "Done :)",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-04-07T03:58:19Z",
        "PR Comment": "Is there a better way to test if a ```date string``` specifies a particular date (e.g. '16th December' vs 'a week ago')? I don't really want to use another library just for this test...\n\nIf we are going to stick with this, should we move this somewhere else? (in case we need to handle non-english articles)",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-04-05T00:29:47Z",
        "PR Comment": "Based on a couple of tests, I don't think its working quite as expected.\n\nFor example, using a publication date of 30th October 2016\n````\npublication_date = datetime.datetime(2016, 10, 30)\n````\nExample: \"Friday evening\"\nExpected result: `datetime.datetime(2016, 10, 28, 0, 0)`\nActual result: `datetime.datetime(2016, 10, 24, 6, 0)`\n\nExample: \"'28th October'\"\nExpected result: `datetime.datetime(2016, 10, 28, 0, 0)`\nActual result: `datetime.datetime(2015, 11, 2, 0, 0)`\n\n\n\n\n",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-04-09T19:34:07Z",
        "PR Comment": "Hey, so that I can merge can I ask you to make one small change:\nOn line 152 change `return datetime.datetime(`  to `return datetime(` ",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-04-10T00:03:03Z",
        "PR Comment": "Done :)",
        "PR/Issue Number": "135"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-03-28T15:42:26Z",
        "PR Comment": "By the way, having the docker container set up with everything on the Master branch is awesome and makes it easy for a new person to jump into the project. It would be great to have that pulled into the Interpreter branch as well!",
        "PR/Issue Number": "125"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-03-27T15:21:57Z",
        "PR Comment": "Hey....I think I see what happened here....I merged a subsequent PR without checking it properly and it turned out that it was based on an earlier version of the repo.\nI will try and clean this up a bit later on today.",
        "PR/Issue Number": "113"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-03-28T00:20:15Z",
        "PR Comment": "Hi @alexanderrich you were correct the first time and I had forgotten to include the file.\nI think this is fixed now with PR #124 but let me know any other issues you have! Thanks.",
        "PR/Issue Number": "113"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-03-28T12:54:15Z",
        "PR Comment": "Everything works now, thanks!",
        "PR/Issue Number": "113"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-03-27T15:21:57Z",
        "PR Comment": "Hey....I think I see what happened here....I merged a subsequent PR without checking it properly and it turned out that it was based on an earlier version of the repo.\nI will try and clean this up a bit later on today.",
        "PR/Issue Number": "113"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-03-28T00:20:15Z",
        "PR Comment": "Hi @alexanderrich you were correct the first time and I had forgotten to include the file.\nI think this is fixed now with PR #124 but let me know any other issues you have! Thanks.",
        "PR/Issue Number": "113"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-03-28T12:54:15Z",
        "PR Comment": "Everything works now, thanks!",
        "PR/Issue Number": "113"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-03-09T17:23:58Z",
        "PR Comment": "Hey, it's looking good.  I think it would be good to take a step back and just think about the processing workflow a second.\n\nThe main thing that concerns me is loading `Interpreter()` as this requires loading a 2GB language model, so just want to make sure we are loading at the right point, rather than having to reload it in various places.\n\nIn theory, I think the flow for a single URL is / should be:\n\n1. Receive URL\n2. Attempt to parse (and save content, title, domain etc. to database?)\n3. Load Interpreter\n4. Use Interpreter to extract:\n  - Language\n  - Reports\n  - Locations etc.\n5. Update article attributes based on output from Interpreter\n\nIn my mind I think we should manage this workflow in `pipeline.py` and therefore only initialize `Interpreter()` in the pipeline rather than also in the Article class.\n\nAny thoughts?",
        "PR/Issue Number": "101"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-03-09T18:32:23Z",
        "PR Comment": "I was debating if I should use interpreter in ```article.py``` or ```pipeline.py``` too.  Now that I look at the updated schema, it makes sense to have it in pipeline since article is just a data model. ",
        "PR/Issue Number": "101"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-02-28T11:33:08Z",
        "PR Comment": "The code looks good. I'm not up to speed on what the purpose is though. Is this to allow for displacy integration? \n\ne: I'm a moron - forgot to read your pull request description.",
        "PR/Issue Number": "88"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-02-25T03:27:14Z",
        "PR Comment": "Looks good to me.",
        "PR/Issue Number": "87"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-02-18T22:24:23Z",
        "PR Comment": "So, still a lot of work to be done in terms of refactoring, cleaning things up, dealing with some special cases, and then probably lots of testing to see where we're missing things, however here is a start at filling out the interpreter with lots of functions (mostly James' work) for processing articles.\n\nI added a few extra fields to the Article class....I haven't yet updated any of the SQL stuff for these fields, because I thought it would be good to review / discuss how these should be saved.\nIn particular, what are your thoughts on saving extracted Reports? Creating some sort of separate table with a `belongs to` relationship and foreign key?\n\nIn the meantime, I have also included an example notebook of how these functions work in practice.\n\nLet me know any suggestions, modifications or improvements you think I should include at this stage.",
        "PR/Issue Number": "74"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-02-19T05:38:15Z",
        "PR Comment": "I've just had another look through the refactored notebook. There are actually several cases of reports that were previously being generated that are now absent. I also noticed some cases that were missed in my DependencyTreeExperiments3 notebook.\n\n We will need to carefully examine the content of the reports that are generated to check that all relevent information is being extracted from the article (ie merely generating a report for an article is not a guarantee that it has been properly processed). I've made a start at trying to fix some of these issues, but I've run out of time. I've uploaded this work (DependencyTreeExperiments5.ipynb). Apologies; the code in this notebook is a bit of a mess, I plan to come back to this later but I thought I'd give you a heads up on what I've found so far.\n\ne: I still think we should merge this; we will just need to change it later.",
        "PR/Issue Number": "74"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/interpreter.py",
        "Creation Date": "2017-02-09T04:00:55Z",
        "PR Comment": "Looks good and agree with the move from filter to interpreter.",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/tests/test_Pipeline.py",
        "Creation Date": "2017-03-27T15:21:57Z",
        "PR Comment": "Hey....I think I see what happened here....I merged a subsequent PR without checking it properly and it turned out that it was based on an earlier version of the repo.\nI will try and clean this up a bit later on today.",
        "PR/Issue Number": "113"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/tests/test_Pipeline.py",
        "Creation Date": "2017-03-28T00:20:15Z",
        "PR Comment": "Hi @alexanderrich you were correct the first time and I had forgotten to include the file.\nI think this is fixed now with PR #124 but let me know any other issues you have! Thanks.",
        "PR/Issue Number": "113"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/tests/test_Pipeline.py",
        "Creation Date": "2017-03-28T12:54:15Z",
        "PR Comment": "Everything works now, thanks!",
        "PR/Issue Number": "113"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/tests/test_Interpreter.py",
        "Creation Date": "2017-02-10T03:28:11Z",
        "PR Comment": "Looks good to me",
        "PR/Issue Number": "52"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/tests/test_fact_extraction.py",
        "Creation Date": "2017-02-25T03:27:14Z",
        "PR Comment": "Looks good to me.",
        "PR/Issue Number": "87"
    },
    {
        "repo_url": "github.com/Data4Democracy/internal-displacement",
        "filepath": "internal_displacement/tests/test_fact_extraction.py",
        "Creation Date": "2017-02-25T03:27:14Z",
        "PR Comment": "Looks good to me.",
        "PR/Issue Number": "87"
    },
    {
        "repo_url": "github.com/sloev/spacy-syllables",
        "filepath": "tests/test_all.py",
        "Creation Date": "2021-03-04T11:20:01Z",
        "PR Comment": "lets use the pyphen.language_fallback function to get a short or localized lang code from the given one instead:\nhttps://github.com/Kozea/Pyphen/blob/4e3cac0c90d80ceb2d6209575a1b46cb812fe4b1/pyphen/__init__.py#L53",
        "PR/Issue Number": "1"
    },
    {
        "repo_url": "github.com/sloev/spacy-syllables",
        "filepath": "tests/test_all.py",
        "Creation Date": "2021-03-04T11:20:30Z",
        "PR Comment": "pyphen supports a ton of languages, locking ourselves to this shortlist is unnecesary",
        "PR/Issue Number": "1"
    },
    {
        "repo_url": "github.com/sloev/spacy-syllables",
        "filepath": "tests/test_all.py",
        "Creation Date": "2021-03-04T11:21:47Z",
        "PR Comment": "lang should be before name, its more common to set the language than the name i think\nand name: str should propably be name: Optional[str] = \"syllables\"",
        "PR/Issue Number": "1"
    },
    {
        "repo_url": "github.com/sloev/spacy-syllables",
        "filepath": "tests/test_all.py",
        "Creation Date": "2021-03-04T18:00:37Z",
        "PR Comment": "The way you add Spacy 3.0 pipeline components means that this init will never be called by the user; custom configuration information gets set in the add_pipe, i.e. `nlp.add_pipe(\"syllables\", after=\"tagger\", config={\"lang\": \"en_US\"})`. The way the parameters are laid out here seems to be the convention for spacy 3.0 pipeline components, but I don't think it matters too much, if you still want me to change it, I will.",
        "PR/Issue Number": "1"
    },
    {
        "repo_url": "github.com/sloev/spacy-syllables",
        "filepath": "tests/test_all.py",
        "Creation Date": "2021-03-04T18:06:16Z",
        "PR Comment": "I originally did exactly this. The problem is that this resulted in changed behavior. For example, `hyph_en.dic` used to be a soft-link to `en_US`, but it was removed in Pyphen 0.10.0, and the fallback now defaults to `en_GB`. This resulted in failed tests, with certain words having changed numbers of syllables.",
        "PR/Issue Number": "1"
    },
    {
        "repo_url": "github.com/sloev/spacy-syllables",
        "filepath": "tests/test_all.py",
        "Creation Date": "2021-03-04T18:07:52Z",
        "PR Comment": "This is only a workaround for the removal of the symlinked defaults in pyphen for the listed languages here, to avoid changing our default behavior. If there's a country code, or if it's not one of these languages, this section won't get called.",
        "PR/Issue Number": "1"
    },
    {
        "repo_url": "github.com/sloev/spacy-syllables",
        "filepath": "tests/test_all.py",
        "Creation Date": "2021-03-04T18:51:17Z",
        "PR Comment": "Just so you can see what I'm talking about, `ls` from pyphen-0.9.5:\n\n```\nhyph_de.dic -> hyph_de_DE.dic         \nhyph_de_AT.dic                        \nhyph_de_CH.dic                        \nhyph_de_DE.dic                        \nhyph_el.dic -> hyph_el_GR.dic         \nhyph_el_GR.dic                        \nhyph_en.dic -> hyph_en_US.dic         \nhyph_en_GB.dic                        \nhyph_en_Latn_GB.dic -> hyph_en_GB.dic \nhyph_en_Latn_US.dic -> hyph_en_US.dic \nhyph_en_US.dic                        \n[...]\nhyph_pt.dic -> hyph_pt_PT.dic         \nhyph_pt_BR.dic                        \nhyph_pt_Latn_BR.dic -> hyph_pt_BR.dic \nhyph_pt_Latn_PT.dic -> hyph_pt_PT.dic \nhyph_pt_PT.dic                        \n```\n\nThe defaults for `de`, `en`, and `pt` changed as a result of dropping the symlinks, because `pyphen.language_fallback()` just looks up alphabetically. So, `de` defaults to `de_AT` instead of `de_DE`, `en` defaults to `en_GB` instead of `en_US`, and `pt` defaults to `pt_BR` instead of `pt_PT`.\n\nWhile other languages had their symlinked defaults dropped (like `hyph_el.dic -> hyph_el_GR.dic`), these only had one country variation, so it was not necessary to add those to the workaround.",
        "PR/Issue Number": "1"
    },
    {
        "repo_url": "github.com/sloev/spacy-syllables",
        "filepath": "tests/test_all.py",
        "Creation Date": "2021-03-04T18:34:48Z",
        "PR Comment": "I've just added a section to the readme with information on how to migrate the module spacy 2.x to 3.0, to head off any confusion here. If you don't think it's necessary, I'll remove it.",
        "PR/Issue Number": "1"
    },
    {
        "repo_url": "github.com/sloev/spacy-syllables",
        "filepath": "tests/test_all.py",
        "Creation Date": "2021-03-05T08:48:26Z",
        "PR Comment": "@nikitalita spacy-syllables 3.0.1 has been released\nthanks for the great work!",
        "PR/Issue Number": "1"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2022-11-29T06:16:04Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/194?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom) Report\n> Merging [#194](https://codecov.io/gh/libratom/libratom/pull/194?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom) (f554b11) into [main](https://codecov.io/gh/libratom/libratom/commit/79dcf5b99633e0737e270d319730d244f9e66708?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom) (79dcf5b) will **decrease** coverage by `0.02%`.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/194/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom)](https://codecov.io/gh/libratom/libratom/pull/194?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom)\n\n```diff\n@@            Coverage Diff             @@\n##             main     #194      +/-   ##\n==========================================\n- Coverage   95.84%   95.81%   -0.03%     \n==========================================\n  Files          28       28              \n  Lines        1132     1148      +16     \n==========================================\n+ Hits         1085     1100      +15     \n- Misses         47       48       +1     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/194?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/lib/mbox.py](https://codecov.io/gh/libratom/libratom/pull/194/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom#diff-bGlicmF0b20vbGliL21ib3gucHk=) | `100.00% <\u00f8> (\u00f8)` | |\n| [libratom/lib/base.py](https://codecov.io/gh/libratom/libratom/pull/194/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom#diff-bGlicmF0b20vbGliL2Jhc2UucHk=) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/194/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.79% <100.00%> (+0.55%)` | :arrow_up: |\n| [libratom/lib/entities.py](https://codecov.io/gh/libratom/libratom/pull/194/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom#diff-bGlicmF0b20vbGliL2VudGl0aWVzLnB5) | `89.79% <100.00%> (+0.10%)` | :arrow_up: |\n| [libratom/lib/pff.py](https://codecov.io/gh/libratom/libratom/pull/194/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom#diff-bGlicmF0b20vbGliL3BmZi5weQ==) | `98.69% <100.00%> (\u00f8)` | |\n| [libratom/lib/report.py](https://codecov.io/gh/libratom/libratom/pull/194/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom#diff-bGlicmF0b20vbGliL3JlcG9ydC5weQ==) | `90.00% <100.00%> (+0.10%)` | :arrow_up: |\n| [libratom/models/attachment.py](https://codecov.io/gh/libratom/libratom/pull/194/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom#diff-bGlicmF0b20vbW9kZWxzL2F0dGFjaG1lbnQucHk=) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/194/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `92.63% <0.00%> (-1.06%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/194?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/194?src=pr&el=footer&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom). Last update [79dcf5b...f554b11](https://codecov.io/gh/libratom/libratom/pull/194?src=pr&el=lastupdated&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom).\n\n</details>",
        "PR/Issue Number": "194"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2022-10-19T21:59:19Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/193?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom) Report\n> Merging [#193](https://codecov.io/gh/libratom/libratom/pull/193?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom) (f874cfe) into [main](https://codecov.io/gh/libratom/libratom/commit/f1e0df46403c0e406c79e2aee9e29c1e8ecd263d?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom) (f1e0df4) will **decrease** coverage by `0.53%`.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/193/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom)](https://codecov.io/gh/libratom/libratom/pull/193?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom)\n\n```diff\n@@            Coverage Diff             @@\n##             main     #193      +/-   ##\n==========================================\n- Coverage   96.46%   95.93%   -0.54%     \n==========================================\n  Files          28       28              \n  Lines        1132     1132              \n==========================================\n- Hits         1092     1086       -6     \n- Misses         40       46       +6     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/193?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/193/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.23% <100.00%> (-3.89%)` | :arrow_down: |\n| [libratom/lib/entities.py](https://codecov.io/gh/libratom/libratom/pull/193/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom#diff-bGlicmF0b20vbGliL2VudGl0aWVzLnB5) | `89.69% <0.00%> (-2.07%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/193?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/193?src=pr&el=footer&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom). Last update [f1e0df4...f874cfe](https://codecov.io/gh/libratom/libratom/pull/193?src=pr&el=lastupdated&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=libratom).\n\n</details>",
        "PR/Issue Number": "193"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2021-02-23T21:50:53Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=h1) Report\n> Merging [#160](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=desc) (6b244e3) into [master](https://codecov.io/gh/libratom/libratom/commit/1ccc7d02cff9dbfd09e0e29d2b44e4d5c9d08e53?el=desc) (1ccc7d0) will **increase** coverage by `0.05%`.\n> The diff coverage is `100.00%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/160/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn)](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #160      +/-   ##\n==========================================\n+ Coverage   96.07%   96.12%   +0.05%     \n==========================================\n  Files          26       26              \n  Lines        1044     1059      +15     \n==========================================\n+ Hits         1003     1018      +15     \n  Misses         41       41              \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/160/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `92.63% <\u00f8> (\u00f8)` | |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/160/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `95.00% <100.00%> (+0.61%)` | :arrow_up: |\n| [libratom/lib/entities.py](https://codecov.io/gh/libratom/libratom/pull/160/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2VudGl0aWVzLnB5) | `92.94% <100.00%> (+0.34%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=footer). Last update [1ccc7d0...6b244e3](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "160"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2021-02-23T21:50:53Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=h1) Report\n> Merging [#160](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=desc) (6b244e3) into [master](https://codecov.io/gh/libratom/libratom/commit/1ccc7d02cff9dbfd09e0e29d2b44e4d5c9d08e53?el=desc) (1ccc7d0) will **increase** coverage by `0.05%`.\n> The diff coverage is `100.00%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/160/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn)](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #160      +/-   ##\n==========================================\n+ Coverage   96.07%   96.12%   +0.05%     \n==========================================\n  Files          26       26              \n  Lines        1044     1059      +15     \n==========================================\n+ Hits         1003     1018      +15     \n  Misses         41       41              \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/160/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `92.63% <\u00f8> (\u00f8)` | |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/160/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `95.00% <100.00%> (+0.61%)` | :arrow_up: |\n| [libratom/lib/entities.py](https://codecov.io/gh/libratom/libratom/pull/160/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2VudGl0aWVzLnB5) | `92.94% <100.00%> (+0.34%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=footer). Last update [1ccc7d0...6b244e3](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "160"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2021-02-23T21:50:53Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=h1) Report\n> Merging [#160](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=desc) (6b244e3) into [master](https://codecov.io/gh/libratom/libratom/commit/1ccc7d02cff9dbfd09e0e29d2b44e4d5c9d08e53?el=desc) (1ccc7d0) will **increase** coverage by `0.05%`.\n> The diff coverage is `100.00%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/160/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn)](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #160      +/-   ##\n==========================================\n+ Coverage   96.07%   96.12%   +0.05%     \n==========================================\n  Files          26       26              \n  Lines        1044     1059      +15     \n==========================================\n+ Hits         1003     1018      +15     \n  Misses         41       41              \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/160/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `92.63% <\u00f8> (\u00f8)` | |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/160/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `95.00% <100.00%> (+0.61%)` | :arrow_up: |\n| [libratom/lib/entities.py](https://codecov.io/gh/libratom/libratom/pull/160/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2VudGl0aWVzLnB5) | `92.94% <100.00%> (+0.34%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=footer). Last update [1ccc7d0...6b244e3](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "160"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2021-02-23T21:50:53Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=h1) Report\n> Merging [#160](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=desc) (6b244e3) into [master](https://codecov.io/gh/libratom/libratom/commit/1ccc7d02cff9dbfd09e0e29d2b44e4d5c9d08e53?el=desc) (1ccc7d0) will **increase** coverage by `0.05%`.\n> The diff coverage is `100.00%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/160/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn)](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #160      +/-   ##\n==========================================\n+ Coverage   96.07%   96.12%   +0.05%     \n==========================================\n  Files          26       26              \n  Lines        1044     1059      +15     \n==========================================\n+ Hits         1003     1018      +15     \n  Misses         41       41              \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/160/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `92.63% <\u00f8> (\u00f8)` | |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/160/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `95.00% <100.00%> (+0.61%)` | :arrow_up: |\n| [libratom/lib/entities.py](https://codecov.io/gh/libratom/libratom/pull/160/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2VudGl0aWVzLnB5) | `92.94% <100.00%> (+0.34%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=footer). Last update [1ccc7d0...6b244e3](https://codecov.io/gh/libratom/libratom/pull/160?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "160"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2021-02-08T23:28:03Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/157?src=pr&el=h1) Report\n> Merging [#157](https://codecov.io/gh/libratom/libratom/pull/157?src=pr&el=desc) (87b07f5) into [master](https://codecov.io/gh/libratom/libratom/commit/6dd5c49cbefe8db135987a8b5cca5ace97d8391c?el=desc) (6dd5c49) will **increase** coverage by `0.54%`.\n> The diff coverage is `85.71%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/157/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn)](https://codecov.io/gh/libratom/libratom/pull/157?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #157      +/-   ##\n==========================================\n+ Coverage   95.52%   96.07%   +0.54%     \n==========================================\n  Files          26       26              \n  Lines        1051     1044       -7     \n==========================================\n- Hits         1004     1003       -1     \n+ Misses         47       41       -6     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/157?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/157/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `94.38% <\u00f8> (+3.37%)` | :arrow_up: |\n| [libratom/lib/constants.py](https://codecov.io/gh/libratom/libratom/pull/157/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvbnN0YW50cy5weQ==) | `100.00% <\u00f8> (\u00f8)` | |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/157/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `94.38% <75.00%> (+2.89%)` | :arrow_up: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/157/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `92.63% <100.00%> (+0.07%)` | :arrow_up: |\n| [libratom/data/\\_\\_init\\_\\_.py](https://codecov.io/gh/libratom/libratom/pull/157/diff?src=pr&el=tree#diff-bGlicmF0b20vZGF0YS9fX2luaXRfXy5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/157?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/157?src=pr&el=footer). Last update [6dd5c49...87b07f5](https://codecov.io/gh/libratom/libratom/pull/157?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "157"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2020-11-04T20:29:02Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/149?src=pr&el=h1) Report\n> Merging [#149](https://codecov.io/gh/libratom/libratom/pull/149?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/7ec0db796825ffccef50c34ffdd77b254785cda8?el=desc) will **increase** coverage by `0.05%`.\n> The diff coverage is `100.00%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/149/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn)](https://codecov.io/gh/libratom/libratom/pull/149?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #149      +/-   ##\n==========================================\n+ Coverage   95.47%   95.52%   +0.05%     \n==========================================\n  Files          26       26              \n  Lines        1039     1051      +12     \n==========================================\n+ Hits          992     1004      +12     \n  Misses         47       47              \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/149?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/149/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/lib/constants.py](https://codecov.io/gh/libratom/libratom/pull/149/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvbnN0YW50cy5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/149/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `91.48% <100.00%> (\u00f8)` | |\n| [libratom/lib/pff.py](https://codecov.io/gh/libratom/libratom/pull/149/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL3BmZi5weQ==) | `98.69% <100.00%> (+0.08%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/149?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/149?src=pr&el=footer). Last update [7ec0db7...0b09c32](https://codecov.io/gh/libratom/libratom/pull/149?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "149"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2020-11-04T20:29:02Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/149?src=pr&el=h1) Report\n> Merging [#149](https://codecov.io/gh/libratom/libratom/pull/149?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/7ec0db796825ffccef50c34ffdd77b254785cda8?el=desc) will **increase** coverage by `0.05%`.\n> The diff coverage is `100.00%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/149/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn)](https://codecov.io/gh/libratom/libratom/pull/149?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #149      +/-   ##\n==========================================\n+ Coverage   95.47%   95.52%   +0.05%     \n==========================================\n  Files          26       26              \n  Lines        1039     1051      +12     \n==========================================\n+ Hits          992     1004      +12     \n  Misses         47       47              \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/149?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/149/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/lib/constants.py](https://codecov.io/gh/libratom/libratom/pull/149/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvbnN0YW50cy5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/149/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `91.48% <100.00%> (\u00f8)` | |\n| [libratom/lib/pff.py](https://codecov.io/gh/libratom/libratom/pull/149/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL3BmZi5weQ==) | `98.69% <100.00%> (+0.08%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/149?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/149?src=pr&el=footer). Last update [7ec0db7...0b09c32](https://codecov.io/gh/libratom/libratom/pull/149?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "149"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2020-10-27T06:28:41Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/148?src=pr&el=h1) Report\n> Merging [#148](https://codecov.io/gh/libratom/libratom/pull/148?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/d088238efa4a938c14bee1ca5587e00c541088d8?el=desc) will **not change** coverage.\n> The diff coverage is `100.00%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/148/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn)](https://codecov.io/gh/libratom/libratom/pull/148?src=pr&el=tree)\n\n```diff\n@@           Coverage Diff           @@\n##           master     #148   +/-   ##\n=======================================\n  Coverage   95.47%   95.47%           \n=======================================\n  Files          26       26           \n  Lines        1039     1039           \n=======================================\n  Hits          992      992           \n  Misses         47       47           \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/148?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/148/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `100.00% <\u00f8> (\u00f8)` | |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/148/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `92.55% <\u00f8> (\u00f8)` | |\n| [libratom/lib/mbox.py](https://codecov.io/gh/libratom/libratom/pull/148/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL21ib3gucHk=) | `100.00% <\u00f8> (\u00f8)` | |\n| [libratom/lib/pff.py](https://codecov.io/gh/libratom/libratom/pull/148/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL3BmZi5weQ==) | `98.61% <\u00f8> (\u00f8)` | |\n| [libratom/scripts/get\\_media\\_type\\_list.py](https://codecov.io/gh/libratom/libratom/pull/148/diff?src=pr&el=tree#diff-bGlicmF0b20vc2NyaXB0cy9nZXRfbWVkaWFfdHlwZV9saXN0LnB5) | `96.96% <\u00f8> (\u00f8)` | |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/148/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `91.48% <100.00%> (\u00f8)` | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/148?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/148?src=pr&el=footer). Last update [d088238...8a0a71c](https://codecov.io/gh/libratom/libratom/pull/148?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "148"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2020-09-18T18:57:42Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/143?src=pr&el=h1) Report\n> Merging [#143](https://codecov.io/gh/libratom/libratom/pull/143?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/3a2521c361d81cf96cdc35b220996e54daccefb6?el=desc) will **not change** coverage.\n> The diff coverage is `100.00%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/143/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn)](https://codecov.io/gh/libratom/libratom/pull/143?src=pr&el=tree)\n\n```diff\n@@           Coverage Diff           @@\n##           master     #143   +/-   ##\n=======================================\n  Coverage   95.47%   95.47%           \n=======================================\n  Files          26       26           \n  Lines        1039     1039           \n=======================================\n  Hits          992      992           \n  Misses         47       47           \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/143?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/143/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `91.48% <100.00%> (\u00f8)` | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/143?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/143?src=pr&el=footer). Last update [3a2521c...ba44aad](https://codecov.io/gh/libratom/libratom/pull/143?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "143"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2020-09-18T20:32:26Z",
        "PR Comment": "Also update list of known mime types",
        "PR/Issue Number": "143"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2020-07-15T06:43:12Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/138?src=pr&el=h1) Report\n> Merging [#138](https://codecov.io/gh/libratom/libratom/pull/138?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/ae0403364f3c4f1880d6d44532f752651e775237&el=desc) will **increase** coverage by `0.69%`.\n> The diff coverage is `100.00%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/138/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn)](https://codecov.io/gh/libratom/libratom/pull/138?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #138      +/-   ##\n==========================================\n+ Coverage   94.78%   95.47%   +0.69%     \n==========================================\n  Files          24       26       +2     \n  Lines         959     1039      +80     \n==========================================\n+ Hits          909      992      +83     \n+ Misses         50       47       -3     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/138?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/138/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/138/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `92.55% <100.00%> (\u00f8)` | |\n| [libratom/lib/base.py](https://codecov.io/gh/libratom/libratom/pull/138/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2Jhc2UucHk=) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/lib/concurrency.py](https://codecov.io/gh/libratom/libratom/pull/138/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvbmN1cnJlbmN5LnB5) | `92.00% <100.00%> (+3.11%)` | :arrow_up: |\n| [libratom/lib/constants.py](https://codecov.io/gh/libratom/libratom/pull/138/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvbnN0YW50cy5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/138/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `91.48% <100.00%> (-0.59%)` | :arrow_down: |\n| [libratom/lib/database.py](https://codecov.io/gh/libratom/libratom/pull/138/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2RhdGFiYXNlLnB5) | `92.10% <100.00%> (+2.81%)` | :arrow_up: |\n| [libratom/lib/entities.py](https://codecov.io/gh/libratom/libratom/pull/138/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2VudGl0aWVzLnB5) | `92.59% <100.00%> (-3.47%)` | :arrow_down: |\n| [libratom/lib/mbox.py](https://codecov.io/gh/libratom/libratom/pull/138/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL21ib3gucHk=) | `100.00% <100.00%> (+1.78%)` | :arrow_up: |\n| [libratom/lib/pff.py](https://codecov.io/gh/libratom/libratom/pull/138/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL3BmZi5weQ==) | `98.61% <100.00%> (+0.12%)` | :arrow_up: |\n| ... and [9 more](https://codecov.io/gh/libratom/libratom/pull/138/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/138?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/138?src=pr&el=footer). Last update [ae04033...d4b9b4e](https://codecov.io/gh/libratom/libratom/pull/138?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "138"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2020-03-26T21:43:05Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=h1) Report\n> Merging [#127](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/85e0e2ebac28f95e4e80b5c6c959bcee7c680eb5&el=desc) will **decrease** coverage by `0.05%`.\n> The diff coverage is `94.28%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/127/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn)](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #127      +/-   ##\n==========================================\n- Coverage   94.67%   94.61%   -0.06%     \n==========================================\n  Files          23       23              \n  Lines         826      892      +66     \n==========================================\n+ Hits          782      844      +62     \n- Misses         44       48       +4     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `92.55% <84.61%> (-1.35%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.00% <90.90%> (-0.41%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `91.39% <100.00%> (+2.20%)` | :arrow_up: |\n| [libratom/lib/base.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2Jhc2UucHk=) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/lib/pff.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL3BmZi5weQ==) | `97.59% <100.00%> (+0.18%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=footer). Last update [85e0e2e...6f78225](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "127"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2020-03-26T21:43:05Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=h1) Report\n> Merging [#127](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/85e0e2ebac28f95e4e80b5c6c959bcee7c680eb5&el=desc) will **decrease** coverage by `0.05%`.\n> The diff coverage is `94.28%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/127/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn)](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #127      +/-   ##\n==========================================\n- Coverage   94.67%   94.61%   -0.06%     \n==========================================\n  Files          23       23              \n  Lines         826      892      +66     \n==========================================\n+ Hits          782      844      +62     \n- Misses         44       48       +4     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `92.55% <84.61%> (-1.35%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.00% <90.90%> (-0.41%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `91.39% <100.00%> (+2.20%)` | :arrow_up: |\n| [libratom/lib/base.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2Jhc2UucHk=) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/lib/pff.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL3BmZi5weQ==) | `97.59% <100.00%> (+0.18%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=footer). Last update [85e0e2e...6f78225](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "127"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2020-03-26T21:43:05Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=h1) Report\n> Merging [#127](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/85e0e2ebac28f95e4e80b5c6c959bcee7c680eb5&el=desc) will **decrease** coverage by `0.05%`.\n> The diff coverage is `94.28%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/127/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn)](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #127      +/-   ##\n==========================================\n- Coverage   94.67%   94.61%   -0.06%     \n==========================================\n  Files          23       23              \n  Lines         826      892      +66     \n==========================================\n+ Hits          782      844      +62     \n- Misses         44       48       +4     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `92.55% <84.61%> (-1.35%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.00% <90.90%> (-0.41%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `91.39% <100.00%> (+2.20%)` | :arrow_up: |\n| [libratom/lib/base.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2Jhc2UucHk=) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/lib/pff.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL3BmZi5weQ==) | `97.59% <100.00%> (+0.18%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=footer). Last update [85e0e2e...6f78225](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "127"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2020-02-26T15:00:15Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=h1) Report\n> Merging [#119](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/3d6fd61d889af4723e38ebbb4dc43cc548f2fa63?src=pr&el=desc) will **decrease** coverage by `1.2%`.\n> The diff coverage is `86.84%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/119/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #119      +/-   ##\n==========================================\n- Coverage   95.27%   94.06%   -1.21%     \n==========================================\n  Files          23       23              \n  Lines         719      826     +107     \n==========================================\n+ Hits          685      777      +92     \n- Misses         34       49      +15\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/\\_\\_init\\_\\_.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL19faW5pdF9fLnB5) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `83.78% <77.77%> (-16.22%)` | :arrow_down: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `93.9% <93.75%> (-0.31%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `98.33% <94.11%> (-1.67%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.4% <96%> (+1.33%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=footer). Last update [3d6fd61...15e4988](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2020-02-26T15:00:15Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=h1) Report\n> Merging [#119](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/3d6fd61d889af4723e38ebbb4dc43cc548f2fa63?src=pr&el=desc) will **decrease** coverage by `1.2%`.\n> The diff coverage is `86.84%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/119/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #119      +/-   ##\n==========================================\n- Coverage   95.27%   94.06%   -1.21%     \n==========================================\n  Files          23       23              \n  Lines         719      826     +107     \n==========================================\n+ Hits          685      777      +92     \n- Misses         34       49      +15\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/\\_\\_init\\_\\_.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL19faW5pdF9fLnB5) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `83.78% <77.77%> (-16.22%)` | :arrow_down: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `93.9% <93.75%> (-0.31%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `98.33% <94.11%> (-1.67%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.4% <96%> (+1.33%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=footer). Last update [3d6fd61...15e4988](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2020-02-26T15:00:15Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=h1) Report\n> Merging [#119](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/3d6fd61d889af4723e38ebbb4dc43cc548f2fa63?src=pr&el=desc) will **decrease** coverage by `1.2%`.\n> The diff coverage is `86.84%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/119/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #119      +/-   ##\n==========================================\n- Coverage   95.27%   94.06%   -1.21%     \n==========================================\n  Files          23       23              \n  Lines         719      826     +107     \n==========================================\n+ Hits          685      777      +92     \n- Misses         34       49      +15\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/\\_\\_init\\_\\_.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL19faW5pdF9fLnB5) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `83.78% <77.77%> (-16.22%)` | :arrow_down: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `93.9% <93.75%> (-0.31%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `98.33% <94.11%> (-1.67%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.4% <96%> (+1.33%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=footer). Last update [3d6fd61...15e4988](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2020-01-31T22:13:40Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/112?src=pr&el=h1) Report\n> Merging [#112](https://codecov.io/gh/libratom/libratom/pull/112?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/2c1364b124e57e575ce28b7b2302fb67917796eb?src=pr&el=desc) will **increase** coverage by `0.15%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/112/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/112?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #112      +/-   ##\n==========================================\n+ Coverage   94.98%   95.14%   +0.15%     \n==========================================\n  Files          23       23              \n  Lines         698      700       +2     \n==========================================\n+ Hits          663      666       +3     \n+ Misses         35       34       -1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/112?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/lib/report.py](https://codecov.io/gh/libratom/libratom/pull/112/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL3JlcG9ydC5weQ==) | `86.04% <100%> (+1.16%)` | :arrow_up: |\n| [libratom/lib/concurrency.py](https://codecov.io/gh/libratom/libratom/pull/112/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvbmN1cnJlbmN5LnB5) | `91.89% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/lib/entities.py](https://codecov.io/gh/libratom/libratom/pull/112/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2VudGl0aWVzLnB5) | `96.05% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/112/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `91.07% <100%> (+0.33%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/112?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/112?src=pr&el=footer). Last update [2c1364b...2717fb7](https://codecov.io/gh/libratom/libratom/pull/112?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "112"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2020-01-31T22:13:40Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/112?src=pr&el=h1) Report\n> Merging [#112](https://codecov.io/gh/libratom/libratom/pull/112?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/2c1364b124e57e575ce28b7b2302fb67917796eb?src=pr&el=desc) will **increase** coverage by `0.15%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/112/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/112?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #112      +/-   ##\n==========================================\n+ Coverage   94.98%   95.14%   +0.15%     \n==========================================\n  Files          23       23              \n  Lines         698      700       +2     \n==========================================\n+ Hits          663      666       +3     \n+ Misses         35       34       -1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/112?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/lib/report.py](https://codecov.io/gh/libratom/libratom/pull/112/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL3JlcG9ydC5weQ==) | `86.04% <100%> (+1.16%)` | :arrow_up: |\n| [libratom/lib/concurrency.py](https://codecov.io/gh/libratom/libratom/pull/112/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvbmN1cnJlbmN5LnB5) | `91.89% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/lib/entities.py](https://codecov.io/gh/libratom/libratom/pull/112/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2VudGl0aWVzLnB5) | `96.05% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/112/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `91.07% <100%> (+0.33%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/112?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/112?src=pr&el=footer). Last update [2c1364b...2717fb7](https://codecov.io/gh/libratom/libratom/pull/112?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "112"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2020-01-31T20:00:14Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/111?src=pr&el=h1) Report\n> Merging [#111](https://codecov.io/gh/libratom/libratom/pull/111?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/080c814466df1a55aba548fab7cf9516729427d3?src=pr&el=desc) will **decrease** coverage by `0.14%`.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/111/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/111?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #111      +/-   ##\n==========================================\n- Coverage   95.12%   94.98%   -0.15%     \n==========================================\n  Files          23       23              \n  Lines         698      698              \n==========================================\n- Hits          664      663       -1     \n- Misses         34       35       +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/111?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/111/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `90.74% <\u00f8> (\u00f8)` | :arrow_up: |\n| [libratom/lib/mbox.py](https://codecov.io/gh/libratom/libratom/pull/111/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL21ib3gucHk=) | `96.87% <0%> (-3.13%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/111?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/111?src=pr&el=footer). Last update [080c814...e8a4c4d](https://codecov.io/gh/libratom/libratom/pull/111?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "111"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2020-01-29T23:38:59Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/108?src=pr&el=h1) Report\n> Merging [#108](https://codecov.io/gh/libratom/libratom/pull/108?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/b1f2cfb8a38ab7aa2a1d019773190c4fe7a308c7?src=pr&el=desc) will **decrease** coverage by `1.55%`.\n> The diff coverage is `86.36%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/108/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/108?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #108      +/-   ##\n==========================================\n- Coverage   96.11%   94.56%   -1.56%     \n==========================================\n  Files          23       23              \n  Lines         618      699      +81     \n==========================================\n+ Hits          594      661      +67     \n- Misses         24       38      +14\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/108?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/lib/entities.py](https://codecov.io/gh/libratom/libratom/pull/108/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2VudGl0aWVzLnB5) | `96.05% <100%> (+3.25%)` | :arrow_up: |\n| [libratom/lib/concurrency.py](https://codecov.io/gh/libratom/libratom/pull/108/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvbmN1cnJlbmN5LnB5) | `91.89% <100%> (-1.45%)` | :arrow_down: |\n| [libratom/lib/database.py](https://codecov.io/gh/libratom/libratom/pull/108/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2RhdGFiYXNlLnB5) | `89.28% <100%> (+0.39%)` | :arrow_up: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/108/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/lib/report.py](https://codecov.io/gh/libratom/libratom/pull/108/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL3JlcG9ydC5weQ==) | `84.7% <75%> (-6.21%)` | :arrow_down: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/108/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `90.14% <83.33%> (-5.32%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/108/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `90.74% <87.5%> (-9.26%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/108?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/108?src=pr&el=footer). Last update [b1f2cfb...7725c9d](https://codecov.io/gh/libratom/libratom/pull/108?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "108"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2020-01-29T23:38:59Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/108?src=pr&el=h1) Report\n> Merging [#108](https://codecov.io/gh/libratom/libratom/pull/108?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/b1f2cfb8a38ab7aa2a1d019773190c4fe7a308c7?src=pr&el=desc) will **decrease** coverage by `1.55%`.\n> The diff coverage is `86.36%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/108/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/108?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #108      +/-   ##\n==========================================\n- Coverage   96.11%   94.56%   -1.56%     \n==========================================\n  Files          23       23              \n  Lines         618      699      +81     \n==========================================\n+ Hits          594      661      +67     \n- Misses         24       38      +14\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/108?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/lib/entities.py](https://codecov.io/gh/libratom/libratom/pull/108/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2VudGl0aWVzLnB5) | `96.05% <100%> (+3.25%)` | :arrow_up: |\n| [libratom/lib/concurrency.py](https://codecov.io/gh/libratom/libratom/pull/108/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvbmN1cnJlbmN5LnB5) | `91.89% <100%> (-1.45%)` | :arrow_down: |\n| [libratom/lib/database.py](https://codecov.io/gh/libratom/libratom/pull/108/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2RhdGFiYXNlLnB5) | `89.28% <100%> (+0.39%)` | :arrow_up: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/108/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/lib/report.py](https://codecov.io/gh/libratom/libratom/pull/108/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL3JlcG9ydC5weQ==) | `84.7% <75%> (-6.21%)` | :arrow_down: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/108/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `90.14% <83.33%> (-5.32%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/108/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `90.74% <87.5%> (-9.26%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/108?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/108?src=pr&el=footer). Last update [b1f2cfb...7725c9d](https://codecov.io/gh/libratom/libratom/pull/108?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "108"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2019-10-21T21:50:42Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/72?src=pr&el=h1) Report\n> Merging [#72](https://codecov.io/gh/libratom/libratom/pull/72?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/60afe79495fc7b916c3e23d3764937fa902845f1?src=pr&el=desc) will **decrease** coverage by `0.58%`.\n> The diff coverage is `85%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/72/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/72?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master      #72      +/-   ##\n==========================================\n- Coverage   95.48%   94.89%   -0.59%     \n==========================================\n  Files          19       19              \n  Lines         531      529       -2     \n==========================================\n- Hits          507      502       -5     \n- Misses         24       27       +3\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/72?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/lib/report.py](https://codecov.io/gh/libratom/libratom/pull/72/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL3JlcG9ydC5weQ==) | `84.09% <\u00f8> (\u00f8)` | :arrow_up: |\n| [libratom/lib/concurrency.py](https://codecov.io/gh/libratom/libratom/pull/72/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvbmN1cnJlbmN5LnB5) | `94.44% <\u00f8> (\u00f8)` | :arrow_up: |\n| [libratom/lib/entities.py](https://codecov.io/gh/libratom/libratom/pull/72/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2VudGl0aWVzLnB5) | `89.28% <\u00f8> (\u00f8)` | :arrow_up: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/72/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/72/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/72/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/lib/pff.py](https://codecov.io/gh/libratom/libratom/pull/72/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL3BmZi5weQ==) | `95.71% <83.33%> (-4.29%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/72?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/72?src=pr&el=footer). Last update [60afe79...ca42e4b](https://codecov.io/gh/libratom/libratom/pull/72?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "72"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2019-10-06T15:51:22Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/64?src=pr&el=h1) Report\n> Merging [#64](https://codecov.io/gh/libratom/libratom/pull/64?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/fc9dfabb38a9c1809b43b49f4c3941245bf0fd0c?src=pr&el=desc) will **increase** coverage by `1.26%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/64/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/64?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master      #64      +/-   ##\n==========================================\n+ Coverage    93.8%   95.06%   +1.26%     \n==========================================\n  Files          17       18       +1     \n  Lines         484      486       +2     \n==========================================\n+ Hits          454      462       +8     \n+ Misses         30       24       -6\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/64?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/lib/exceptions.py](https://codecov.io/gh/libratom/libratom/pull/64/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2V4Y2VwdGlvbnMucHk=) | `100% <100%> (\u00f8)` | |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/64/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `100% <100%> (+6.66%)` | :arrow_up: |\n| [libratom/lib/entities.py](https://codecov.io/gh/libratom/libratom/pull/64/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2VudGl0aWVzLnB5) | `89.28% <0%> (+2.67%)` | :arrow_up: |\n| [libratom/lib/concurrency.py](https://codecov.io/gh/libratom/libratom/pull/64/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvbmN1cnJlbmN5LnB5) | `94.44% <0%> (+5.55%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/64?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/64?src=pr&el=footer). Last update [fc9dfab...86256e8](https://codecov.io/gh/libratom/libratom/pull/64?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "64"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/lib/core.py",
        "Creation Date": "2019-10-01T05:10:06Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/62?src=pr&el=h1) Report\n> Merging [#62](https://codecov.io/gh/libratom/libratom/pull/62?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/c50d27c01dad4cb1647e514cb3579244c2222e71?src=pr&el=desc) will **decrease** coverage by `1.4%`.\n> The diff coverage is `96.55%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/62/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/62?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##           master     #62      +/-   ##\n=========================================\n- Coverage    95.2%   93.8%   -1.41%     \n=========================================\n  Files          13      17       +4     \n  Lines         438     484      +46     \n=========================================\n+ Hits          417     454      +37     \n- Misses         21      30       +9\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/62?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/lib/entities.py](https://codecov.io/gh/libratom/libratom/pull/62/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2VudGl0aWVzLnB5) | `86.6% <100%> (-2.68%)` | :arrow_down: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/62/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/lib/mbox.py](https://codecov.io/gh/libratom/libratom/pull/62/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL21ib3gucHk=) | `100% <100%> (\u00f8)` | |\n| [libratom/lib/pff.py](https://codecov.io/gh/libratom/libratom/pull/62/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL3BmZi5weQ==) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/lib/base.py](https://codecov.io/gh/libratom/libratom/pull/62/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2Jhc2UucHk=) | `100% <100%> (\u00f8)` | |\n| [libratom/lib/concurrency.py](https://codecov.io/gh/libratom/libratom/pull/62/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvbmN1cnJlbmN5LnB5) | `88.88% <100%> (-5.56%)` | :arrow_down: |\n| [libratom/lib/\\_\\_init\\_\\_.py](https://codecov.io/gh/libratom/libratom/pull/62/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL19faW5pdF9fLnB5) | `100% <100%> (\u00f8)` | |\n| [libratom/lib/database.py](https://codecov.io/gh/libratom/libratom/pull/62/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2RhdGFiYXNlLnB5) | `88.88% <50%> (-11.12%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/62/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `93.33% <93.33%> (\u00f8)` | |\n| ... and [5 more](https://codecov.io/gh/libratom/libratom/pull/62/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/62?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/62?src=pr&el=footer). Last update [c50d27c...604d80b](https://codecov.io/gh/libratom/libratom/pull/62?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "62"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/cli/utils.py",
        "Creation Date": "2021-02-08T23:28:03Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/157?src=pr&el=h1) Report\n> Merging [#157](https://codecov.io/gh/libratom/libratom/pull/157?src=pr&el=desc) (87b07f5) into [master](https://codecov.io/gh/libratom/libratom/commit/6dd5c49cbefe8db135987a8b5cca5ace97d8391c?el=desc) (6dd5c49) will **increase** coverage by `0.54%`.\n> The diff coverage is `85.71%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/157/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn)](https://codecov.io/gh/libratom/libratom/pull/157?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #157      +/-   ##\n==========================================\n+ Coverage   95.52%   96.07%   +0.54%     \n==========================================\n  Files          26       26              \n  Lines        1051     1044       -7     \n==========================================\n- Hits         1004     1003       -1     \n+ Misses         47       41       -6     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/157?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/157/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `94.38% <\u00f8> (+3.37%)` | :arrow_up: |\n| [libratom/lib/constants.py](https://codecov.io/gh/libratom/libratom/pull/157/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvbnN0YW50cy5weQ==) | `100.00% <\u00f8> (\u00f8)` | |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/157/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `94.38% <75.00%> (+2.89%)` | :arrow_up: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/157/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `92.63% <100.00%> (+0.07%)` | :arrow_up: |\n| [libratom/data/\\_\\_init\\_\\_.py](https://codecov.io/gh/libratom/libratom/pull/157/diff?src=pr&el=tree#diff-bGlicmF0b20vZGF0YS9fX2luaXRfXy5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/157?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/157?src=pr&el=footer). Last update [6dd5c49...87b07f5](https://codecov.io/gh/libratom/libratom/pull/157?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "157"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/cli/utils.py",
        "Creation Date": "2020-03-27T16:46:13Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/128?src=pr&el=h1) Report\n> Merging [#128](https://codecov.io/gh/libratom/libratom/pull/128?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/31902fef573d4bc23260439a3a40543de7381c4c&el=desc) will **increase** coverage by `0.28%`.\n> The diff coverage is `100.00%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/128/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn)](https://codecov.io/gh/libratom/libratom/pull/128?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #128      +/-   ##\n==========================================\n+ Coverage   94.61%   94.90%   +0.28%     \n==========================================\n  Files          23       24       +1     \n  Lines         892      903      +11     \n==========================================\n+ Hits          844      857      +13     \n+ Misses         48       46       -2     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/128?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/128/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `91.01% <100.00%> (-0.39%)` | :arrow_down: |\n| [libratom/data/\\_\\_init\\_\\_.py](https://codecov.io/gh/libratom/libratom/pull/128/diff?src=pr&el=tree#diff-bGlicmF0b20vZGF0YS9fX2luaXRfXy5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/lib/pff.py](https://codecov.io/gh/libratom/libratom/pull/128/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL3BmZi5weQ==) | `100.00% <100.00%> (+2.40%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/128?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/128?src=pr&el=footer). Last update [31902fe...cec681e](https://codecov.io/gh/libratom/libratom/pull/128?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "128"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/cli/utils.py",
        "Creation Date": "2020-03-26T21:43:05Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=h1) Report\n> Merging [#127](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/85e0e2ebac28f95e4e80b5c6c959bcee7c680eb5&el=desc) will **decrease** coverage by `0.05%`.\n> The diff coverage is `94.28%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/127/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn)](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #127      +/-   ##\n==========================================\n- Coverage   94.67%   94.61%   -0.06%     \n==========================================\n  Files          23       23              \n  Lines         826      892      +66     \n==========================================\n+ Hits          782      844      +62     \n- Misses         44       48       +4     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `92.55% <84.61%> (-1.35%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.00% <90.90%> (-0.41%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `91.39% <100.00%> (+2.20%)` | :arrow_up: |\n| [libratom/lib/base.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2Jhc2UucHk=) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/lib/pff.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL3BmZi5weQ==) | `97.59% <100.00%> (+0.18%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=footer). Last update [85e0e2e...6f78225](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "127"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/cli/utils.py",
        "Creation Date": "2020-03-26T21:43:05Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=h1) Report\n> Merging [#127](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/85e0e2ebac28f95e4e80b5c6c959bcee7c680eb5&el=desc) will **decrease** coverage by `0.05%`.\n> The diff coverage is `94.28%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/127/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn)](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #127      +/-   ##\n==========================================\n- Coverage   94.67%   94.61%   -0.06%     \n==========================================\n  Files          23       23              \n  Lines         826      892      +66     \n==========================================\n+ Hits          782      844      +62     \n- Misses         44       48       +4     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `92.55% <84.61%> (-1.35%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.00% <90.90%> (-0.41%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `91.39% <100.00%> (+2.20%)` | :arrow_up: |\n| [libratom/lib/base.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2Jhc2UucHk=) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/lib/pff.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL3BmZi5weQ==) | `97.59% <100.00%> (+0.18%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=footer). Last update [85e0e2e...6f78225](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "127"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/cli/utils.py",
        "Creation Date": "2020-03-26T21:43:05Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=h1) Report\n> Merging [#127](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/85e0e2ebac28f95e4e80b5c6c959bcee7c680eb5&el=desc) will **decrease** coverage by `0.05%`.\n> The diff coverage is `94.28%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/127/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn)](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #127      +/-   ##\n==========================================\n- Coverage   94.67%   94.61%   -0.06%     \n==========================================\n  Files          23       23              \n  Lines         826      892      +66     \n==========================================\n+ Hits          782      844      +62     \n- Misses         44       48       +4     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `92.55% <84.61%> (-1.35%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.00% <90.90%> (-0.41%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `91.39% <100.00%> (+2.20%)` | :arrow_up: |\n| [libratom/lib/base.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2Jhc2UucHk=) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/lib/pff.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL3BmZi5weQ==) | `97.59% <100.00%> (+0.18%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=footer). Last update [85e0e2e...6f78225](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "127"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/cli/utils.py",
        "Creation Date": "2020-03-26T21:43:05Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=h1) Report\n> Merging [#127](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/85e0e2ebac28f95e4e80b5c6c959bcee7c680eb5&el=desc) will **decrease** coverage by `0.05%`.\n> The diff coverage is `94.28%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/127/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn)](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #127      +/-   ##\n==========================================\n- Coverage   94.67%   94.61%   -0.06%     \n==========================================\n  Files          23       23              \n  Lines         826      892      +66     \n==========================================\n+ Hits          782      844      +62     \n- Misses         44       48       +4     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `92.55% <84.61%> (-1.35%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.00% <90.90%> (-0.41%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `91.39% <100.00%> (+2.20%)` | :arrow_up: |\n| [libratom/lib/base.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2Jhc2UucHk=) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/lib/pff.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL3BmZi5weQ==) | `97.59% <100.00%> (+0.18%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=footer). Last update [85e0e2e...6f78225](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "127"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/cli/utils.py",
        "Creation Date": "2020-03-26T21:43:05Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=h1) Report\n> Merging [#127](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/85e0e2ebac28f95e4e80b5c6c959bcee7c680eb5&el=desc) will **decrease** coverage by `0.05%`.\n> The diff coverage is `94.28%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/127/graphs/tree.svg?width=650&height=150&src=pr&token=pLv2qHIbMn)](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #127      +/-   ##\n==========================================\n- Coverage   94.67%   94.61%   -0.06%     \n==========================================\n  Files          23       23              \n  Lines         826      892      +66     \n==========================================\n+ Hits          782      844      +62     \n- Misses         44       48       +4     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `92.55% <84.61%> (-1.35%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.00% <90.90%> (-0.41%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `91.39% <100.00%> (+2.20%)` | :arrow_up: |\n| [libratom/lib/base.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2Jhc2UucHk=) | `100.00% <100.00%> (\u00f8)` | |\n| [libratom/lib/pff.py](https://codecov.io/gh/libratom/libratom/pull/127/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL3BmZi5weQ==) | `97.59% <100.00%> (+0.18%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=footer). Last update [85e0e2e...6f78225](https://codecov.io/gh/libratom/libratom/pull/127?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "127"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/cli/utils.py",
        "Creation Date": "2020-02-26T15:00:15Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=h1) Report\n> Merging [#119](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/3d6fd61d889af4723e38ebbb4dc43cc548f2fa63?src=pr&el=desc) will **decrease** coverage by `1.2%`.\n> The diff coverage is `86.84%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/119/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #119      +/-   ##\n==========================================\n- Coverage   95.27%   94.06%   -1.21%     \n==========================================\n  Files          23       23              \n  Lines         719      826     +107     \n==========================================\n+ Hits          685      777      +92     \n- Misses         34       49      +15\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/\\_\\_init\\_\\_.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL19faW5pdF9fLnB5) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `83.78% <77.77%> (-16.22%)` | :arrow_down: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `93.9% <93.75%> (-0.31%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `98.33% <94.11%> (-1.67%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.4% <96%> (+1.33%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=footer). Last update [3d6fd61...15e4988](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/cli/utils.py",
        "Creation Date": "2020-02-26T15:00:15Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=h1) Report\n> Merging [#119](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/3d6fd61d889af4723e38ebbb4dc43cc548f2fa63?src=pr&el=desc) will **decrease** coverage by `1.2%`.\n> The diff coverage is `86.84%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/119/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #119      +/-   ##\n==========================================\n- Coverage   95.27%   94.06%   -1.21%     \n==========================================\n  Files          23       23              \n  Lines         719      826     +107     \n==========================================\n+ Hits          685      777      +92     \n- Misses         34       49      +15\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/\\_\\_init\\_\\_.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL19faW5pdF9fLnB5) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `83.78% <77.77%> (-16.22%)` | :arrow_down: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `93.9% <93.75%> (-0.31%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `98.33% <94.11%> (-1.67%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.4% <96%> (+1.33%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=footer). Last update [3d6fd61...15e4988](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/cli/utils.py",
        "Creation Date": "2020-02-26T15:00:15Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=h1) Report\n> Merging [#119](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/3d6fd61d889af4723e38ebbb4dc43cc548f2fa63?src=pr&el=desc) will **decrease** coverage by `1.2%`.\n> The diff coverage is `86.84%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/119/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #119      +/-   ##\n==========================================\n- Coverage   95.27%   94.06%   -1.21%     \n==========================================\n  Files          23       23              \n  Lines         719      826     +107     \n==========================================\n+ Hits          685      777      +92     \n- Misses         34       49      +15\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/\\_\\_init\\_\\_.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL19faW5pdF9fLnB5) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `83.78% <77.77%> (-16.22%)` | :arrow_down: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `93.9% <93.75%> (-0.31%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `98.33% <94.11%> (-1.67%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.4% <96%> (+1.33%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=footer). Last update [3d6fd61...15e4988](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/cli/utils.py",
        "Creation Date": "2020-02-26T15:00:15Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=h1) Report\n> Merging [#119](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/3d6fd61d889af4723e38ebbb4dc43cc548f2fa63?src=pr&el=desc) will **decrease** coverage by `1.2%`.\n> The diff coverage is `86.84%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/119/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #119      +/-   ##\n==========================================\n- Coverage   95.27%   94.06%   -1.21%     \n==========================================\n  Files          23       23              \n  Lines         719      826     +107     \n==========================================\n+ Hits          685      777      +92     \n- Misses         34       49      +15\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/\\_\\_init\\_\\_.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL19faW5pdF9fLnB5) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `83.78% <77.77%> (-16.22%)` | :arrow_down: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `93.9% <93.75%> (-0.31%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `98.33% <94.11%> (-1.67%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.4% <96%> (+1.33%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=footer). Last update [3d6fd61...15e4988](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/cli/utils.py",
        "Creation Date": "2020-02-26T15:00:15Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=h1) Report\n> Merging [#119](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/3d6fd61d889af4723e38ebbb4dc43cc548f2fa63?src=pr&el=desc) will **decrease** coverage by `1.2%`.\n> The diff coverage is `86.84%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/119/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #119      +/-   ##\n==========================================\n- Coverage   95.27%   94.06%   -1.21%     \n==========================================\n  Files          23       23              \n  Lines         719      826     +107     \n==========================================\n+ Hits          685      777      +92     \n- Misses         34       49      +15\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/\\_\\_init\\_\\_.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL19faW5pdF9fLnB5) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `83.78% <77.77%> (-16.22%)` | :arrow_down: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `93.9% <93.75%> (-0.31%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `98.33% <94.11%> (-1.67%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.4% <96%> (+1.33%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=footer). Last update [3d6fd61...15e4988](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/cli/utils.py",
        "Creation Date": "2020-02-26T15:00:15Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=h1) Report\n> Merging [#119](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/3d6fd61d889af4723e38ebbb4dc43cc548f2fa63?src=pr&el=desc) will **decrease** coverage by `1.2%`.\n> The diff coverage is `86.84%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/119/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #119      +/-   ##\n==========================================\n- Coverage   95.27%   94.06%   -1.21%     \n==========================================\n  Files          23       23              \n  Lines         719      826     +107     \n==========================================\n+ Hits          685      777      +92     \n- Misses         34       49      +15\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/\\_\\_init\\_\\_.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL19faW5pdF9fLnB5) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `83.78% <77.77%> (-16.22%)` | :arrow_down: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `93.9% <93.75%> (-0.31%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `98.33% <94.11%> (-1.67%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.4% <96%> (+1.33%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=footer). Last update [3d6fd61...15e4988](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/cli/utils.py",
        "Creation Date": "2020-02-26T15:00:15Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=h1) Report\n> Merging [#119](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/3d6fd61d889af4723e38ebbb4dc43cc548f2fa63?src=pr&el=desc) will **decrease** coverage by `1.2%`.\n> The diff coverage is `86.84%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/119/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #119      +/-   ##\n==========================================\n- Coverage   95.27%   94.06%   -1.21%     \n==========================================\n  Files          23       23              \n  Lines         719      826     +107     \n==========================================\n+ Hits          685      777      +92     \n- Misses         34       49      +15\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/\\_\\_init\\_\\_.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL19faW5pdF9fLnB5) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `83.78% <77.77%> (-16.22%)` | :arrow_down: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `93.9% <93.75%> (-0.31%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `98.33% <94.11%> (-1.67%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.4% <96%> (+1.33%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=footer). Last update [3d6fd61...15e4988](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/cli/utils.py",
        "Creation Date": "2020-02-26T15:00:15Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=h1) Report\n> Merging [#119](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/3d6fd61d889af4723e38ebbb4dc43cc548f2fa63?src=pr&el=desc) will **decrease** coverage by `1.2%`.\n> The diff coverage is `86.84%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/119/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #119      +/-   ##\n==========================================\n- Coverage   95.27%   94.06%   -1.21%     \n==========================================\n  Files          23       23              \n  Lines         719      826     +107     \n==========================================\n+ Hits          685      777      +92     \n- Misses         34       49      +15\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/\\_\\_init\\_\\_.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL19faW5pdF9fLnB5) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `83.78% <77.77%> (-16.22%)` | :arrow_down: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `93.9% <93.75%> (-0.31%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `98.33% <94.11%> (-1.67%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.4% <96%> (+1.33%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=footer). Last update [3d6fd61...15e4988](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/cli/utils.py",
        "Creation Date": "2020-02-26T15:00:15Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=h1) Report\n> Merging [#119](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/3d6fd61d889af4723e38ebbb4dc43cc548f2fa63?src=pr&el=desc) will **decrease** coverage by `1.2%`.\n> The diff coverage is `86.84%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/119/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #119      +/-   ##\n==========================================\n- Coverage   95.27%   94.06%   -1.21%     \n==========================================\n  Files          23       23              \n  Lines         719      826     +107     \n==========================================\n+ Hits          685      777      +92     \n- Misses         34       49      +15\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/\\_\\_init\\_\\_.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL19faW5pdF9fLnB5) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `83.78% <77.77%> (-16.22%)` | :arrow_down: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `93.9% <93.75%> (-0.31%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `98.33% <94.11%> (-1.67%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.4% <96%> (+1.33%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=footer). Last update [3d6fd61...15e4988](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/cli/utils.py",
        "Creation Date": "2020-02-26T15:00:15Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=h1) Report\n> Merging [#119](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/3d6fd61d889af4723e38ebbb4dc43cc548f2fa63?src=pr&el=desc) will **decrease** coverage by `1.2%`.\n> The diff coverage is `86.84%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/119/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #119      +/-   ##\n==========================================\n- Coverage   95.27%   94.06%   -1.21%     \n==========================================\n  Files          23       23              \n  Lines         719      826     +107     \n==========================================\n+ Hits          685      777      +92     \n- Misses         34       49      +15\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/\\_\\_init\\_\\_.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL19faW5pdF9fLnB5) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `83.78% <77.77%> (-16.22%)` | :arrow_down: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `93.9% <93.75%> (-0.31%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `98.33% <94.11%> (-1.67%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.4% <96%> (+1.33%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=footer). Last update [3d6fd61...15e4988](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/cli/utils.py",
        "Creation Date": "2020-02-26T15:00:15Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=h1) Report\n> Merging [#119](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/3d6fd61d889af4723e38ebbb4dc43cc548f2fa63?src=pr&el=desc) will **decrease** coverage by `1.2%`.\n> The diff coverage is `86.84%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/119/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #119      +/-   ##\n==========================================\n- Coverage   95.27%   94.06%   -1.21%     \n==========================================\n  Files          23       23              \n  Lines         719      826     +107     \n==========================================\n+ Hits          685      777      +92     \n- Misses         34       49      +15\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/\\_\\_init\\_\\_.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL19faW5pdF9fLnB5) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `83.78% <77.77%> (-16.22%)` | :arrow_down: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `93.9% <93.75%> (-0.31%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `98.33% <94.11%> (-1.67%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.4% <96%> (+1.33%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=footer). Last update [3d6fd61...15e4988](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/cli/utils.py",
        "Creation Date": "2020-02-26T15:00:15Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=h1) Report\n> Merging [#119](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/3d6fd61d889af4723e38ebbb4dc43cc548f2fa63?src=pr&el=desc) will **decrease** coverage by `1.2%`.\n> The diff coverage is `86.84%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/119/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #119      +/-   ##\n==========================================\n- Coverage   95.27%   94.06%   -1.21%     \n==========================================\n  Files          23       23              \n  Lines         719      826     +107     \n==========================================\n+ Hits          685      777      +92     \n- Misses         34       49      +15\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/\\_\\_init\\_\\_.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL19faW5pdF9fLnB5) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `83.78% <77.77%> (-16.22%)` | :arrow_down: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `93.9% <93.75%> (-0.31%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `98.33% <94.11%> (-1.67%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.4% <96%> (+1.33%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=footer). Last update [3d6fd61...15e4988](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/cli/utils.py",
        "Creation Date": "2020-02-26T15:00:15Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=h1) Report\n> Merging [#119](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/3d6fd61d889af4723e38ebbb4dc43cc548f2fa63?src=pr&el=desc) will **decrease** coverage by `1.2%`.\n> The diff coverage is `86.84%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/119/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #119      +/-   ##\n==========================================\n- Coverage   95.27%   94.06%   -1.21%     \n==========================================\n  Files          23       23              \n  Lines         719      826     +107     \n==========================================\n+ Hits          685      777      +92     \n- Misses         34       49      +15\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/\\_\\_init\\_\\_.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL19faW5pdF9fLnB5) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `83.78% <77.77%> (-16.22%)` | :arrow_down: |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `93.9% <93.75%> (-0.31%)` | :arrow_down: |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `98.33% <94.11%> (-1.67%)` | :arrow_down: |\n| [libratom/lib/core.py](https://codecov.io/gh/libratom/libratom/pull/119/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvcmUucHk=) | `92.4% <96%> (+1.33%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=footer). Last update [3d6fd61...15e4988](https://codecov.io/gh/libratom/libratom/pull/119?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/libratom/libratom",
        "filepath": "libratom/cli/utils.py",
        "Creation Date": "2019-08-01T13:06:29Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/libratom/libratom/pull/37?src=pr&el=h1) Report\n> Merging [#37](https://codecov.io/gh/libratom/libratom/pull/37?src=pr&el=desc) into [master](https://codecov.io/gh/libratom/libratom/commit/5c3ca12995ac0109debb7e65e703d8d62ae66918?src=pr&el=desc) will **increase** coverage by `1.88%`.\n> The diff coverage is `98.61%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/libratom/libratom/pull/37/graphs/tree.svg?width=650&token=pLv2qHIbMn&height=150&src=pr)](https://codecov.io/gh/libratom/libratom/pull/37?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master      #37      +/-   ##\n==========================================\n+ Coverage   92.57%   94.46%   +1.88%     \n==========================================\n  Files           8       10       +2     \n  Lines         283      307      +24     \n==========================================\n+ Hits          262      290      +28     \n+ Misses         21       17       -4\n```\n\n\n| [Impacted Files](https://codecov.io/gh/libratom/libratom/pull/37?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [libratom/cli/\\_\\_init\\_\\_.py](https://codecov.io/gh/libratom/libratom/pull/37/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL19faW5pdF9fLnB5) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n| [libratom/lib/pff.py](https://codecov.io/gh/libratom/libratom/pull/37/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL3BmZi5weQ==) | `100% <\u00f8> (\u00f8)` | |\n| [libratom/lib/database.py](https://codecov.io/gh/libratom/libratom/pull/37/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2RhdGFiYXNlLnB5) | `78.57% <\u00f8> (\u00f8)` | |\n| [libratom/cli/subcommands.py](https://codecov.io/gh/libratom/libratom/pull/37/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3N1YmNvbW1hbmRzLnB5) | `100% <100%> (\u00f8)` | |\n| [libratom/lib/concurrency.py](https://codecov.io/gh/libratom/libratom/pull/37/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2NvbmN1cnJlbmN5LnB5) | `94.44% <100%> (\u00f8)` | |\n| [libratom/cli/cli.py](https://codecov.io/gh/libratom/libratom/pull/37/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL2NsaS5weQ==) | `100% <100%> (\u00f8)` | :arrow_up: |\n| [libratom/cli/utils.py](https://codecov.io/gh/libratom/libratom/pull/37/diff?src=pr&el=tree#diff-bGlicmF0b20vY2xpL3V0aWxzLnB5) | `100% <100%> (\u00f8)` | |\n| [libratom/lib/entities.py](https://codecov.io/gh/libratom/libratom/pull/37/diff?src=pr&el=tree#diff-bGlicmF0b20vbGliL2VudGl0aWVzLnB5) | `87.62% <92.3%> (\u00f8)` | |\n| ... and [2 more](https://codecov.io/gh/libratom/libratom/pull/37/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/libratom/libratom/pull/37?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/libratom/libratom/pull/37?src=pr&el=footer). Last update [5c3ca12...ec55ee8](https://codecov.io/gh/libratom/libratom/pull/37?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "37"
    },
    {
        "repo_url": "github.com/lrank/Robust_and_Privacy_preserving_Text_Representations",
        "filepath": "Pytorch/sentiment/adv_model.py",
        "Creation Date": "2019-12-20T05:28:46Z",
        "PR Comment": "> Hi Yitong,\n> \n> I have repeated both the POS-Tagging and Sentiment Classification experiments in the paper using Pytorch.\n> Could you please take a look at the code?\n> \n> Thank you.\n\nLooks amazing! Thank you! Y",
        "PR/Issue Number": "3"
    },
    {
        "repo_url": "github.com/lrank/Robust_and_Privacy_preserving_Text_Representations",
        "filepath": "Pytorch/sentiment/baseline_model.py",
        "Creation Date": "2019-12-20T05:28:46Z",
        "PR Comment": "> Hi Yitong,\n> \n> I have repeated both the POS-Tagging and Sentiment Classification experiments in the paper using Pytorch.\n> Could you please take a look at the code?\n> \n> Thank you.\n\nLooks amazing! Thank you! Y",
        "PR/Issue Number": "3"
    },
    {
        "repo_url": "github.com/lrank/Robust_and_Privacy_preserving_Text_Representations",
        "filepath": "Pytorch/sentiment/baseline_model.py",
        "Creation Date": "2019-12-20T05:28:46Z",
        "PR Comment": "> Hi Yitong,\n> \n> I have repeated both the POS-Tagging and Sentiment Classification experiments in the paper using Pytorch.\n> Could you please take a look at the code?\n> \n> Thank you.\n\nLooks amazing! Thank you! Y",
        "PR/Issue Number": "3"
    },
    {
        "repo_url": "github.com/spacy-pl/utils",
        "filepath": "NER-wroc-analysis/get_analysis.py",
        "Creation Date": "2019-05-08T19:03:51Z",
        "PR Comment": "Napisz mi prosz\u0119 co si\u0119 dzieje w tej funkcji, bo nie wiem czy dobrze rozumiem.",
        "PR/Issue Number": "61"
    },
    {
        "repo_url": "github.com/spacy-pl/utils",
        "filepath": "NER-wroc-analysis/get_analysis.py",
        "Creation Date": "2019-05-08T19:05:12Z",
        "PR Comment": "Po co tutaj nkjp? Czy mo\u017ce nazwa jest po prostu obsolete?",
        "PR/Issue Number": "61"
    },
    {
        "repo_url": "github.com/spacy-pl/utils",
        "filepath": "NER-wroc-analysis/get_analysis.py",
        "Creation Date": "2019-05-08T19:07:30Z",
        "PR Comment": "Na przysz\u0142o\u015b\u0107 komentuj wi\u0119cej, albo operacje na konkretnych poziomach tekstu wydzielaj po prostu do osobnych funkcji, latwiej wtedy zrozumie\u0107 co si\u0119 dzieje. (np. tutaj jest par\u0119 operacji na poziomie zdania, i ci\u0119\u017cko sprawdzi\u0107 czy s\u0105 sensowne, bez informacji co maj\u0105 robi\u0107) ",
        "PR/Issue Number": "61"
    },
    {
        "repo_url": "github.com/spacy-pl/utils",
        "filepath": "NER-wroc-analysis/get_analysis.py",
        "Creation Date": "2019-04-25T07:09:18Z",
        "PR Comment": "closes #50, closes #41 ",
        "PR/Issue Number": "61"
    },
    {
        "repo_url": "github.com/spacy-pl/utils",
        "filepath": "deployment/combine_and_package.py",
        "Creation Date": "2019-04-17T20:01:14Z",
        "PR Comment": "Dobrze rozumiem, to jest spakowany tagger? I nie jest stepem, bo pakujemy r\u0119cznie? Spakowane modele umieszcza\u0142bym raczej w release, models zostawi\u0142bym na modele b\u0119d\u0105ce outputem treningu.",
        "PR/Issue Number": "59"
    },
    {
        "repo_url": "github.com/spacy-pl/utils",
        "filepath": "deployment/combine_and_package.py",
        "Creation Date": "2019-04-17T20:01:52Z",
        "PR Comment": "Czy teraz nkjp2us to jest mapa konwersji samych pos\u00f3w?",
        "PR/Issue Number": "59"
    },
    {
        "repo_url": "github.com/spacy-pl/utils",
        "filepath": "deployment/combine_and_package.py",
        "Creation Date": "2019-04-17T20:03:01Z",
        "PR Comment": "Tutaj przyda\u0142yby si\u0119 jeszcze strategie w dependencjach",
        "PR/Issue Number": "59"
    },
    {
        "repo_url": "github.com/spacy-pl/utils",
        "filepath": "deployment/combine_and_package.py",
        "Creation Date": "2019-04-17T20:06:16Z",
        "PR Comment": "Wywali\u0142bym domy\u015bln\u0105 strategi\u0119 - dzi\u0119ki temu \u017ce zawsze trzeba j\u0105 poda\u0107, to stepy dvc b\u0119d\u0105 lepiej dokumentowa\u0107 to co dzieje si\u0119 po kolei",
        "PR/Issue Number": "59"
    },
    {
        "repo_url": "github.com/spacy-pl/utils",
        "filepath": "deployment/combine_and_package.py",
        "Creation Date": "2019-04-17T20:09:25Z",
        "PR Comment": "Tak\n",
        "PR/Issue Number": "59"
    },
    {
        "repo_url": "github.com/marinapts/ttds_movie_search",
        "filepath": "ir_eval/indexing/quotes.py",
        "Creation Date": "2020-02-20T18:04:38Z",
        "PR Comment": "Should we maybe move all indexing related files to a subfolder ir_eval/indexing for a better organised project folder structure? ",
        "PR/Issue Number": "10"
    },
    {
        "repo_url": "github.com/marinapts/ttds_movie_search",
        "filepath": "ir_eval/indexing/quotes.py",
        "Creation Date": "2020-02-20T18:30:35Z",
        "PR Comment": "I think the latest commit breaks other modules that use preprocessing.py",
        "PR/Issue Number": "10"
    },
    {
        "repo_url": "github.com/LAION-AI/riverbed",
        "filepath": "src/utils.py",
        "Creation Date": "2023-03-12T16:30:49Z",
        "PR Comment": "looks good to me! thank  you!",
        "PR/Issue Number": "1"
    },
    {
        "repo_url": "github.com/LAION-AI/riverbed",
        "filepath": "src/searcher_indexer.py",
        "Creation Date": "2023-03-12T16:30:49Z",
        "PR Comment": "looks good to me! thank  you!",
        "PR/Issue Number": "1"
    },
    {
        "repo_url": "github.com/IndicoDataSolutions/Indico-Solutions-Toolkit",
        "filepath": "indico_toolkit/staggered_loop/metrics.py",
        "Creation Date": "2022-06-09T14:32:14Z",
        "PR Comment": "@Scott771 tests passing now, think this is ready for review. \n",
        "PR/Issue Number": "140"
    },
    {
        "repo_url": "github.com/IndicoDataSolutions/Indico-Solutions-Toolkit",
        "filepath": "indico_toolkit/staggered_loop/metrics.py",
        "Creation Date": "2022-06-21T14:25:43Z",
        "PR Comment": "@Scott771 going to merge this EOD tomorrow unless you have objections",
        "PR/Issue Number": "140"
    },
    {
        "repo_url": "github.com/IndicoDataSolutions/Indico-Solutions-Toolkit",
        "filepath": "indico_toolkit/staggered_loop/metrics.py",
        "Creation Date": "2022-06-09T14:32:14Z",
        "PR Comment": "@Scott771 tests passing now, think this is ready for review. \n",
        "PR/Issue Number": "140"
    },
    {
        "repo_url": "github.com/IndicoDataSolutions/Indico-Solutions-Toolkit",
        "filepath": "indico_toolkit/staggered_loop/metrics.py",
        "Creation Date": "2022-06-21T14:25:43Z",
        "PR Comment": "@Scott771 going to merge this EOD tomorrow unless you have objections",
        "PR/Issue Number": "140"
    },
    {
        "repo_url": "github.com/IndicoDataSolutions/Indico-Solutions-Toolkit",
        "filepath": "indico_toolkit/staggered_loop/metrics.py",
        "Creation Date": "2022-06-09T14:32:14Z",
        "PR Comment": "@Scott771 tests passing now, think this is ready for review. \n",
        "PR/Issue Number": "140"
    },
    {
        "repo_url": "github.com/IndicoDataSolutions/Indico-Solutions-Toolkit",
        "filepath": "indico_toolkit/staggered_loop/metrics.py",
        "Creation Date": "2022-06-21T14:25:43Z",
        "PR Comment": "@Scott771 going to merge this EOD tomorrow unless you have objections",
        "PR/Issue Number": "140"
    },
    {
        "repo_url": "github.com/accraze/python-ia-markov",
        "filepath": "src/ia_markov/markov.py",
        "Creation Date": "2018-10-01T18:31:07Z",
        "PR Comment": "I think there is a problem with the build...\nas described https://bitbucket.org/ned/coveragepy/issues/548/dont-fail-with-coverage-combine-aka-43",
        "PR/Issue Number": "22"
    },
    {
        "repo_url": "github.com/accraze/python-ia-markov",
        "filepath": "src/ia_markov/markov.py",
        "Creation Date": "2018-10-06T05:17:09Z",
        "PR Comment": "@ex00 thanks for the PR! happy hacktoberfest \ud83c\udf83 \ud83d\udda5 \nyou can ignore the `coverage` issue in travisCI",
        "PR/Issue Number": "24"
    },
    {
        "repo_url": "github.com/accraze/python-ia-markov",
        "filepath": "src/ia_markov/markov.py",
        "Creation Date": "2018-10-01T18:31:07Z",
        "PR Comment": "I think there is a problem with the build...\nas described https://bitbucket.org/ned/coveragepy/issues/548/dont-fail-with-coverage-combine-aka-43",
        "PR/Issue Number": "22"
    },
    {
        "repo_url": "github.com/accraze/python-ia-markov",
        "filepath": "src/ia_markov/markov.py",
        "Creation Date": "2018-07-29T15:41:58Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/accraze/python-ia-markov/pull/14?src=pr&el=h1) Report\n> Merging [#14](https://codecov.io/gh/accraze/python-ia-markov/pull/14?src=pr&el=desc) into [master](https://codecov.io/gh/accraze/python-ia-markov/commit/8228dd6922a91e68e93dbc6f8416c5c49edf9009?src=pr&el=desc) will **increase** coverage by `0.23%`.\n> The diff coverage is `75%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/accraze/python-ia-markov/pull/14/graphs/tree.svg?token=tPMjeyMpjD&width=650&height=150&src=pr)](https://codecov.io/gh/accraze/python-ia-markov/pull/14?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master      #14      +/-   ##\n==========================================\n+ Coverage   74.31%   74.54%   +0.23%     \n==========================================\n  Files           4        4              \n  Lines         109      110       +1     \n  Branches       12       12              \n==========================================\n+ Hits           81       82       +1     \n  Misses         26       26              \n  Partials        2        2\n```\n\n\n| [Impacted Files](https://codecov.io/gh/accraze/python-ia-markov/pull/14?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [src/ia\\_markov/markov.py](https://codecov.io/gh/accraze/python-ia-markov/pull/14/diff?src=pr&el=tree#diff-c3JjL2lhX21hcmtvdi9tYXJrb3YucHk=) | `73.68% <75%> (+0.46%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/accraze/python-ia-markov/pull/14?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/accraze/python-ia-markov/pull/14?src=pr&el=footer). Last update [8228dd6...60e35b3](https://codecov.io/gh/accraze/python-ia-markov/pull/14?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "14"
    },
    {
        "repo_url": "github.com/accraze/python-ia-markov",
        "filepath": "src/ia_markov/markov.py",
        "Creation Date": "2018-07-14T16:08:27Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/accraze/python-ia-markov/pull/5?src=pr&el=h1) Report\n> Merging [#5](https://codecov.io/gh/accraze/python-ia-markov/pull/5?src=pr&el=desc) into [master](https://codecov.io/gh/accraze/python-ia-markov/commit/99fa27c0af1f3df5fb6eef4604f7b96f7f4fe240?src=pr&el=desc) will **decrease** coverage by `13.02%`.\n> The diff coverage is `50%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/accraze/python-ia-markov/pull/5/graphs/tree.svg?height=150&width=650&token=tPMjeyMpjD&src=pr)](https://codecov.io/gh/accraze/python-ia-markov/pull/5?src=pr&el=tree)\n\n```diff\n@@             Coverage Diff             @@\n##           master       #5       +/-   ##\n===========================================\n- Coverage   81.91%   68.88%   -13.03%     \n===========================================\n  Files           4        4               \n  Lines          94       90        -4     \n  Branches       10       10               \n===========================================\n- Hits           77       62       -15     \n- Misses         15       26       +11     \n  Partials        2        2\n```\n\n\n| [Impacted Files](https://codecov.io/gh/accraze/python-ia-markov/pull/5?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [tests/test\\_markov.py](https://codecov.io/gh/accraze/python-ia-markov/pull/5/diff?src=pr&el=tree#diff-dGVzdHMvdGVzdF9tYXJrb3YucHk=) | `92.85% <\u00f8> (-0.9%)` | :arrow_down: |\n| [src/ia\\_markov/markov.py](https://codecov.io/gh/accraze/python-ia-markov/pull/5/diff?src=pr&el=tree#diff-c3JjL2lhX21hcmtvdi9tYXJrb3YucHk=) | `53.57% <0%> (-19.65%)` | :arrow_down: |\n| [src/ia\\_markov/\\_\\_init\\_\\_.py](https://codecov.io/gh/accraze/python-ia-markov/pull/5/diff?src=pr&el=tree#diff-c3JjL2lhX21hcmtvdi9fX2luaXRfXy5weQ==) | `100% <100%> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/accraze/python-ia-markov/pull/5?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/accraze/python-ia-markov/pull/5?src=pr&el=footer). Last update [99fa27c...c76884d](https://codecov.io/gh/accraze/python-ia-markov/pull/5?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
        "PR/Issue Number": "5"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-06-09T19:25:45Z",
        "PR Comment": "If we only need tokenization from space, we need not add other pipes to the processors' list. ",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-06-09T19:26:05Z",
        "PR Comment": "We can remove configs that's not being used anywhere.",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-06-10T23:42:11Z",
        "PR Comment": "Thanks. I will fix those.",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-06-15T05:03:31Z",
        "PR Comment": "These import comments seem superfluous, since the name itself implies what's being imported.",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-06-15T05:05:05Z",
        "PR Comment": "I don't think we need comments for each line in the code, some lines are self explanatory. Maybe we can reduce the clutter by deleting unnecessary comments?",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-06-16T03:06:05Z",
        "PR Comment": "Following the python convention, we should use `show_data`",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-06-16T03:09:15Z",
        "PR Comment": "This config loading is correct. But as an example, it isn't really necessary. The config file is quite brief, we should probably directly initialize the config here, so that one can actually see what happens in one file.",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-06-16T03:11:41Z",
        "PR Comment": "The model is actually configurable via [this parameter](https://github.com/KiaLAN/ForteHealth/blob/60bb3919d4f96f246f328f5f8a86bc771f6bba04/fortex/health/processors/icd_coding_processor.py#L106). So this description is not exactly accurate. In addition, it might be helpful to show how to configure this.",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-06-16T03:12:24Z",
        "PR Comment": "Why are we installing `forte.elastic` when it is not used in the example?",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-06-16T06:54:48Z",
        "PR Comment": "I copied that from `examples/mimic_iii/medical_pipeline.py`. I guess both this and that file need to change.",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-06-16T06:57:20Z",
        "PR Comment": "I copied that from `examples/mimic_iii/medical_pipeline.py`.\n\nWhen I uninstall that package, the code works fine. I will remove that dependency.",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-06-12T23:45:45Z",
        "PR Comment": "@Piyush13y I've cleaned those configs.",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-06-15T05:06:38Z",
        "PR Comment": "Other than the unnecessary comments, everything seems fine. I can merge the PR as soon as you can resolve the small suggestions",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-06-15T09:35:31Z",
        "PR Comment": "I've removed those comments.\n\nAnd I fixed a mistake in config, where I accidentally removed the language model. Since we don't have POS in the pipeline, I also removed its printing.",
        "PR/Issue Number": "35"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-05-31T19:57:09Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/29?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#29](https://codecov.io/gh/asyml/ForteHealth/pull/29?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (d306fe2) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/2b80d30c69422118963755fe61732894b2a3bcf3?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (2b80d30) will **not change** coverage.\n> The diff coverage is `100.00%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master      #29   +/-   ##\n=======================================\n  Coverage   84.44%   84.44%           \n=======================================\n  Files           9        9           \n  Lines         508      508           \n=======================================\n  Hits          429      429           \n  Misses         79       79           \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/29?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/\\_\\_init\\_\\_.py](https://codecov.io/gh/asyml/ForteHealth/pull/29/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9fX2luaXRfXy5weQ==) | `100.00% <\u00f8> (\u00f8)` | |\n| [...tex/health/processors/negation\\_context\\_analyzer.py](https://codecov.io/gh/asyml/ForteHealth/pull/29/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL25lZ2F0aW9uX2NvbnRleHRfYW5hbHl6ZXIucHk=) | `97.16% <\u00f8> (\u00f8)` | |\n| [fortex/health/readers/mimic3\\_note\\_reader.py](https://codecov.io/gh/asyml/ForteHealth/pull/29/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9yZWFkZXJzL21pbWljM19ub3RlX3JlYWRlci5weQ==) | `97.87% <\u00f8> (\u00f8)` | |\n| [fortex/health/processors/icd\\_coding\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/29/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL2ljZF9jb2RpbmdfcHJvY2Vzc29yLnB5) | `97.43% <100.00%> (\u00f8)` | |\n| [fortex/health/readers/\\_\\_init\\_\\_.py](https://codecov.io/gh/asyml/ForteHealth/pull/29/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9yZWFkZXJzL19faW5pdF9fLnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [...te\\_medical/processors/icd\\_coding\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/29/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGVfbWVkaWNhbC9wcm9jZXNzb3JzL2ljZF9jb2RpbmdfcHJvY2Vzc29yX3Rlc3QucHk=) | `100.00% <100.00%> (\u00f8)` | |\n| [...dical/processors/negation\\_context\\_analysis\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/29/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGVfbWVkaWNhbC9wcm9jZXNzb3JzL25lZ2F0aW9uX2NvbnRleHRfYW5hbHlzaXNfdGVzdC5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n| [...s/forte\\_medical/readers/mimic3\\_note\\_reader\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/29/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGVfbWVkaWNhbC9yZWFkZXJzL21pbWljM19ub3RlX3JlYWRlcl90ZXN0LnB5) | `96.29% <100.00%> (\u00f8)` | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/29?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/29?src=pr&el=footer&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml). Last update [2b80d30...d306fe2](https://codecov.io/gh/asyml/ForteHealth/pull/29?src=pr&el=lastupdated&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml).\n",
        "PR/Issue Number": "29"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:05:09Z",
        "PR Comment": "1. shouldn't use camel case for argument/variables `singlePack`.\n2. It is indeed weird to use `True` as string, why not using bool?\n\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:06:47Z",
        "PR Comment": "maybe use a text reader and load a sample file from disk?",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:07:04Z",
        "PR Comment": "no camel case",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:12:44Z",
        "PR Comment": "2022",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:35:25Z",
        "PR Comment": "The variable name `singlePack` is a bit weird since it is controlling the reader source.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:36:00Z",
        "PR Comment": "no camel case or we simply inline the configs here.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:37:46Z",
        "PR Comment": "shall we provide these negex triggers as part of the repo? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:39:49Z",
        "PR Comment": "A question, did we adopt the code from Ctakes? If so, we probably want to make a reference here.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:40:58Z",
        "PR Comment": "I find that the processor also [expects `Sentence`](https://github.com/asyml/forte-medical/pull/7/files#diff-ca80a2b79a235631494ffd7a9f32b1291e606dc773cfe08e1a3176f6264d0d68R111).",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:41:39Z",
        "PR Comment": "one thing we could do is that we provide a default rule set, and let the users provide theirs if they know how to",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:41:34Z",
        "PR Comment": "Not from Ctakes, that uses Finite State Machines to implement Negex. Instead, we adopted it from [here.](https://github.com/chapmanbe/negex) I can add a reference to this repo in our code?",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:43:29Z",
        "PR Comment": "I was initially planning to do that. Something like this:\n\n```\n{\n\"negation_rules_path\": \"\",\n\"pre_negation_rules\": [],\n\"post_negation_rules\": []\n}\n```\n\nWe basically add all `pre_negation_rules` and `post_negaion_rules` to the rules picked from the sample rules file, which will be shipped with the repo. \nHowever, I thought I will add these improvements after this gets pushed.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:44:34Z",
        "PR Comment": "Yes, I think we should ship it with the repo, as default set of rules for the processor. I think we should put this file to a different folder if that's the case, but not sure where. Maybe within /processors/ instead of /examples/mimic_iii/ ? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:48:32Z",
        "PR Comment": "boolean type was misbehaving for some reason. I will retry though, string didn't seem ideal to me either.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T18:05:10Z",
        "PR Comment": "yes, let's acknowledge them",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T18:19:31Z",
        "PR Comment": "So we need to make sure it gets automatically picked up when people download and use the code. So if it is part of the code, it needs should be picked up by `setup.py`, or it is a file URL, then you can consider downloading it somewhere.\n\nIt could be your decision on where it will be placed. ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T23:20:30Z",
        "PR Comment": "> 1. I guess we want to lint the project with `mypy`, `pylint` and `black` to make it more standard before we merge this.\n> 2. We will also need to set up test cases (and write test cases), like [here](https://github.com/asyml/forte/blob/master/.github/workflows/main.yml#L97).\n\nSure. I'll update the workflow with more linting tools.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T11:33:13Z",
        "PR Comment": "@hunterhector Still unable to add @tanyuqian as a reviewer. It says I can add **atmost** 1 reviewer.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T17:30:53Z",
        "PR Comment": "> @hunterhector Still unable to add @tanyuqian as a reviewer. It says I can add **almost** 1 reviewer.\n\nAdd bowen in the future. I will get notified for the PRs anyway",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-04T05:00:53Z",
        "PR Comment": "> 1. I guess we want to lint the project with `mypy`, `pylint` and `black` to make it more standard before we merge this.\n> 2. We will also need to set up test cases (and write test cases), like [here](https://github.com/asyml/forte/blob/master/.github/workflows/main.yml#L97).\n\nPytest and documentation has been updated. \n@Piyush13y Could you write unit tests for the components you developed? ([mimic_reader](https://github.com/asyml/forte-medical/blob/master/tests/readers/mimic3_note_reader_test.py#L12) and this negation analyzer)",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-04T12:06:41Z",
        "PR Comment": "@tanyuqian I had already added test cases for `NegationContextAnalyzer`, and now I have added a test case for Mimic3 reader as well. However, there seems to be something broken with respect to pytest in the workflow I think, which gives errors in the CI pipeline. I am able to run these tests successfully on my local machine.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-06T22:02:25Z",
        "PR Comment": "> @tanyuqian I had already added test cases for `NegationContextAnalyzer`, and now I have added a test case for Mimic3 reader as well. However, there seems to be something broken with respect to pytest in the workflow I think, which gives errors in the CI pipeline. I am able to run these tests successfully on my local machine.\n\n@Piyush13y Could you double-check it is working from your end? like re-install forte/forte-wrapper/forte-medical and re-run? I got the same error message as the workflow here https://github.com/asyml/forte-medical/runs/5435388860?check_suite_focus=true#step:13:23 \n(```ImportError: cannot import name 'MedicalEntityMention' from 'ftx.medical' (/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/ftx/medical/__init__.py)```)",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-06T22:10:32Z",
        "PR Comment": "@tanyuqian There were 2 issues raised in the CI pipeline initially, one was due to a stray test folder which, on deletion, fixed that problem.\nThe other one related to import statement is because [this](https://github.com/asyml/forte-wrappers/pull/96) Forte-wrapper's PR is yet to be merged, which completes the namespace consistency story. I have run these tests with that PR and it works fine. There's some other issue which is failing a test on that PR which has blocked its merge for now. @hunterhector mentioned someone will be working on that but might take some time. ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:05:09Z",
        "PR Comment": "1. shouldn't use camel case for argument/variables `singlePack`.\n2. It is indeed weird to use `True` as string, why not using bool?\n\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:06:47Z",
        "PR Comment": "maybe use a text reader and load a sample file from disk?",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:07:04Z",
        "PR Comment": "no camel case",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:12:44Z",
        "PR Comment": "2022",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:35:25Z",
        "PR Comment": "The variable name `singlePack` is a bit weird since it is controlling the reader source.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:36:00Z",
        "PR Comment": "no camel case or we simply inline the configs here.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:37:46Z",
        "PR Comment": "shall we provide these negex triggers as part of the repo? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:39:49Z",
        "PR Comment": "A question, did we adopt the code from Ctakes? If so, we probably want to make a reference here.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:40:58Z",
        "PR Comment": "I find that the processor also [expects `Sentence`](https://github.com/asyml/forte-medical/pull/7/files#diff-ca80a2b79a235631494ffd7a9f32b1291e606dc773cfe08e1a3176f6264d0d68R111).",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:41:39Z",
        "PR Comment": "one thing we could do is that we provide a default rule set, and let the users provide theirs if they know how to",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:41:34Z",
        "PR Comment": "Not from Ctakes, that uses Finite State Machines to implement Negex. Instead, we adopted it from [here.](https://github.com/chapmanbe/negex) I can add a reference to this repo in our code?",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:43:29Z",
        "PR Comment": "I was initially planning to do that. Something like this:\n\n```\n{\n\"negation_rules_path\": \"\",\n\"pre_negation_rules\": [],\n\"post_negation_rules\": []\n}\n```\n\nWe basically add all `pre_negation_rules` and `post_negaion_rules` to the rules picked from the sample rules file, which will be shipped with the repo. \nHowever, I thought I will add these improvements after this gets pushed.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:44:34Z",
        "PR Comment": "Yes, I think we should ship it with the repo, as default set of rules for the processor. I think we should put this file to a different folder if that's the case, but not sure where. Maybe within /processors/ instead of /examples/mimic_iii/ ? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:48:32Z",
        "PR Comment": "boolean type was misbehaving for some reason. I will retry though, string didn't seem ideal to me either.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T18:05:10Z",
        "PR Comment": "yes, let's acknowledge them",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T18:19:31Z",
        "PR Comment": "So we need to make sure it gets automatically picked up when people download and use the code. So if it is part of the code, it needs should be picked up by `setup.py`, or it is a file URL, then you can consider downloading it somewhere.\n\nIt could be your decision on where it will be placed. ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T23:20:30Z",
        "PR Comment": "> 1. I guess we want to lint the project with `mypy`, `pylint` and `black` to make it more standard before we merge this.\n> 2. We will also need to set up test cases (and write test cases), like [here](https://github.com/asyml/forte/blob/master/.github/workflows/main.yml#L97).\n\nSure. I'll update the workflow with more linting tools.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T11:33:13Z",
        "PR Comment": "@hunterhector Still unable to add @tanyuqian as a reviewer. It says I can add **atmost** 1 reviewer.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T17:30:53Z",
        "PR Comment": "> @hunterhector Still unable to add @tanyuqian as a reviewer. It says I can add **almost** 1 reviewer.\n\nAdd bowen in the future. I will get notified for the PRs anyway",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-04T05:00:53Z",
        "PR Comment": "> 1. I guess we want to lint the project with `mypy`, `pylint` and `black` to make it more standard before we merge this.\n> 2. We will also need to set up test cases (and write test cases), like [here](https://github.com/asyml/forte/blob/master/.github/workflows/main.yml#L97).\n\nPytest and documentation has been updated. \n@Piyush13y Could you write unit tests for the components you developed? ([mimic_reader](https://github.com/asyml/forte-medical/blob/master/tests/readers/mimic3_note_reader_test.py#L12) and this negation analyzer)",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-04T12:06:41Z",
        "PR Comment": "@tanyuqian I had already added test cases for `NegationContextAnalyzer`, and now I have added a test case for Mimic3 reader as well. However, there seems to be something broken with respect to pytest in the workflow I think, which gives errors in the CI pipeline. I am able to run these tests successfully on my local machine.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-06T22:02:25Z",
        "PR Comment": "> @tanyuqian I had already added test cases for `NegationContextAnalyzer`, and now I have added a test case for Mimic3 reader as well. However, there seems to be something broken with respect to pytest in the workflow I think, which gives errors in the CI pipeline. I am able to run these tests successfully on my local machine.\n\n@Piyush13y Could you double-check it is working from your end? like re-install forte/forte-wrapper/forte-medical and re-run? I got the same error message as the workflow here https://github.com/asyml/forte-medical/runs/5435388860?check_suite_focus=true#step:13:23 \n(```ImportError: cannot import name 'MedicalEntityMention' from 'ftx.medical' (/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/ftx/medical/__init__.py)```)",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-06T22:10:32Z",
        "PR Comment": "@tanyuqian There were 2 issues raised in the CI pipeline initially, one was due to a stray test folder which, on deletion, fixed that problem.\nThe other one related to import statement is because [this](https://github.com/asyml/forte-wrappers/pull/96) Forte-wrapper's PR is yet to be merged, which completes the namespace consistency story. I have run these tests with that PR and it works fine. There's some other issue which is failing a test on that PR which has blocked its merge for now. @hunterhector mentioned someone will be working on that but might take some time. ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:05:09Z",
        "PR Comment": "1. shouldn't use camel case for argument/variables `singlePack`.\n2. It is indeed weird to use `True` as string, why not using bool?\n\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:06:47Z",
        "PR Comment": "maybe use a text reader and load a sample file from disk?",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:07:04Z",
        "PR Comment": "no camel case",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:12:44Z",
        "PR Comment": "2022",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:35:25Z",
        "PR Comment": "The variable name `singlePack` is a bit weird since it is controlling the reader source.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:36:00Z",
        "PR Comment": "no camel case or we simply inline the configs here.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:37:46Z",
        "PR Comment": "shall we provide these negex triggers as part of the repo? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:39:49Z",
        "PR Comment": "A question, did we adopt the code from Ctakes? If so, we probably want to make a reference here.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:40:58Z",
        "PR Comment": "I find that the processor also [expects `Sentence`](https://github.com/asyml/forte-medical/pull/7/files#diff-ca80a2b79a235631494ffd7a9f32b1291e606dc773cfe08e1a3176f6264d0d68R111).",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:41:39Z",
        "PR Comment": "one thing we could do is that we provide a default rule set, and let the users provide theirs if they know how to",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:41:34Z",
        "PR Comment": "Not from Ctakes, that uses Finite State Machines to implement Negex. Instead, we adopted it from [here.](https://github.com/chapmanbe/negex) I can add a reference to this repo in our code?",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:43:29Z",
        "PR Comment": "I was initially planning to do that. Something like this:\n\n```\n{\n\"negation_rules_path\": \"\",\n\"pre_negation_rules\": [],\n\"post_negation_rules\": []\n}\n```\n\nWe basically add all `pre_negation_rules` and `post_negaion_rules` to the rules picked from the sample rules file, which will be shipped with the repo. \nHowever, I thought I will add these improvements after this gets pushed.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:44:34Z",
        "PR Comment": "Yes, I think we should ship it with the repo, as default set of rules for the processor. I think we should put this file to a different folder if that's the case, but not sure where. Maybe within /processors/ instead of /examples/mimic_iii/ ? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:48:32Z",
        "PR Comment": "boolean type was misbehaving for some reason. I will retry though, string didn't seem ideal to me either.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T18:05:10Z",
        "PR Comment": "yes, let's acknowledge them",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T18:19:31Z",
        "PR Comment": "So we need to make sure it gets automatically picked up when people download and use the code. So if it is part of the code, it needs should be picked up by `setup.py`, or it is a file URL, then you can consider downloading it somewhere.\n\nIt could be your decision on where it will be placed. ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T23:20:30Z",
        "PR Comment": "> 1. I guess we want to lint the project with `mypy`, `pylint` and `black` to make it more standard before we merge this.\n> 2. We will also need to set up test cases (and write test cases), like [here](https://github.com/asyml/forte/blob/master/.github/workflows/main.yml#L97).\n\nSure. I'll update the workflow with more linting tools.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T11:33:13Z",
        "PR Comment": "@hunterhector Still unable to add @tanyuqian as a reviewer. It says I can add **atmost** 1 reviewer.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T17:30:53Z",
        "PR Comment": "> @hunterhector Still unable to add @tanyuqian as a reviewer. It says I can add **almost** 1 reviewer.\n\nAdd bowen in the future. I will get notified for the PRs anyway",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-04T05:00:53Z",
        "PR Comment": "> 1. I guess we want to lint the project with `mypy`, `pylint` and `black` to make it more standard before we merge this.\n> 2. We will also need to set up test cases (and write test cases), like [here](https://github.com/asyml/forte/blob/master/.github/workflows/main.yml#L97).\n\nPytest and documentation has been updated. \n@Piyush13y Could you write unit tests for the components you developed? ([mimic_reader](https://github.com/asyml/forte-medical/blob/master/tests/readers/mimic3_note_reader_test.py#L12) and this negation analyzer)",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-04T12:06:41Z",
        "PR Comment": "@tanyuqian I had already added test cases for `NegationContextAnalyzer`, and now I have added a test case for Mimic3 reader as well. However, there seems to be something broken with respect to pytest in the workflow I think, which gives errors in the CI pipeline. I am able to run these tests successfully on my local machine.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-06T22:02:25Z",
        "PR Comment": "> @tanyuqian I had already added test cases for `NegationContextAnalyzer`, and now I have added a test case for Mimic3 reader as well. However, there seems to be something broken with respect to pytest in the workflow I think, which gives errors in the CI pipeline. I am able to run these tests successfully on my local machine.\n\n@Piyush13y Could you double-check it is working from your end? like re-install forte/forte-wrapper/forte-medical and re-run? I got the same error message as the workflow here https://github.com/asyml/forte-medical/runs/5435388860?check_suite_focus=true#step:13:23 \n(```ImportError: cannot import name 'MedicalEntityMention' from 'ftx.medical' (/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/ftx/medical/__init__.py)```)",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-06T22:10:32Z",
        "PR Comment": "@tanyuqian There were 2 issues raised in the CI pipeline initially, one was due to a stray test folder which, on deletion, fixed that problem.\nThe other one related to import statement is because [this](https://github.com/asyml/forte-wrappers/pull/96) Forte-wrapper's PR is yet to be merged, which completes the namespace consistency story. I have run these tests with that PR and it works fine. There's some other issue which is failing a test on that PR which has blocked its merge for now. @hunterhector mentioned someone will be working on that but might take some time. ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:05:09Z",
        "PR Comment": "1. shouldn't use camel case for argument/variables `singlePack`.\n2. It is indeed weird to use `True` as string, why not using bool?\n\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:06:47Z",
        "PR Comment": "maybe use a text reader and load a sample file from disk?",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:07:04Z",
        "PR Comment": "no camel case",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:12:44Z",
        "PR Comment": "2022",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:35:25Z",
        "PR Comment": "The variable name `singlePack` is a bit weird since it is controlling the reader source.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:36:00Z",
        "PR Comment": "no camel case or we simply inline the configs here.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:37:46Z",
        "PR Comment": "shall we provide these negex triggers as part of the repo? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:39:49Z",
        "PR Comment": "A question, did we adopt the code from Ctakes? If so, we probably want to make a reference here.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:40:58Z",
        "PR Comment": "I find that the processor also [expects `Sentence`](https://github.com/asyml/forte-medical/pull/7/files#diff-ca80a2b79a235631494ffd7a9f32b1291e606dc773cfe08e1a3176f6264d0d68R111).",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:41:39Z",
        "PR Comment": "one thing we could do is that we provide a default rule set, and let the users provide theirs if they know how to",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:41:34Z",
        "PR Comment": "Not from Ctakes, that uses Finite State Machines to implement Negex. Instead, we adopted it from [here.](https://github.com/chapmanbe/negex) I can add a reference to this repo in our code?",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:43:29Z",
        "PR Comment": "I was initially planning to do that. Something like this:\n\n```\n{\n\"negation_rules_path\": \"\",\n\"pre_negation_rules\": [],\n\"post_negation_rules\": []\n}\n```\n\nWe basically add all `pre_negation_rules` and `post_negaion_rules` to the rules picked from the sample rules file, which will be shipped with the repo. \nHowever, I thought I will add these improvements after this gets pushed.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:44:34Z",
        "PR Comment": "Yes, I think we should ship it with the repo, as default set of rules for the processor. I think we should put this file to a different folder if that's the case, but not sure where. Maybe within /processors/ instead of /examples/mimic_iii/ ? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:48:32Z",
        "PR Comment": "boolean type was misbehaving for some reason. I will retry though, string didn't seem ideal to me either.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T18:05:10Z",
        "PR Comment": "yes, let's acknowledge them",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T18:19:31Z",
        "PR Comment": "So we need to make sure it gets automatically picked up when people download and use the code. So if it is part of the code, it needs should be picked up by `setup.py`, or it is a file URL, then you can consider downloading it somewhere.\n\nIt could be your decision on where it will be placed. ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T23:20:30Z",
        "PR Comment": "> 1. I guess we want to lint the project with `mypy`, `pylint` and `black` to make it more standard before we merge this.\n> 2. We will also need to set up test cases (and write test cases), like [here](https://github.com/asyml/forte/blob/master/.github/workflows/main.yml#L97).\n\nSure. I'll update the workflow with more linting tools.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T11:33:13Z",
        "PR Comment": "@hunterhector Still unable to add @tanyuqian as a reviewer. It says I can add **atmost** 1 reviewer.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T17:30:53Z",
        "PR Comment": "> @hunterhector Still unable to add @tanyuqian as a reviewer. It says I can add **almost** 1 reviewer.\n\nAdd bowen in the future. I will get notified for the PRs anyway",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-04T05:00:53Z",
        "PR Comment": "> 1. I guess we want to lint the project with `mypy`, `pylint` and `black` to make it more standard before we merge this.\n> 2. We will also need to set up test cases (and write test cases), like [here](https://github.com/asyml/forte/blob/master/.github/workflows/main.yml#L97).\n\nPytest and documentation has been updated. \n@Piyush13y Could you write unit tests for the components you developed? ([mimic_reader](https://github.com/asyml/forte-medical/blob/master/tests/readers/mimic3_note_reader_test.py#L12) and this negation analyzer)",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-04T12:06:41Z",
        "PR Comment": "@tanyuqian I had already added test cases for `NegationContextAnalyzer`, and now I have added a test case for Mimic3 reader as well. However, there seems to be something broken with respect to pytest in the workflow I think, which gives errors in the CI pipeline. I am able to run these tests successfully on my local machine.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-06T22:02:25Z",
        "PR Comment": "> @tanyuqian I had already added test cases for `NegationContextAnalyzer`, and now I have added a test case for Mimic3 reader as well. However, there seems to be something broken with respect to pytest in the workflow I think, which gives errors in the CI pipeline. I am able to run these tests successfully on my local machine.\n\n@Piyush13y Could you double-check it is working from your end? like re-install forte/forte-wrapper/forte-medical and re-run? I got the same error message as the workflow here https://github.com/asyml/forte-medical/runs/5435388860?check_suite_focus=true#step:13:23 \n(```ImportError: cannot import name 'MedicalEntityMention' from 'ftx.medical' (/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/ftx/medical/__init__.py)```)",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-06T22:10:32Z",
        "PR Comment": "@tanyuqian There were 2 issues raised in the CI pipeline initially, one was due to a stray test folder which, on deletion, fixed that problem.\nThe other one related to import statement is because [this](https://github.com/asyml/forte-wrappers/pull/96) Forte-wrapper's PR is yet to be merged, which completes the namespace consistency story. I have run these tests with that PR and it works fine. There's some other issue which is failing a test on that PR which has blocked its merge for now. @hunterhector mentioned someone will be working on that but might take some time. ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:05:09Z",
        "PR Comment": "1. shouldn't use camel case for argument/variables `singlePack`.\n2. It is indeed weird to use `True` as string, why not using bool?\n\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:06:47Z",
        "PR Comment": "maybe use a text reader and load a sample file from disk?",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:07:04Z",
        "PR Comment": "no camel case",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:12:44Z",
        "PR Comment": "2022",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:35:25Z",
        "PR Comment": "The variable name `singlePack` is a bit weird since it is controlling the reader source.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:36:00Z",
        "PR Comment": "no camel case or we simply inline the configs here.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:37:46Z",
        "PR Comment": "shall we provide these negex triggers as part of the repo? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:39:49Z",
        "PR Comment": "A question, did we adopt the code from Ctakes? If so, we probably want to make a reference here.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:40:58Z",
        "PR Comment": "I find that the processor also [expects `Sentence`](https://github.com/asyml/forte-medical/pull/7/files#diff-ca80a2b79a235631494ffd7a9f32b1291e606dc773cfe08e1a3176f6264d0d68R111).",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:41:39Z",
        "PR Comment": "one thing we could do is that we provide a default rule set, and let the users provide theirs if they know how to",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:41:34Z",
        "PR Comment": "Not from Ctakes, that uses Finite State Machines to implement Negex. Instead, we adopted it from [here.](https://github.com/chapmanbe/negex) I can add a reference to this repo in our code?",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:43:29Z",
        "PR Comment": "I was initially planning to do that. Something like this:\n\n```\n{\n\"negation_rules_path\": \"\",\n\"pre_negation_rules\": [],\n\"post_negation_rules\": []\n}\n```\n\nWe basically add all `pre_negation_rules` and `post_negaion_rules` to the rules picked from the sample rules file, which will be shipped with the repo. \nHowever, I thought I will add these improvements after this gets pushed.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:44:34Z",
        "PR Comment": "Yes, I think we should ship it with the repo, as default set of rules for the processor. I think we should put this file to a different folder if that's the case, but not sure where. Maybe within /processors/ instead of /examples/mimic_iii/ ? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:48:32Z",
        "PR Comment": "boolean type was misbehaving for some reason. I will retry though, string didn't seem ideal to me either.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T18:05:10Z",
        "PR Comment": "yes, let's acknowledge them",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T18:19:31Z",
        "PR Comment": "So we need to make sure it gets automatically picked up when people download and use the code. So if it is part of the code, it needs should be picked up by `setup.py`, or it is a file URL, then you can consider downloading it somewhere.\n\nIt could be your decision on where it will be placed. ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T23:20:30Z",
        "PR Comment": "> 1. I guess we want to lint the project with `mypy`, `pylint` and `black` to make it more standard before we merge this.\n> 2. We will also need to set up test cases (and write test cases), like [here](https://github.com/asyml/forte/blob/master/.github/workflows/main.yml#L97).\n\nSure. I'll update the workflow with more linting tools.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T11:33:13Z",
        "PR Comment": "@hunterhector Still unable to add @tanyuqian as a reviewer. It says I can add **atmost** 1 reviewer.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T17:30:53Z",
        "PR Comment": "> @hunterhector Still unable to add @tanyuqian as a reviewer. It says I can add **almost** 1 reviewer.\n\nAdd bowen in the future. I will get notified for the PRs anyway",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-04T05:00:53Z",
        "PR Comment": "> 1. I guess we want to lint the project with `mypy`, `pylint` and `black` to make it more standard before we merge this.\n> 2. We will also need to set up test cases (and write test cases), like [here](https://github.com/asyml/forte/blob/master/.github/workflows/main.yml#L97).\n\nPytest and documentation has been updated. \n@Piyush13y Could you write unit tests for the components you developed? ([mimic_reader](https://github.com/asyml/forte-medical/blob/master/tests/readers/mimic3_note_reader_test.py#L12) and this negation analyzer)",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-04T12:06:41Z",
        "PR Comment": "@tanyuqian I had already added test cases for `NegationContextAnalyzer`, and now I have added a test case for Mimic3 reader as well. However, there seems to be something broken with respect to pytest in the workflow I think, which gives errors in the CI pipeline. I am able to run these tests successfully on my local machine.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-06T22:02:25Z",
        "PR Comment": "> @tanyuqian I had already added test cases for `NegationContextAnalyzer`, and now I have added a test case for Mimic3 reader as well. However, there seems to be something broken with respect to pytest in the workflow I think, which gives errors in the CI pipeline. I am able to run these tests successfully on my local machine.\n\n@Piyush13y Could you double-check it is working from your end? like re-install forte/forte-wrapper/forte-medical and re-run? I got the same error message as the workflow here https://github.com/asyml/forte-medical/runs/5435388860?check_suite_focus=true#step:13:23 \n(```ImportError: cannot import name 'MedicalEntityMention' from 'ftx.medical' (/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/ftx/medical/__init__.py)```)",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-06T22:10:32Z",
        "PR Comment": "@tanyuqian There were 2 issues raised in the CI pipeline initially, one was due to a stray test folder which, on deletion, fixed that problem.\nThe other one related to import statement is because [this](https://github.com/asyml/forte-wrappers/pull/96) Forte-wrapper's PR is yet to be merged, which completes the namespace consistency story. I have run these tests with that PR and it works fine. There's some other issue which is failing a test on that PR which has blocked its merge for now. @hunterhector mentioned someone will be working on that but might take some time. ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:05:09Z",
        "PR Comment": "1. shouldn't use camel case for argument/variables `singlePack`.\n2. It is indeed weird to use `True` as string, why not using bool?\n\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:06:47Z",
        "PR Comment": "maybe use a text reader and load a sample file from disk?",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:07:04Z",
        "PR Comment": "no camel case",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:12:44Z",
        "PR Comment": "2022",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:35:25Z",
        "PR Comment": "The variable name `singlePack` is a bit weird since it is controlling the reader source.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:36:00Z",
        "PR Comment": "no camel case or we simply inline the configs here.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:37:46Z",
        "PR Comment": "shall we provide these negex triggers as part of the repo? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:39:49Z",
        "PR Comment": "A question, did we adopt the code from Ctakes? If so, we probably want to make a reference here.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:40:58Z",
        "PR Comment": "I find that the processor also [expects `Sentence`](https://github.com/asyml/forte-medical/pull/7/files#diff-ca80a2b79a235631494ffd7a9f32b1291e606dc773cfe08e1a3176f6264d0d68R111).",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:41:39Z",
        "PR Comment": "one thing we could do is that we provide a default rule set, and let the users provide theirs if they know how to",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:41:34Z",
        "PR Comment": "Not from Ctakes, that uses Finite State Machines to implement Negex. Instead, we adopted it from [here.](https://github.com/chapmanbe/negex) I can add a reference to this repo in our code?",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:43:29Z",
        "PR Comment": "I was initially planning to do that. Something like this:\n\n```\n{\n\"negation_rules_path\": \"\",\n\"pre_negation_rules\": [],\n\"post_negation_rules\": []\n}\n```\n\nWe basically add all `pre_negation_rules` and `post_negaion_rules` to the rules picked from the sample rules file, which will be shipped with the repo. \nHowever, I thought I will add these improvements after this gets pushed.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:44:34Z",
        "PR Comment": "Yes, I think we should ship it with the repo, as default set of rules for the processor. I think we should put this file to a different folder if that's the case, but not sure where. Maybe within /processors/ instead of /examples/mimic_iii/ ? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:48:32Z",
        "PR Comment": "boolean type was misbehaving for some reason. I will retry though, string didn't seem ideal to me either.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T18:05:10Z",
        "PR Comment": "yes, let's acknowledge them",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T18:19:31Z",
        "PR Comment": "So we need to make sure it gets automatically picked up when people download and use the code. So if it is part of the code, it needs should be picked up by `setup.py`, or it is a file URL, then you can consider downloading it somewhere.\n\nIt could be your decision on where it will be placed. ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T23:20:30Z",
        "PR Comment": "> 1. I guess we want to lint the project with `mypy`, `pylint` and `black` to make it more standard before we merge this.\n> 2. We will also need to set up test cases (and write test cases), like [here](https://github.com/asyml/forte/blob/master/.github/workflows/main.yml#L97).\n\nSure. I'll update the workflow with more linting tools.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T11:33:13Z",
        "PR Comment": "@hunterhector Still unable to add @tanyuqian as a reviewer. It says I can add **atmost** 1 reviewer.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T17:30:53Z",
        "PR Comment": "> @hunterhector Still unable to add @tanyuqian as a reviewer. It says I can add **almost** 1 reviewer.\n\nAdd bowen in the future. I will get notified for the PRs anyway",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-04T05:00:53Z",
        "PR Comment": "> 1. I guess we want to lint the project with `mypy`, `pylint` and `black` to make it more standard before we merge this.\n> 2. We will also need to set up test cases (and write test cases), like [here](https://github.com/asyml/forte/blob/master/.github/workflows/main.yml#L97).\n\nPytest and documentation has been updated. \n@Piyush13y Could you write unit tests for the components you developed? ([mimic_reader](https://github.com/asyml/forte-medical/blob/master/tests/readers/mimic3_note_reader_test.py#L12) and this negation analyzer)",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-04T12:06:41Z",
        "PR Comment": "@tanyuqian I had already added test cases for `NegationContextAnalyzer`, and now I have added a test case for Mimic3 reader as well. However, there seems to be something broken with respect to pytest in the workflow I think, which gives errors in the CI pipeline. I am able to run these tests successfully on my local machine.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-06T22:02:25Z",
        "PR Comment": "> @tanyuqian I had already added test cases for `NegationContextAnalyzer`, and now I have added a test case for Mimic3 reader as well. However, there seems to be something broken with respect to pytest in the workflow I think, which gives errors in the CI pipeline. I am able to run these tests successfully on my local machine.\n\n@Piyush13y Could you double-check it is working from your end? like re-install forte/forte-wrapper/forte-medical and re-run? I got the same error message as the workflow here https://github.com/asyml/forte-medical/runs/5435388860?check_suite_focus=true#step:13:23 \n(```ImportError: cannot import name 'MedicalEntityMention' from 'ftx.medical' (/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/ftx/medical/__init__.py)```)",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-06T22:10:32Z",
        "PR Comment": "@tanyuqian There were 2 issues raised in the CI pipeline initially, one was due to a stray test folder which, on deletion, fixed that problem.\nThe other one related to import statement is because [this](https://github.com/asyml/forte-wrappers/pull/96) Forte-wrapper's PR is yet to be merged, which completes the namespace consistency story. I have run these tests with that PR and it works fine. There's some other issue which is failing a test on that PR which has blocked its merge for now. @hunterhector mentioned someone will be working on that but might take some time. ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:05:09Z",
        "PR Comment": "1. shouldn't use camel case for argument/variables `singlePack`.\n2. It is indeed weird to use `True` as string, why not using bool?\n\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:06:47Z",
        "PR Comment": "maybe use a text reader and load a sample file from disk?",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:07:04Z",
        "PR Comment": "no camel case",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:12:44Z",
        "PR Comment": "2022",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:35:25Z",
        "PR Comment": "The variable name `singlePack` is a bit weird since it is controlling the reader source.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:36:00Z",
        "PR Comment": "no camel case or we simply inline the configs here.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:37:46Z",
        "PR Comment": "shall we provide these negex triggers as part of the repo? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:39:49Z",
        "PR Comment": "A question, did we adopt the code from Ctakes? If so, we probably want to make a reference here.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:40:58Z",
        "PR Comment": "I find that the processor also [expects `Sentence`](https://github.com/asyml/forte-medical/pull/7/files#diff-ca80a2b79a235631494ffd7a9f32b1291e606dc773cfe08e1a3176f6264d0d68R111).",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:41:39Z",
        "PR Comment": "one thing we could do is that we provide a default rule set, and let the users provide theirs if they know how to",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:41:34Z",
        "PR Comment": "Not from Ctakes, that uses Finite State Machines to implement Negex. Instead, we adopted it from [here.](https://github.com/chapmanbe/negex) I can add a reference to this repo in our code?",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:43:29Z",
        "PR Comment": "I was initially planning to do that. Something like this:\n\n```\n{\n\"negation_rules_path\": \"\",\n\"pre_negation_rules\": [],\n\"post_negation_rules\": []\n}\n```\n\nWe basically add all `pre_negation_rules` and `post_negaion_rules` to the rules picked from the sample rules file, which will be shipped with the repo. \nHowever, I thought I will add these improvements after this gets pushed.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:44:34Z",
        "PR Comment": "Yes, I think we should ship it with the repo, as default set of rules for the processor. I think we should put this file to a different folder if that's the case, but not sure where. Maybe within /processors/ instead of /examples/mimic_iii/ ? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:48:32Z",
        "PR Comment": "boolean type was misbehaving for some reason. I will retry though, string didn't seem ideal to me either.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T18:05:10Z",
        "PR Comment": "yes, let's acknowledge them",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T18:19:31Z",
        "PR Comment": "So we need to make sure it gets automatically picked up when people download and use the code. So if it is part of the code, it needs should be picked up by `setup.py`, or it is a file URL, then you can consider downloading it somewhere.\n\nIt could be your decision on where it will be placed. ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T23:20:30Z",
        "PR Comment": "> 1. I guess we want to lint the project with `mypy`, `pylint` and `black` to make it more standard before we merge this.\n> 2. We will also need to set up test cases (and write test cases), like [here](https://github.com/asyml/forte/blob/master/.github/workflows/main.yml#L97).\n\nSure. I'll update the workflow with more linting tools.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T11:33:13Z",
        "PR Comment": "@hunterhector Still unable to add @tanyuqian as a reviewer. It says I can add **atmost** 1 reviewer.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T17:30:53Z",
        "PR Comment": "> @hunterhector Still unable to add @tanyuqian as a reviewer. It says I can add **almost** 1 reviewer.\n\nAdd bowen in the future. I will get notified for the PRs anyway",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-04T05:00:53Z",
        "PR Comment": "> 1. I guess we want to lint the project with `mypy`, `pylint` and `black` to make it more standard before we merge this.\n> 2. We will also need to set up test cases (and write test cases), like [here](https://github.com/asyml/forte/blob/master/.github/workflows/main.yml#L97).\n\nPytest and documentation has been updated. \n@Piyush13y Could you write unit tests for the components you developed? ([mimic_reader](https://github.com/asyml/forte-medical/blob/master/tests/readers/mimic3_note_reader_test.py#L12) and this negation analyzer)",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-04T12:06:41Z",
        "PR Comment": "@tanyuqian I had already added test cases for `NegationContextAnalyzer`, and now I have added a test case for Mimic3 reader as well. However, there seems to be something broken with respect to pytest in the workflow I think, which gives errors in the CI pipeline. I am able to run these tests successfully on my local machine.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-06T22:02:25Z",
        "PR Comment": "> @tanyuqian I had already added test cases for `NegationContextAnalyzer`, and now I have added a test case for Mimic3 reader as well. However, there seems to be something broken with respect to pytest in the workflow I think, which gives errors in the CI pipeline. I am able to run these tests successfully on my local machine.\n\n@Piyush13y Could you double-check it is working from your end? like re-install forte/forte-wrapper/forte-medical and re-run? I got the same error message as the workflow here https://github.com/asyml/forte-medical/runs/5435388860?check_suite_focus=true#step:13:23 \n(```ImportError: cannot import name 'MedicalEntityMention' from 'ftx.medical' (/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/ftx/medical/__init__.py)```)",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-06T22:10:32Z",
        "PR Comment": "@tanyuqian There were 2 issues raised in the CI pipeline initially, one was due to a stray test folder which, on deletion, fixed that problem.\nThe other one related to import statement is because [this](https://github.com/asyml/forte-wrappers/pull/96) Forte-wrapper's PR is yet to be merged, which completes the namespace consistency story. I have run these tests with that PR and it works fine. There's some other issue which is failing a test on that PR which has blocked its merge for now. @hunterhector mentioned someone will be working on that but might take some time. ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:05:09Z",
        "PR Comment": "1. shouldn't use camel case for argument/variables `singlePack`.\n2. It is indeed weird to use `True` as string, why not using bool?\n\n",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:06:47Z",
        "PR Comment": "maybe use a text reader and load a sample file from disk?",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:07:04Z",
        "PR Comment": "no camel case",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:12:44Z",
        "PR Comment": "2022",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:35:25Z",
        "PR Comment": "The variable name `singlePack` is a bit weird since it is controlling the reader source.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:36:00Z",
        "PR Comment": "no camel case or we simply inline the configs here.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:37:46Z",
        "PR Comment": "shall we provide these negex triggers as part of the repo? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:39:49Z",
        "PR Comment": "A question, did we adopt the code from Ctakes? If so, we probably want to make a reference here.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:40:58Z",
        "PR Comment": "I find that the processor also [expects `Sentence`](https://github.com/asyml/forte-medical/pull/7/files#diff-ca80a2b79a235631494ffd7a9f32b1291e606dc773cfe08e1a3176f6264d0d68R111).",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T22:41:39Z",
        "PR Comment": "one thing we could do is that we provide a default rule set, and let the users provide theirs if they know how to",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:41:34Z",
        "PR Comment": "Not from Ctakes, that uses Finite State Machines to implement Negex. Instead, we adopted it from [here.](https://github.com/chapmanbe/negex) I can add a reference to this repo in our code?",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:43:29Z",
        "PR Comment": "I was initially planning to do that. Something like this:\n\n```\n{\n\"negation_rules_path\": \"\",\n\"pre_negation_rules\": [],\n\"post_negation_rules\": []\n}\n```\n\nWe basically add all `pre_negation_rules` and `post_negaion_rules` to the rules picked from the sample rules file, which will be shipped with the repo. \nHowever, I thought I will add these improvements after this gets pushed.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:44:34Z",
        "PR Comment": "Yes, I think we should ship it with the repo, as default set of rules for the processor. I think we should put this file to a different folder if that's the case, but not sure where. Maybe within /processors/ instead of /examples/mimic_iii/ ? ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-01T05:48:32Z",
        "PR Comment": "boolean type was misbehaving for some reason. I will retry though, string didn't seem ideal to me either.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T18:05:10Z",
        "PR Comment": "yes, let's acknowledge them",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T18:19:31Z",
        "PR Comment": "So we need to make sure it gets automatically picked up when people download and use the code. So if it is part of the code, it needs should be picked up by `setup.py`, or it is a file URL, then you can consider downloading it somewhere.\n\nIt could be your decision on where it will be placed. ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-28T23:20:30Z",
        "PR Comment": "> 1. I guess we want to lint the project with `mypy`, `pylint` and `black` to make it more standard before we merge this.\n> 2. We will also need to set up test cases (and write test cases), like [here](https://github.com/asyml/forte/blob/master/.github/workflows/main.yml#L97).\n\nSure. I'll update the workflow with more linting tools.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T11:33:13Z",
        "PR Comment": "@hunterhector Still unable to add @tanyuqian as a reviewer. It says I can add **atmost** 1 reviewer.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-02T17:30:53Z",
        "PR Comment": "> @hunterhector Still unable to add @tanyuqian as a reviewer. It says I can add **almost** 1 reviewer.\n\nAdd bowen in the future. I will get notified for the PRs anyway",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-04T05:00:53Z",
        "PR Comment": "> 1. I guess we want to lint the project with `mypy`, `pylint` and `black` to make it more standard before we merge this.\n> 2. We will also need to set up test cases (and write test cases), like [here](https://github.com/asyml/forte/blob/master/.github/workflows/main.yml#L97).\n\nPytest and documentation has been updated. \n@Piyush13y Could you write unit tests for the components you developed? ([mimic_reader](https://github.com/asyml/forte-medical/blob/master/tests/readers/mimic3_note_reader_test.py#L12) and this negation analyzer)",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-04T12:06:41Z",
        "PR Comment": "@tanyuqian I had already added test cases for `NegationContextAnalyzer`, and now I have added a test case for Mimic3 reader as well. However, there seems to be something broken with respect to pytest in the workflow I think, which gives errors in the CI pipeline. I am able to run these tests successfully on my local machine.",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-06T22:02:25Z",
        "PR Comment": "> @tanyuqian I had already added test cases for `NegationContextAnalyzer`, and now I have added a test case for Mimic3 reader as well. However, there seems to be something broken with respect to pytest in the workflow I think, which gives errors in the CI pipeline. I am able to run these tests successfully on my local machine.\n\n@Piyush13y Could you double-check it is working from your end? like re-install forte/forte-wrapper/forte-medical and re-run? I got the same error message as the workflow here https://github.com/asyml/forte-medical/runs/5435388860?check_suite_focus=true#step:13:23 \n(```ImportError: cannot import name 'MedicalEntityMention' from 'ftx.medical' (/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/ftx/medical/__init__.py)```)",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-03-06T22:10:32Z",
        "PR Comment": "@tanyuqian There were 2 issues raised in the CI pipeline initially, one was due to a stray test folder which, on deletion, fixed that problem.\nThe other one related to import statement is because [this](https://github.com/asyml/forte-wrappers/pull/96) Forte-wrapper's PR is yet to be merged, which completes the namespace consistency story. I have run these tests with that PR and it works fine. There's some other issue which is failing a test on that PR which has blocked its merge for now. @hunterhector mentioned someone will be working on that but might take some time. ",
        "PR/Issue Number": "7"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "examples/mimic_iii/medical_pipeline.py",
        "Creation Date": "2022-02-19T20:50:10Z",
        "PR Comment": "Thanks for the fix. One thing missing is how the `setup.py` work (https://packaging.python.org/en/latest/guides/packaging-namespace-packages/#native-namespace-packages), we need to let it know that we use certain namespaces.\n\nBtw, to enforce this convention and make everything consistent in the future, we probably should also adopt the same convention in Forte main repo (this should be an issue on Forte):\n\nthis includes several small steps:\n1. update https://github.com/asyml/forte/blob/master/forte/ontology_specs/medical.json which in turn that package path, to make them not in the \"ftx\" package directly. Need to also update the usage of this (in the examples you try before, but we should search for the usage more carefully).\n2. after generating the code, we remove the init file here: https://github.com/asyml/forte/tree/master/ftx \n3. update setup.py according to this: https://packaging.python.org/en/latest/guides/packaging-namespace-packages/#native-namespace-packages\n    - `packages=find_namespace_packages(include=['ftx.*'])`\n\nThe reason is that namespace packaging requires us to use the same convention everywhere, otherwise weird things would happen during import.\n\n",
        "PR/Issue Number": "4"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-12-29T12:15:07Z",
        "PR Comment": "we should have a check for self.configs.pipe_name == \"hyponym_detector\" too.\nand through an error message if its not from the options in config.",
        "PR/Issue Number": "84"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2023-01-12T21:35:29Z",
        "PR Comment": "Shouldn't it be the other way around, like it was before these changes?",
        "PR/Issue Number": "84"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2023-01-13T08:03:50Z",
        "PR Comment": "general is hypernym and specific is hyponym\n![image](https://user-images.githubusercontent.com/16308156/212269147-8dff8ad5-ed80-4072-a432-c09c08297c55.png)\n",
        "PR/Issue Number": "84"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2023-01-13T17:20:46Z",
        "PR Comment": "That's fine, however, what I meant to say was \"Keystone plant species\" is the general concept while \"fig trees\" is the specific concept and not the other way around. You can refer https://pythonlang.dev/repo/allenai-scispacy/ to check the ordering on concepts in the returned tuple in Hearst patterns. item[1] should be the general concept and item[2] should be the specific concept, and we should label accordingly. Currently, we are doing the exact opposite I think. Let me know if I have misunderstood.",
        "PR/Issue Number": "84"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-12-26T09:05:25Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/84?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#84](https://codecov.io/gh/asyml/ForteHealth/pull/84?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (c5765d5) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/3963a7b8e6c3ed23ee5123c65a9030e33ab1b7d4?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (3963a7b) will **decrease** coverage by `0.21%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #84      +/-   ##\n==========================================\n- Coverage   88.25%   88.05%   -0.21%     \n==========================================\n  Files          14       14              \n  Lines         758      745      -13     \n==========================================\n- Hits          669      656      -13     \n  Misses         89       89              \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/84?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/84?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.33% <100.00%> (-0.30%)` | :arrow_down: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "84"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2023-01-20T18:05:11Z",
        "PR Comment": "I was wondering how the scispacy test case passed when you had swapped the general and specific concepts in the backend initially (with the 1st commit). Could you check that out, since if the tests are running properly, it should have failed when we swapped both the concepts, right?",
        "PR/Issue Number": "84"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-12-29T12:15:07Z",
        "PR Comment": "we should have a check for self.configs.pipe_name == \"hyponym_detector\" too.\nand through an error message if its not from the options in config.",
        "PR/Issue Number": "84"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2023-01-12T21:35:29Z",
        "PR Comment": "Shouldn't it be the other way around, like it was before these changes?",
        "PR/Issue Number": "84"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2023-01-13T08:03:50Z",
        "PR Comment": "general is hypernym and specific is hyponym\n![image](https://user-images.githubusercontent.com/16308156/212269147-8dff8ad5-ed80-4072-a432-c09c08297c55.png)\n",
        "PR/Issue Number": "84"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2023-01-13T17:20:46Z",
        "PR Comment": "That's fine, however, what I meant to say was \"Keystone plant species\" is the general concept while \"fig trees\" is the specific concept and not the other way around. You can refer https://pythonlang.dev/repo/allenai-scispacy/ to check the ordering on concepts in the returned tuple in Hearst patterns. item[1] should be the general concept and item[2] should be the specific concept, and we should label accordingly. Currently, we are doing the exact opposite I think. Let me know if I have misunderstood.",
        "PR/Issue Number": "84"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-12-26T09:05:25Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/84?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#84](https://codecov.io/gh/asyml/ForteHealth/pull/84?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (c5765d5) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/3963a7b8e6c3ed23ee5123c65a9030e33ab1b7d4?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (3963a7b) will **decrease** coverage by `0.21%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #84      +/-   ##\n==========================================\n- Coverage   88.25%   88.05%   -0.21%     \n==========================================\n  Files          14       14              \n  Lines         758      745      -13     \n==========================================\n- Hits          669      656      -13     \n  Misses         89       89              \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/84?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/84?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.33% <100.00%> (-0.30%)` | :arrow_down: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "84"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2023-01-20T18:05:11Z",
        "PR Comment": "I was wondering how the scispacy test case passed when you had swapped the general and specific concepts in the backend initially (with the 1st commit). Could you check that out, since if the tests are running properly, it should have failed when we swapped both the concepts, right?",
        "PR/Issue Number": "84"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-12-29T12:15:07Z",
        "PR Comment": "we should have a check for self.configs.pipe_name == \"hyponym_detector\" too.\nand through an error message if its not from the options in config.",
        "PR/Issue Number": "84"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2023-01-12T21:35:29Z",
        "PR Comment": "Shouldn't it be the other way around, like it was before these changes?",
        "PR/Issue Number": "84"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2023-01-13T08:03:50Z",
        "PR Comment": "general is hypernym and specific is hyponym\n![image](https://user-images.githubusercontent.com/16308156/212269147-8dff8ad5-ed80-4072-a432-c09c08297c55.png)\n",
        "PR/Issue Number": "84"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2023-01-13T17:20:46Z",
        "PR Comment": "That's fine, however, what I meant to say was \"Keystone plant species\" is the general concept while \"fig trees\" is the specific concept and not the other way around. You can refer https://pythonlang.dev/repo/allenai-scispacy/ to check the ordering on concepts in the returned tuple in Hearst patterns. item[1] should be the general concept and item[2] should be the specific concept, and we should label accordingly. Currently, we are doing the exact opposite I think. Let me know if I have misunderstood.",
        "PR/Issue Number": "84"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-12-26T09:05:25Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/84?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#84](https://codecov.io/gh/asyml/ForteHealth/pull/84?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (c5765d5) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/3963a7b8e6c3ed23ee5123c65a9030e33ab1b7d4?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (3963a7b) will **decrease** coverage by `0.21%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #84      +/-   ##\n==========================================\n- Coverage   88.25%   88.05%   -0.21%     \n==========================================\n  Files          14       14              \n  Lines         758      745      -13     \n==========================================\n- Hits          669      656      -13     \n  Misses         89       89              \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/84?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/84?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.33% <100.00%> (-0.30%)` | :arrow_down: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "84"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2023-01-20T18:05:11Z",
        "PR Comment": "I was wondering how the scispacy test case passed when you had swapped the general and specific concepts in the backend initially (with the 1st commit). Could you check that out, since if the tests are running properly, it should have failed when we swapped both the concepts, right?",
        "PR/Issue Number": "84"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-12-05T11:39:54Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/77?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#77](https://codecov.io/gh/asyml/ForteHealth/pull/77?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (d40e783) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/5ba59890ce72c826c3c7e4930da4f20f2d53d0e1?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (5ba5989) will **increase** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #77      +/-   ##\n==========================================\n+ Coverage   88.24%   88.25%   +0.01%     \n==========================================\n  Files          14       14              \n  Lines         757      758       +1     \n==========================================\n+ Hits          668      669       +1     \n  Misses         89       89              \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/77?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/77/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.63% <\u00f8> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/77/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "77"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-12-05T11:39:54Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/77?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#77](https://codecov.io/gh/asyml/ForteHealth/pull/77?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (d40e783) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/5ba59890ce72c826c3c7e4930da4f20f2d53d0e1?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (5ba5989) will **increase** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #77      +/-   ##\n==========================================\n+ Coverage   88.24%   88.25%   +0.01%     \n==========================================\n  Files          14       14              \n  Lines         757      758       +1     \n==========================================\n+ Hits          668      669       +1     \n  Misses         89       89              \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/77?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/77/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.63% <\u00f8> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/77/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "77"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-11-27T06:40:15Z",
        "PR Comment": "For consistency \n```suggestion\n            self.assertEqual(detected.hyponym_link, expected_value[\"hyponym_link\"])\n```",
        "PR/Issue Number": "75"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-11-27T06:45:21Z",
        "PR Comment": "Just a minor suggestion, upto if you want to make that change. I think we can skip these parenthesis (here and in the return statement), since it just complicates the readability in this case, and doesn't add to functionality. \nAlso, maybe we can do the index finding more elegantly. Since, in a scenario with multiple hyponyms for a bigger text chunk, we traverse the whole text chunk for each detected hyponym, which may not be performant. We can do that in the next iteration/PR too. ",
        "PR/Issue Number": "75"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-11-28T10:08:55Z",
        "PR Comment": "this is done by black actually",
        "PR/Issue Number": "75"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-11-24T12:15:58Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/75?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#75](https://codecov.io/gh/asyml/ForteHealth/pull/75?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (f911bd1) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/c787ed64424cb22d0a33b0df44e5e9471604e5c0?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (c787ed6) will **increase** coverage by `0.28%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #75      +/-   ##\n==========================================\n+ Coverage   87.95%   88.24%   +0.28%     \n==========================================\n  Files          14       14              \n  Lines         739      757      +18     \n==========================================\n+ Hits          650      668      +18     \n  Misses         89       89              \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/75?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/75/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.63% <100.00%> (+0.38%)` | :arrow_up: |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/75/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "75"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-11-27T06:40:15Z",
        "PR Comment": "For consistency \n```suggestion\n            self.assertEqual(detected.hyponym_link, expected_value[\"hyponym_link\"])\n```",
        "PR/Issue Number": "75"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-11-27T06:45:21Z",
        "PR Comment": "Just a minor suggestion, upto if you want to make that change. I think we can skip these parenthesis (here and in the return statement), since it just complicates the readability in this case, and doesn't add to functionality. \nAlso, maybe we can do the index finding more elegantly. Since, in a scenario with multiple hyponyms for a bigger text chunk, we traverse the whole text chunk for each detected hyponym, which may not be performant. We can do that in the next iteration/PR too. ",
        "PR/Issue Number": "75"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-11-28T10:08:55Z",
        "PR Comment": "this is done by black actually",
        "PR/Issue Number": "75"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-11-24T12:15:58Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/75?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#75](https://codecov.io/gh/asyml/ForteHealth/pull/75?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (f911bd1) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/c787ed64424cb22d0a33b0df44e5e9471604e5c0?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (c787ed6) will **increase** coverage by `0.28%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #75      +/-   ##\n==========================================\n+ Coverage   87.95%   88.24%   +0.28%     \n==========================================\n  Files          14       14              \n  Lines         739      757      +18     \n==========================================\n+ Hits          650      668      +18     \n  Misses         89       89              \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/75?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/75/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.63% <100.00%> (+0.38%)` | :arrow_up: |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/75/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "75"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-11-27T06:40:15Z",
        "PR Comment": "For consistency \n```suggestion\n            self.assertEqual(detected.hyponym_link, expected_value[\"hyponym_link\"])\n```",
        "PR/Issue Number": "75"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-11-27T06:45:21Z",
        "PR Comment": "Just a minor suggestion, upto if you want to make that change. I think we can skip these parenthesis (here and in the return statement), since it just complicates the readability in this case, and doesn't add to functionality. \nAlso, maybe we can do the index finding more elegantly. Since, in a scenario with multiple hyponyms for a bigger text chunk, we traverse the whole text chunk for each detected hyponym, which may not be performant. We can do that in the next iteration/PR too. ",
        "PR/Issue Number": "75"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-11-28T10:08:55Z",
        "PR Comment": "this is done by black actually",
        "PR/Issue Number": "75"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-11-24T12:15:58Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/75?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#75](https://codecov.io/gh/asyml/ForteHealth/pull/75?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (f911bd1) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/c787ed64424cb22d0a33b0df44e5e9471604e5c0?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (c787ed6) will **increase** coverage by `0.28%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #75      +/-   ##\n==========================================\n+ Coverage   87.95%   88.24%   +0.28%     \n==========================================\n  Files          14       14              \n  Lines         739      757      +18     \n==========================================\n+ Hits          650      668      +18     \n  Misses         89       89              \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/75?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/75/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.63% <100.00%> (+0.38%)` | :arrow_up: |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/75/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "75"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:25:01Z",
        "PR Comment": "I don't think the class variables (ParentType, ChildType) need to be added here. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:27:41Z",
        "PR Comment": "`SciSpacy` is also wrapped here: https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L405, can we have the implementation in one place not two?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:30:34Z",
        "PR Comment": "This `set_up` is a bit hard-coded to me. Can we do \n\n````\n{\n   spacy_pipe_config: {\n       {\n            \"pipe_name\": \"abbreviation_detector\",\n            \"pipe_configs\": {\n                  // Based on the content here, decide what pipeline to run.\n             }\n       }  \n   }\n}\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:18Z",
        "PR Comment": "icd?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:31:27Z",
        "PR Comment": "the key definitions are all wrong",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:18Z",
        "PR Comment": "expected type is not `ft.onto.base_ontology.Document`, but should be `self.configs.entry_type`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:32:44Z",
        "PR Comment": "where did we expect any `Annotation`?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:33:58Z",
        "PR Comment": "name is wrong, `Hyponym`.\n\nWe also have `Phrase`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T19:34:32Z",
        "PR Comment": "Is this a manual change of ontology class? We should avoid this and change through json config.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:28:50Z",
        "PR Comment": "Fixed this comment issue caused by copy-paste. Changed to SciSpacyProcessor related comments.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:29:28Z",
        "PR Comment": "The ParentType and ChildType is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-05T00:33:57Z",
        "PR Comment": "No this is restored to the current version checked into master to be able to compile correctly so the change to Phrase is correct and will merge with no problem (now after changed a comment line 2 it is identical with master) ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:23:14Z",
        "PR Comment": "The key definitions in comments is fixed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:24:41Z",
        "PR Comment": "This line is now removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T12:49:40Z",
        "PR Comment": "Ok changed to upper case. Also added Phrase (parent and child)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:01:01Z",
        "PR Comment": "Ok this line is changed to : self.configs.entry_type: set(),   instead",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T13:09:46Z",
        "PR Comment": "Previously we did have a less-hard-coded version of this trying with coding with Dynamic configurations but unfortunately it does not work as the \"self.extractor.add_pipe\" require 2 distinctively different  hard-coded form for sciSpacy, and can not be united in one form (will creates all kinds of weird problems elsewhere) so this although not ideal looking, it is the best/most robust way to implement . ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T14:29:21Z",
        "PR Comment": "Suggest turning this into a new bug/new feature as this will be more complicated to implement and need more considerations other than the original bug/requirements.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:46:11Z",
        "PR Comment": "These should be done in the processor: the `initialize` method. Or these two lines are probably not used.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:49:54Z",
        "PR Comment": "Consider used utilities [here](https://github.com/asyml/forte/blob/master/forte/utils/utils.py#L80)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:50:24Z",
        "PR Comment": "We should remove `print` statement in the final PR.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:52:11Z",
        "PR Comment": "We should write the possible options here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:16Z",
        "PR Comment": "We didn't use the attribute name `classification` in `process` (this should be removed)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T15:54:39Z",
        "PR Comment": "This should be removed, we don't have anything related to `mutli_class`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-12T17:39:00Z",
        "PR Comment": "This is also not used in the system, maybe you can follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235) for GPU setups.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T10:57:31Z",
        "PR Comment": "Ok these 2 lines are now merged to initialized methods and removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:25:59Z",
        "PR Comment": "Unfortunately substitute line 77 and 78 to using \"get_class\" in forte utils like the following: \n        path_str, module_str = self.configs.entry_type.rsplit(\".\", 1)\n        # mod = importlib.import_module(path_str)\n        # entry = getattr(mod, module_str)\n        entry = get_class(class_name=module_str, module_paths=path_str)\nFailed,  error message is:\n  File \"/Users/../fortex/health/processors/scispacy_processor.py\", line 79, in _process\n    entry = get_class(class_name=module_str, module_paths=path_str)\n  File \"/Users/.../Documents/GitHub/forte-medical/venv/lib/python3.6/site-packages/forte/utils/utils.py\", line 107, in get_class\n    \"Class not found in {}: {}\".format(module_paths, class_name)\nValueError: Class not found in ft.onto.base_ontology: Document\n\nWhile using the original code of importlib.import_module can load successfully, so currently keeping the old code until late this get fixed somewhere about get_class",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:28:43Z",
        "PR Comment": "print removed",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:34:39Z",
        "PR Comment": "added the 2 options for pipe_name. model_name is more complicated and out of scope for this current one so can not list in detail, just default to en_core_sci_sm ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:35:35Z",
        "PR Comment": "ok removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:36:20Z",
        "PR Comment": "ok this line also removed.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:39:53Z",
        "PR Comment": "removed and tested ok.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T11:42:31Z",
        "PR Comment": "The 2 lines are merged into initialize method and removed here.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:52:05Z",
        "PR Comment": "What's the reason of `model_name` being to complicated? If we support models from scispacy we can add URL to their documentation",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:53:25Z",
        "PR Comment": "gpu is not enabled now, can we follow [here](https://github.com/asyml/forte-wrappers/blob/main/src/spacy/fortex/spacy/spacy_processors.py#L235)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:54:58Z",
        "PR Comment": "documentation too brief and incorrect. \n1. Please make it clear for users are not familiar with our jargons. What is an entry? \n2. The purpose of this processor is also not `classification`.\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-13T16:56:21Z",
        "PR Comment": "The following lines are problematic, we don't even have `self.configs.attribute_name`",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:12:36Z",
        "PR Comment": "Yes URL hyper link to available model names are now added accordingly in the new commit",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:13:10Z",
        "PR Comment": "Yes added the 3 parameters for gpu in the new code.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-19T13:14:02Z",
        "PR Comment": "Corrected to let user to use the document type in the new comment.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-07-28T16:57:51Z",
        "PR Comment": "Ok this is now fixed (after referencing to style/example of negation_context_analyzer) and also \"Phrase\" is added as suggested.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-19T19:05:58Z",
        "PR Comment": "we can't just test one or two test cases, let's use a matrix strategy to test different processors separately.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:10Z",
        "PR Comment": "we should remove these unused comments",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:35:59Z",
        "PR Comment": "don't disable this, remove the unused-import",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T16:39:29Z",
        "PR Comment": "the content of the record should depend on the config, when the pipeline is `abbreviation_detector` we have `Abbreviation`, otherwise we have the other two types.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:08Z",
        "PR Comment": "We can add an elif instead of else, so we don't enter this condition incorrectlly in case of typos and future pipe_names. Also, lets add comments on new lines instead of just appending to code on the same line, just for better readability. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:45:52Z",
        "PR Comment": "If its an unused comment, we can remove it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:01Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:11Z",
        "PR Comment": "Unused comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-24T22:50:28Z",
        "PR Comment": "Stray comment",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-25T08:37:18Z",
        "PR Comment": "I found out that, James actually used this because \"HyponymDetector\" and \"AbbreviationDetector\" are used by pipelines in test otherwise same error as earlier. \n\n```\nconfig = {\n            \"entry_type\": \"ft.onto.base_ontology.Document\",\n            \"model_name\": \"en_core_sci_sm\",\n            \"pipe_name\": \"abbreviation_detector\",\n        }\n```",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-01T07:58:16Z",
        "PR Comment": "@J007X Did you discuss about this with Hector ?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T14:26:35Z",
        "PR Comment": "I believe these dependencies are needed when using the newly created processor. So we shouldn't name this `test_scispacy`. In addition, we should have some documentation (such as in Readme.md), to talk about how to setup the environment for certain processors if you want to use it.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-14T04:36:04Z",
        "PR Comment": "Please remove all comments and extra import statements (if any). Also, add the child and parent attributes to the `hyponym` object, you can keep the PR as draft until its ready for review. Let me know once its ready:)",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-06-29T04:59:03Z",
        "PR Comment": "There are still some extra comments in the code, make sure you remove those. Also, the build is still failing.",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-08-18T08:54:18Z",
        "PR Comment": "# [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#36](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (97d0725) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/867b854391973b9cf1c1a1fe67fbfb8ff8566059?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (867b854) will **increase** coverage by `1.63%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #36      +/-   ##\n==========================================\n+ Coverage   84.17%   85.81%   +1.63%     \n==========================================\n  Files           9       10       +1     \n  Lines         512      726     +214     \n==========================================\n+ Hits          431      623     +192     \n- Misses         81      103      +22     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/36?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [fortex/health/processors/scispacy\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvci5weQ==) | `98.24% <98.24%> (\u00f8)` | |\n| [...ortex/health/processors/scispacy\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3NjaXNwYWN5X3Byb2Nlc3Nvcl90ZXN0LnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [ftx/medical/clinical\\_ontology.py](https://codecov.io/gh/asyml/ForteHealth/pull/36/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-ZnR4L21lZGljYWwvY2xpbmljYWxfb250b2xvZ3kucHk=) | `73.21% <0.00%> (+5.23%)` | :arrow_up: |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-08T09:31:12Z",
        "PR Comment": "@hunterhector can you review this pull request?",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/scispacy_processor.py",
        "Creation Date": "2022-09-09T01:45:58Z",
        "PR Comment": "> @Piyush13y any more suggestions from you\n\nI had added a few comments a couple weeks back, other than that I feel the setup file could be a little more polished but I think you have already added a comment pertaining to that. ",
        "PR/Issue Number": "36"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/temporal_mention_normalizing_processor.py",
        "Creation Date": "2023-03-02T08:50:45Z",
        "PR Comment": "Format issue",
        "PR/Issue Number": "91"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/temporal_mention_normalizing_processor.py",
        "Creation Date": "2023-03-02T08:51:21Z",
        "PR Comment": "This just adds 2 tests for the processor, while I see 3 different test files for this processor. Are we missing on here?",
        "PR/Issue Number": "91"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/temporal_mention_normalizing_processor.py",
        "Creation Date": "2023-03-02T08:53:55Z",
        "PR Comment": "Should be \"Tagging and Normalising Processor\"* ?",
        "PR/Issue Number": "91"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/temporal_mention_normalizing_processor.py",
        "Creation Date": "2023-03-02T08:57:15Z",
        "PR Comment": "Minor suggestion: The entry type is a document and we are processing a list of sentences here, we can maybe make it consistent like the other test cases for this processor by joining the sentences. ",
        "PR/Issue Number": "91"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/temporal_mention_normalizing_processor.py",
        "Creation Date": "2023-03-08T09:37:08Z",
        "PR Comment": "this follow the same format as scispacy and forte-wrapper, I have fixed xray_image_processor format",
        "PR/Issue Number": "91"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/temporal_mention_normalizing_processor.py",
        "Creation Date": "2023-03-08T09:40:26Z",
        "PR Comment": "Done",
        "PR/Issue Number": "91"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/temporal_mention_normalizing_processor.py",
        "Creation Date": "2023-03-08T09:40:44Z",
        "PR Comment": "Updated with more description as it is using two processors",
        "PR/Issue Number": "91"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/temporal_mention_normalizing_processor.py",
        "Creation Date": "2023-03-08T11:34:46Z",
        "PR Comment": "Done",
        "PR/Issue Number": "91"
    },
    {
        "repo_url": "github.com/asyml/ForteHealth",
        "filepath": "fortex/health/processors/temporal_mention_normalizing_processor.py",
        "Creation Date": "2023-02-21T11:13:50Z",
        "PR Comment": "## [Codecov](https://codecov.io/gh/asyml/ForteHealth/pull/91?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) Report\n> Merging [#91](https://codecov.io/gh/asyml/ForteHealth/pull/91?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (b3b82a7) into [master](https://codecov.io/gh/asyml/ForteHealth/commit/a0615315c1186d51be8118f3846d37f988465716?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) (a061531) will **increase** coverage by `2.42%`.\n> The diff coverage is `98.19%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master      #91      +/-   ##\n==========================================\n+ Coverage   87.85%   90.27%   +2.42%     \n==========================================\n  Files          14       19       +5     \n  Lines         749      915     +166     \n==========================================\n+ Hits          658      826     +168     \n+ Misses         91       89       -2     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/asyml/ForteHealth/pull/91?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml) | Coverage \u0394 | |\n|---|---|---|\n| [...h/processors/temporal\\_mention\\_tagging\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/91?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3RlbXBvcmFsX21lbnRpb25fdGFnZ2luZ19wcm9jZXNzb3IucHk=) | `95.45% <95.45%> (\u00f8)` | |\n| [...ocessors/temporal\\_mention\\_normalizing\\_processor.py](https://codecov.io/gh/asyml/ForteHealth/pull/91?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-Zm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3RlbXBvcmFsX21lbnRpb25fbm9ybWFsaXppbmdfcHJvY2Vzc29yLnB5) | `97.95% <97.95%> (\u00f8)` | |\n| [...ors/temporal\\_mention\\_normalizing\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/91?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3RlbXBvcmFsX21lbnRpb25fbm9ybWFsaXppbmdfcHJvY2Vzc29yX3Rlc3QucHk=) | `100.00% <100.00%> (\u00f8)` | |\n| [...alth/processors/temporal\\_mention\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/91?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3RlbXBvcmFsX21lbnRpb25fcHJvY2Vzc29yX3Rlc3QucHk=) | `100.00% <100.00%> (\u00f8)` | |\n| [...cessors/temporal\\_mention\\_tagging\\_processor\\_test.py](https://codecov.io/gh/asyml/ForteHealth/pull/91?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml#diff-dGVzdHMvZm9ydGV4L2hlYWx0aC9wcm9jZXNzb3JzL3RlbXBvcmFsX21lbnRpb25fdGFnZ2luZ19wcm9jZXNzb3JfdGVzdC5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n\n... and [1 file with indirect coverage changes](https://codecov.io/gh/asyml/ForteHealth/pull/91/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=asyml)\n",
        "PR/Issue Number": "91"
    },
    {
        "repo_url": "github.com/wkvong/multimodal-baby",
        "filepath": "multimodal/multimodal_lit.py",
        "Creation Date": "2022-01-11T21:20:05Z",
        "PR Comment": "add drop_last for validation data loader too (for contrastive part only)",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/wkvong/multimodal-baby",
        "filepath": "multimodal/multimodal_lit.py",
        "Creation Date": "2022-01-11T21:20:05Z",
        "PR Comment": "add drop_last for validation data loader too (for contrastive part only)",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/wkvong/multimodal-baby",
        "filepath": "multimodal/multimodal_lit.py",
        "Creation Date": "2022-01-11T21:20:05Z",
        "PR Comment": "add drop_last for validation data loader too (for contrastive part only)",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/wkvong/multimodal-baby",
        "filepath": "multimodal/multimodal_lit.py",
        "Creation Date": "2022-01-11T21:20:05Z",
        "PR Comment": "add drop_last for validation data loader too (for contrastive part only)",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/wkvong/multimodal-baby",
        "filepath": "multimodal/multimodal_lit.py",
        "Creation Date": "2022-01-11T21:20:05Z",
        "PR Comment": "add drop_last for validation data loader too (for contrastive part only)",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/wkvong/multimodal-baby",
        "filepath": "multimodal/multimodal_lit.py",
        "Creation Date": "2022-01-11T21:20:05Z",
        "PR Comment": "add drop_last for validation data loader too (for contrastive part only)",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/wkvong/multimodal-baby",
        "filepath": "multimodal/multimodal_lit.py",
        "Creation Date": "2022-01-11T21:20:05Z",
        "PR Comment": "add drop_last for validation data loader too (for contrastive part only)",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/wkvong/multimodal-baby",
        "filepath": "multimodal/multimodal_lit.py",
        "Creation Date": "2022-01-11T21:20:05Z",
        "PR Comment": "add drop_last for validation data loader too (for contrastive part only)",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/wkvong/multimodal-baby",
        "filepath": "multimodal/multimodal_lit.py",
        "Creation Date": "2022-01-11T21:20:05Z",
        "PR Comment": "add drop_last for validation data loader too (for contrastive part only)",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/wkvong/multimodal-baby",
        "filepath": "multimodal/multimodal_lit.py",
        "Creation Date": "2022-01-11T21:20:05Z",
        "PR Comment": "add drop_last for validation data loader too (for contrastive part only)",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/wkvong/multimodal-baby",
        "filepath": "multimodal/multimodal_lit.py",
        "Creation Date": "2022-01-11T21:20:05Z",
        "PR Comment": "add drop_last for validation data loader too (for contrastive part only)",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/wkvong/multimodal-baby",
        "filepath": "multimodal/multimodal_lit.py",
        "Creation Date": "2022-01-11T21:20:05Z",
        "PR Comment": "add drop_last for validation data loader too (for contrastive part only)",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/wkvong/multimodal-baby",
        "filepath": "multimodal/multimodal_lit.py",
        "Creation Date": "2022-01-11T21:20:05Z",
        "PR Comment": "add drop_last for validation data loader too (for contrastive part only)",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/wkvong/multimodal-baby",
        "filepath": "multimodal/multimodal_lit.py",
        "Creation Date": "2022-01-11T21:20:05Z",
        "PR Comment": "add drop_last for validation data loader too (for contrastive part only)",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/wkvong/multimodal-baby",
        "filepath": "multimodal/multimodal_lit.py",
        "Creation Date": "2022-01-11T21:20:05Z",
        "PR Comment": "add drop_last for validation data loader too (for contrastive part only)",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/wkvong/multimodal-baby",
        "filepath": "multimodal/multimodal_lit.py",
        "Creation Date": "2022-01-11T21:20:05Z",
        "PR Comment": "add drop_last for validation data loader too (for contrastive part only)",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/wkvong/multimodal-baby",
        "filepath": "multimodal/multimodal_saycam_data_module.py",
        "Creation Date": "2022-01-11T21:20:05Z",
        "PR Comment": "add drop_last for validation data loader too (for contrastive part only)",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2021-05-04T16:52:12Z",
        "PR Comment": "Based on this comment it seems like we shouldn't actually write this fix :sob: https://github.com/explosion/spaCy/issues/7972#issuecomment-831072036\n\nIf they think the behavior is a bug, they will revert it, which means the \"fix\" is DO NOT USE spaCy 2.3.5",
        "PR/Issue Number": "91"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2021-05-04T17:16:53Z",
        "PR Comment": "Ok, I retract my previous comment. It seems like all the changes we made are reasonable bounds-checking and that this PR is an improvement regardless of spaCy behavior",
        "PR/Issue Number": "91"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-21T23:42:38Z",
        "PR Comment": "\"times before the spellcheck in vscode\" :grimacing: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-21T23:43:08Z",
        "PR Comment": "what does it do? :thinking: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-21T23:48:14Z",
        "PR Comment": "oh! :exploding_head: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-21T23:50:39Z",
        "PR Comment": ":heart: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-21T23:51:09Z",
        "PR Comment": "and return a list of spans (after recent changes)",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T00:07:20Z",
        "PR Comment": "liked the previous lines more :( ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T00:07:45Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T00:09:02Z",
        "PR Comment": ":exploding_head: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T00:09:42Z",
        "PR Comment": "oh glad it is moved here!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T00:11:44Z",
        "PR Comment": "I wonder ... we allow replacy to use any nlp, but we require en_core_web_sm in tests? :grimacing: \nIt is ok?",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T00:12:04Z",
        "PR Comment": ":grimacing: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T18:48:38Z",
        "PR Comment": "my editor complained, and I thought... yeah, you are right editor, inflector is not defined!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T18:49:45Z",
        "PR Comment": "I moved it out into `utils` but some projects using replacy call it via `ReplaceMatcher.validate_match_dict` so I wanted to attach it to the class here (which makes it a static method)",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T18:51:34Z",
        "PR Comment": "this wasn't a bug, it was just, I wanted to make the components have inputs and outputs, instead of using class properties",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T18:52:07Z",
        "PR Comment": "We should add tests with other languages!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T18:52:20Z",
        "PR Comment": "gotta have my dumb IDs",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-21T23:34:20Z",
        "PR Comment": "@melisa-qordoba Here is how this would be used for #80 \n\nhttps://github.com/Qordobacode/replaCy/issues/80#issuecomment-696434960",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T18:52:47Z",
        "PR Comment": "I installed this version of replaCy in a downstream project (Clarity) and the test suite still passes \ud83d\udcaa ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-21T23:42:38Z",
        "PR Comment": "\"times before the spellcheck in vscode\" :grimacing: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-21T23:43:08Z",
        "PR Comment": "what does it do? :thinking: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-21T23:48:14Z",
        "PR Comment": "oh! :exploding_head: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-21T23:50:39Z",
        "PR Comment": ":heart: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-21T23:51:09Z",
        "PR Comment": "and return a list of spans (after recent changes)",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T00:07:20Z",
        "PR Comment": "liked the previous lines more :( ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T00:07:45Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T00:09:02Z",
        "PR Comment": ":exploding_head: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T00:09:42Z",
        "PR Comment": "oh glad it is moved here!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T00:11:44Z",
        "PR Comment": "I wonder ... we allow replacy to use any nlp, but we require en_core_web_sm in tests? :grimacing: \nIt is ok?",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T00:12:04Z",
        "PR Comment": ":grimacing: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T18:48:38Z",
        "PR Comment": "my editor complained, and I thought... yeah, you are right editor, inflector is not defined!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T18:49:45Z",
        "PR Comment": "I moved it out into `utils` but some projects using replacy call it via `ReplaceMatcher.validate_match_dict` so I wanted to attach it to the class here (which makes it a static method)",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T18:51:34Z",
        "PR Comment": "this wasn't a bug, it was just, I wanted to make the components have inputs and outputs, instead of using class properties",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T18:52:07Z",
        "PR Comment": "We should add tests with other languages!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T18:52:20Z",
        "PR Comment": "gotta have my dumb IDs",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-21T23:34:20Z",
        "PR Comment": "@melisa-qordoba Here is how this would be used for #80 \n\nhttps://github.com/Qordobacode/replaCy/issues/80#issuecomment-696434960",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-09-22T18:52:47Z",
        "PR Comment": "I installed this version of replaCy in a downstream project (Clarity) and the test suite still passes \ud83d\udcaa ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-06-26T15:54:13Z",
        "PR Comment": "can we put this import in `get_default_lm`? If they don't want to use the LM, we shouldn't die if it isn't installed",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-06-26T17:14:03Z",
        "PR Comment": "These 2 parameters are so we can build the LM stuff,\n```python\nself.scorer = KenLMScorer(nlp=self.nlp, model=get_default_lm(testing=testing)) if use_lm else None\n```\n\nNow that I see that, it seems like directly passing in a `scorer` is cleaner (\"Dependency Injection\")",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-06-26T17:16:20Z",
        "PR Comment": "that is outdated, but same idea: can we put this in `load_lm` ?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-06-29T12:36:49Z",
        "PR Comment": "done :ok_hand: ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-06-29T12:37:30Z",
        "PR Comment": "Yes! Bonus: using lm is optional now.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-06-29T17:31:07Z",
        "PR Comment": ":yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-06-29T17:31:21Z",
        "PR Comment": "more :yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-06-29T17:32:00Z",
        "PR Comment": "```suggestion\nSpeed and accuracy benchmark (copied from the Lemminflect repo):\n```",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-06-29T17:32:31Z",
        "PR Comment": "even more :yay:!",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-06-29T22:43:08Z",
        "PR Comment": "Sorry, I don't really know if my code samples are right, since I don't know the type signatures\n\n`self.scorer` is `None` if there is no `KenLM`... Should we have the line that sets it be :\n\n```python\nself.scorer = (\n            KenLMScorer(nlp=self.nlp, model=load_lm(lm_path)) if lm_path else lambda x: 1\n        )\n```\n\ne.g. set it to the constant function?\n\nOr, if there is more than 1 suggestion, maybe `sort_suggestions` should have behavior that depends on `self.scorer`... meaning \"if it's None, either don't change the order, or randomize it\"",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-06-30T07:56:03Z",
        "PR Comment": "Can you reproduce the bug?\n\nSorting and scoring happens only if there is the scorer, otherwise this step is completely skipped:\nhttps://github.com/Qordobacode/replaCy/blob/c6eb41fba0b430c95b1feee5261807df716b3151/replacy/__init__.py#L392\n\nI think I disagree with randomizing suggestions since this doesn't look like a desired behavior before adding `kenlm` - what if users want to manually set the order of suggestions (because they feel some options will be better)?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-06-30T08:00:22Z",
        "PR Comment": "Take a look at `tests/test_suggestions.py`. This is the case when there is no `lm_path`.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-06-30T16:07:46Z",
        "PR Comment": "I see",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-06-26T22:36:51Z",
        "PR Comment": "I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/scorer.py",
        "Creation Date": "2020-06-29T12:39:03Z",
        "PR Comment": "> I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n> ![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n\nChanged :ok_hand: \nAlso did one update (after rethinking json schema). Backward compatible.\n\n`INFLECTION` is always a string. You can set `POS`, `TAG` or `ALL`. ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-11-30T16:07:18Z",
        "PR Comment": "why do we want this?",
        "PR/Issue Number": "117"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-11-30T19:38:34Z",
        "PR Comment": "ok from the ticket I guess the way things currently are set, we don't need to filter spans, because we already filter by longest. So making this change means that from now on, filtering needs to be done in the pipeline? ",
        "PR/Issue Number": "117"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-12-05T06:55:37Z",
        "PR Comment": "@sam-writer Yes\nmerging this code means: filtering will be on each service when needed through pipeline ",
        "PR/Issue Number": "117"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-18T22:06:18Z",
        "PR Comment": "these just don't need to be here\n\n```python\n>>> from replacy.db import load_json\n>>> import spacy\n>>> nlp = spacy.load(\"en_core_web_sm\")\n>>> match_dict = load_json('./replacy/resources/match_dict.json')\n>>> ematcher = ReplaceMatcher.with_espan(nlp, match_dict=match_dict)\n>>> spans = ematcher(\"I'll have to make due.\")\n>>> spans[0].comment\n'This is a bad match, it is here to demonstrate overlap behavior'\n```",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-18T21:59:54Z",
        "PR Comment": "Added a factory method so you don't have to import ESpan, not sure which I like more:\n\n```python\nfrom replacy import ReplaceMatcher\nfrom replacy.db import load_json\nimport spacy\nnlp = spacy.load(\"en_core_web_sm\")\nmatch_dict = load_json('./replacy/resources/match_dict.json')\nematcher = ReplaceMatcher.with_espan(nlp, match_dict=match_dict)\ns = ematcher(\"She extracts revenge.\")[0]\n```\n\nthoughts?",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-19T05:02:24Z",
        "PR Comment": "The match dict in your test doesn't represent the overlap problem we are trying to solve, this one does:\nSTILL WORKS with this one\n```\n{\n    \"make-1\": {\n        \"patterns\": [\n            {\n                \"LEMMA\": \"make\"\n            }\n        ],\n        \"suggestions\": [\n            [\n                {\n                    \"TEXT\": \"MAKE\"\n                }\n            ]\n        ],\n        \"subcategory\": \"MAKE_CAPS\"\n    },\n    \"make-2\": {\n        \"patterns\": [\n            {\n                \"LEMMA\": \"make\"\n            }\n        ],\n        \"suggestions\": [\n            [\n                {\n                    \"TEXT\": \"MaKe\"\n                }\n            ]\n        ],\n        \"subcategory\": \"MAKE_STYLE\",\n        \"comment\": \"This is a bad match, it is here to demonstrate overlap behavior\",\n    }\n}\n```\n\n\n> Tested this in the REPL:\n> \n> ```python\n> >>> from replacy import ESpan\n> >>> from replacy import ReplaceMatcher\n> >>> from replacy.db import load_json\n> >>> import spacy\n> >>> nlp = spacy.load(\"en_core_web_sm\")\n> >>> match_dict = load_json('./replacy/resources/match_dict.json')\n> >>> ematcher = ReplaceMatcher(nlp, match_dict=match_dict, SpanClass=ESpan)\n> >>> s = ematcher(\"She extracts revenge.\")[0]\n> >>> s\n> extracts\n> >>> s.suggestions\n> ['exacts']\n> >>> s.match_name\n> 'extract-revenge'\n> >>> doc = nlp(\"She extracts revenge.\")\n> >>> e = ESpan(doc, 1, 2)\n> >>> e\n> extracts\n> >>> e.suggestions\n> []\n> >>> e.match_name\n> ''\n> >>> e.comment\n> ''\n> >>> e.vector\n> array([ 3.7579389 , 390608 ,  ... , 0.37205344], dtype=float32)\n> >>> e.kb_id\n> 0\n> >>> e.vector_norm\n> 25.310467\n> >>> e._.comment = \"yo metaprogramming\"\n> >>> e.comment\n> 'yo metaprogramming'\n> >>> e == e._\n> True\n> ```\n> \n> I added the following to the match_dict to check for overlap behavior\n> \n> ```json\n> {\n>   \"make-due\": {\n>     \"patterns\": [\n>       {\n>         \"LEMMA\": \"make\",\n>         \"TEMPLATE_ID\": 1\n>       },\n>       {\n>         \"LOWER\": \"due\"\n>       }\n>     ],\n>     \"suggestions\": [\n>       [\n>         {\n>           \"TEXT\": \"make\",\n>           \"FROM_TEMPLATE_ID\": 1\n>         },\n>         {\n>           \"TEXT\": \"do\"\n>         }\n>       ]\n>     ]\n>   },\n>   \"dupe-test\": {\n>     \"patterns\": [\n>       {\n>         \"LEMMA\": \"make\",\n>         \"TEMPLATE_ID\": 1\n>       }\n>     ],\n>     \"suggestions\": [\n>       [\n>         {\n>           \"TEXT\": \"build\",\n>           \"FROM_TEMPLATE_ID\": 1\n>         }\n>       ]\n>     ],\n>     \"comment\": \"This is a bad match, it is here to demonstrate overlap behavior\",\n>     \"test\": {\n>       \"positive\": [\"I will make something\"],\n>       \"negative\": []\n>     }\n>   }\n> ```\n> \n> this gives\n> \n> ```python\n> >>> spans = ematcher(\"I will make due\")\n> >>> spans\n> [make, make due]\n> >>> spans[0].match_name\n> 'dupe-test'\n> >>> spans[1].match_name\n> 'make-due'\n> >>> spans[1].suggestions\n> ['make do']\n> >>> spans[0].suggestions\n> ['build']\n> ```\n",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-19T05:32:26Z",
        "PR Comment": "@sam-qordoba all good, just one change: added `has_extension` implementation",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-18T22:06:18Z",
        "PR Comment": "these just don't need to be here\n\n```python\n>>> from replacy.db import load_json\n>>> import spacy\n>>> nlp = spacy.load(\"en_core_web_sm\")\n>>> match_dict = load_json('./replacy/resources/match_dict.json')\n>>> ematcher = ReplaceMatcher.with_espan(nlp, match_dict=match_dict)\n>>> spans = ematcher(\"I'll have to make due.\")\n>>> spans[0].comment\n'This is a bad match, it is here to demonstrate overlap behavior'\n```",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-18T21:59:54Z",
        "PR Comment": "Added a factory method so you don't have to import ESpan, not sure which I like more:\n\n```python\nfrom replacy import ReplaceMatcher\nfrom replacy.db import load_json\nimport spacy\nnlp = spacy.load(\"en_core_web_sm\")\nmatch_dict = load_json('./replacy/resources/match_dict.json')\nematcher = ReplaceMatcher.with_espan(nlp, match_dict=match_dict)\ns = ematcher(\"She extracts revenge.\")[0]\n```\n\nthoughts?",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-19T05:02:24Z",
        "PR Comment": "The match dict in your test doesn't represent the overlap problem we are trying to solve, this one does:\nSTILL WORKS with this one\n```\n{\n    \"make-1\": {\n        \"patterns\": [\n            {\n                \"LEMMA\": \"make\"\n            }\n        ],\n        \"suggestions\": [\n            [\n                {\n                    \"TEXT\": \"MAKE\"\n                }\n            ]\n        ],\n        \"subcategory\": \"MAKE_CAPS\"\n    },\n    \"make-2\": {\n        \"patterns\": [\n            {\n                \"LEMMA\": \"make\"\n            }\n        ],\n        \"suggestions\": [\n            [\n                {\n                    \"TEXT\": \"MaKe\"\n                }\n            ]\n        ],\n        \"subcategory\": \"MAKE_STYLE\",\n        \"comment\": \"This is a bad match, it is here to demonstrate overlap behavior\",\n    }\n}\n```\n\n\n> Tested this in the REPL:\n> \n> ```python\n> >>> from replacy import ESpan\n> >>> from replacy import ReplaceMatcher\n> >>> from replacy.db import load_json\n> >>> import spacy\n> >>> nlp = spacy.load(\"en_core_web_sm\")\n> >>> match_dict = load_json('./replacy/resources/match_dict.json')\n> >>> ematcher = ReplaceMatcher(nlp, match_dict=match_dict, SpanClass=ESpan)\n> >>> s = ematcher(\"She extracts revenge.\")[0]\n> >>> s\n> extracts\n> >>> s.suggestions\n> ['exacts']\n> >>> s.match_name\n> 'extract-revenge'\n> >>> doc = nlp(\"She extracts revenge.\")\n> >>> e = ESpan(doc, 1, 2)\n> >>> e\n> extracts\n> >>> e.suggestions\n> []\n> >>> e.match_name\n> ''\n> >>> e.comment\n> ''\n> >>> e.vector\n> array([ 3.7579389 , 390608 ,  ... , 0.37205344], dtype=float32)\n> >>> e.kb_id\n> 0\n> >>> e.vector_norm\n> 25.310467\n> >>> e._.comment = \"yo metaprogramming\"\n> >>> e.comment\n> 'yo metaprogramming'\n> >>> e == e._\n> True\n> ```\n> \n> I added the following to the match_dict to check for overlap behavior\n> \n> ```json\n> {\n>   \"make-due\": {\n>     \"patterns\": [\n>       {\n>         \"LEMMA\": \"make\",\n>         \"TEMPLATE_ID\": 1\n>       },\n>       {\n>         \"LOWER\": \"due\"\n>       }\n>     ],\n>     \"suggestions\": [\n>       [\n>         {\n>           \"TEXT\": \"make\",\n>           \"FROM_TEMPLATE_ID\": 1\n>         },\n>         {\n>           \"TEXT\": \"do\"\n>         }\n>       ]\n>     ]\n>   },\n>   \"dupe-test\": {\n>     \"patterns\": [\n>       {\n>         \"LEMMA\": \"make\",\n>         \"TEMPLATE_ID\": 1\n>       }\n>     ],\n>     \"suggestions\": [\n>       [\n>         {\n>           \"TEXT\": \"build\",\n>           \"FROM_TEMPLATE_ID\": 1\n>         }\n>       ]\n>     ],\n>     \"comment\": \"This is a bad match, it is here to demonstrate overlap behavior\",\n>     \"test\": {\n>       \"positive\": [\"I will make something\"],\n>       \"negative\": []\n>     }\n>   }\n> ```\n> \n> this gives\n> \n> ```python\n> >>> spans = ematcher(\"I will make due\")\n> >>> spans\n> [make, make due]\n> >>> spans[0].match_name\n> 'dupe-test'\n> >>> spans[1].match_name\n> 'make-due'\n> >>> spans[1].suggestions\n> ['make do']\n> >>> spans[0].suggestions\n> ['build']\n> ```\n",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-19T05:32:26Z",
        "PR Comment": "@sam-qordoba all good, just one change: added `has_extension` implementation",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-18T22:06:18Z",
        "PR Comment": "these just don't need to be here\n\n```python\n>>> from replacy.db import load_json\n>>> import spacy\n>>> nlp = spacy.load(\"en_core_web_sm\")\n>>> match_dict = load_json('./replacy/resources/match_dict.json')\n>>> ematcher = ReplaceMatcher.with_espan(nlp, match_dict=match_dict)\n>>> spans = ematcher(\"I'll have to make due.\")\n>>> spans[0].comment\n'This is a bad match, it is here to demonstrate overlap behavior'\n```",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-18T21:59:54Z",
        "PR Comment": "Added a factory method so you don't have to import ESpan, not sure which I like more:\n\n```python\nfrom replacy import ReplaceMatcher\nfrom replacy.db import load_json\nimport spacy\nnlp = spacy.load(\"en_core_web_sm\")\nmatch_dict = load_json('./replacy/resources/match_dict.json')\nematcher = ReplaceMatcher.with_espan(nlp, match_dict=match_dict)\ns = ematcher(\"She extracts revenge.\")[0]\n```\n\nthoughts?",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-19T05:02:24Z",
        "PR Comment": "The match dict in your test doesn't represent the overlap problem we are trying to solve, this one does:\nSTILL WORKS with this one\n```\n{\n    \"make-1\": {\n        \"patterns\": [\n            {\n                \"LEMMA\": \"make\"\n            }\n        ],\n        \"suggestions\": [\n            [\n                {\n                    \"TEXT\": \"MAKE\"\n                }\n            ]\n        ],\n        \"subcategory\": \"MAKE_CAPS\"\n    },\n    \"make-2\": {\n        \"patterns\": [\n            {\n                \"LEMMA\": \"make\"\n            }\n        ],\n        \"suggestions\": [\n            [\n                {\n                    \"TEXT\": \"MaKe\"\n                }\n            ]\n        ],\n        \"subcategory\": \"MAKE_STYLE\",\n        \"comment\": \"This is a bad match, it is here to demonstrate overlap behavior\",\n    }\n}\n```\n\n\n> Tested this in the REPL:\n> \n> ```python\n> >>> from replacy import ESpan\n> >>> from replacy import ReplaceMatcher\n> >>> from replacy.db import load_json\n> >>> import spacy\n> >>> nlp = spacy.load(\"en_core_web_sm\")\n> >>> match_dict = load_json('./replacy/resources/match_dict.json')\n> >>> ematcher = ReplaceMatcher(nlp, match_dict=match_dict, SpanClass=ESpan)\n> >>> s = ematcher(\"She extracts revenge.\")[0]\n> >>> s\n> extracts\n> >>> s.suggestions\n> ['exacts']\n> >>> s.match_name\n> 'extract-revenge'\n> >>> doc = nlp(\"She extracts revenge.\")\n> >>> e = ESpan(doc, 1, 2)\n> >>> e\n> extracts\n> >>> e.suggestions\n> []\n> >>> e.match_name\n> ''\n> >>> e.comment\n> ''\n> >>> e.vector\n> array([ 3.7579389 , 390608 ,  ... , 0.37205344], dtype=float32)\n> >>> e.kb_id\n> 0\n> >>> e.vector_norm\n> 25.310467\n> >>> e._.comment = \"yo metaprogramming\"\n> >>> e.comment\n> 'yo metaprogramming'\n> >>> e == e._\n> True\n> ```\n> \n> I added the following to the match_dict to check for overlap behavior\n> \n> ```json\n> {\n>   \"make-due\": {\n>     \"patterns\": [\n>       {\n>         \"LEMMA\": \"make\",\n>         \"TEMPLATE_ID\": 1\n>       },\n>       {\n>         \"LOWER\": \"due\"\n>       }\n>     ],\n>     \"suggestions\": [\n>       [\n>         {\n>           \"TEXT\": \"make\",\n>           \"FROM_TEMPLATE_ID\": 1\n>         },\n>         {\n>           \"TEXT\": \"do\"\n>         }\n>       ]\n>     ]\n>   },\n>   \"dupe-test\": {\n>     \"patterns\": [\n>       {\n>         \"LEMMA\": \"make\",\n>         \"TEMPLATE_ID\": 1\n>       }\n>     ],\n>     \"suggestions\": [\n>       [\n>         {\n>           \"TEXT\": \"build\",\n>           \"FROM_TEMPLATE_ID\": 1\n>         }\n>       ]\n>     ],\n>     \"comment\": \"This is a bad match, it is here to demonstrate overlap behavior\",\n>     \"test\": {\n>       \"positive\": [\"I will make something\"],\n>       \"negative\": []\n>     }\n>   }\n> ```\n> \n> this gives\n> \n> ```python\n> >>> spans = ematcher(\"I will make due\")\n> >>> spans\n> [make, make due]\n> >>> spans[0].match_name\n> 'dupe-test'\n> >>> spans[1].match_name\n> 'make-due'\n> >>> spans[1].suggestions\n> ['make do']\n> >>> spans[0].suggestions\n> ['build']\n> ```\n",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-19T05:32:26Z",
        "PR Comment": "@sam-qordoba all good, just one change: added `has_extension` implementation",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-18T22:06:18Z",
        "PR Comment": "these just don't need to be here\n\n```python\n>>> from replacy.db import load_json\n>>> import spacy\n>>> nlp = spacy.load(\"en_core_web_sm\")\n>>> match_dict = load_json('./replacy/resources/match_dict.json')\n>>> ematcher = ReplaceMatcher.with_espan(nlp, match_dict=match_dict)\n>>> spans = ematcher(\"I'll have to make due.\")\n>>> spans[0].comment\n'This is a bad match, it is here to demonstrate overlap behavior'\n```",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-18T21:59:54Z",
        "PR Comment": "Added a factory method so you don't have to import ESpan, not sure which I like more:\n\n```python\nfrom replacy import ReplaceMatcher\nfrom replacy.db import load_json\nimport spacy\nnlp = spacy.load(\"en_core_web_sm\")\nmatch_dict = load_json('./replacy/resources/match_dict.json')\nematcher = ReplaceMatcher.with_espan(nlp, match_dict=match_dict)\ns = ematcher(\"She extracts revenge.\")[0]\n```\n\nthoughts?",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-19T05:02:24Z",
        "PR Comment": "The match dict in your test doesn't represent the overlap problem we are trying to solve, this one does:\nSTILL WORKS with this one\n```\n{\n    \"make-1\": {\n        \"patterns\": [\n            {\n                \"LEMMA\": \"make\"\n            }\n        ],\n        \"suggestions\": [\n            [\n                {\n                    \"TEXT\": \"MAKE\"\n                }\n            ]\n        ],\n        \"subcategory\": \"MAKE_CAPS\"\n    },\n    \"make-2\": {\n        \"patterns\": [\n            {\n                \"LEMMA\": \"make\"\n            }\n        ],\n        \"suggestions\": [\n            [\n                {\n                    \"TEXT\": \"MaKe\"\n                }\n            ]\n        ],\n        \"subcategory\": \"MAKE_STYLE\",\n        \"comment\": \"This is a bad match, it is here to demonstrate overlap behavior\",\n    }\n}\n```\n\n\n> Tested this in the REPL:\n> \n> ```python\n> >>> from replacy import ESpan\n> >>> from replacy import ReplaceMatcher\n> >>> from replacy.db import load_json\n> >>> import spacy\n> >>> nlp = spacy.load(\"en_core_web_sm\")\n> >>> match_dict = load_json('./replacy/resources/match_dict.json')\n> >>> ematcher = ReplaceMatcher(nlp, match_dict=match_dict, SpanClass=ESpan)\n> >>> s = ematcher(\"She extracts revenge.\")[0]\n> >>> s\n> extracts\n> >>> s.suggestions\n> ['exacts']\n> >>> s.match_name\n> 'extract-revenge'\n> >>> doc = nlp(\"She extracts revenge.\")\n> >>> e = ESpan(doc, 1, 2)\n> >>> e\n> extracts\n> >>> e.suggestions\n> []\n> >>> e.match_name\n> ''\n> >>> e.comment\n> ''\n> >>> e.vector\n> array([ 3.7579389 , 390608 ,  ... , 0.37205344], dtype=float32)\n> >>> e.kb_id\n> 0\n> >>> e.vector_norm\n> 25.310467\n> >>> e._.comment = \"yo metaprogramming\"\n> >>> e.comment\n> 'yo metaprogramming'\n> >>> e == e._\n> True\n> ```\n> \n> I added the following to the match_dict to check for overlap behavior\n> \n> ```json\n> {\n>   \"make-due\": {\n>     \"patterns\": [\n>       {\n>         \"LEMMA\": \"make\",\n>         \"TEMPLATE_ID\": 1\n>       },\n>       {\n>         \"LOWER\": \"due\"\n>       }\n>     ],\n>     \"suggestions\": [\n>       [\n>         {\n>           \"TEXT\": \"make\",\n>           \"FROM_TEMPLATE_ID\": 1\n>         },\n>         {\n>           \"TEXT\": \"do\"\n>         }\n>       ]\n>     ]\n>   },\n>   \"dupe-test\": {\n>     \"patterns\": [\n>       {\n>         \"LEMMA\": \"make\",\n>         \"TEMPLATE_ID\": 1\n>       }\n>     ],\n>     \"suggestions\": [\n>       [\n>         {\n>           \"TEXT\": \"build\",\n>           \"FROM_TEMPLATE_ID\": 1\n>         }\n>       ]\n>     ],\n>     \"comment\": \"This is a bad match, it is here to demonstrate overlap behavior\",\n>     \"test\": {\n>       \"positive\": [\"I will make something\"],\n>       \"negative\": []\n>     }\n>   }\n> ```\n> \n> this gives\n> \n> ```python\n> >>> spans = ematcher(\"I will make due\")\n> >>> spans\n> [make, make due]\n> >>> spans[0].match_name\n> 'dupe-test'\n> >>> spans[1].match_name\n> 'make-due'\n> >>> spans[1].suggestions\n> ['make do']\n> >>> spans[0].suggestions\n> ['build']\n> ```\n",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-19T05:32:26Z",
        "PR Comment": "@sam-qordoba all good, just one change: added `has_extension` implementation",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-18T22:06:18Z",
        "PR Comment": "these just don't need to be here\n\n```python\n>>> from replacy.db import load_json\n>>> import spacy\n>>> nlp = spacy.load(\"en_core_web_sm\")\n>>> match_dict = load_json('./replacy/resources/match_dict.json')\n>>> ematcher = ReplaceMatcher.with_espan(nlp, match_dict=match_dict)\n>>> spans = ematcher(\"I'll have to make due.\")\n>>> spans[0].comment\n'This is a bad match, it is here to demonstrate overlap behavior'\n```",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-18T21:59:54Z",
        "PR Comment": "Added a factory method so you don't have to import ESpan, not sure which I like more:\n\n```python\nfrom replacy import ReplaceMatcher\nfrom replacy.db import load_json\nimport spacy\nnlp = spacy.load(\"en_core_web_sm\")\nmatch_dict = load_json('./replacy/resources/match_dict.json')\nematcher = ReplaceMatcher.with_espan(nlp, match_dict=match_dict)\ns = ematcher(\"She extracts revenge.\")[0]\n```\n\nthoughts?",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-19T05:02:24Z",
        "PR Comment": "The match dict in your test doesn't represent the overlap problem we are trying to solve, this one does:\nSTILL WORKS with this one\n```\n{\n    \"make-1\": {\n        \"patterns\": [\n            {\n                \"LEMMA\": \"make\"\n            }\n        ],\n        \"suggestions\": [\n            [\n                {\n                    \"TEXT\": \"MAKE\"\n                }\n            ]\n        ],\n        \"subcategory\": \"MAKE_CAPS\"\n    },\n    \"make-2\": {\n        \"patterns\": [\n            {\n                \"LEMMA\": \"make\"\n            }\n        ],\n        \"suggestions\": [\n            [\n                {\n                    \"TEXT\": \"MaKe\"\n                }\n            ]\n        ],\n        \"subcategory\": \"MAKE_STYLE\",\n        \"comment\": \"This is a bad match, it is here to demonstrate overlap behavior\",\n    }\n}\n```\n\n\n> Tested this in the REPL:\n> \n> ```python\n> >>> from replacy import ESpan\n> >>> from replacy import ReplaceMatcher\n> >>> from replacy.db import load_json\n> >>> import spacy\n> >>> nlp = spacy.load(\"en_core_web_sm\")\n> >>> match_dict = load_json('./replacy/resources/match_dict.json')\n> >>> ematcher = ReplaceMatcher(nlp, match_dict=match_dict, SpanClass=ESpan)\n> >>> s = ematcher(\"She extracts revenge.\")[0]\n> >>> s\n> extracts\n> >>> s.suggestions\n> ['exacts']\n> >>> s.match_name\n> 'extract-revenge'\n> >>> doc = nlp(\"She extracts revenge.\")\n> >>> e = ESpan(doc, 1, 2)\n> >>> e\n> extracts\n> >>> e.suggestions\n> []\n> >>> e.match_name\n> ''\n> >>> e.comment\n> ''\n> >>> e.vector\n> array([ 3.7579389 , 390608 ,  ... , 0.37205344], dtype=float32)\n> >>> e.kb_id\n> 0\n> >>> e.vector_norm\n> 25.310467\n> >>> e._.comment = \"yo metaprogramming\"\n> >>> e.comment\n> 'yo metaprogramming'\n> >>> e == e._\n> True\n> ```\n> \n> I added the following to the match_dict to check for overlap behavior\n> \n> ```json\n> {\n>   \"make-due\": {\n>     \"patterns\": [\n>       {\n>         \"LEMMA\": \"make\",\n>         \"TEMPLATE_ID\": 1\n>       },\n>       {\n>         \"LOWER\": \"due\"\n>       }\n>     ],\n>     \"suggestions\": [\n>       [\n>         {\n>           \"TEXT\": \"make\",\n>           \"FROM_TEMPLATE_ID\": 1\n>         },\n>         {\n>           \"TEXT\": \"do\"\n>         }\n>       ]\n>     ]\n>   },\n>   \"dupe-test\": {\n>     \"patterns\": [\n>       {\n>         \"LEMMA\": \"make\",\n>         \"TEMPLATE_ID\": 1\n>       }\n>     ],\n>     \"suggestions\": [\n>       [\n>         {\n>           \"TEXT\": \"build\",\n>           \"FROM_TEMPLATE_ID\": 1\n>         }\n>       ]\n>     ],\n>     \"comment\": \"This is a bad match, it is here to demonstrate overlap behavior\",\n>     \"test\": {\n>       \"positive\": [\"I will make something\"],\n>       \"negative\": []\n>     }\n>   }\n> ```\n> \n> this gives\n> \n> ```python\n> >>> spans = ematcher(\"I will make due\")\n> >>> spans\n> [make, make due]\n> >>> spans[0].match_name\n> 'dupe-test'\n> >>> spans[1].match_name\n> 'make-due'\n> >>> spans[1].suggestions\n> ['make do']\n> >>> spans[0].suggestions\n> ['build']\n> ```\n",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-19T05:32:26Z",
        "PR Comment": "@sam-qordoba all good, just one change: added `has_extension` implementation",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-18T22:06:18Z",
        "PR Comment": "these just don't need to be here\n\n```python\n>>> from replacy.db import load_json\n>>> import spacy\n>>> nlp = spacy.load(\"en_core_web_sm\")\n>>> match_dict = load_json('./replacy/resources/match_dict.json')\n>>> ematcher = ReplaceMatcher.with_espan(nlp, match_dict=match_dict)\n>>> spans = ematcher(\"I'll have to make due.\")\n>>> spans[0].comment\n'This is a bad match, it is here to demonstrate overlap behavior'\n```",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-18T21:59:54Z",
        "PR Comment": "Added a factory method so you don't have to import ESpan, not sure which I like more:\n\n```python\nfrom replacy import ReplaceMatcher\nfrom replacy.db import load_json\nimport spacy\nnlp = spacy.load(\"en_core_web_sm\")\nmatch_dict = load_json('./replacy/resources/match_dict.json')\nematcher = ReplaceMatcher.with_espan(nlp, match_dict=match_dict)\ns = ematcher(\"She extracts revenge.\")[0]\n```\n\nthoughts?",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-19T05:02:24Z",
        "PR Comment": "The match dict in your test doesn't represent the overlap problem we are trying to solve, this one does:\nSTILL WORKS with this one\n```\n{\n    \"make-1\": {\n        \"patterns\": [\n            {\n                \"LEMMA\": \"make\"\n            }\n        ],\n        \"suggestions\": [\n            [\n                {\n                    \"TEXT\": \"MAKE\"\n                }\n            ]\n        ],\n        \"subcategory\": \"MAKE_CAPS\"\n    },\n    \"make-2\": {\n        \"patterns\": [\n            {\n                \"LEMMA\": \"make\"\n            }\n        ],\n        \"suggestions\": [\n            [\n                {\n                    \"TEXT\": \"MaKe\"\n                }\n            ]\n        ],\n        \"subcategory\": \"MAKE_STYLE\",\n        \"comment\": \"This is a bad match, it is here to demonstrate overlap behavior\",\n    }\n}\n```\n\n\n> Tested this in the REPL:\n> \n> ```python\n> >>> from replacy import ESpan\n> >>> from replacy import ReplaceMatcher\n> >>> from replacy.db import load_json\n> >>> import spacy\n> >>> nlp = spacy.load(\"en_core_web_sm\")\n> >>> match_dict = load_json('./replacy/resources/match_dict.json')\n> >>> ematcher = ReplaceMatcher(nlp, match_dict=match_dict, SpanClass=ESpan)\n> >>> s = ematcher(\"She extracts revenge.\")[0]\n> >>> s\n> extracts\n> >>> s.suggestions\n> ['exacts']\n> >>> s.match_name\n> 'extract-revenge'\n> >>> doc = nlp(\"She extracts revenge.\")\n> >>> e = ESpan(doc, 1, 2)\n> >>> e\n> extracts\n> >>> e.suggestions\n> []\n> >>> e.match_name\n> ''\n> >>> e.comment\n> ''\n> >>> e.vector\n> array([ 3.7579389 , 390608 ,  ... , 0.37205344], dtype=float32)\n> >>> e.kb_id\n> 0\n> >>> e.vector_norm\n> 25.310467\n> >>> e._.comment = \"yo metaprogramming\"\n> >>> e.comment\n> 'yo metaprogramming'\n> >>> e == e._\n> True\n> ```\n> \n> I added the following to the match_dict to check for overlap behavior\n> \n> ```json\n> {\n>   \"make-due\": {\n>     \"patterns\": [\n>       {\n>         \"LEMMA\": \"make\",\n>         \"TEMPLATE_ID\": 1\n>       },\n>       {\n>         \"LOWER\": \"due\"\n>       }\n>     ],\n>     \"suggestions\": [\n>       [\n>         {\n>           \"TEXT\": \"make\",\n>           \"FROM_TEMPLATE_ID\": 1\n>         },\n>         {\n>           \"TEXT\": \"do\"\n>         }\n>       ]\n>     ]\n>   },\n>   \"dupe-test\": {\n>     \"patterns\": [\n>       {\n>         \"LEMMA\": \"make\",\n>         \"TEMPLATE_ID\": 1\n>       }\n>     ],\n>     \"suggestions\": [\n>       [\n>         {\n>           \"TEXT\": \"build\",\n>           \"FROM_TEMPLATE_ID\": 1\n>         }\n>       ]\n>     ],\n>     \"comment\": \"This is a bad match, it is here to demonstrate overlap behavior\",\n>     \"test\": {\n>       \"positive\": [\"I will make something\"],\n>       \"negative\": []\n>     }\n>   }\n> ```\n> \n> this gives\n> \n> ```python\n> >>> spans = ematcher(\"I will make due\")\n> >>> spans\n> [make, make due]\n> >>> spans[0].match_name\n> 'dupe-test'\n> >>> spans[1].match_name\n> 'make-due'\n> >>> spans[1].suggestions\n> ['make do']\n> >>> spans[0].suggestions\n> ['build']\n> ```\n",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2021-05-19T05:32:26Z",
        "PR Comment": "@sam-qordoba all good, just one change: added `has_extension` implementation",
        "PR/Issue Number": "96"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-21T23:42:38Z",
        "PR Comment": "\"times before the spellcheck in vscode\" :grimacing: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-21T23:43:08Z",
        "PR Comment": "what does it do? :thinking: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-21T23:48:14Z",
        "PR Comment": "oh! :exploding_head: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-21T23:50:39Z",
        "PR Comment": ":heart: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-21T23:51:09Z",
        "PR Comment": "and return a list of spans (after recent changes)",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T00:07:20Z",
        "PR Comment": "liked the previous lines more :( ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T00:07:45Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T00:09:02Z",
        "PR Comment": ":exploding_head: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T00:09:42Z",
        "PR Comment": "oh glad it is moved here!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T00:11:44Z",
        "PR Comment": "I wonder ... we allow replacy to use any nlp, but we require en_core_web_sm in tests? :grimacing: \nIt is ok?",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T00:12:04Z",
        "PR Comment": ":grimacing: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T18:48:38Z",
        "PR Comment": "my editor complained, and I thought... yeah, you are right editor, inflector is not defined!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T18:49:45Z",
        "PR Comment": "I moved it out into `utils` but some projects using replacy call it via `ReplaceMatcher.validate_match_dict` so I wanted to attach it to the class here (which makes it a static method)",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T18:51:34Z",
        "PR Comment": "this wasn't a bug, it was just, I wanted to make the components have inputs and outputs, instead of using class properties",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T18:52:07Z",
        "PR Comment": "We should add tests with other languages!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T18:52:20Z",
        "PR Comment": "gotta have my dumb IDs",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-21T23:34:20Z",
        "PR Comment": "@melisa-qordoba Here is how this would be used for #80 \n\nhttps://github.com/Qordobacode/replaCy/issues/80#issuecomment-696434960",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T18:52:47Z",
        "PR Comment": "I installed this version of replaCy in a downstream project (Clarity) and the test suite still passes \ud83d\udcaa ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-21T23:42:38Z",
        "PR Comment": "\"times before the spellcheck in vscode\" :grimacing: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-21T23:43:08Z",
        "PR Comment": "what does it do? :thinking: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-21T23:48:14Z",
        "PR Comment": "oh! :exploding_head: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-21T23:50:39Z",
        "PR Comment": ":heart: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-21T23:51:09Z",
        "PR Comment": "and return a list of spans (after recent changes)",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T00:07:20Z",
        "PR Comment": "liked the previous lines more :( ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T00:07:45Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T00:09:02Z",
        "PR Comment": ":exploding_head: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T00:09:42Z",
        "PR Comment": "oh glad it is moved here!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T00:11:44Z",
        "PR Comment": "I wonder ... we allow replacy to use any nlp, but we require en_core_web_sm in tests? :grimacing: \nIt is ok?",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T00:12:04Z",
        "PR Comment": ":grimacing: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T18:48:38Z",
        "PR Comment": "my editor complained, and I thought... yeah, you are right editor, inflector is not defined!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T18:49:45Z",
        "PR Comment": "I moved it out into `utils` but some projects using replacy call it via `ReplaceMatcher.validate_match_dict` so I wanted to attach it to the class here (which makes it a static method)",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T18:51:34Z",
        "PR Comment": "this wasn't a bug, it was just, I wanted to make the components have inputs and outputs, instead of using class properties",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T18:52:07Z",
        "PR Comment": "We should add tests with other languages!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T18:52:20Z",
        "PR Comment": "gotta have my dumb IDs",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-21T23:34:20Z",
        "PR Comment": "@melisa-qordoba Here is how this would be used for #80 \n\nhttps://github.com/Qordobacode/replaCy/issues/80#issuecomment-696434960",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-22T18:52:47Z",
        "PR Comment": "I installed this version of replaCy in a downstream project (Clarity) and the test suite still passes \ud83d\udcaa ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T19:18:52Z",
        "PR Comment": "not sure this is a reasonable criteria, I guess I have to look at a bigger match dict...",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T19:23:59Z",
        "PR Comment": "this isn't blocking. It seems like you had to do a lot of list-membership checking, and used sets, when there are ways that are more :snek:\n\nThis one, for example, feels less-pythonic than\n\n```suggestion\n            if any([article in item_options for article in [\"a\", \"an\", \"the\"]]):\n```",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:05:17Z",
        "PR Comment": "again, non-blocking style thing. I think this is the same as:\n\n```suggestion\n            if all([el in item_options for el in [\"person\", \"people\"]]) or all([el in item_options for el in [\"ox\", \"oxen\"]]):\n                return 1\n```\n\nSince I am mathy, set operations make sense (and I know the Python syntax for intersection with `&`) but it may be more obvious to use `all`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:18:11Z",
        "PR Comment": "wait the lemmas are different? are we testing this just to document the weirdness?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:18:49Z",
        "PR Comment": "`plural` and `singular` switched for all of these, not that it matters (but since it's open thought you'd want to know)",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:19:16Z",
        "PR Comment": "Can we have a test case that uses `MAX_COUNT`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:19:39Z",
        "PR Comment": "I like little classes like this",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:59:39Z",
        "PR Comment": "Here is an example where multi-token does not imply max count one:\nhttps://github.com/Qordobacode/service.inclusivity/blob/master/service_inclusivity/resources/match_dicts/age_matches.json#L934-L935\n\nBut I thought I would find more... ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:00:18Z",
        "PR Comment": "I think I would err on the side of having replaCy assume less, and us having to do more work in the match_dicts to upgrade",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:02:20Z",
        "PR Comment": "not a recommendation, but fun fact: this can be written `lemmas |= option_lemmas`",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:47:57Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:55:07Z",
        "PR Comment": "Good catch! :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:56:11Z",
        "PR Comment": "This is different for people / person and on / oxen.\nBut you are right - added xfail cases to the test.\nNow, whenever we upgrade lemminflect, we can check whether lemmatization of irregular words is the same.",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:56:29Z",
        "PR Comment": ":smiley: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T22:34:30Z",
        "PR Comment": "done :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T22:39:43Z",
        "PR Comment": "Hmm I would rewrite that match to:\n```\n{\"TEXT\": \"who is\"},\n{\"TEXT\": [\"single\", \"unmarried\"]}\n```\nThen those rules would be ok :smile: \nBut yeah, I agree suppression might be confusing, and some matches will need rewrites.\nI promise to:\n- add suppression warnings\n- check `match_dicts` in dependent services\n- rethink how to make those criteria better.\n\nIn other words... let's :shipit: , then fix the reality :rofl: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T22:42:35Z",
        "PR Comment": "Same applies here. Done for fast :shipit: Let's make it better ... later :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T23:32:12Z",
        "PR Comment": "added simple logging :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T19:18:52Z",
        "PR Comment": "not sure this is a reasonable criteria, I guess I have to look at a bigger match dict...",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T19:23:59Z",
        "PR Comment": "this isn't blocking. It seems like you had to do a lot of list-membership checking, and used sets, when there are ways that are more :snek:\n\nThis one, for example, feels less-pythonic than\n\n```suggestion\n            if any([article in item_options for article in [\"a\", \"an\", \"the\"]]):\n```",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:05:17Z",
        "PR Comment": "again, non-blocking style thing. I think this is the same as:\n\n```suggestion\n            if all([el in item_options for el in [\"person\", \"people\"]]) or all([el in item_options for el in [\"ox\", \"oxen\"]]):\n                return 1\n```\n\nSince I am mathy, set operations make sense (and I know the Python syntax for intersection with `&`) but it may be more obvious to use `all`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:18:11Z",
        "PR Comment": "wait the lemmas are different? are we testing this just to document the weirdness?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:18:49Z",
        "PR Comment": "`plural` and `singular` switched for all of these, not that it matters (but since it's open thought you'd want to know)",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:19:16Z",
        "PR Comment": "Can we have a test case that uses `MAX_COUNT`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:19:39Z",
        "PR Comment": "I like little classes like this",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:59:39Z",
        "PR Comment": "Here is an example where multi-token does not imply max count one:\nhttps://github.com/Qordobacode/service.inclusivity/blob/master/service_inclusivity/resources/match_dicts/age_matches.json#L934-L935\n\nBut I thought I would find more... ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:00:18Z",
        "PR Comment": "I think I would err on the side of having replaCy assume less, and us having to do more work in the match_dicts to upgrade",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:02:20Z",
        "PR Comment": "not a recommendation, but fun fact: this can be written `lemmas |= option_lemmas`",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:47:57Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:55:07Z",
        "PR Comment": "Good catch! :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:56:11Z",
        "PR Comment": "This is different for people / person and on / oxen.\nBut you are right - added xfail cases to the test.\nNow, whenever we upgrade lemminflect, we can check whether lemmatization of irregular words is the same.",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:56:29Z",
        "PR Comment": ":smiley: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T22:34:30Z",
        "PR Comment": "done :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T22:39:43Z",
        "PR Comment": "Hmm I would rewrite that match to:\n```\n{\"TEXT\": \"who is\"},\n{\"TEXT\": [\"single\", \"unmarried\"]}\n```\nThen those rules would be ok :smile: \nBut yeah, I agree suppression might be confusing, and some matches will need rewrites.\nI promise to:\n- add suppression warnings\n- check `match_dicts` in dependent services\n- rethink how to make those criteria better.\n\nIn other words... let's :shipit: , then fix the reality :rofl: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T22:42:35Z",
        "PR Comment": "Same applies here. Done for fast :shipit: Let's make it better ... later :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T23:32:12Z",
        "PR Comment": "added simple logging :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T19:18:52Z",
        "PR Comment": "not sure this is a reasonable criteria, I guess I have to look at a bigger match dict...",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T19:23:59Z",
        "PR Comment": "this isn't blocking. It seems like you had to do a lot of list-membership checking, and used sets, when there are ways that are more :snek:\n\nThis one, for example, feels less-pythonic than\n\n```suggestion\n            if any([article in item_options for article in [\"a\", \"an\", \"the\"]]):\n```",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:05:17Z",
        "PR Comment": "again, non-blocking style thing. I think this is the same as:\n\n```suggestion\n            if all([el in item_options for el in [\"person\", \"people\"]]) or all([el in item_options for el in [\"ox\", \"oxen\"]]):\n                return 1\n```\n\nSince I am mathy, set operations make sense (and I know the Python syntax for intersection with `&`) but it may be more obvious to use `all`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:18:11Z",
        "PR Comment": "wait the lemmas are different? are we testing this just to document the weirdness?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:18:49Z",
        "PR Comment": "`plural` and `singular` switched for all of these, not that it matters (but since it's open thought you'd want to know)",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:19:16Z",
        "PR Comment": "Can we have a test case that uses `MAX_COUNT`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:19:39Z",
        "PR Comment": "I like little classes like this",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:59:39Z",
        "PR Comment": "Here is an example where multi-token does not imply max count one:\nhttps://github.com/Qordobacode/service.inclusivity/blob/master/service_inclusivity/resources/match_dicts/age_matches.json#L934-L935\n\nBut I thought I would find more... ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:00:18Z",
        "PR Comment": "I think I would err on the side of having replaCy assume less, and us having to do more work in the match_dicts to upgrade",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:02:20Z",
        "PR Comment": "not a recommendation, but fun fact: this can be written `lemmas |= option_lemmas`",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:47:57Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:55:07Z",
        "PR Comment": "Good catch! :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:56:11Z",
        "PR Comment": "This is different for people / person and on / oxen.\nBut you are right - added xfail cases to the test.\nNow, whenever we upgrade lemminflect, we can check whether lemmatization of irregular words is the same.",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:56:29Z",
        "PR Comment": ":smiley: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T22:34:30Z",
        "PR Comment": "done :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T22:39:43Z",
        "PR Comment": "Hmm I would rewrite that match to:\n```\n{\"TEXT\": \"who is\"},\n{\"TEXT\": [\"single\", \"unmarried\"]}\n```\nThen those rules would be ok :smile: \nBut yeah, I agree suppression might be confusing, and some matches will need rewrites.\nI promise to:\n- add suppression warnings\n- check `match_dicts` in dependent services\n- rethink how to make those criteria better.\n\nIn other words... let's :shipit: , then fix the reality :rofl: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T22:42:35Z",
        "PR Comment": "Same applies here. Done for fast :shipit: Let's make it better ... later :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T23:32:12Z",
        "PR Comment": "added simple logging :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T19:18:52Z",
        "PR Comment": "not sure this is a reasonable criteria, I guess I have to look at a bigger match dict...",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T19:23:59Z",
        "PR Comment": "this isn't blocking. It seems like you had to do a lot of list-membership checking, and used sets, when there are ways that are more :snek:\n\nThis one, for example, feels less-pythonic than\n\n```suggestion\n            if any([article in item_options for article in [\"a\", \"an\", \"the\"]]):\n```",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:05:17Z",
        "PR Comment": "again, non-blocking style thing. I think this is the same as:\n\n```suggestion\n            if all([el in item_options for el in [\"person\", \"people\"]]) or all([el in item_options for el in [\"ox\", \"oxen\"]]):\n                return 1\n```\n\nSince I am mathy, set operations make sense (and I know the Python syntax for intersection with `&`) but it may be more obvious to use `all`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:18:11Z",
        "PR Comment": "wait the lemmas are different? are we testing this just to document the weirdness?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:18:49Z",
        "PR Comment": "`plural` and `singular` switched for all of these, not that it matters (but since it's open thought you'd want to know)",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:19:16Z",
        "PR Comment": "Can we have a test case that uses `MAX_COUNT`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:19:39Z",
        "PR Comment": "I like little classes like this",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:59:39Z",
        "PR Comment": "Here is an example where multi-token does not imply max count one:\nhttps://github.com/Qordobacode/service.inclusivity/blob/master/service_inclusivity/resources/match_dicts/age_matches.json#L934-L935\n\nBut I thought I would find more... ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:00:18Z",
        "PR Comment": "I think I would err on the side of having replaCy assume less, and us having to do more work in the match_dicts to upgrade",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:02:20Z",
        "PR Comment": "not a recommendation, but fun fact: this can be written `lemmas |= option_lemmas`",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:47:57Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:55:07Z",
        "PR Comment": "Good catch! :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:56:11Z",
        "PR Comment": "This is different for people / person and on / oxen.\nBut you are right - added xfail cases to the test.\nNow, whenever we upgrade lemminflect, we can check whether lemmatization of irregular words is the same.",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:56:29Z",
        "PR Comment": ":smiley: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T22:34:30Z",
        "PR Comment": "done :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T22:39:43Z",
        "PR Comment": "Hmm I would rewrite that match to:\n```\n{\"TEXT\": \"who is\"},\n{\"TEXT\": [\"single\", \"unmarried\"]}\n```\nThen those rules would be ok :smile: \nBut yeah, I agree suppression might be confusing, and some matches will need rewrites.\nI promise to:\n- add suppression warnings\n- check `match_dicts` in dependent services\n- rethink how to make those criteria better.\n\nIn other words... let's :shipit: , then fix the reality :rofl: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T22:42:35Z",
        "PR Comment": "Same applies here. Done for fast :shipit: Let's make it better ... later :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T23:32:12Z",
        "PR Comment": "added simple logging :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T19:18:52Z",
        "PR Comment": "not sure this is a reasonable criteria, I guess I have to look at a bigger match dict...",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T19:23:59Z",
        "PR Comment": "this isn't blocking. It seems like you had to do a lot of list-membership checking, and used sets, when there are ways that are more :snek:\n\nThis one, for example, feels less-pythonic than\n\n```suggestion\n            if any([article in item_options for article in [\"a\", \"an\", \"the\"]]):\n```",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:05:17Z",
        "PR Comment": "again, non-blocking style thing. I think this is the same as:\n\n```suggestion\n            if all([el in item_options for el in [\"person\", \"people\"]]) or all([el in item_options for el in [\"ox\", \"oxen\"]]):\n                return 1\n```\n\nSince I am mathy, set operations make sense (and I know the Python syntax for intersection with `&`) but it may be more obvious to use `all`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:18:11Z",
        "PR Comment": "wait the lemmas are different? are we testing this just to document the weirdness?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:18:49Z",
        "PR Comment": "`plural` and `singular` switched for all of these, not that it matters (but since it's open thought you'd want to know)",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:19:16Z",
        "PR Comment": "Can we have a test case that uses `MAX_COUNT`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:19:39Z",
        "PR Comment": "I like little classes like this",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:59:39Z",
        "PR Comment": "Here is an example where multi-token does not imply max count one:\nhttps://github.com/Qordobacode/service.inclusivity/blob/master/service_inclusivity/resources/match_dicts/age_matches.json#L934-L935\n\nBut I thought I would find more... ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:00:18Z",
        "PR Comment": "I think I would err on the side of having replaCy assume less, and us having to do more work in the match_dicts to upgrade",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:02:20Z",
        "PR Comment": "not a recommendation, but fun fact: this can be written `lemmas |= option_lemmas`",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:47:57Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:55:07Z",
        "PR Comment": "Good catch! :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:56:11Z",
        "PR Comment": "This is different for people / person and on / oxen.\nBut you are right - added xfail cases to the test.\nNow, whenever we upgrade lemminflect, we can check whether lemmatization of irregular words is the same.",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:56:29Z",
        "PR Comment": ":smiley: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T22:34:30Z",
        "PR Comment": "done :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T22:39:43Z",
        "PR Comment": "Hmm I would rewrite that match to:\n```\n{\"TEXT\": \"who is\"},\n{\"TEXT\": [\"single\", \"unmarried\"]}\n```\nThen those rules would be ok :smile: \nBut yeah, I agree suppression might be confusing, and some matches will need rewrites.\nI promise to:\n- add suppression warnings\n- check `match_dicts` in dependent services\n- rethink how to make those criteria better.\n\nIn other words... let's :shipit: , then fix the reality :rofl: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T22:42:35Z",
        "PR Comment": "Same applies here. Done for fast :shipit: Let's make it better ... later :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T23:32:12Z",
        "PR Comment": "added simple logging :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T19:18:52Z",
        "PR Comment": "not sure this is a reasonable criteria, I guess I have to look at a bigger match dict...",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T19:23:59Z",
        "PR Comment": "this isn't blocking. It seems like you had to do a lot of list-membership checking, and used sets, when there are ways that are more :snek:\n\nThis one, for example, feels less-pythonic than\n\n```suggestion\n            if any([article in item_options for article in [\"a\", \"an\", \"the\"]]):\n```",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:05:17Z",
        "PR Comment": "again, non-blocking style thing. I think this is the same as:\n\n```suggestion\n            if all([el in item_options for el in [\"person\", \"people\"]]) or all([el in item_options for el in [\"ox\", \"oxen\"]]):\n                return 1\n```\n\nSince I am mathy, set operations make sense (and I know the Python syntax for intersection with `&`) but it may be more obvious to use `all`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:18:11Z",
        "PR Comment": "wait the lemmas are different? are we testing this just to document the weirdness?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:18:49Z",
        "PR Comment": "`plural` and `singular` switched for all of these, not that it matters (but since it's open thought you'd want to know)",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:19:16Z",
        "PR Comment": "Can we have a test case that uses `MAX_COUNT`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:19:39Z",
        "PR Comment": "I like little classes like this",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T20:59:39Z",
        "PR Comment": "Here is an example where multi-token does not imply max count one:\nhttps://github.com/Qordobacode/service.inclusivity/blob/master/service_inclusivity/resources/match_dicts/age_matches.json#L934-L935\n\nBut I thought I would find more... ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:00:18Z",
        "PR Comment": "I think I would err on the side of having replaCy assume less, and us having to do more work in the match_dicts to upgrade",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:02:20Z",
        "PR Comment": "not a recommendation, but fun fact: this can be written `lemmas |= option_lemmas`",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:47:57Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:55:07Z",
        "PR Comment": "Good catch! :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:56:11Z",
        "PR Comment": "This is different for people / person and on / oxen.\nBut you are right - added xfail cases to the test.\nNow, whenever we upgrade lemminflect, we can check whether lemmatization of irregular words is the same.",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T21:56:29Z",
        "PR Comment": ":smiley: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T22:34:30Z",
        "PR Comment": "done :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T22:39:43Z",
        "PR Comment": "Hmm I would rewrite that match to:\n```\n{\"TEXT\": \"who is\"},\n{\"TEXT\": [\"single\", \"unmarried\"]}\n```\nThen those rules would be ok :smile: \nBut yeah, I agree suppression might be confusing, and some matches will need rewrites.\nI promise to:\n- add suppression warnings\n- check `match_dicts` in dependent services\n- rethink how to make those criteria better.\n\nIn other words... let's :shipit: , then fix the reality :rofl: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T22:42:35Z",
        "PR Comment": "Same applies here. Done for fast :shipit: Let's make it better ... later :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-09-09T23:32:12Z",
        "PR Comment": "added simple logging :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-07-02T07:37:01Z",
        "PR Comment": "just noticed that packaging is also pumping version!",
        "PR/Issue Number": "70"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-07-02T17:54:22Z",
        "PR Comment": ">\n> >just noticed that packaging is also pumping version!\n>\nIsn\u2019t it great?? I love me a good CI/CD setup\n\n> --\n\nSam Havens\nDirector of Data Science\n\n818.590.0484\n\nsam.havens@qordoba.com\n",
        "PR/Issue Number": "70"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-26T15:54:13Z",
        "PR Comment": "can we put this import in `get_default_lm`? If they don't want to use the LM, we shouldn't die if it isn't installed",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-26T17:14:03Z",
        "PR Comment": "These 2 parameters are so we can build the LM stuff,\n```python\nself.scorer = KenLMScorer(nlp=self.nlp, model=get_default_lm(testing=testing)) if use_lm else None\n```\n\nNow that I see that, it seems like directly passing in a `scorer` is cleaner (\"Dependency Injection\")",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-26T17:16:20Z",
        "PR Comment": "that is outdated, but same idea: can we put this in `load_lm` ?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T12:36:49Z",
        "PR Comment": "done :ok_hand: ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T12:37:30Z",
        "PR Comment": "Yes! Bonus: using lm is optional now.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T17:31:07Z",
        "PR Comment": ":yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T17:31:21Z",
        "PR Comment": "more :yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T17:32:00Z",
        "PR Comment": "```suggestion\nSpeed and accuracy benchmark (copied from the Lemminflect repo):\n```",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T17:32:31Z",
        "PR Comment": "even more :yay:!",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T22:43:08Z",
        "PR Comment": "Sorry, I don't really know if my code samples are right, since I don't know the type signatures\n\n`self.scorer` is `None` if there is no `KenLM`... Should we have the line that sets it be :\n\n```python\nself.scorer = (\n            KenLMScorer(nlp=self.nlp, model=load_lm(lm_path)) if lm_path else lambda x: 1\n        )\n```\n\ne.g. set it to the constant function?\n\nOr, if there is more than 1 suggestion, maybe `sort_suggestions` should have behavior that depends on `self.scorer`... meaning \"if it's None, either don't change the order, or randomize it\"",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-30T07:56:03Z",
        "PR Comment": "Can you reproduce the bug?\n\nSorting and scoring happens only if there is the scorer, otherwise this step is completely skipped:\nhttps://github.com/Qordobacode/replaCy/blob/c6eb41fba0b430c95b1feee5261807df716b3151/replacy/__init__.py#L392\n\nI think I disagree with randomizing suggestions since this doesn't look like a desired behavior before adding `kenlm` - what if users want to manually set the order of suggestions (because they feel some options will be better)?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-30T08:00:22Z",
        "PR Comment": "Take a look at `tests/test_suggestions.py`. This is the case when there is no `lm_path`.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-30T16:07:46Z",
        "PR Comment": "I see",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-26T22:36:51Z",
        "PR Comment": "I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T12:39:03Z",
        "PR Comment": "> I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n> ![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n\nChanged :ok_hand: \nAlso did one update (after rethinking json schema). Backward compatible.\n\n`INFLECTION` is always a string. You can set `POS`, `TAG` or `ALL`. ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-26T15:54:13Z",
        "PR Comment": "can we put this import in `get_default_lm`? If they don't want to use the LM, we shouldn't die if it isn't installed",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-26T17:14:03Z",
        "PR Comment": "These 2 parameters are so we can build the LM stuff,\n```python\nself.scorer = KenLMScorer(nlp=self.nlp, model=get_default_lm(testing=testing)) if use_lm else None\n```\n\nNow that I see that, it seems like directly passing in a `scorer` is cleaner (\"Dependency Injection\")",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-26T17:16:20Z",
        "PR Comment": "that is outdated, but same idea: can we put this in `load_lm` ?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T12:36:49Z",
        "PR Comment": "done :ok_hand: ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T12:37:30Z",
        "PR Comment": "Yes! Bonus: using lm is optional now.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T17:31:07Z",
        "PR Comment": ":yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T17:31:21Z",
        "PR Comment": "more :yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T17:32:00Z",
        "PR Comment": "```suggestion\nSpeed and accuracy benchmark (copied from the Lemminflect repo):\n```",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T17:32:31Z",
        "PR Comment": "even more :yay:!",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T22:43:08Z",
        "PR Comment": "Sorry, I don't really know if my code samples are right, since I don't know the type signatures\n\n`self.scorer` is `None` if there is no `KenLM`... Should we have the line that sets it be :\n\n```python\nself.scorer = (\n            KenLMScorer(nlp=self.nlp, model=load_lm(lm_path)) if lm_path else lambda x: 1\n        )\n```\n\ne.g. set it to the constant function?\n\nOr, if there is more than 1 suggestion, maybe `sort_suggestions` should have behavior that depends on `self.scorer`... meaning \"if it's None, either don't change the order, or randomize it\"",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-30T07:56:03Z",
        "PR Comment": "Can you reproduce the bug?\n\nSorting and scoring happens only if there is the scorer, otherwise this step is completely skipped:\nhttps://github.com/Qordobacode/replaCy/blob/c6eb41fba0b430c95b1feee5261807df716b3151/replacy/__init__.py#L392\n\nI think I disagree with randomizing suggestions since this doesn't look like a desired behavior before adding `kenlm` - what if users want to manually set the order of suggestions (because they feel some options will be better)?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-30T08:00:22Z",
        "PR Comment": "Take a look at `tests/test_suggestions.py`. This is the case when there is no `lm_path`.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-30T16:07:46Z",
        "PR Comment": "I see",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-26T22:36:51Z",
        "PR Comment": "I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T12:39:03Z",
        "PR Comment": "> I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n> ![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n\nChanged :ok_hand: \nAlso did one update (after rethinking json schema). Backward compatible.\n\n`INFLECTION` is always a string. You can set `POS`, `TAG` or `ALL`. ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-26T15:54:13Z",
        "PR Comment": "can we put this import in `get_default_lm`? If they don't want to use the LM, we shouldn't die if it isn't installed",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-26T17:14:03Z",
        "PR Comment": "These 2 parameters are so we can build the LM stuff,\n```python\nself.scorer = KenLMScorer(nlp=self.nlp, model=get_default_lm(testing=testing)) if use_lm else None\n```\n\nNow that I see that, it seems like directly passing in a `scorer` is cleaner (\"Dependency Injection\")",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-26T17:16:20Z",
        "PR Comment": "that is outdated, but same idea: can we put this in `load_lm` ?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T12:36:49Z",
        "PR Comment": "done :ok_hand: ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T12:37:30Z",
        "PR Comment": "Yes! Bonus: using lm is optional now.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T17:31:07Z",
        "PR Comment": ":yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T17:31:21Z",
        "PR Comment": "more :yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T17:32:00Z",
        "PR Comment": "```suggestion\nSpeed and accuracy benchmark (copied from the Lemminflect repo):\n```",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T17:32:31Z",
        "PR Comment": "even more :yay:!",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T22:43:08Z",
        "PR Comment": "Sorry, I don't really know if my code samples are right, since I don't know the type signatures\n\n`self.scorer` is `None` if there is no `KenLM`... Should we have the line that sets it be :\n\n```python\nself.scorer = (\n            KenLMScorer(nlp=self.nlp, model=load_lm(lm_path)) if lm_path else lambda x: 1\n        )\n```\n\ne.g. set it to the constant function?\n\nOr, if there is more than 1 suggestion, maybe `sort_suggestions` should have behavior that depends on `self.scorer`... meaning \"if it's None, either don't change the order, or randomize it\"",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-30T07:56:03Z",
        "PR Comment": "Can you reproduce the bug?\n\nSorting and scoring happens only if there is the scorer, otherwise this step is completely skipped:\nhttps://github.com/Qordobacode/replaCy/blob/c6eb41fba0b430c95b1feee5261807df716b3151/replacy/__init__.py#L392\n\nI think I disagree with randomizing suggestions since this doesn't look like a desired behavior before adding `kenlm` - what if users want to manually set the order of suggestions (because they feel some options will be better)?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-30T08:00:22Z",
        "PR Comment": "Take a look at `tests/test_suggestions.py`. This is the case when there is no `lm_path`.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-30T16:07:46Z",
        "PR Comment": "I see",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-26T22:36:51Z",
        "PR Comment": "I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T12:39:03Z",
        "PR Comment": "> I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n> ![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n\nChanged :ok_hand: \nAlso did one update (after rethinking json schema). Backward compatible.\n\n`INFLECTION` is always a string. You can set `POS`, `TAG` or `ALL`. ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-26T15:54:13Z",
        "PR Comment": "can we put this import in `get_default_lm`? If they don't want to use the LM, we shouldn't die if it isn't installed",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-26T17:14:03Z",
        "PR Comment": "These 2 parameters are so we can build the LM stuff,\n```python\nself.scorer = KenLMScorer(nlp=self.nlp, model=get_default_lm(testing=testing)) if use_lm else None\n```\n\nNow that I see that, it seems like directly passing in a `scorer` is cleaner (\"Dependency Injection\")",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-26T17:16:20Z",
        "PR Comment": "that is outdated, but same idea: can we put this in `load_lm` ?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T12:36:49Z",
        "PR Comment": "done :ok_hand: ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T12:37:30Z",
        "PR Comment": "Yes! Bonus: using lm is optional now.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T17:31:07Z",
        "PR Comment": ":yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T17:31:21Z",
        "PR Comment": "more :yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T17:32:00Z",
        "PR Comment": "```suggestion\nSpeed and accuracy benchmark (copied from the Lemminflect repo):\n```",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T17:32:31Z",
        "PR Comment": "even more :yay:!",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T22:43:08Z",
        "PR Comment": "Sorry, I don't really know if my code samples are right, since I don't know the type signatures\n\n`self.scorer` is `None` if there is no `KenLM`... Should we have the line that sets it be :\n\n```python\nself.scorer = (\n            KenLMScorer(nlp=self.nlp, model=load_lm(lm_path)) if lm_path else lambda x: 1\n        )\n```\n\ne.g. set it to the constant function?\n\nOr, if there is more than 1 suggestion, maybe `sort_suggestions` should have behavior that depends on `self.scorer`... meaning \"if it's None, either don't change the order, or randomize it\"",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-30T07:56:03Z",
        "PR Comment": "Can you reproduce the bug?\n\nSorting and scoring happens only if there is the scorer, otherwise this step is completely skipped:\nhttps://github.com/Qordobacode/replaCy/blob/c6eb41fba0b430c95b1feee5261807df716b3151/replacy/__init__.py#L392\n\nI think I disagree with randomizing suggestions since this doesn't look like a desired behavior before adding `kenlm` - what if users want to manually set the order of suggestions (because they feel some options will be better)?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-30T08:00:22Z",
        "PR Comment": "Take a look at `tests/test_suggestions.py`. This is the case when there is no `lm_path`.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-30T16:07:46Z",
        "PR Comment": "I see",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-26T22:36:51Z",
        "PR Comment": "I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T12:39:03Z",
        "PR Comment": "> I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n> ![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n\nChanged :ok_hand: \nAlso did one update (after rethinking json schema). Backward compatible.\n\n`INFLECTION` is always a string. You can set `POS`, `TAG` or `ALL`. ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-26T15:54:13Z",
        "PR Comment": "can we put this import in `get_default_lm`? If they don't want to use the LM, we shouldn't die if it isn't installed",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-26T17:14:03Z",
        "PR Comment": "These 2 parameters are so we can build the LM stuff,\n```python\nself.scorer = KenLMScorer(nlp=self.nlp, model=get_default_lm(testing=testing)) if use_lm else None\n```\n\nNow that I see that, it seems like directly passing in a `scorer` is cleaner (\"Dependency Injection\")",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-26T17:16:20Z",
        "PR Comment": "that is outdated, but same idea: can we put this in `load_lm` ?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T12:36:49Z",
        "PR Comment": "done :ok_hand: ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T12:37:30Z",
        "PR Comment": "Yes! Bonus: using lm is optional now.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T17:31:07Z",
        "PR Comment": ":yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T17:31:21Z",
        "PR Comment": "more :yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T17:32:00Z",
        "PR Comment": "```suggestion\nSpeed and accuracy benchmark (copied from the Lemminflect repo):\n```",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T17:32:31Z",
        "PR Comment": "even more :yay:!",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T22:43:08Z",
        "PR Comment": "Sorry, I don't really know if my code samples are right, since I don't know the type signatures\n\n`self.scorer` is `None` if there is no `KenLM`... Should we have the line that sets it be :\n\n```python\nself.scorer = (\n            KenLMScorer(nlp=self.nlp, model=load_lm(lm_path)) if lm_path else lambda x: 1\n        )\n```\n\ne.g. set it to the constant function?\n\nOr, if there is more than 1 suggestion, maybe `sort_suggestions` should have behavior that depends on `self.scorer`... meaning \"if it's None, either don't change the order, or randomize it\"",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-30T07:56:03Z",
        "PR Comment": "Can you reproduce the bug?\n\nSorting and scoring happens only if there is the scorer, otherwise this step is completely skipped:\nhttps://github.com/Qordobacode/replaCy/blob/c6eb41fba0b430c95b1feee5261807df716b3151/replacy/__init__.py#L392\n\nI think I disagree with randomizing suggestions since this doesn't look like a desired behavior before adding `kenlm` - what if users want to manually set the order of suggestions (because they feel some options will be better)?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-30T08:00:22Z",
        "PR Comment": "Take a look at `tests/test_suggestions.py`. This is the case when there is no `lm_path`.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-30T16:07:46Z",
        "PR Comment": "I see",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-26T22:36:51Z",
        "PR Comment": "I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-29T12:39:03Z",
        "PR Comment": "> I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n> ![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n\nChanged :ok_hand: \nAlso did one update (after rethinking json schema). Backward compatible.\n\n`INFLECTION` is always a string. You can set `POS`, `TAG` or `ALL`. ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-24T19:59:18Z",
        "PR Comment": "This also adds `REPLACY_OP` key for use like\n\n```json\n\"suggestions\": [\n            [\n                {\n                    \"PATTERN_REF\": -1\n                },\n                {\n                    \"TEXT\": \"with\"\n                },\n                {\n                    \"PATTERN_REF\": -2,\n                    \"REPLACY_OP\": \"LOWER\"\n                }\n            ]\n        ],\n```\n\nso far, options are `LOWER/TITLE/UPPER`",
        "PR/Issue Number": "62"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-24T19:59:18Z",
        "PR Comment": "This also adds `REPLACY_OP` key for use like\n\n```json\n\"suggestions\": [\n            [\n                {\n                    \"PATTERN_REF\": -1\n                },\n                {\n                    \"TEXT\": \"with\"\n                },\n                {\n                    \"PATTERN_REF\": -2,\n                    \"REPLACY_OP\": \"LOWER\"\n                }\n            ]\n        ],\n```\n\nso far, options are `LOWER/TITLE/UPPER`",
        "PR/Issue Number": "62"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T11:09:00Z",
        "PR Comment": "The code grows and I am getting confused lol\nWhat does this function return if not `v == value` ? ",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T11:19:28Z",
        "PR Comment": "We could display a warning? \nAlthough - if this works - I would leave it. The less user need to know - the better (imo).",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T11:21:47Z",
        "PR Comment": ":+1: ",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T11:27:57Z",
        "PR Comment": "Seeing in line 212 `any()` so `True, False, None` are all ok.\nLine 209 should be fine too.\nBut still would be awesome to return bool here. :grimacing: :pray: \n",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T16:50:00Z",
        "PR Comment": "Yeah part of me wants to get rid of `kwargs`, but part of me now hates `args`. So I guess I will leave for now",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T16:50:47Z",
        "PR Comment": "yeah, `_relatives_x_is_y` is like, a partial implementation of a DependencyMatcher :lol-sob: sorry",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T16:51:51Z",
        "PR Comment": "when I pulled the logic out into the `_helper` function, I dropped that case, sorry. adding back",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T16:57:13Z",
        "PR Comment": "should be fixed now",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T16:59:44Z",
        "PR Comment": "Ok I changed this behavior and added a warning. Now if you want to call a function with a single dict as an argument, you can, by passing it to args (though it will warn you). If you want instead to call a function with many named args (a polyary? function? is that a word? multiary? I've only seen n-ary but that's dumb), you use `kwargs`",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T17:47:55Z",
        "PR Comment": ":hard-approve!",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T11:09:00Z",
        "PR Comment": "The code grows and I am getting confused lol\nWhat does this function return if not `v == value` ? ",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T11:19:28Z",
        "PR Comment": "We could display a warning? \nAlthough - if this works - I would leave it. The less user need to know - the better (imo).",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T11:21:47Z",
        "PR Comment": ":+1: ",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T11:27:57Z",
        "PR Comment": "Seeing in line 212 `any()` so `True, False, None` are all ok.\nLine 209 should be fine too.\nBut still would be awesome to return bool here. :grimacing: :pray: \n",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T16:50:00Z",
        "PR Comment": "Yeah part of me wants to get rid of `kwargs`, but part of me now hates `args`. So I guess I will leave for now",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T16:50:47Z",
        "PR Comment": "yeah, `_relatives_x_is_y` is like, a partial implementation of a DependencyMatcher :lol-sob: sorry",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T16:51:51Z",
        "PR Comment": "when I pulled the logic out into the `_helper` function, I dropped that case, sorry. adding back",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T16:57:13Z",
        "PR Comment": "should be fixed now",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T16:59:44Z",
        "PR Comment": "Ok I changed this behavior and added a warning. Now if you want to call a function with a single dict as an argument, you can, by passing it to args (though it will warn you). If you want instead to call a function with many named args (a polyary? function? is that a word? multiary? I've only seen n-ary but that's dumb), you use `kwargs`",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T17:47:55Z",
        "PR Comment": ":hard-approve!",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T11:09:00Z",
        "PR Comment": "The code grows and I am getting confused lol\nWhat does this function return if not `v == value` ? ",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T11:19:28Z",
        "PR Comment": "We could display a warning? \nAlthough - if this works - I would leave it. The less user need to know - the better (imo).",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T11:21:47Z",
        "PR Comment": ":+1: ",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T11:27:57Z",
        "PR Comment": "Seeing in line 212 `any()` so `True, False, None` are all ok.\nLine 209 should be fine too.\nBut still would be awesome to return bool here. :grimacing: :pray: \n",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T16:50:00Z",
        "PR Comment": "Yeah part of me wants to get rid of `kwargs`, but part of me now hates `args`. So I guess I will leave for now",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T16:50:47Z",
        "PR Comment": "yeah, `_relatives_x_is_y` is like, a partial implementation of a DependencyMatcher :lol-sob: sorry",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T16:51:51Z",
        "PR Comment": "when I pulled the logic out into the `_helper` function, I dropped that case, sorry. adding back",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T16:57:13Z",
        "PR Comment": "should be fixed now",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T16:59:44Z",
        "PR Comment": "Ok I changed this behavior and added a warning. Now if you want to call a function with a single dict as an argument, you can, by passing it to args (though it will warn you). If you want instead to call a function with many named args (a polyary? function? is that a word? multiary? I've only seen n-ary but that's dumb), you use `kwargs`",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-18T17:47:55Z",
        "PR Comment": ":hard-approve!",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-15T16:18:55Z",
        "PR Comment": "Wondering whether we should use `text_with_ws` instead. Token text can drop ws, unlike `TEXT`.\nFix in `inflect_or_lookup` would be needed too.",
        "PR/Issue Number": "39"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-15T16:27:08Z",
        "PR Comment": "This assumes `PATTERN REF` is always disjoint from `FROM TEMPLATE_ID`.\nWhat if I want to copy a token from a pattern with inflection copied from another token? Or insert TEXT with `INFLECTION`?\nie would be nice to extend functionality of previous patterns instead of adding new types of patterns which lack functionality of the first.\nOtherwise `lt-patterns` can only change inflections.\n",
        "PR/Issue Number": "39"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-15T16:28:46Z",
        "PR Comment": "After this point we have `refd_token` (spacy token) OR `text` (string). Can we have one object with the same type? (See next comment. Maybe\n```\ntext = refd_token.text_with_ws\n```",
        "PR/Issue Number": "39"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-15T17:07:28Z",
        "PR Comment": "So, I think if they want to do `TEXT + INFLECTION` they can just do that lookup before writing the pattern (`run + VBN` is `ran`, just look that up), but you're right about `PATTERN_REF` and `FROM_TEMPLATE_ID`. I did consider this.\n\nThe reason I thought this was okay is that `PATTERN_REF` can hit any token you want, as in, there is no functionality that you can't build with this implementation (though it's not as clean as I'd like) that you could build if the combo of `PATTERN_REF` and `FROM_TEMPLATE_ID` were supported",
        "PR/Issue Number": "39"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-15T17:18:36Z",
        "PR Comment": "> Would be nice to extend replaCy functionality instead of adding new.\n\ndoes this comment mean you think we shouldn't be able to change the replaCy syntax?",
        "PR/Issue Number": "39"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-15T18:44:19Z",
        "PR Comment": "It means I prefer adding new features to tokens that can be used jointly instead of adding a separate case. There is no `should/shouldn't`. Just aesthetics.\n\nComparison:\n- copy token or inflection from any token from the pattern\n- vs. error. no, you can just set inflection if you are copying a token, you can't copy inflection\n\nI imagine an interface when you can freely point arrows to construct suggestions from patterns. Case 2 would be a strange restriction.\n\nCurrent state is already cool though, so I am fine with considering extensions later.",
        "PR/Issue Number": "39"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-17T16:45:04Z",
        "PR Comment": "agreed this is sub-par.",
        "PR/Issue Number": "39"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-06-14T01:31:53Z",
        "PR Comment": "*sigh* just realized my personal computer has the max line length set to 80, and different rules for Markdown and JSON formatting, so there are extra formatting diffs... Let me know if I need to change that.\n\nMaybe we can check the correct `.vscode/settings.json` into git so it overrides local settings?\n\nSorry",
        "PR/Issue Number": "39"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-05-01T01:10:13Z",
        "PR Comment": ":yay:",
        "PR/Issue Number": "24"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-05-01T01:12:40Z",
        "PR Comment": "I am a fan of your READMEs :rofl: :heart: ",
        "PR/Issue Number": "24"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-05-01T14:42:56Z",
        "PR Comment": "I am finding it quite confusing that `self.replacy_patterns` and `self.custom_match_hooks` are actually of the same type. Just the naming convention ...",
        "PR/Issue Number": "24"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-05-01T16:04:21Z",
        "PR Comment": "I totally agree. Maybe `self.default_match_hooks` and `self.custom_match_hooks`?",
        "PR/Issue Number": "24"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-05-01T16:24:34Z",
        "PR Comment": "I wrote a bit more in the README about how replaCy creates custom span extensions based on unexpected keys in match_dict.json. I also made the naming convention around match_hooks more reasonable!",
        "PR/Issue Number": "24"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-05-01T01:10:13Z",
        "PR Comment": ":yay:",
        "PR/Issue Number": "24"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-05-01T01:12:40Z",
        "PR Comment": "I am a fan of your READMEs :rofl: :heart: ",
        "PR/Issue Number": "24"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-05-01T14:42:56Z",
        "PR Comment": "I am finding it quite confusing that `self.replacy_patterns` and `self.custom_match_hooks` are actually of the same type. Just the naming convention ...",
        "PR/Issue Number": "24"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-05-01T16:04:21Z",
        "PR Comment": "I totally agree. Maybe `self.default_match_hooks` and `self.custom_match_hooks`?",
        "PR/Issue Number": "24"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-05-01T16:24:34Z",
        "PR Comment": "I wrote a bit more in the README about how replaCy creates custom span extensions based on unexpected keys in match_dict.json. I also made the naming convention around match_hooks more reasonable!",
        "PR/Issue Number": "24"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-03-09T23:16:33Z",
        "PR Comment": "This is built and on [PyPi](https://pypi.org/project/replacy/0.11.0/) - we can take it down if this PR isn't okay, but I wanted to use it ASAP",
        "PR/Issue Number": "15"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-03-09T23:16:48Z",
        "PR Comment": "BTW, this closes #14 ",
        "PR/Issue Number": "15"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-03-10T00:53:40Z",
        "PR Comment": "@melisa-qordoba sorry for merging without review, but tests pass, and this works in a downstream app...",
        "PR/Issue Number": "15"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-02-28T23:58:17Z",
        "PR Comment": ":laughing: ",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-02-28T23:59:35Z",
        "PR Comment": "oh, I must: `flat_map` ? ",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-02-29T00:08:18Z",
        "PR Comment": ":laughing: ",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-02-28T23:40:20Z",
        "PR Comment": "oh my god the part I thought would be easy is impossible :sob:",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-03-01T20:20:17Z",
        "PR Comment": "Good point about flatmap! I built that iteratively, but didn\u2019t optimize it",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-02-28T23:58:17Z",
        "PR Comment": ":laughing: ",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-02-28T23:59:35Z",
        "PR Comment": "oh, I must: `flat_map` ? ",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-02-29T00:08:18Z",
        "PR Comment": ":laughing: ",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-02-28T23:40:20Z",
        "PR Comment": "oh my god the part I thought would be easy is impossible :sob:",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-03-01T20:20:17Z",
        "PR Comment": "Good point about flatmap! I built that iteratively, but didn\u2019t optimize it",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-02-28T23:58:17Z",
        "PR Comment": ":laughing: ",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-02-28T23:59:35Z",
        "PR Comment": "oh, I must: `flat_map` ? ",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-02-29T00:08:18Z",
        "PR Comment": ":laughing: ",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-02-28T23:40:20Z",
        "PR Comment": "oh my god the part I thought would be easy is impossible :sob:",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-03-01T20:20:17Z",
        "PR Comment": "Good point about flatmap! I built that iteratively, but didn\u2019t optimize it",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-02-07T23:14:40Z",
        "PR Comment": ":sob: another gone",
        "PR/Issue Number": "9"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-02-07T23:41:35Z",
        "PR Comment": "hopefully I convinced you this was OK",
        "PR/Issue Number": "9"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-02-07T23:35:09Z",
        "PR Comment": "Copying what I Slacked Melisa, in case @q-biljana is curious:\n\nI want to convince you that what I did in replacy/__init__.py  is okay...\n\nspecifically, I removed a try/catch , and you might think that violates your rule of \"never fail at runtime\"... but! I don't think it does. Because I made a small code change, so that get_predicates is only ever run when you init the matcher. So this way, if you have a bad match hook, it will fail, but right away\n\nbefore, `predicates = self.get_predicates(match_hooks)` was in the callback passed to the matcher, so it was run every time it checked for a match\n\nso I moved it out of the callback (but still in `get_callback`), so it gets run once when you init the matcher... and then the callback you return is in a closure that has the value of predicates\n\nI haven't had to think about closures in a while...",
        "PR/Issue Number": "9"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-01-17T21:33:08Z",
        "PR Comment": "On PyPi it says we're already on 0.5.0 ... sorry, I don't know how that happened.",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-01-17T21:33:15Z",
        "PR Comment": "https://pypi.org/project/replacy/",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/__init__.py",
        "Creation Date": "2020-01-17T21:39:10Z",
        "PR Comment": "bumped",
        "PR/Issue Number": "6"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-09-09T19:18:52Z",
        "PR Comment": "not sure this is a reasonable criteria, I guess I have to look at a bigger match dict...",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-09-09T19:23:59Z",
        "PR Comment": "this isn't blocking. It seems like you had to do a lot of list-membership checking, and used sets, when there are ways that are more :snek:\n\nThis one, for example, feels less-pythonic than\n\n```suggestion\n            if any([article in item_options for article in [\"a\", \"an\", \"the\"]]):\n```",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-09-09T20:05:17Z",
        "PR Comment": "again, non-blocking style thing. I think this is the same as:\n\n```suggestion\n            if all([el in item_options for el in [\"person\", \"people\"]]) or all([el in item_options for el in [\"ox\", \"oxen\"]]):\n                return 1\n```\n\nSince I am mathy, set operations make sense (and I know the Python syntax for intersection with `&`) but it may be more obvious to use `all`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-09-09T20:18:11Z",
        "PR Comment": "wait the lemmas are different? are we testing this just to document the weirdness?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-09-09T20:18:49Z",
        "PR Comment": "`plural` and `singular` switched for all of these, not that it matters (but since it's open thought you'd want to know)",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-09-09T20:19:16Z",
        "PR Comment": "Can we have a test case that uses `MAX_COUNT`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-09-09T20:19:39Z",
        "PR Comment": "I like little classes like this",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-09-09T20:59:39Z",
        "PR Comment": "Here is an example where multi-token does not imply max count one:\nhttps://github.com/Qordobacode/service.inclusivity/blob/master/service_inclusivity/resources/match_dicts/age_matches.json#L934-L935\n\nBut I thought I would find more... ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-09-09T21:00:18Z",
        "PR Comment": "I think I would err on the side of having replaCy assume less, and us having to do more work in the match_dicts to upgrade",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-09-09T21:02:20Z",
        "PR Comment": "not a recommendation, but fun fact: this can be written `lemmas |= option_lemmas`",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-09-09T21:47:57Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-09-09T21:55:07Z",
        "PR Comment": "Good catch! :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-09-09T21:56:11Z",
        "PR Comment": "This is different for people / person and on / oxen.\nBut you are right - added xfail cases to the test.\nNow, whenever we upgrade lemminflect, we can check whether lemmatization of irregular words is the same.",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-09-09T21:56:29Z",
        "PR Comment": ":smiley: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-09-09T22:34:30Z",
        "PR Comment": "done :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-09-09T22:39:43Z",
        "PR Comment": "Hmm I would rewrite that match to:\n```\n{\"TEXT\": \"who is\"},\n{\"TEXT\": [\"single\", \"unmarried\"]}\n```\nThen those rules would be ok :smile: \nBut yeah, I agree suppression might be confusing, and some matches will need rewrites.\nI promise to:\n- add suppression warnings\n- check `match_dicts` in dependent services\n- rethink how to make those criteria better.\n\nIn other words... let's :shipit: , then fix the reality :rofl: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-09-09T22:42:35Z",
        "PR Comment": "Same applies here. Done for fast :shipit: Let's make it better ... later :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-09-09T23:32:12Z",
        "PR Comment": "added simple logging :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-26T15:54:13Z",
        "PR Comment": "can we put this import in `get_default_lm`? If they don't want to use the LM, we shouldn't die if it isn't installed",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-26T17:14:03Z",
        "PR Comment": "These 2 parameters are so we can build the LM stuff,\n```python\nself.scorer = KenLMScorer(nlp=self.nlp, model=get_default_lm(testing=testing)) if use_lm else None\n```\n\nNow that I see that, it seems like directly passing in a `scorer` is cleaner (\"Dependency Injection\")",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-26T17:16:20Z",
        "PR Comment": "that is outdated, but same idea: can we put this in `load_lm` ?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T12:36:49Z",
        "PR Comment": "done :ok_hand: ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T12:37:30Z",
        "PR Comment": "Yes! Bonus: using lm is optional now.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T17:31:07Z",
        "PR Comment": ":yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T17:31:21Z",
        "PR Comment": "more :yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T17:32:00Z",
        "PR Comment": "```suggestion\nSpeed and accuracy benchmark (copied from the Lemminflect repo):\n```",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T17:32:31Z",
        "PR Comment": "even more :yay:!",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T22:43:08Z",
        "PR Comment": "Sorry, I don't really know if my code samples are right, since I don't know the type signatures\n\n`self.scorer` is `None` if there is no `KenLM`... Should we have the line that sets it be :\n\n```python\nself.scorer = (\n            KenLMScorer(nlp=self.nlp, model=load_lm(lm_path)) if lm_path else lambda x: 1\n        )\n```\n\ne.g. set it to the constant function?\n\nOr, if there is more than 1 suggestion, maybe `sort_suggestions` should have behavior that depends on `self.scorer`... meaning \"if it's None, either don't change the order, or randomize it\"",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-30T07:56:03Z",
        "PR Comment": "Can you reproduce the bug?\n\nSorting and scoring happens only if there is the scorer, otherwise this step is completely skipped:\nhttps://github.com/Qordobacode/replaCy/blob/c6eb41fba0b430c95b1feee5261807df716b3151/replacy/__init__.py#L392\n\nI think I disagree with randomizing suggestions since this doesn't look like a desired behavior before adding `kenlm` - what if users want to manually set the order of suggestions (because they feel some options will be better)?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-30T08:00:22Z",
        "PR Comment": "Take a look at `tests/test_suggestions.py`. This is the case when there is no `lm_path`.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-30T16:07:46Z",
        "PR Comment": "I see",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-26T22:36:51Z",
        "PR Comment": "I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T12:39:03Z",
        "PR Comment": "> I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n> ![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n\nChanged :ok_hand: \nAlso did one update (after rethinking json schema). Backward compatible.\n\n`INFLECTION` is always a string. You can set `POS`, `TAG` or `ALL`. ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-26T15:54:13Z",
        "PR Comment": "can we put this import in `get_default_lm`? If they don't want to use the LM, we shouldn't die if it isn't installed",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-26T17:14:03Z",
        "PR Comment": "These 2 parameters are so we can build the LM stuff,\n```python\nself.scorer = KenLMScorer(nlp=self.nlp, model=get_default_lm(testing=testing)) if use_lm else None\n```\n\nNow that I see that, it seems like directly passing in a `scorer` is cleaner (\"Dependency Injection\")",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-26T17:16:20Z",
        "PR Comment": "that is outdated, but same idea: can we put this in `load_lm` ?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T12:36:49Z",
        "PR Comment": "done :ok_hand: ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T12:37:30Z",
        "PR Comment": "Yes! Bonus: using lm is optional now.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T17:31:07Z",
        "PR Comment": ":yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T17:31:21Z",
        "PR Comment": "more :yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T17:32:00Z",
        "PR Comment": "```suggestion\nSpeed and accuracy benchmark (copied from the Lemminflect repo):\n```",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T17:32:31Z",
        "PR Comment": "even more :yay:!",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T22:43:08Z",
        "PR Comment": "Sorry, I don't really know if my code samples are right, since I don't know the type signatures\n\n`self.scorer` is `None` if there is no `KenLM`... Should we have the line that sets it be :\n\n```python\nself.scorer = (\n            KenLMScorer(nlp=self.nlp, model=load_lm(lm_path)) if lm_path else lambda x: 1\n        )\n```\n\ne.g. set it to the constant function?\n\nOr, if there is more than 1 suggestion, maybe `sort_suggestions` should have behavior that depends on `self.scorer`... meaning \"if it's None, either don't change the order, or randomize it\"",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-30T07:56:03Z",
        "PR Comment": "Can you reproduce the bug?\n\nSorting and scoring happens only if there is the scorer, otherwise this step is completely skipped:\nhttps://github.com/Qordobacode/replaCy/blob/c6eb41fba0b430c95b1feee5261807df716b3151/replacy/__init__.py#L392\n\nI think I disagree with randomizing suggestions since this doesn't look like a desired behavior before adding `kenlm` - what if users want to manually set the order of suggestions (because they feel some options will be better)?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-30T08:00:22Z",
        "PR Comment": "Take a look at `tests/test_suggestions.py`. This is the case when there is no `lm_path`.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-30T16:07:46Z",
        "PR Comment": "I see",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-26T22:36:51Z",
        "PR Comment": "I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T12:39:03Z",
        "PR Comment": "> I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n> ![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n\nChanged :ok_hand: \nAlso did one update (after rethinking json schema). Backward compatible.\n\n`INFLECTION` is always a string. You can set `POS`, `TAG` or `ALL`. ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-26T15:54:13Z",
        "PR Comment": "can we put this import in `get_default_lm`? If they don't want to use the LM, we shouldn't die if it isn't installed",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-26T17:14:03Z",
        "PR Comment": "These 2 parameters are so we can build the LM stuff,\n```python\nself.scorer = KenLMScorer(nlp=self.nlp, model=get_default_lm(testing=testing)) if use_lm else None\n```\n\nNow that I see that, it seems like directly passing in a `scorer` is cleaner (\"Dependency Injection\")",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-26T17:16:20Z",
        "PR Comment": "that is outdated, but same idea: can we put this in `load_lm` ?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T12:36:49Z",
        "PR Comment": "done :ok_hand: ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T12:37:30Z",
        "PR Comment": "Yes! Bonus: using lm is optional now.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T17:31:07Z",
        "PR Comment": ":yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T17:31:21Z",
        "PR Comment": "more :yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T17:32:00Z",
        "PR Comment": "```suggestion\nSpeed and accuracy benchmark (copied from the Lemminflect repo):\n```",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T17:32:31Z",
        "PR Comment": "even more :yay:!",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T22:43:08Z",
        "PR Comment": "Sorry, I don't really know if my code samples are right, since I don't know the type signatures\n\n`self.scorer` is `None` if there is no `KenLM`... Should we have the line that sets it be :\n\n```python\nself.scorer = (\n            KenLMScorer(nlp=self.nlp, model=load_lm(lm_path)) if lm_path else lambda x: 1\n        )\n```\n\ne.g. set it to the constant function?\n\nOr, if there is more than 1 suggestion, maybe `sort_suggestions` should have behavior that depends on `self.scorer`... meaning \"if it's None, either don't change the order, or randomize it\"",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-30T07:56:03Z",
        "PR Comment": "Can you reproduce the bug?\n\nSorting and scoring happens only if there is the scorer, otherwise this step is completely skipped:\nhttps://github.com/Qordobacode/replaCy/blob/c6eb41fba0b430c95b1feee5261807df716b3151/replacy/__init__.py#L392\n\nI think I disagree with randomizing suggestions since this doesn't look like a desired behavior before adding `kenlm` - what if users want to manually set the order of suggestions (because they feel some options will be better)?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-30T08:00:22Z",
        "PR Comment": "Take a look at `tests/test_suggestions.py`. This is the case when there is no `lm_path`.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-30T16:07:46Z",
        "PR Comment": "I see",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-26T22:36:51Z",
        "PR Comment": "I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T12:39:03Z",
        "PR Comment": "> I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n> ![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n\nChanged :ok_hand: \nAlso did one update (after rethinking json schema). Backward compatible.\n\n`INFLECTION` is always a string. You can set `POS`, `TAG` or `ALL`. ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-26T15:54:13Z",
        "PR Comment": "can we put this import in `get_default_lm`? If they don't want to use the LM, we shouldn't die if it isn't installed",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-26T17:14:03Z",
        "PR Comment": "These 2 parameters are so we can build the LM stuff,\n```python\nself.scorer = KenLMScorer(nlp=self.nlp, model=get_default_lm(testing=testing)) if use_lm else None\n```\n\nNow that I see that, it seems like directly passing in a `scorer` is cleaner (\"Dependency Injection\")",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-26T17:16:20Z",
        "PR Comment": "that is outdated, but same idea: can we put this in `load_lm` ?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T12:36:49Z",
        "PR Comment": "done :ok_hand: ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T12:37:30Z",
        "PR Comment": "Yes! Bonus: using lm is optional now.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T17:31:07Z",
        "PR Comment": ":yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T17:31:21Z",
        "PR Comment": "more :yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T17:32:00Z",
        "PR Comment": "```suggestion\nSpeed and accuracy benchmark (copied from the Lemminflect repo):\n```",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T17:32:31Z",
        "PR Comment": "even more :yay:!",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T22:43:08Z",
        "PR Comment": "Sorry, I don't really know if my code samples are right, since I don't know the type signatures\n\n`self.scorer` is `None` if there is no `KenLM`... Should we have the line that sets it be :\n\n```python\nself.scorer = (\n            KenLMScorer(nlp=self.nlp, model=load_lm(lm_path)) if lm_path else lambda x: 1\n        )\n```\n\ne.g. set it to the constant function?\n\nOr, if there is more than 1 suggestion, maybe `sort_suggestions` should have behavior that depends on `self.scorer`... meaning \"if it's None, either don't change the order, or randomize it\"",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-30T07:56:03Z",
        "PR Comment": "Can you reproduce the bug?\n\nSorting and scoring happens only if there is the scorer, otherwise this step is completely skipped:\nhttps://github.com/Qordobacode/replaCy/blob/c6eb41fba0b430c95b1feee5261807df716b3151/replacy/__init__.py#L392\n\nI think I disagree with randomizing suggestions since this doesn't look like a desired behavior before adding `kenlm` - what if users want to manually set the order of suggestions (because they feel some options will be better)?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-30T08:00:22Z",
        "PR Comment": "Take a look at `tests/test_suggestions.py`. This is the case when there is no `lm_path`.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-30T16:07:46Z",
        "PR Comment": "I see",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-26T22:36:51Z",
        "PR Comment": "I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-29T12:39:03Z",
        "PR Comment": "> I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n> ![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n\nChanged :ok_hand: \nAlso did one update (after rethinking json schema). Backward compatible.\n\n`INFLECTION` is always a string. You can set `POS`, `TAG` or `ALL`. ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-15T16:18:55Z",
        "PR Comment": "Wondering whether we should use `text_with_ws` instead. Token text can drop ws, unlike `TEXT`.\nFix in `inflect_or_lookup` would be needed too.",
        "PR/Issue Number": "39"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-15T16:27:08Z",
        "PR Comment": "This assumes `PATTERN REF` is always disjoint from `FROM TEMPLATE_ID`.\nWhat if I want to copy a token from a pattern with inflection copied from another token? Or insert TEXT with `INFLECTION`?\nie would be nice to extend functionality of previous patterns instead of adding new types of patterns which lack functionality of the first.\nOtherwise `lt-patterns` can only change inflections.\n",
        "PR/Issue Number": "39"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-15T16:28:46Z",
        "PR Comment": "After this point we have `refd_token` (spacy token) OR `text` (string). Can we have one object with the same type? (See next comment. Maybe\n```\ntext = refd_token.text_with_ws\n```",
        "PR/Issue Number": "39"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-15T17:07:28Z",
        "PR Comment": "So, I think if they want to do `TEXT + INFLECTION` they can just do that lookup before writing the pattern (`run + VBN` is `ran`, just look that up), but you're right about `PATTERN_REF` and `FROM_TEMPLATE_ID`. I did consider this.\n\nThe reason I thought this was okay is that `PATTERN_REF` can hit any token you want, as in, there is no functionality that you can't build with this implementation (though it's not as clean as I'd like) that you could build if the combo of `PATTERN_REF` and `FROM_TEMPLATE_ID` were supported",
        "PR/Issue Number": "39"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-15T17:18:36Z",
        "PR Comment": "> Would be nice to extend replaCy functionality instead of adding new.\n\ndoes this comment mean you think we shouldn't be able to change the replaCy syntax?",
        "PR/Issue Number": "39"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-15T18:44:19Z",
        "PR Comment": "It means I prefer adding new features to tokens that can be used jointly instead of adding a separate case. There is no `should/shouldn't`. Just aesthetics.\n\nComparison:\n- copy token or inflection from any token from the pattern\n- vs. error. no, you can just set inflection if you are copying a token, you can't copy inflection\n\nI imagine an interface when you can freely point arrows to construct suggestions from patterns. Case 2 would be a strange restriction.\n\nCurrent state is already cool though, so I am fine with considering extensions later.",
        "PR/Issue Number": "39"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-17T16:45:04Z",
        "PR Comment": "agreed this is sub-par.",
        "PR/Issue Number": "39"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "replacy/inflector.py",
        "Creation Date": "2020-06-14T01:31:53Z",
        "PR Comment": "*sigh* just realized my personal computer has the max line length set to 80, and different rules for Markdown and JSON formatting, so there are extra formatting diffs... Let me know if I need to change that.\n\nMaybe we can check the correct `.vscode/settings.json` into git so it overrides local settings?\n\nSorry",
        "PR/Issue Number": "39"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_hooks.py",
        "Creation Date": "2020-06-18T11:09:00Z",
        "PR Comment": "The code grows and I am getting confused lol\nWhat does this function return if not `v == value` ? ",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_hooks.py",
        "Creation Date": "2020-06-18T11:19:28Z",
        "PR Comment": "We could display a warning? \nAlthough - if this works - I would leave it. The less user need to know - the better (imo).",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_hooks.py",
        "Creation Date": "2020-06-18T11:21:47Z",
        "PR Comment": ":+1: ",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_hooks.py",
        "Creation Date": "2020-06-18T11:27:57Z",
        "PR Comment": "Seeing in line 212 `any()` so `True, False, None` are all ok.\nLine 209 should be fine too.\nBut still would be awesome to return bool here. :grimacing: :pray: \n",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_hooks.py",
        "Creation Date": "2020-06-18T16:50:00Z",
        "PR Comment": "Yeah part of me wants to get rid of `kwargs`, but part of me now hates `args`. So I guess I will leave for now",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_hooks.py",
        "Creation Date": "2020-06-18T16:50:47Z",
        "PR Comment": "yeah, `_relatives_x_is_y` is like, a partial implementation of a DependencyMatcher :lol-sob: sorry",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_hooks.py",
        "Creation Date": "2020-06-18T16:51:51Z",
        "PR Comment": "when I pulled the logic out into the `_helper` function, I dropped that case, sorry. adding back",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_hooks.py",
        "Creation Date": "2020-06-18T16:57:13Z",
        "PR Comment": "should be fixed now",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_hooks.py",
        "Creation Date": "2020-06-18T16:59:44Z",
        "PR Comment": "Ok I changed this behavior and added a warning. Now if you want to call a function with a single dict as an argument, you can, by passing it to args (though it will warn you). If you want instead to call a function with many named args (a polyary? function? is that a word? multiary? I've only seen n-ary but that's dumb), you use `kwargs`",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_hooks.py",
        "Creation Date": "2020-06-18T17:47:55Z",
        "PR Comment": ":hard-approve!",
        "PR/Issue Number": "44"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_hooks.py",
        "Creation Date": "2020-05-01T01:10:13Z",
        "PR Comment": ":yay:",
        "PR/Issue Number": "24"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_hooks.py",
        "Creation Date": "2020-05-01T01:12:40Z",
        "PR Comment": "I am a fan of your READMEs :rofl: :heart: ",
        "PR/Issue Number": "24"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_hooks.py",
        "Creation Date": "2020-05-01T14:42:56Z",
        "PR Comment": "I am finding it quite confusing that `self.replacy_patterns` and `self.custom_match_hooks` are actually of the same type. Just the naming convention ...",
        "PR/Issue Number": "24"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_hooks.py",
        "Creation Date": "2020-05-01T16:04:21Z",
        "PR Comment": "I totally agree. Maybe `self.default_match_hooks` and `self.custom_match_hooks`?",
        "PR/Issue Number": "24"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_hooks.py",
        "Creation Date": "2020-05-01T16:24:34Z",
        "PR Comment": "I wrote a bit more in the README about how replaCy creates custom span extensions based on unexpected keys in match_dict.json. I also made the naming convention around match_hooks more reasonable!",
        "PR/Issue Number": "24"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_hooks.py",
        "Creation Date": "2020-03-09T23:16:33Z",
        "PR Comment": "This is built and on [PyPi](https://pypi.org/project/replacy/0.11.0/) - we can take it down if this PR isn't okay, but I wanted to use it ASAP",
        "PR/Issue Number": "15"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_hooks.py",
        "Creation Date": "2020-03-09T23:16:48Z",
        "PR Comment": "BTW, this closes #14 ",
        "PR/Issue Number": "15"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_hooks.py",
        "Creation Date": "2020-03-10T00:53:40Z",
        "PR Comment": "@melisa-qordoba sorry for merging without review, but tests pass, and this works in a downstream app...",
        "PR/Issue Number": "15"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-21T23:42:38Z",
        "PR Comment": "\"times before the spellcheck in vscode\" :grimacing: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-21T23:43:08Z",
        "PR Comment": "what does it do? :thinking: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-21T23:48:14Z",
        "PR Comment": "oh! :exploding_head: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-21T23:50:39Z",
        "PR Comment": ":heart: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-21T23:51:09Z",
        "PR Comment": "and return a list of spans (after recent changes)",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-22T00:07:20Z",
        "PR Comment": "liked the previous lines more :( ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-22T00:07:45Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-22T00:09:02Z",
        "PR Comment": ":exploding_head: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-22T00:09:42Z",
        "PR Comment": "oh glad it is moved here!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-22T00:11:44Z",
        "PR Comment": "I wonder ... we allow replacy to use any nlp, but we require en_core_web_sm in tests? :grimacing: \nIt is ok?",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-22T00:12:04Z",
        "PR Comment": ":grimacing: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-22T18:48:38Z",
        "PR Comment": "my editor complained, and I thought... yeah, you are right editor, inflector is not defined!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-22T18:49:45Z",
        "PR Comment": "I moved it out into `utils` but some projects using replacy call it via `ReplaceMatcher.validate_match_dict` so I wanted to attach it to the class here (which makes it a static method)",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-22T18:51:34Z",
        "PR Comment": "this wasn't a bug, it was just, I wanted to make the components have inputs and outputs, instead of using class properties",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-22T18:52:07Z",
        "PR Comment": "We should add tests with other languages!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-22T18:52:20Z",
        "PR Comment": "gotta have my dumb IDs",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-21T23:34:20Z",
        "PR Comment": "@melisa-qordoba Here is how this would be used for #80 \n\nhttps://github.com/Qordobacode/replaCy/issues/80#issuecomment-696434960",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-22T18:52:47Z",
        "PR Comment": "I installed this version of replaCy in a downstream project (Clarity) and the test suite still passes \ud83d\udcaa ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-09T19:18:52Z",
        "PR Comment": "not sure this is a reasonable criteria, I guess I have to look at a bigger match dict...",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-09T19:23:59Z",
        "PR Comment": "this isn't blocking. It seems like you had to do a lot of list-membership checking, and used sets, when there are ways that are more :snek:\n\nThis one, for example, feels less-pythonic than\n\n```suggestion\n            if any([article in item_options for article in [\"a\", \"an\", \"the\"]]):\n```",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-09T20:05:17Z",
        "PR Comment": "again, non-blocking style thing. I think this is the same as:\n\n```suggestion\n            if all([el in item_options for el in [\"person\", \"people\"]]) or all([el in item_options for el in [\"ox\", \"oxen\"]]):\n                return 1\n```\n\nSince I am mathy, set operations make sense (and I know the Python syntax for intersection with `&`) but it may be more obvious to use `all`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-09T20:18:11Z",
        "PR Comment": "wait the lemmas are different? are we testing this just to document the weirdness?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-09T20:18:49Z",
        "PR Comment": "`plural` and `singular` switched for all of these, not that it matters (but since it's open thought you'd want to know)",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-09T20:19:16Z",
        "PR Comment": "Can we have a test case that uses `MAX_COUNT`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-09T20:19:39Z",
        "PR Comment": "I like little classes like this",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-09T20:59:39Z",
        "PR Comment": "Here is an example where multi-token does not imply max count one:\nhttps://github.com/Qordobacode/service.inclusivity/blob/master/service_inclusivity/resources/match_dicts/age_matches.json#L934-L935\n\nBut I thought I would find more... ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-09T21:00:18Z",
        "PR Comment": "I think I would err on the side of having replaCy assume less, and us having to do more work in the match_dicts to upgrade",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-09T21:02:20Z",
        "PR Comment": "not a recommendation, but fun fact: this can be written `lemmas |= option_lemmas`",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-09T21:47:57Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-09T21:55:07Z",
        "PR Comment": "Good catch! :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-09T21:56:11Z",
        "PR Comment": "This is different for people / person and on / oxen.\nBut you are right - added xfail cases to the test.\nNow, whenever we upgrade lemminflect, we can check whether lemmatization of irregular words is the same.",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-09T21:56:29Z",
        "PR Comment": ":smiley: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-09T22:34:30Z",
        "PR Comment": "done :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-09T22:39:43Z",
        "PR Comment": "Hmm I would rewrite that match to:\n```\n{\"TEXT\": \"who is\"},\n{\"TEXT\": [\"single\", \"unmarried\"]}\n```\nThen those rules would be ok :smile: \nBut yeah, I agree suppression might be confusing, and some matches will need rewrites.\nI promise to:\n- add suppression warnings\n- check `match_dicts` in dependent services\n- rethink how to make those criteria better.\n\nIn other words... let's :shipit: , then fix the reality :rofl: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-09T22:42:35Z",
        "PR Comment": "Same applies here. Done for fast :shipit: Let's make it better ... later :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-09-09T23:32:12Z",
        "PR Comment": "added simple logging :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-26T15:54:13Z",
        "PR Comment": "can we put this import in `get_default_lm`? If they don't want to use the LM, we shouldn't die if it isn't installed",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-26T17:14:03Z",
        "PR Comment": "These 2 parameters are so we can build the LM stuff,\n```python\nself.scorer = KenLMScorer(nlp=self.nlp, model=get_default_lm(testing=testing)) if use_lm else None\n```\n\nNow that I see that, it seems like directly passing in a `scorer` is cleaner (\"Dependency Injection\")",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-26T17:16:20Z",
        "PR Comment": "that is outdated, but same idea: can we put this in `load_lm` ?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-29T12:36:49Z",
        "PR Comment": "done :ok_hand: ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-29T12:37:30Z",
        "PR Comment": "Yes! Bonus: using lm is optional now.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-29T17:31:07Z",
        "PR Comment": ":yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-29T17:31:21Z",
        "PR Comment": "more :yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-29T17:32:00Z",
        "PR Comment": "```suggestion\nSpeed and accuracy benchmark (copied from the Lemminflect repo):\n```",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-29T17:32:31Z",
        "PR Comment": "even more :yay:!",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-29T22:43:08Z",
        "PR Comment": "Sorry, I don't really know if my code samples are right, since I don't know the type signatures\n\n`self.scorer` is `None` if there is no `KenLM`... Should we have the line that sets it be :\n\n```python\nself.scorer = (\n            KenLMScorer(nlp=self.nlp, model=load_lm(lm_path)) if lm_path else lambda x: 1\n        )\n```\n\ne.g. set it to the constant function?\n\nOr, if there is more than 1 suggestion, maybe `sort_suggestions` should have behavior that depends on `self.scorer`... meaning \"if it's None, either don't change the order, or randomize it\"",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-30T07:56:03Z",
        "PR Comment": "Can you reproduce the bug?\n\nSorting and scoring happens only if there is the scorer, otherwise this step is completely skipped:\nhttps://github.com/Qordobacode/replaCy/blob/c6eb41fba0b430c95b1feee5261807df716b3151/replacy/__init__.py#L392\n\nI think I disagree with randomizing suggestions since this doesn't look like a desired behavior before adding `kenlm` - what if users want to manually set the order of suggestions (because they feel some options will be better)?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-30T08:00:22Z",
        "PR Comment": "Take a look at `tests/test_suggestions.py`. This is the case when there is no `lm_path`.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-30T16:07:46Z",
        "PR Comment": "I see",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-26T22:36:51Z",
        "PR Comment": "I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-29T12:39:03Z",
        "PR Comment": "> I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n> ![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n\nChanged :ok_hand: \nAlso did one update (after rethinking json schema). Backward compatible.\n\n`INFLECTION` is always a string. You can set `POS`, `TAG` or `ALL`. ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-26T15:54:13Z",
        "PR Comment": "can we put this import in `get_default_lm`? If they don't want to use the LM, we shouldn't die if it isn't installed",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-26T17:14:03Z",
        "PR Comment": "These 2 parameters are so we can build the LM stuff,\n```python\nself.scorer = KenLMScorer(nlp=self.nlp, model=get_default_lm(testing=testing)) if use_lm else None\n```\n\nNow that I see that, it seems like directly passing in a `scorer` is cleaner (\"Dependency Injection\")",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-26T17:16:20Z",
        "PR Comment": "that is outdated, but same idea: can we put this in `load_lm` ?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-29T12:36:49Z",
        "PR Comment": "done :ok_hand: ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-29T12:37:30Z",
        "PR Comment": "Yes! Bonus: using lm is optional now.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-29T17:31:07Z",
        "PR Comment": ":yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-29T17:31:21Z",
        "PR Comment": "more :yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-29T17:32:00Z",
        "PR Comment": "```suggestion\nSpeed and accuracy benchmark (copied from the Lemminflect repo):\n```",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-29T17:32:31Z",
        "PR Comment": "even more :yay:!",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-29T22:43:08Z",
        "PR Comment": "Sorry, I don't really know if my code samples are right, since I don't know the type signatures\n\n`self.scorer` is `None` if there is no `KenLM`... Should we have the line that sets it be :\n\n```python\nself.scorer = (\n            KenLMScorer(nlp=self.nlp, model=load_lm(lm_path)) if lm_path else lambda x: 1\n        )\n```\n\ne.g. set it to the constant function?\n\nOr, if there is more than 1 suggestion, maybe `sort_suggestions` should have behavior that depends on `self.scorer`... meaning \"if it's None, either don't change the order, or randomize it\"",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-30T07:56:03Z",
        "PR Comment": "Can you reproduce the bug?\n\nSorting and scoring happens only if there is the scorer, otherwise this step is completely skipped:\nhttps://github.com/Qordobacode/replaCy/blob/c6eb41fba0b430c95b1feee5261807df716b3151/replacy/__init__.py#L392\n\nI think I disagree with randomizing suggestions since this doesn't look like a desired behavior before adding `kenlm` - what if users want to manually set the order of suggestions (because they feel some options will be better)?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-30T08:00:22Z",
        "PR Comment": "Take a look at `tests/test_suggestions.py`. This is the case when there is no `lm_path`.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-30T16:07:46Z",
        "PR Comment": "I see",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-26T22:36:51Z",
        "PR Comment": "I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_scorer.py",
        "Creation Date": "2020-06-29T12:39:03Z",
        "PR Comment": "> I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n> ![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n\nChanged :ok_hand: \nAlso did one update (after rethinking json schema). Backward compatible.\n\n`INFLECTION` is always a string. You can set `POS`, `TAG` or `ALL`. ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-21T23:42:38Z",
        "PR Comment": "\"times before the spellcheck in vscode\" :grimacing: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-21T23:43:08Z",
        "PR Comment": "what does it do? :thinking: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-21T23:48:14Z",
        "PR Comment": "oh! :exploding_head: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-21T23:50:39Z",
        "PR Comment": ":heart: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-21T23:51:09Z",
        "PR Comment": "and return a list of spans (after recent changes)",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T00:07:20Z",
        "PR Comment": "liked the previous lines more :( ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T00:07:45Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T00:09:02Z",
        "PR Comment": ":exploding_head: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T00:09:42Z",
        "PR Comment": "oh glad it is moved here!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T00:11:44Z",
        "PR Comment": "I wonder ... we allow replacy to use any nlp, but we require en_core_web_sm in tests? :grimacing: \nIt is ok?",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T00:12:04Z",
        "PR Comment": ":grimacing: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T18:48:38Z",
        "PR Comment": "my editor complained, and I thought... yeah, you are right editor, inflector is not defined!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T18:49:45Z",
        "PR Comment": "I moved it out into `utils` but some projects using replacy call it via `ReplaceMatcher.validate_match_dict` so I wanted to attach it to the class here (which makes it a static method)",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T18:51:34Z",
        "PR Comment": "this wasn't a bug, it was just, I wanted to make the components have inputs and outputs, instead of using class properties",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T18:52:07Z",
        "PR Comment": "We should add tests with other languages!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T18:52:20Z",
        "PR Comment": "gotta have my dumb IDs",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-21T23:34:20Z",
        "PR Comment": "@melisa-qordoba Here is how this would be used for #80 \n\nhttps://github.com/Qordobacode/replaCy/issues/80#issuecomment-696434960",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T18:52:47Z",
        "PR Comment": "I installed this version of replaCy in a downstream project (Clarity) and the test suite still passes \ud83d\udcaa ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-21T23:42:38Z",
        "PR Comment": "\"times before the spellcheck in vscode\" :grimacing: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-21T23:43:08Z",
        "PR Comment": "what does it do? :thinking: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-21T23:48:14Z",
        "PR Comment": "oh! :exploding_head: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-21T23:50:39Z",
        "PR Comment": ":heart: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-21T23:51:09Z",
        "PR Comment": "and return a list of spans (after recent changes)",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T00:07:20Z",
        "PR Comment": "liked the previous lines more :( ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T00:07:45Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T00:09:02Z",
        "PR Comment": ":exploding_head: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T00:09:42Z",
        "PR Comment": "oh glad it is moved here!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T00:11:44Z",
        "PR Comment": "I wonder ... we allow replacy to use any nlp, but we require en_core_web_sm in tests? :grimacing: \nIt is ok?",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T00:12:04Z",
        "PR Comment": ":grimacing: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T18:48:38Z",
        "PR Comment": "my editor complained, and I thought... yeah, you are right editor, inflector is not defined!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T18:49:45Z",
        "PR Comment": "I moved it out into `utils` but some projects using replacy call it via `ReplaceMatcher.validate_match_dict` so I wanted to attach it to the class here (which makes it a static method)",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T18:51:34Z",
        "PR Comment": "this wasn't a bug, it was just, I wanted to make the components have inputs and outputs, instead of using class properties",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T18:52:07Z",
        "PR Comment": "We should add tests with other languages!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T18:52:20Z",
        "PR Comment": "gotta have my dumb IDs",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-21T23:34:20Z",
        "PR Comment": "@melisa-qordoba Here is how this would be used for #80 \n\nhttps://github.com/Qordobacode/replaCy/issues/80#issuecomment-696434960",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T18:52:47Z",
        "PR Comment": "I installed this version of replaCy in a downstream project (Clarity) and the test suite still passes \ud83d\udcaa ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-21T23:42:38Z",
        "PR Comment": "\"times before the spellcheck in vscode\" :grimacing: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-21T23:43:08Z",
        "PR Comment": "what does it do? :thinking: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-21T23:48:14Z",
        "PR Comment": "oh! :exploding_head: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-21T23:50:39Z",
        "PR Comment": ":heart: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-21T23:51:09Z",
        "PR Comment": "and return a list of spans (after recent changes)",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T00:07:20Z",
        "PR Comment": "liked the previous lines more :( ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T00:07:45Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T00:09:02Z",
        "PR Comment": ":exploding_head: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T00:09:42Z",
        "PR Comment": "oh glad it is moved here!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T00:11:44Z",
        "PR Comment": "I wonder ... we allow replacy to use any nlp, but we require en_core_web_sm in tests? :grimacing: \nIt is ok?",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T00:12:04Z",
        "PR Comment": ":grimacing: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T18:48:38Z",
        "PR Comment": "my editor complained, and I thought... yeah, you are right editor, inflector is not defined!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T18:49:45Z",
        "PR Comment": "I moved it out into `utils` but some projects using replacy call it via `ReplaceMatcher.validate_match_dict` so I wanted to attach it to the class here (which makes it a static method)",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T18:51:34Z",
        "PR Comment": "this wasn't a bug, it was just, I wanted to make the components have inputs and outputs, instead of using class properties",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T18:52:07Z",
        "PR Comment": "We should add tests with other languages!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T18:52:20Z",
        "PR Comment": "gotta have my dumb IDs",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-21T23:34:20Z",
        "PR Comment": "@melisa-qordoba Here is how this would be used for #80 \n\nhttps://github.com/Qordobacode/replaCy/issues/80#issuecomment-696434960",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_pipeline.py",
        "Creation Date": "2020-09-22T18:52:47Z",
        "PR Comment": "I installed this version of replaCy in a downstream project (Clarity) and the test suite still passes \ud83d\udcaa ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-21T23:42:38Z",
        "PR Comment": "\"times before the spellcheck in vscode\" :grimacing: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-21T23:43:08Z",
        "PR Comment": "what does it do? :thinking: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-21T23:48:14Z",
        "PR Comment": "oh! :exploding_head: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-21T23:50:39Z",
        "PR Comment": ":heart: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-21T23:51:09Z",
        "PR Comment": "and return a list of spans (after recent changes)",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-22T00:07:20Z",
        "PR Comment": "liked the previous lines more :( ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-22T00:07:45Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-22T00:09:02Z",
        "PR Comment": ":exploding_head: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-22T00:09:42Z",
        "PR Comment": "oh glad it is moved here!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-22T00:11:44Z",
        "PR Comment": "I wonder ... we allow replacy to use any nlp, but we require en_core_web_sm in tests? :grimacing: \nIt is ok?",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-22T00:12:04Z",
        "PR Comment": ":grimacing: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-22T18:48:38Z",
        "PR Comment": "my editor complained, and I thought... yeah, you are right editor, inflector is not defined!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-22T18:49:45Z",
        "PR Comment": "I moved it out into `utils` but some projects using replacy call it via `ReplaceMatcher.validate_match_dict` so I wanted to attach it to the class here (which makes it a static method)",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-22T18:51:34Z",
        "PR Comment": "this wasn't a bug, it was just, I wanted to make the components have inputs and outputs, instead of using class properties",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-22T18:52:07Z",
        "PR Comment": "We should add tests with other languages!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-22T18:52:20Z",
        "PR Comment": "gotta have my dumb IDs",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-21T23:34:20Z",
        "PR Comment": "@melisa-qordoba Here is how this would be used for #80 \n\nhttps://github.com/Qordobacode/replaCy/issues/80#issuecomment-696434960",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-22T18:52:47Z",
        "PR Comment": "I installed this version of replaCy in a downstream project (Clarity) and the test suite still passes \ud83d\udcaa ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T19:18:52Z",
        "PR Comment": "not sure this is a reasonable criteria, I guess I have to look at a bigger match dict...",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T19:23:59Z",
        "PR Comment": "this isn't blocking. It seems like you had to do a lot of list-membership checking, and used sets, when there are ways that are more :snek:\n\nThis one, for example, feels less-pythonic than\n\n```suggestion\n            if any([article in item_options for article in [\"a\", \"an\", \"the\"]]):\n```",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:05:17Z",
        "PR Comment": "again, non-blocking style thing. I think this is the same as:\n\n```suggestion\n            if all([el in item_options for el in [\"person\", \"people\"]]) or all([el in item_options for el in [\"ox\", \"oxen\"]]):\n                return 1\n```\n\nSince I am mathy, set operations make sense (and I know the Python syntax for intersection with `&`) but it may be more obvious to use `all`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:18:11Z",
        "PR Comment": "wait the lemmas are different? are we testing this just to document the weirdness?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:18:49Z",
        "PR Comment": "`plural` and `singular` switched for all of these, not that it matters (but since it's open thought you'd want to know)",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:19:16Z",
        "PR Comment": "Can we have a test case that uses `MAX_COUNT`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:19:39Z",
        "PR Comment": "I like little classes like this",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:59:39Z",
        "PR Comment": "Here is an example where multi-token does not imply max count one:\nhttps://github.com/Qordobacode/service.inclusivity/blob/master/service_inclusivity/resources/match_dicts/age_matches.json#L934-L935\n\nBut I thought I would find more... ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:00:18Z",
        "PR Comment": "I think I would err on the side of having replaCy assume less, and us having to do more work in the match_dicts to upgrade",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:02:20Z",
        "PR Comment": "not a recommendation, but fun fact: this can be written `lemmas |= option_lemmas`",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:47:57Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:55:07Z",
        "PR Comment": "Good catch! :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:56:11Z",
        "PR Comment": "This is different for people / person and on / oxen.\nBut you are right - added xfail cases to the test.\nNow, whenever we upgrade lemminflect, we can check whether lemmatization of irregular words is the same.",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:56:29Z",
        "PR Comment": ":smiley: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T22:34:30Z",
        "PR Comment": "done :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T22:39:43Z",
        "PR Comment": "Hmm I would rewrite that match to:\n```\n{\"TEXT\": \"who is\"},\n{\"TEXT\": [\"single\", \"unmarried\"]}\n```\nThen those rules would be ok :smile: \nBut yeah, I agree suppression might be confusing, and some matches will need rewrites.\nI promise to:\n- add suppression warnings\n- check `match_dicts` in dependent services\n- rethink how to make those criteria better.\n\nIn other words... let's :shipit: , then fix the reality :rofl: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T22:42:35Z",
        "PR Comment": "Same applies here. Done for fast :shipit: Let's make it better ... later :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T23:32:12Z",
        "PR Comment": "added simple logging :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T19:18:52Z",
        "PR Comment": "not sure this is a reasonable criteria, I guess I have to look at a bigger match dict...",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T19:23:59Z",
        "PR Comment": "this isn't blocking. It seems like you had to do a lot of list-membership checking, and used sets, when there are ways that are more :snek:\n\nThis one, for example, feels less-pythonic than\n\n```suggestion\n            if any([article in item_options for article in [\"a\", \"an\", \"the\"]]):\n```",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:05:17Z",
        "PR Comment": "again, non-blocking style thing. I think this is the same as:\n\n```suggestion\n            if all([el in item_options for el in [\"person\", \"people\"]]) or all([el in item_options for el in [\"ox\", \"oxen\"]]):\n                return 1\n```\n\nSince I am mathy, set operations make sense (and I know the Python syntax for intersection with `&`) but it may be more obvious to use `all`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:18:11Z",
        "PR Comment": "wait the lemmas are different? are we testing this just to document the weirdness?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:18:49Z",
        "PR Comment": "`plural` and `singular` switched for all of these, not that it matters (but since it's open thought you'd want to know)",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:19:16Z",
        "PR Comment": "Can we have a test case that uses `MAX_COUNT`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:19:39Z",
        "PR Comment": "I like little classes like this",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:59:39Z",
        "PR Comment": "Here is an example where multi-token does not imply max count one:\nhttps://github.com/Qordobacode/service.inclusivity/blob/master/service_inclusivity/resources/match_dicts/age_matches.json#L934-L935\n\nBut I thought I would find more... ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:00:18Z",
        "PR Comment": "I think I would err on the side of having replaCy assume less, and us having to do more work in the match_dicts to upgrade",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:02:20Z",
        "PR Comment": "not a recommendation, but fun fact: this can be written `lemmas |= option_lemmas`",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:47:57Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:55:07Z",
        "PR Comment": "Good catch! :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:56:11Z",
        "PR Comment": "This is different for people / person and on / oxen.\nBut you are right - added xfail cases to the test.\nNow, whenever we upgrade lemminflect, we can check whether lemmatization of irregular words is the same.",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:56:29Z",
        "PR Comment": ":smiley: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T22:34:30Z",
        "PR Comment": "done :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T22:39:43Z",
        "PR Comment": "Hmm I would rewrite that match to:\n```\n{\"TEXT\": \"who is\"},\n{\"TEXT\": [\"single\", \"unmarried\"]}\n```\nThen those rules would be ok :smile: \nBut yeah, I agree suppression might be confusing, and some matches will need rewrites.\nI promise to:\n- add suppression warnings\n- check `match_dicts` in dependent services\n- rethink how to make those criteria better.\n\nIn other words... let's :shipit: , then fix the reality :rofl: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T22:42:35Z",
        "PR Comment": "Same applies here. Done for fast :shipit: Let's make it better ... later :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T23:32:12Z",
        "PR Comment": "added simple logging :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T19:18:52Z",
        "PR Comment": "not sure this is a reasonable criteria, I guess I have to look at a bigger match dict...",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T19:23:59Z",
        "PR Comment": "this isn't blocking. It seems like you had to do a lot of list-membership checking, and used sets, when there are ways that are more :snek:\n\nThis one, for example, feels less-pythonic than\n\n```suggestion\n            if any([article in item_options for article in [\"a\", \"an\", \"the\"]]):\n```",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:05:17Z",
        "PR Comment": "again, non-blocking style thing. I think this is the same as:\n\n```suggestion\n            if all([el in item_options for el in [\"person\", \"people\"]]) or all([el in item_options for el in [\"ox\", \"oxen\"]]):\n                return 1\n```\n\nSince I am mathy, set operations make sense (and I know the Python syntax for intersection with `&`) but it may be more obvious to use `all`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:18:11Z",
        "PR Comment": "wait the lemmas are different? are we testing this just to document the weirdness?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:18:49Z",
        "PR Comment": "`plural` and `singular` switched for all of these, not that it matters (but since it's open thought you'd want to know)",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:19:16Z",
        "PR Comment": "Can we have a test case that uses `MAX_COUNT`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:19:39Z",
        "PR Comment": "I like little classes like this",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:59:39Z",
        "PR Comment": "Here is an example where multi-token does not imply max count one:\nhttps://github.com/Qordobacode/service.inclusivity/blob/master/service_inclusivity/resources/match_dicts/age_matches.json#L934-L935\n\nBut I thought I would find more... ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:00:18Z",
        "PR Comment": "I think I would err on the side of having replaCy assume less, and us having to do more work in the match_dicts to upgrade",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:02:20Z",
        "PR Comment": "not a recommendation, but fun fact: this can be written `lemmas |= option_lemmas`",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:47:57Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:55:07Z",
        "PR Comment": "Good catch! :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:56:11Z",
        "PR Comment": "This is different for people / person and on / oxen.\nBut you are right - added xfail cases to the test.\nNow, whenever we upgrade lemminflect, we can check whether lemmatization of irregular words is the same.",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:56:29Z",
        "PR Comment": ":smiley: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T22:34:30Z",
        "PR Comment": "done :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T22:39:43Z",
        "PR Comment": "Hmm I would rewrite that match to:\n```\n{\"TEXT\": \"who is\"},\n{\"TEXT\": [\"single\", \"unmarried\"]}\n```\nThen those rules would be ok :smile: \nBut yeah, I agree suppression might be confusing, and some matches will need rewrites.\nI promise to:\n- add suppression warnings\n- check `match_dicts` in dependent services\n- rethink how to make those criteria better.\n\nIn other words... let's :shipit: , then fix the reality :rofl: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T22:42:35Z",
        "PR Comment": "Same applies here. Done for fast :shipit: Let's make it better ... later :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T23:32:12Z",
        "PR Comment": "added simple logging :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T19:18:52Z",
        "PR Comment": "not sure this is a reasonable criteria, I guess I have to look at a bigger match dict...",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T19:23:59Z",
        "PR Comment": "this isn't blocking. It seems like you had to do a lot of list-membership checking, and used sets, when there are ways that are more :snek:\n\nThis one, for example, feels less-pythonic than\n\n```suggestion\n            if any([article in item_options for article in [\"a\", \"an\", \"the\"]]):\n```",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:05:17Z",
        "PR Comment": "again, non-blocking style thing. I think this is the same as:\n\n```suggestion\n            if all([el in item_options for el in [\"person\", \"people\"]]) or all([el in item_options for el in [\"ox\", \"oxen\"]]):\n                return 1\n```\n\nSince I am mathy, set operations make sense (and I know the Python syntax for intersection with `&`) but it may be more obvious to use `all`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:18:11Z",
        "PR Comment": "wait the lemmas are different? are we testing this just to document the weirdness?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:18:49Z",
        "PR Comment": "`plural` and `singular` switched for all of these, not that it matters (but since it's open thought you'd want to know)",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:19:16Z",
        "PR Comment": "Can we have a test case that uses `MAX_COUNT`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:19:39Z",
        "PR Comment": "I like little classes like this",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:59:39Z",
        "PR Comment": "Here is an example where multi-token does not imply max count one:\nhttps://github.com/Qordobacode/service.inclusivity/blob/master/service_inclusivity/resources/match_dicts/age_matches.json#L934-L935\n\nBut I thought I would find more... ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:00:18Z",
        "PR Comment": "I think I would err on the side of having replaCy assume less, and us having to do more work in the match_dicts to upgrade",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:02:20Z",
        "PR Comment": "not a recommendation, but fun fact: this can be written `lemmas |= option_lemmas`",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:47:57Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:55:07Z",
        "PR Comment": "Good catch! :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:56:11Z",
        "PR Comment": "This is different for people / person and on / oxen.\nBut you are right - added xfail cases to the test.\nNow, whenever we upgrade lemminflect, we can check whether lemmatization of irregular words is the same.",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:56:29Z",
        "PR Comment": ":smiley: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T22:34:30Z",
        "PR Comment": "done :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T22:39:43Z",
        "PR Comment": "Hmm I would rewrite that match to:\n```\n{\"TEXT\": \"who is\"},\n{\"TEXT\": [\"single\", \"unmarried\"]}\n```\nThen those rules would be ok :smile: \nBut yeah, I agree suppression might be confusing, and some matches will need rewrites.\nI promise to:\n- add suppression warnings\n- check `match_dicts` in dependent services\n- rethink how to make those criteria better.\n\nIn other words... let's :shipit: , then fix the reality :rofl: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T22:42:35Z",
        "PR Comment": "Same applies here. Done for fast :shipit: Let's make it better ... later :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T23:32:12Z",
        "PR Comment": "added simple logging :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T19:18:52Z",
        "PR Comment": "not sure this is a reasonable criteria, I guess I have to look at a bigger match dict...",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T19:23:59Z",
        "PR Comment": "this isn't blocking. It seems like you had to do a lot of list-membership checking, and used sets, when there are ways that are more :snek:\n\nThis one, for example, feels less-pythonic than\n\n```suggestion\n            if any([article in item_options for article in [\"a\", \"an\", \"the\"]]):\n```",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:05:17Z",
        "PR Comment": "again, non-blocking style thing. I think this is the same as:\n\n```suggestion\n            if all([el in item_options for el in [\"person\", \"people\"]]) or all([el in item_options for el in [\"ox\", \"oxen\"]]):\n                return 1\n```\n\nSince I am mathy, set operations make sense (and I know the Python syntax for intersection with `&`) but it may be more obvious to use `all`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:18:11Z",
        "PR Comment": "wait the lemmas are different? are we testing this just to document the weirdness?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:18:49Z",
        "PR Comment": "`plural` and `singular` switched for all of these, not that it matters (but since it's open thought you'd want to know)",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:19:16Z",
        "PR Comment": "Can we have a test case that uses `MAX_COUNT`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:19:39Z",
        "PR Comment": "I like little classes like this",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T20:59:39Z",
        "PR Comment": "Here is an example where multi-token does not imply max count one:\nhttps://github.com/Qordobacode/service.inclusivity/blob/master/service_inclusivity/resources/match_dicts/age_matches.json#L934-L935\n\nBut I thought I would find more... ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:00:18Z",
        "PR Comment": "I think I would err on the side of having replaCy assume less, and us having to do more work in the match_dicts to upgrade",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:02:20Z",
        "PR Comment": "not a recommendation, but fun fact: this can be written `lemmas |= option_lemmas`",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:47:57Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:55:07Z",
        "PR Comment": "Good catch! :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:56:11Z",
        "PR Comment": "This is different for people / person and on / oxen.\nBut you are right - added xfail cases to the test.\nNow, whenever we upgrade lemminflect, we can check whether lemmatization of irregular words is the same.",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T21:56:29Z",
        "PR Comment": ":smiley: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T22:34:30Z",
        "PR Comment": "done :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T22:39:43Z",
        "PR Comment": "Hmm I would rewrite that match to:\n```\n{\"TEXT\": \"who is\"},\n{\"TEXT\": [\"single\", \"unmarried\"]}\n```\nThen those rules would be ok :smile: \nBut yeah, I agree suppression might be confusing, and some matches will need rewrites.\nI promise to:\n- add suppression warnings\n- check `match_dicts` in dependent services\n- rethink how to make those criteria better.\n\nIn other words... let's :shipit: , then fix the reality :rofl: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T22:42:35Z",
        "PR Comment": "Same applies here. Done for fast :shipit: Let's make it better ... later :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_max_count.py",
        "Creation Date": "2020-09-09T23:32:12Z",
        "PR Comment": "added simple logging :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-09-21T23:42:38Z",
        "PR Comment": "\"times before the spellcheck in vscode\" :grimacing: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-09-21T23:43:08Z",
        "PR Comment": "what does it do? :thinking: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-09-21T23:48:14Z",
        "PR Comment": "oh! :exploding_head: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-09-21T23:50:39Z",
        "PR Comment": ":heart: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-09-21T23:51:09Z",
        "PR Comment": "and return a list of spans (after recent changes)",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-09-22T00:07:20Z",
        "PR Comment": "liked the previous lines more :( ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-09-22T00:07:45Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-09-22T00:09:02Z",
        "PR Comment": ":exploding_head: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-09-22T00:09:42Z",
        "PR Comment": "oh glad it is moved here!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-09-22T00:11:44Z",
        "PR Comment": "I wonder ... we allow replacy to use any nlp, but we require en_core_web_sm in tests? :grimacing: \nIt is ok?",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-09-22T00:12:04Z",
        "PR Comment": ":grimacing: ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-09-22T18:48:38Z",
        "PR Comment": "my editor complained, and I thought... yeah, you are right editor, inflector is not defined!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-09-22T18:49:45Z",
        "PR Comment": "I moved it out into `utils` but some projects using replacy call it via `ReplaceMatcher.validate_match_dict` so I wanted to attach it to the class here (which makes it a static method)",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-09-22T18:51:34Z",
        "PR Comment": "this wasn't a bug, it was just, I wanted to make the components have inputs and outputs, instead of using class properties",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-09-22T18:52:07Z",
        "PR Comment": "We should add tests with other languages!",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-09-22T18:52:20Z",
        "PR Comment": "gotta have my dumb IDs",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-09-21T23:34:20Z",
        "PR Comment": "@melisa-qordoba Here is how this would be used for #80 \n\nhttps://github.com/Qordobacode/replaCy/issues/80#issuecomment-696434960",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-09-22T18:52:47Z",
        "PR Comment": "I installed this version of replaCy in a downstream project (Clarity) and the test suite still passes \ud83d\udcaa ",
        "PR/Issue Number": "81"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-26T15:54:13Z",
        "PR Comment": "can we put this import in `get_default_lm`? If they don't want to use the LM, we shouldn't die if it isn't installed",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-26T17:14:03Z",
        "PR Comment": "These 2 parameters are so we can build the LM stuff,\n```python\nself.scorer = KenLMScorer(nlp=self.nlp, model=get_default_lm(testing=testing)) if use_lm else None\n```\n\nNow that I see that, it seems like directly passing in a `scorer` is cleaner (\"Dependency Injection\")",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-26T17:16:20Z",
        "PR Comment": "that is outdated, but same idea: can we put this in `load_lm` ?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-29T12:36:49Z",
        "PR Comment": "done :ok_hand: ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-29T12:37:30Z",
        "PR Comment": "Yes! Bonus: using lm is optional now.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-29T17:31:07Z",
        "PR Comment": ":yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-29T17:31:21Z",
        "PR Comment": "more :yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-29T17:32:00Z",
        "PR Comment": "```suggestion\nSpeed and accuracy benchmark (copied from the Lemminflect repo):\n```",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-29T17:32:31Z",
        "PR Comment": "even more :yay:!",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-29T22:43:08Z",
        "PR Comment": "Sorry, I don't really know if my code samples are right, since I don't know the type signatures\n\n`self.scorer` is `None` if there is no `KenLM`... Should we have the line that sets it be :\n\n```python\nself.scorer = (\n            KenLMScorer(nlp=self.nlp, model=load_lm(lm_path)) if lm_path else lambda x: 1\n        )\n```\n\ne.g. set it to the constant function?\n\nOr, if there is more than 1 suggestion, maybe `sort_suggestions` should have behavior that depends on `self.scorer`... meaning \"if it's None, either don't change the order, or randomize it\"",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-30T07:56:03Z",
        "PR Comment": "Can you reproduce the bug?\n\nSorting and scoring happens only if there is the scorer, otherwise this step is completely skipped:\nhttps://github.com/Qordobacode/replaCy/blob/c6eb41fba0b430c95b1feee5261807df716b3151/replacy/__init__.py#L392\n\nI think I disagree with randomizing suggestions since this doesn't look like a desired behavior before adding `kenlm` - what if users want to manually set the order of suggestions (because they feel some options will be better)?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-30T08:00:22Z",
        "PR Comment": "Take a look at `tests/test_suggestions.py`. This is the case when there is no `lm_path`.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-30T16:07:46Z",
        "PR Comment": "I see",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-26T22:36:51Z",
        "PR Comment": "I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-29T12:39:03Z",
        "PR Comment": "> I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n> ![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n\nChanged :ok_hand: \nAlso did one update (after rethinking json schema). Backward compatible.\n\n`INFLECTION` is always a string. You can set `POS`, `TAG` or `ALL`. ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-26T15:54:13Z",
        "PR Comment": "can we put this import in `get_default_lm`? If they don't want to use the LM, we shouldn't die if it isn't installed",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-26T17:14:03Z",
        "PR Comment": "These 2 parameters are so we can build the LM stuff,\n```python\nself.scorer = KenLMScorer(nlp=self.nlp, model=get_default_lm(testing=testing)) if use_lm else None\n```\n\nNow that I see that, it seems like directly passing in a `scorer` is cleaner (\"Dependency Injection\")",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-26T17:16:20Z",
        "PR Comment": "that is outdated, but same idea: can we put this in `load_lm` ?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-29T12:36:49Z",
        "PR Comment": "done :ok_hand: ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-29T12:37:30Z",
        "PR Comment": "Yes! Bonus: using lm is optional now.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-29T17:31:07Z",
        "PR Comment": ":yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-29T17:31:21Z",
        "PR Comment": "more :yay:",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-29T17:32:00Z",
        "PR Comment": "```suggestion\nSpeed and accuracy benchmark (copied from the Lemminflect repo):\n```",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-29T17:32:31Z",
        "PR Comment": "even more :yay:!",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-29T22:43:08Z",
        "PR Comment": "Sorry, I don't really know if my code samples are right, since I don't know the type signatures\n\n`self.scorer` is `None` if there is no `KenLM`... Should we have the line that sets it be :\n\n```python\nself.scorer = (\n            KenLMScorer(nlp=self.nlp, model=load_lm(lm_path)) if lm_path else lambda x: 1\n        )\n```\n\ne.g. set it to the constant function?\n\nOr, if there is more than 1 suggestion, maybe `sort_suggestions` should have behavior that depends on `self.scorer`... meaning \"if it's None, either don't change the order, or randomize it\"",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-30T07:56:03Z",
        "PR Comment": "Can you reproduce the bug?\n\nSorting and scoring happens only if there is the scorer, otherwise this step is completely skipped:\nhttps://github.com/Qordobacode/replaCy/blob/c6eb41fba0b430c95b1feee5261807df716b3151/replacy/__init__.py#L392\n\nI think I disagree with randomizing suggestions since this doesn't look like a desired behavior before adding `kenlm` - what if users want to manually set the order of suggestions (because they feel some options will be better)?",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-30T08:00:22Z",
        "PR Comment": "Take a look at `tests/test_suggestions.py`. This is the case when there is no `lm_path`.",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-30T16:07:46Z",
        "PR Comment": "I see",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-26T22:36:51Z",
        "PR Comment": "I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_suggestions.py",
        "Creation Date": "2020-06-29T12:39:03Z",
        "PR Comment": "> I use the JSON Linter in VS Code, so I want to make sure we update the match schema, so I get rid of this warning:\n> ![image](https://user-images.githubusercontent.com/47401552/85906333-d8f9a800-b7c2-11ea-88cf-7c0c5b529f5d.png)\n\nChanged :ok_hand: \nAlso did one update (after rethinking json schema). Backward compatible.\n\n`INFLECTION` is always a string. You can set `POS`, `TAG` or `ALL`. ",
        "PR/Issue Number": "63"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_ref_matcher.py",
        "Creation Date": "2020-09-09T19:18:52Z",
        "PR Comment": "not sure this is a reasonable criteria, I guess I have to look at a bigger match dict...",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_ref_matcher.py",
        "Creation Date": "2020-09-09T19:23:59Z",
        "PR Comment": "this isn't blocking. It seems like you had to do a lot of list-membership checking, and used sets, when there are ways that are more :snek:\n\nThis one, for example, feels less-pythonic than\n\n```suggestion\n            if any([article in item_options for article in [\"a\", \"an\", \"the\"]]):\n```",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_ref_matcher.py",
        "Creation Date": "2020-09-09T20:05:17Z",
        "PR Comment": "again, non-blocking style thing. I think this is the same as:\n\n```suggestion\n            if all([el in item_options for el in [\"person\", \"people\"]]) or all([el in item_options for el in [\"ox\", \"oxen\"]]):\n                return 1\n```\n\nSince I am mathy, set operations make sense (and I know the Python syntax for intersection with `&`) but it may be more obvious to use `all`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_ref_matcher.py",
        "Creation Date": "2020-09-09T20:18:11Z",
        "PR Comment": "wait the lemmas are different? are we testing this just to document the weirdness?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_ref_matcher.py",
        "Creation Date": "2020-09-09T20:18:49Z",
        "PR Comment": "`plural` and `singular` switched for all of these, not that it matters (but since it's open thought you'd want to know)",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_ref_matcher.py",
        "Creation Date": "2020-09-09T20:19:16Z",
        "PR Comment": "Can we have a test case that uses `MAX_COUNT`?",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_ref_matcher.py",
        "Creation Date": "2020-09-09T20:19:39Z",
        "PR Comment": "I like little classes like this",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_ref_matcher.py",
        "Creation Date": "2020-09-09T20:59:39Z",
        "PR Comment": "Here is an example where multi-token does not imply max count one:\nhttps://github.com/Qordobacode/service.inclusivity/blob/master/service_inclusivity/resources/match_dicts/age_matches.json#L934-L935\n\nBut I thought I would find more... ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_ref_matcher.py",
        "Creation Date": "2020-09-09T21:00:18Z",
        "PR Comment": "I think I would err on the side of having replaCy assume less, and us having to do more work in the match_dicts to upgrade",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_ref_matcher.py",
        "Creation Date": "2020-09-09T21:02:20Z",
        "PR Comment": "not a recommendation, but fun fact: this can be written `lemmas |= option_lemmas`",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_ref_matcher.py",
        "Creation Date": "2020-09-09T21:47:57Z",
        "PR Comment": ":chefkiss:",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_ref_matcher.py",
        "Creation Date": "2020-09-09T21:55:07Z",
        "PR Comment": "Good catch! :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_ref_matcher.py",
        "Creation Date": "2020-09-09T21:56:11Z",
        "PR Comment": "This is different for people / person and on / oxen.\nBut you are right - added xfail cases to the test.\nNow, whenever we upgrade lemminflect, we can check whether lemmatization of irregular words is the same.",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_ref_matcher.py",
        "Creation Date": "2020-09-09T21:56:29Z",
        "PR Comment": ":smiley: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_ref_matcher.py",
        "Creation Date": "2020-09-09T22:34:30Z",
        "PR Comment": "done :+1: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_ref_matcher.py",
        "Creation Date": "2020-09-09T22:39:43Z",
        "PR Comment": "Hmm I would rewrite that match to:\n```\n{\"TEXT\": \"who is\"},\n{\"TEXT\": [\"single\", \"unmarried\"]}\n```\nThen those rules would be ok :smile: \nBut yeah, I agree suppression might be confusing, and some matches will need rewrites.\nI promise to:\n- add suppression warnings\n- check `match_dicts` in dependent services\n- rethink how to make those criteria better.\n\nIn other words... let's :shipit: , then fix the reality :rofl: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_ref_matcher.py",
        "Creation Date": "2020-09-09T22:42:35Z",
        "PR Comment": "Same applies here. Done for fast :shipit: Let's make it better ... later :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_ref_matcher.py",
        "Creation Date": "2020-09-09T23:32:12Z",
        "PR Comment": "added simple logging :sweat_smile: ",
        "PR/Issue Number": "78"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_custom_props.py",
        "Creation Date": "2020-02-28T23:58:17Z",
        "PR Comment": ":laughing: ",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_custom_props.py",
        "Creation Date": "2020-02-28T23:59:35Z",
        "PR Comment": "oh, I must: `flat_map` ? ",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_custom_props.py",
        "Creation Date": "2020-02-29T00:08:18Z",
        "PR Comment": ":laughing: ",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_custom_props.py",
        "Creation Date": "2020-02-28T23:40:20Z",
        "PR Comment": "oh my god the part I thought would be easy is impossible :sob:",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_custom_props.py",
        "Creation Date": "2020-03-01T20:20:17Z",
        "PR Comment": "Good point about flatmap! I built that iteratively, but didn\u2019t optimize it",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_custom_props.py",
        "Creation Date": "2020-02-28T23:58:17Z",
        "PR Comment": ":laughing: ",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_custom_props.py",
        "Creation Date": "2020-02-28T23:59:35Z",
        "PR Comment": "oh, I must: `flat_map` ? ",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_custom_props.py",
        "Creation Date": "2020-02-29T00:08:18Z",
        "PR Comment": ":laughing: ",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_custom_props.py",
        "Creation Date": "2020-02-28T23:40:20Z",
        "PR Comment": "oh my god the part I thought would be easy is impossible :sob:",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_custom_props.py",
        "Creation Date": "2020-03-01T20:20:17Z",
        "PR Comment": "Good point about flatmap! I built that iteratively, but didn\u2019t optimize it",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_custom_props.py",
        "Creation Date": "2020-02-28T23:58:17Z",
        "PR Comment": ":laughing: ",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_custom_props.py",
        "Creation Date": "2020-02-28T23:59:35Z",
        "PR Comment": "oh, I must: `flat_map` ? ",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_custom_props.py",
        "Creation Date": "2020-02-29T00:08:18Z",
        "PR Comment": ":laughing: ",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_custom_props.py",
        "Creation Date": "2020-02-28T23:40:20Z",
        "PR Comment": "oh my god the part I thought would be easy is impossible :sob:",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/writerai/replaCy",
        "filepath": "tests/test_custom_props.py",
        "Creation Date": "2020-03-01T20:20:17Z",
        "PR Comment": "Good point about flatmap! I built that iteratively, but didn\u2019t optimize it",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/dpalmasan/TRUNAJOD2.0",
        "filepath": "stanza_example.py",
        "Creation Date": "2021-03-28T17:43:09Z",
        "PR Comment": "Nice",
        "PR/Issue Number": "13"
    },
    {
        "repo_url": "github.com/dpalmasan/TRUNAJOD2.0",
        "filepath": "stanza_example.py",
        "Creation Date": "2021-03-28T17:52:03Z",
        "PR Comment": "I think to make easier further improvements to internals, we might create an extra module with the constants, something like:\n\n```python\nfrom enum import Enum\n\n\nclass SupportedModels(str, Enum):\n    SPACY = \"spacy\"\n    STANZA = \"stanza\"\n```\n\nThen in all instances we could use the enum. For example, the constructor arguments could be:\n\n```python\ndef __init__(self, doc, model_name=\"spacy\"):\n    # The following might do error checking on model name, will raise if not in Enum\n    model = SupportedModels(model_name)\n\n    # Checks could be done as\n    if model == SupportedModels.SPACY:\n\n```\n\nIn that manner, all instances could be replaced by something like `model=SupportedModels`",
        "PR/Issue Number": "13"
    },
    {
        "repo_url": "github.com/dpalmasan/TRUNAJOD2.0",
        "filepath": "stanza_example.py",
        "Creation Date": "2021-03-28T17:52:52Z",
        "PR Comment": "Nice!",
        "PR/Issue Number": "13"
    },
    {
        "repo_url": "github.com/dpalmasan/TRUNAJOD2.0",
        "filepath": "stanza_example.py",
        "Creation Date": "2021-03-28T19:19:23Z",
        "PR Comment": "alright, I'll look into it",
        "PR/Issue Number": "13"
    },
    {
        "repo_url": "github.com/dpalmasan/TRUNAJOD2.0",
        "filepath": "stanza_example.py",
        "Creation Date": "2021-03-29T09:50:16Z",
        "PR Comment": "I made a pull request and some summary:\n\n1. TTR tests were failing due to the keyword and positional argument conflicts. This could be easily resolved by adding a positional argument to the testing function. The used NLP model still defaults to spaCy. On the user side, they won't have to think about the positional arguments unless they change the TTR segment value (0.72). \n\n2. Thanks for your suggestion on using the enum class. It simplifies a lot of internal matter. I implemented the function in utils.py. Other modules would then be able to call the class each time model verification is needed.\n\n3. I changed the file name from \"stanza_test.py\" to \"stanza_example.py\" in the root directory.",
        "PR/Issue Number": "13"
    },
    {
        "repo_url": "github.com/dpalmasan/TRUNAJOD2.0",
        "filepath": "stanza_example.py",
        "Creation Date": "2021-03-29T13:57:23Z",
        "PR Comment": "Hello @brucewlee , this looks pretty good. Could I ask just one last thing I forgot to mention previously. Could you install the `pre-commit` package (https://pre-commit.com/), so basically you follow these steps:\n\n1. `pip install pre-commit`\n2. In the root folder (where the `.pre-commit-config.yaml` file lives) run: `pre-commit install`\n3. Then do a `git commit --amend` (this will just repush the last commit and will run pre-commit hooks)\n4. Check if there is any pre-commit hook failing\n\nThanks in advance!",
        "PR/Issue Number": "13"
    },
    {
        "repo_url": "github.com/dpalmasan/TRUNAJOD2.0",
        "filepath": "stanza_example.py",
        "Creation Date": "2021-04-03T02:37:47Z",
        "PR Comment": "> Hello @brucewlee , this looks pretty good. Could I ask just one last thing I forgot to mention previously. Could you install the `pre-commit` package (https://pre-commit.com/), so basically you follow these steps:\n> \n> 1. `pip install pre-commit`\n> 2. In the root folder (where the `.pre-commit-config.yaml` file lives) run: `pre-commit install`\n> 3. Then do a `git commit --amend` (this will just repush the last commit and will run pre-commit hooks)\n> 4. Check if there is any pre-commit hook failing\n> \n> Thanks in advance!\n\nYup, I've tried this but I'm not sure what it does. Nothing seems to be failing nor changing.",
        "PR/Issue Number": "13"
    },
    {
        "repo_url": "github.com/dpalmasan/TRUNAJOD2.0",
        "filepath": "stanza_example.py",
        "Creation Date": "2021-04-03T11:54:07Z",
        "PR Comment": "Okay, then we are good to go I guess. The pre-commit hooks are a set of checks that are run before committing, they just do some checks like running `flake8`, check import order, running the code formatter `black` to ensure code standardization. \nIf they are all passing, then we are ready to merge, thanks for all the help!",
        "PR/Issue Number": "13"
    },
    {
        "repo_url": "github.com/dpalmasan/TRUNAJOD2.0",
        "filepath": "stanza_example.py",
        "Creation Date": "2021-04-03T11:58:32Z",
        "PR Comment": "I merged! thanks!",
        "PR/Issue Number": "13"
    },
    {
        "repo_url": "github.com/dpalmasan/TRUNAJOD2.0",
        "filepath": "stanza_example.py",
        "Creation Date": "2021-04-06T05:08:38Z",
        "PR Comment": "NP :)",
        "PR/Issue Number": "13"
    },
    {
        "repo_url": "github.com/saulpw/readysetdata",
        "filepath": "readysetdata/wikipedia.py",
        "Creation Date": "2022-08-03T15:52:03Z",
        "PR Comment": "(is there a reason the versions aren't pinned in this requirements file?)",
        "PR/Issue Number": "4"
    },
    {
        "repo_url": "github.com/saulpw/readysetdata",
        "filepath": "readysetdata/wikipedia.py",
        "Creation Date": "2022-08-04T04:13:12Z",
        "PR Comment": "I think we should probably functionize this and call it from the existing pipeline, so we're not downloading/processing the entire corpus twice.  (We are planning to run all the code in readysetdata ourselves once a month or so, so it might make a material difference :)  And then we wouldn't need wikisummaries.sh, though we would need to figure how we'll split the stream in the other shell script.",
        "PR/Issue Number": "4"
    },
    {
        "repo_url": "github.com/saulpw/readysetdata",
        "filepath": "readysetdata/wikipedia.py",
        "Creation Date": "2022-08-04T19:07:00Z",
        "PR Comment": "Thanks Saul -- note I just pushed a little fix, since when I ran it over the whole set I ran into a corner case that broke it!\n",
        "PR/Issue Number": "4"
    },
    {
        "repo_url": "github.com/saulpw/readysetdata",
        "filepath": "readysetdata/wikipedia.py",
        "Creation Date": "2022-10-11T09:13:48Z",
        "PR Comment": "Thanks Saul -- note I just pushed a little fix, since when I ran it over\nthe whole set I ran into a corner case that broke it!\n\nOn Wed, Aug 3, 2022 at 9:27 PM Saul Pwanson ***@***.***>\nwrote:\n\n> ***@***.**** requested changes on this pull request.\n>\n> This is awesome, @dougb5 <https://github.com/dougb5>, thanks for putting\n> this together! I ran it and it worked like a charm. I'll also add an option\n> to demux-jsonl to remove the signaling column, and think about how best\n> to split the stream in the wikipedia.sh.\n>\n> \u2014\n> Reply to this email directly, view it on GitHub\n> <https://github.com/saulpw/readysetdata/pull/4#pullrequestreview-1061263740>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAII7MMODRPKWYIYVFDBA7DVXNBCDANCNFSM55PLI7UA>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***>\n>\n",
        "PR/Issue Number": "4"
    },
    {
        "repo_url": "github.com/saulpw/readysetdata",
        "filepath": "readysetdata/wikipedia.py",
        "Creation Date": "2022-08-03T15:52:03Z",
        "PR Comment": "(is there a reason the versions aren't pinned in this requirements file?)",
        "PR/Issue Number": "4"
    },
    {
        "repo_url": "github.com/saulpw/readysetdata",
        "filepath": "readysetdata/wikipedia.py",
        "Creation Date": "2022-08-04T04:13:12Z",
        "PR Comment": "I think we should probably functionize this and call it from the existing pipeline, so we're not downloading/processing the entire corpus twice.  (We are planning to run all the code in readysetdata ourselves once a month or so, so it might make a material difference :)  And then we wouldn't need wikisummaries.sh, though we would need to figure how we'll split the stream in the other shell script.",
        "PR/Issue Number": "4"
    },
    {
        "repo_url": "github.com/saulpw/readysetdata",
        "filepath": "readysetdata/wikipedia.py",
        "Creation Date": "2022-08-04T19:07:00Z",
        "PR Comment": "Thanks Saul -- note I just pushed a little fix, since when I ran it over the whole set I ran into a corner case that broke it!\n",
        "PR/Issue Number": "4"
    },
    {
        "repo_url": "github.com/saulpw/readysetdata",
        "filepath": "readysetdata/wikipedia.py",
        "Creation Date": "2022-10-11T09:13:48Z",
        "PR Comment": "Thanks Saul -- note I just pushed a little fix, since when I ran it over\nthe whole set I ran into a corner case that broke it!\n\nOn Wed, Aug 3, 2022 at 9:27 PM Saul Pwanson ***@***.***>\nwrote:\n\n> ***@***.**** requested changes on this pull request.\n>\n> This is awesome, @dougb5 <https://github.com/dougb5>, thanks for putting\n> this together! I ran it and it worked like a charm. I'll also add an option\n> to demux-jsonl to remove the signaling column, and think about how best\n> to split the stream in the wikipedia.sh.\n>\n> \u2014\n> Reply to this email directly, view it on GitHub\n> <https://github.com/saulpw/readysetdata/pull/4#pullrequestreview-1061263740>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAII7MMODRPKWYIYVFDBA7DVXNBCDANCNFSM55PLI7UA>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***>\n>\n",
        "PR/Issue Number": "4"
    },
    {
        "repo_url": "github.com/adieyal/dynamicprompts",
        "filepath": "src/dynamicprompts/generators/attentiongenerator.py",
        "Creation Date": "2023-05-23T15:24:35Z",
        "PR Comment": "## [Codecov](https://app.codecov.io/gh/adieyal/dynamicprompts/pull/85?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Adi+Eyal) Report\nPatch coverage: **`85.71`**% and project coverage change: **`-0.04`** :warning:\n> Comparison is base [(`c810884`)](https://app.codecov.io/gh/adieyal/dynamicprompts/commit/c810884fc96a9c2ef26eaae581587e004878bdfb?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Adi+Eyal) 98.13% compared to head [(`4ca8d96`)](https://app.codecov.io/gh/adieyal/dynamicprompts/pull/85?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Adi+Eyal) 98.10%.\n\n:exclamation: Your organization is not using the GitHub App Integration. As a result you may experience degraded service beginning May 15th. Please [install the Github App Integration](https://github.com/apps/codecov) for your organization. [Read more](https://about.codecov.io/blog/codecov-is-updating-its-github-integration/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Adi+Eyal).\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##             main      #85      +/-   ##\n==========================================\n- Coverage   98.13%   98.10%   -0.04%     \n==========================================\n  Files          70       70              \n  Lines        2838     2845       +7     \n==========================================\n+ Hits         2785     2791       +6     \n- Misses         53       54       +1     \n```\n\n\n| [Impacted Files](https://app.codecov.io/gh/adieyal/dynamicprompts/pull/85?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Adi+Eyal) | Coverage \u0394 | |\n|---|---|---|\n| [tests/generators/test\\_attentiongenerator.py](https://app.codecov.io/gh/adieyal/dynamicprompts/pull/85?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Adi+Eyal#diff-dGVzdHMvZ2VuZXJhdG9ycy90ZXN0X2F0dGVudGlvbmdlbmVyYXRvci5weQ==) | `100.00% <\u00f8> (\u00f8)` | |\n| [...rc/dynamicprompts/generators/attentiongenerator.py](https://app.codecov.io/gh/adieyal/dynamicprompts/pull/85?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Adi+Eyal#diff-c3JjL2R5bmFtaWNwcm9tcHRzL2dlbmVyYXRvcnMvYXR0ZW50aW9uZ2VuZXJhdG9yLnB5) | `89.36% <85.71%> (-0.39%)` | :arrow_down: |\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/adieyal/dynamicprompts/pull/85?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Adi+Eyal).   \n:loudspeaker: Do you have feedback about the report comment? [Let us know in this issue](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Adi+Eyal).\n",
        "PR/Issue Number": "85"
    },
    {
        "repo_url": "github.com/adieyal/dynamicprompts",
        "filepath": "src/dynamicprompts/generators/attentiongenerator.py",
        "Creation Date": "2023-05-24T07:56:35Z",
        "PR Comment": "@adieyal Sorry for the barrage of force-pushes, this should now be stable to review :)",
        "PR/Issue Number": "85"
    },
    {
        "repo_url": "github.com/adieyal/dynamicprompts",
        "filepath": "src/dynamicprompts/generators/attentiongenerator.py",
        "Creation Date": "2023-01-23T14:48:37Z",
        "PR Comment": "Thanks for this - always good to have someone look at your code with a more critical eye.",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/adieyal/dynamicprompts",
        "filepath": "src/dynamicprompts/generators/attentiongenerator.py",
        "Creation Date": "2023-01-23T16:16:48Z",
        "PR Comment": "> Thanks for this - always good to have someone look at your code with a more critical eye.\n\nYou're welcome! I also have a couple of improvement ideas (PRs forthcoming \ud83d\ude01) but I thought it'd be nice to clean things up a bit first, so here we are. :)",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/adieyal/dynamicprompts",
        "filepath": "src/dynamicprompts/generators/attentiongenerator.py",
        "Creation Date": "2023-01-23T14:48:37Z",
        "PR Comment": "Thanks for this - always good to have someone look at your code with a more critical eye.",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/adieyal/dynamicprompts",
        "filepath": "src/dynamicprompts/generators/attentiongenerator.py",
        "Creation Date": "2023-01-23T16:16:48Z",
        "PR Comment": "> Thanks for this - always good to have someone look at your code with a more critical eye.\n\nYou're welcome! I also have a couple of improvement ideas (PRs forthcoming \ud83d\ude01) but I thought it'd be nice to clean things up a bit first, so here we are. :)",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/adieyal/dynamicprompts",
        "filepath": "src/dynamicprompts/generators/attentiongenerator.py",
        "Creation Date": "2023-01-23T14:48:37Z",
        "PR Comment": "Thanks for this - always good to have someone look at your code with a more critical eye.",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/adieyal/dynamicprompts",
        "filepath": "src/dynamicprompts/generators/attentiongenerator.py",
        "Creation Date": "2023-01-23T16:16:48Z",
        "PR Comment": "> Thanks for this - always good to have someone look at your code with a more critical eye.\n\nYou're welcome! I also have a couple of improvement ideas (PRs forthcoming \ud83d\ude01) but I thought it'd be nice to clean things up a bit first, so here we are. :)",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/adieyal/dynamicprompts",
        "filepath": "src/dynamicprompts/generators/attentiongenerator.py",
        "Creation Date": "2023-01-23T14:48:37Z",
        "PR Comment": "Thanks for this - always good to have someone look at your code with a more critical eye.",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/adieyal/dynamicprompts",
        "filepath": "src/dynamicprompts/generators/attentiongenerator.py",
        "Creation Date": "2023-01-23T16:16:48Z",
        "PR Comment": "> Thanks for this - always good to have someone look at your code with a more critical eye.\n\nYou're welcome! I also have a couple of improvement ideas (PRs forthcoming \ud83d\ude01) but I thought it'd be nice to clean things up a bit first, so here we are. :)",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/tylerneylon/explacy",
        "filepath": "explacy.py",
        "Creation Date": "2018-11-29T13:31:16Z",
        "PR Comment": "I tried run analysis on the sentence bellow when I found the problem:\n\n`\"Python \u00e9 uma linguagem criada para ser simples. Com milh\u00f5es de fun\u00e7\u00f5es para os mais diferentes tipos de tarefas, essa linguagem de programa\u00e7\u00e3o deixa f\u00e1cil qualquer trabalho computacional. Al\u00e9m das in\u00fameras bibliotecas que atualmente existem para Python, outra caracter\u00edstica que faz dessa linguagem uma simplicidade sem fim \u00e9 a sua facilidade de cria\u00e7\u00e3o em quest\u00e3o de sintaxe. Na sua simplicidade, Python \u00e9 uma linguagem que muito se assemelha \u00e0 forma em que estamos acostumados a descrever nossas a\u00e7\u00f5es, de forma tal que escrever um c\u00f3digo n\u00e3o fica muito mais complexo do que escrever um texto comum.\"`\n\n[Source](https://medium.com/@thales.freitaz/usando-python-e-jupyter-notebook-f16ec1cadfa4)",
        "PR/Issue Number": "1"
    },
    {
        "repo_url": "github.com/adsabs/ADSfulltext",
        "filepath": "adsft/ner.py",
        "Creation Date": "2020-05-21T18:03:02Z",
        "PR Comment": "\n[![Coverage Status](https://coveralls.io/builds/30951060/badge)](https://coveralls.io/builds/30951060)\n\nCoverage increased (+0.2%) to 82.231% when pulling **de29f060bbbd564641c6f07e2860b50c768b8555 on marblestation:adsputils_v1.2.4** into **760b9ca8f68423e197692a480a7c2f72376727cc on adsabs:master**.\n",
        "PR/Issue Number": "125"
    },
    {
        "repo_url": "github.com/adsabs/ADSfulltext",
        "filepath": "adsft/ner.py",
        "Creation Date": "2020-03-05T20:56:25Z",
        "PR Comment": "This looks quite similar to the next fulltext block, we could reduce code duplication with a function.",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/adsabs/ADSfulltext",
        "filepath": "adsft/ner.py",
        "Creation Date": "2020-03-05T20:57:34Z",
        "PR Comment": "Could we have here a race condition where some other worker overwrites things?",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/adsabs/ADSfulltext",
        "filepath": "adsft/ner.py",
        "Creation Date": "2020-03-05T21:01:01Z",
        "PR Comment": "This block looks fairly similar to the next one, can we reduce code duplication if we put the if statement elsewhere?",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/adsabs/ADSfulltext",
        "filepath": "adsft/ner.py",
        "Creation Date": "2020-03-05T21:02:46Z",
        "PR Comment": "This is the only place where we call task_identify_facilities? Shouldn't it be called also after extraction? Otherwise extraction will not cause the NER to be executed.",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/adsabs/ADSfulltext",
        "filepath": "adsft/ner.py",
        "Creation Date": "2020-03-24T16:50:06Z",
        "PR Comment": "You can do this:\n\n```\nfor key, elem_str, model in zip(keys, ['facility-ack', 'facility-ft'], [model1, model2]):\n    ...\n```",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/adsabs/ADSfulltext",
        "filepath": "adsft/ner.py",
        "Creation Date": "2020-03-24T17:29:49Z",
        "PR Comment": "We could simplify and not depend on a dictionary if we set up a task string:\n```\nif facility_ner and not force_extract:\n  task_str = \"task_identify_facilities\"\nelse:\n  task_str = \"task_check_if_extract\"\n```\nAnd then call it via:\n```\ngetattr(tasks, task_str).delay(record)\n```",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/adsabs/ADSfulltext",
        "filepath": "adsft/ner.py",
        "Creation Date": "2020-03-24T17:49:29Z",
        "PR Comment": "We should use logger function options to format strings like we were doing before. If we have something like:\n```\nlogger.debug(\"Task: %s\" % (\"test\"))\n```\nThe part `\"Task: %s\" % (\"test\")` will always be executed, even if the logging level is `INFO`. While if we do:\n```\nlogger.debug(\"Task: %s\", \"test\")\n```\nThe formatting will only happen if the logging level is `DEBUG` or lower. This comments applies to all the logger calls.",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/adsabs/ADSfulltext",
        "filepath": "adsft/ner.py",
        "Creation Date": "2020-03-24T17:55:20Z",
        "PR Comment": "Let's make this configurable via `config.py` such as:\n\n```\nif app.config['RUN_NER_FACILITIES_AFTER_EXTRACTION]:\n    task_identify_facilities.delay(message)\n```\nAnd then we include it in config.py disabled by default:\n```\nRUN_NER_FACILITIES_AFTER_EXTRACTION=False\n```\nThis way we can deploy without this, but we will still be able to manually run things if/when needed.",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/adsabs/ADSfulltext",
        "filepath": "adsft/ner.py",
        "Creation Date": "2020-03-24T21:04:31Z",
        "PR Comment": "In run.py there is a mix of the two examples you listed as well as:\n`logger.debug(\"Task: {0}.format(\"test\")\")`\n\nIs `logger.debug(\"Task: %s\", \"test\")` still preferred among the three? ",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/adsabs/ADSfulltext",
        "filepath": "adsft/ner.py",
        "Creation Date": "2020-03-02T13:02:29Z",
        "PR Comment": "\n[![Coverage Status](https://coveralls.io/builds/29592324/badge)](https://coveralls.io/builds/29592324)\n\nCoverage increased (+0.1%) to 82.078% when pulling **0569fa9d5384c7f18b6424f3d857cbb1e6e82981 on krisbukovi:facility_ner** into **94759e26a0630918db1cf37fdd0dccdc3edd6720 on adsabs:master**.\n",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/adsabs/ADSfulltext",
        "filepath": "adsft/ner.py",
        "Creation Date": "2020-03-05T20:56:25Z",
        "PR Comment": "This looks quite similar to the next fulltext block, we could reduce code duplication with a function.",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/adsabs/ADSfulltext",
        "filepath": "adsft/ner.py",
        "Creation Date": "2020-03-05T20:57:34Z",
        "PR Comment": "Could we have here a race condition where some other worker overwrites things?",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/adsabs/ADSfulltext",
        "filepath": "adsft/ner.py",
        "Creation Date": "2020-03-05T21:01:01Z",
        "PR Comment": "This block looks fairly similar to the next one, can we reduce code duplication if we put the if statement elsewhere?",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/adsabs/ADSfulltext",
        "filepath": "adsft/ner.py",
        "Creation Date": "2020-03-05T21:02:46Z",
        "PR Comment": "This is the only place where we call task_identify_facilities? Shouldn't it be called also after extraction? Otherwise extraction will not cause the NER to be executed.",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/adsabs/ADSfulltext",
        "filepath": "adsft/ner.py",
        "Creation Date": "2020-03-24T16:50:06Z",
        "PR Comment": "You can do this:\n\n```\nfor key, elem_str, model in zip(keys, ['facility-ack', 'facility-ft'], [model1, model2]):\n    ...\n```",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/adsabs/ADSfulltext",
        "filepath": "adsft/ner.py",
        "Creation Date": "2020-03-24T17:29:49Z",
        "PR Comment": "We could simplify and not depend on a dictionary if we set up a task string:\n```\nif facility_ner and not force_extract:\n  task_str = \"task_identify_facilities\"\nelse:\n  task_str = \"task_check_if_extract\"\n```\nAnd then call it via:\n```\ngetattr(tasks, task_str).delay(record)\n```",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/adsabs/ADSfulltext",
        "filepath": "adsft/ner.py",
        "Creation Date": "2020-03-24T17:49:29Z",
        "PR Comment": "We should use logger function options to format strings like we were doing before. If we have something like:\n```\nlogger.debug(\"Task: %s\" % (\"test\"))\n```\nThe part `\"Task: %s\" % (\"test\")` will always be executed, even if the logging level is `INFO`. While if we do:\n```\nlogger.debug(\"Task: %s\", \"test\")\n```\nThe formatting will only happen if the logging level is `DEBUG` or lower. This comments applies to all the logger calls.",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/adsabs/ADSfulltext",
        "filepath": "adsft/ner.py",
        "Creation Date": "2020-03-24T17:55:20Z",
        "PR Comment": "Let's make this configurable via `config.py` such as:\n\n```\nif app.config['RUN_NER_FACILITIES_AFTER_EXTRACTION]:\n    task_identify_facilities.delay(message)\n```\nAnd then we include it in config.py disabled by default:\n```\nRUN_NER_FACILITIES_AFTER_EXTRACTION=False\n```\nThis way we can deploy without this, but we will still be able to manually run things if/when needed.",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/adsabs/ADSfulltext",
        "filepath": "adsft/ner.py",
        "Creation Date": "2020-03-24T21:04:31Z",
        "PR Comment": "In run.py there is a mix of the two examples you listed as well as:\n`logger.debug(\"Task: {0}.format(\"test\")\")`\n\nIs `logger.debug(\"Task: %s\", \"test\")` still preferred among the three? ",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/adsabs/ADSfulltext",
        "filepath": "adsft/ner.py",
        "Creation Date": "2020-03-02T13:02:29Z",
        "PR Comment": "\n[![Coverage Status](https://coveralls.io/builds/29592324/badge)](https://coveralls.io/builds/29592324)\n\nCoverage increased (+0.1%) to 82.078% when pulling **0569fa9d5384c7f18b6424f3d857cbb1e6e82981 on krisbukovi:facility_ner** into **94759e26a0630918db1cf37fdd0dccdc3edd6720 on adsabs:master**.\n",
        "PR/Issue Number": "119"
    },
    {
        "repo_url": "github.com/jayded/evidence-inference",
        "filepath": "evidence_inference/preprocess/sentence_split.py",
        "Creation Date": "2021-02-26T22:13:41Z",
        "PR Comment": "@elehman16 @sanjanaramprasad @bwallace \n\nMerging on the public end.",
        "PR/Issue Number": "16"
    },
    {
        "repo_url": "github.com/jayded/evidence-inference",
        "filepath": "evidence_inference/preprocess/representations.py",
        "Creation Date": "2021-02-26T22:13:41Z",
        "PR Comment": "@elehman16 @sanjanaramprasad @bwallace \n\nMerging on the public end.",
        "PR/Issue Number": "16"
    },
    {
        "repo_url": "github.com/jayded/evidence-inference",
        "filepath": "evidence_inference/preprocess/representations.py",
        "Creation Date": "2021-02-26T22:13:41Z",
        "PR Comment": "@elehman16 @sanjanaramprasad @bwallace \n\nMerging on the public end.",
        "PR/Issue Number": "16"
    },
    {
        "repo_url": "github.com/crocs-muni/sec-certs",
        "filepath": "src/sec_certs/utils/strings.py",
        "Creation Date": "2023-04-11T12:13:41Z",
        "PR Comment": "## [Codecov](https://codecov.io/gh/crocs-muni/sec-certs/pull/329?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) Report\nPatch coverage: **`91.54`**% and project coverage change: **`+3.90`** :tada:\n> Comparison is base [(`c0dc17e`)](https://codecov.io/gh/crocs-muni/sec-certs/commit/c0dc17e110e35d0fa67629750677560a86f8985e?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) 72.96% compared to head [(`d5121e9`)](https://codecov.io/gh/crocs-muni/sec-certs/pull/329?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) 76.85%.\n\n> :exclamation: Current head d5121e9 differs from pull request most recent head 39439fe. Consider uploading reports for the commit 39439fe to get more accurate results\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##             main     #329      +/-   ##\n==========================================\n+ Coverage   72.96%   76.85%   +3.90%     \n==========================================\n  Files          45       50       +5     \n  Lines        5660     6391     +731     \n==========================================\n+ Hits         4129     4911     +782     \n+ Misses       1531     1480      -51     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/crocs-muni/sec-certs/pull/329?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) | Coverage \u0394 | |\n|---|---|---|\n| [src/sec\\_certs/cli.py](https://codecov.io/gh/crocs-muni/sec-certs/pull/329?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9jbGkucHk=) | `0.00% <0.00%> (\u00f8)` | |\n| [src/sec\\_certs/utils/strings.py](https://codecov.io/gh/crocs-muni/sec-certs/pull/329?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy91dGlscy9zdHJpbmdzLnB5) | `81.49% <81.49%> (\u00f8)` | |\n| [src/sec\\_certs/sample/fips\\_mip.py](https://codecov.io/gh/crocs-muni/sec-certs/pull/329?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9zYW1wbGUvZmlwc19taXAucHk=) | `91.83% <82.61%> (-1.08%)` | :arrow_down: |\n| [src/sec\\_certs/dataset/cc.py](https://codecov.io/gh/crocs-muni/sec-certs/pull/329?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9kYXRhc2V0L2NjLnB5) | `87.01% <86.37%> (+9.18%)` | :arrow_up: |\n| [src/sec\\_certs/model/cc\\_matching.py](https://codecov.io/gh/crocs-muni/sec-certs/pull/329?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9jY19tYXRjaGluZy5weQ==) | `89.29% <89.29%> (\u00f8)` | |\n| [src/sec\\_certs/model/fips\\_matching.py](https://codecov.io/gh/crocs-muni/sec-certs/pull/329?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9maXBzX21hdGNoaW5nLnB5) | `91.43% <91.43%> (\u00f8)` | |\n| [src/sec\\_certs/dataset/cc\\_scheme.py](https://codecov.io/gh/crocs-muni/sec-certs/pull/329?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9kYXRhc2V0L2NjX3NjaGVtZS5weQ==) | `91.80% <91.80%> (\u00f8)` | |\n| [src/sec\\_certs/model/matching.py](https://codecov.io/gh/crocs-muni/sec-certs/pull/329?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9tYXRjaGluZy5weQ==) | `94.45% <94.45%> (\u00f8)` | |\n| [src/sec\\_certs/configuration.py](https://codecov.io/gh/crocs-muni/sec-certs/pull/329?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9jb25maWd1cmF0aW9uLnB5) | `91.67% <100.00%> (+0.37%)` | :arrow_up: |\n| [src/sec\\_certs/constants.py](https://codecov.io/gh/crocs-muni/sec-certs/pull/329?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9jb25zdGFudHMucHk=) | `100.00% <100.00%> (\u00f8)` | |\n| ... and [7 more](https://codecov.io/gh/crocs-muni/sec-certs/pull/329?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) | |\n\n... and [2 files with indirect coverage changes](https://codecov.io/gh/crocs-muni/sec-certs/pull/329/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni)\n\nHelp us with your feedback. Take ten seconds to tell us [how you rate us](https://about.codecov.io/nps?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni). Have a feature suggestion? [Share it here.](https://app.codecov.io/gh/feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni)\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://codecov.io/gh/crocs-muni/sec-certs/pull/329?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni).   \n:loudspeaker: Do you have feedback about the report comment? [Let us know in this issue](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni).\n",
        "PR/Issue Number": "329"
    },
    {
        "repo_url": "github.com/crocs-muni/sec-certs",
        "filepath": "src/sec_certs/utils/strings.py",
        "Creation Date": "2023-04-20T21:47:07Z",
        "PR Comment": "All green :heavy_check_mark: les gooo!!",
        "PR/Issue Number": "329"
    },
    {
        "repo_url": "github.com/crocs-muni/sec-certs",
        "filepath": "src/sec_certs/model/references_nlp/segment_extractor.py",
        "Creation Date": "2024-02-08T00:31:40Z",
        "PR Comment": "## [Codecov](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/389?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) Report\nAttention: `48 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`131489e`)](https://app.codecov.io/gh/crocs-muni/sec-certs/commit/131489e8a1f32d5119fbb2a1283827fe6f045c74?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) 69.61% compared to head [(`4592f97`)](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/389?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) 68.57%.\n\n| [Files](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/389?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) | Patch % | Lines |\n|---|---|---|\n| [src/sec\\_certs/sample/cc.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/389?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9zYW1wbGUvY2MucHk=) | 76.60% | [44 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/389?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [...ec\\_certs/model/references\\_nlp/segment\\_extractor.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/389?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9zZWdtZW50X2V4dHJhY3Rvci5weQ==) | 0.00% | [3 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/389?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/dataset/cc.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/389?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9kYXRhc2V0L2NjLnB5) | 98.00% | [1 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/389?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##             main     #389      +/-   ##\n==========================================\n- Coverage   69.61%   68.57%   -1.04%     \n==========================================\n  Files          62       62              \n  Lines        7548     7565      +17     \n==========================================\n- Hits         5254     5187      -67     \n- Misses       2294     2378      +84     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/389?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni).\n",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/crocs-muni/sec-certs",
        "filepath": "src/sec_certs/model/references_nlp/segment_extractor.py",
        "Creation Date": "2023-03-23T11:00:23Z",
        "PR Comment": "## [Codecov](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) Report\nAttention: `675 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`f0f7fa7`)](https://app.codecov.io/gh/crocs-muni/sec-certs/commit/f0f7fa7e6784afefb945effbc9834209a673db47?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) 74.61% compared to head [(`68b1c2d`)](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) 67.80%.\n\n> :exclamation: Current head 68b1c2d differs from pull request most recent head b648241. Consider uploading reports for the commit b648241 to get more accurate results\n\n| [Files](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) | Patch % | Lines |\n|---|---|---|\n| [...c\\_certs/model/references\\_nlp/feature\\_extraction.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9mZWF0dXJlX2V4dHJhY3Rpb24ucHk=) | 0.00% | [266 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [...ec\\_certs/model/references\\_nlp/segment\\_extractor.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9zZWdtZW50X2V4dHJhY3Rvci5weQ==) | 0.00% | [154 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [...ec\\_certs/model/references\\_nlp/annotator\\_trainer.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9hbm5vdGF0b3JfdHJhaW5lci5weQ==) | 0.00% | [80 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/annotator.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9hbm5vdGF0b3IucHk=) | 0.00% | [56 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/evaluation.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9ldmFsdWF0aW9uLnB5) | 0.00% | [50 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/training.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC90cmFpbmluZy5weQ==) | 0.00% | [37 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/utils/nlp.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy91dGlscy9ubHAucHk=) | 0.00% | [20 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9fX2luaXRfXy5weQ==) | 0.00% | [10 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/dataset/cc.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9kYXRhc2V0L2NjLnB5) | 75.00% | [1 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/sample/cc\\_certificate\\_id.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9zYW1wbGUvY2NfY2VydGlmaWNhdGVfaWQucHk=) | 85.72% | [1 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##             main     #322      +/-   ##\n==========================================\n- Coverage   74.61%   67.80%   -6.80%     \n==========================================\n  Files          54       62       +8     \n  Lines        6709     7394     +685     \n==========================================\n+ Hits         5005     5013       +8     \n- Misses       1704     2381     +677     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni).\n",
        "PR/Issue Number": "322"
    },
    {
        "repo_url": "github.com/crocs-muni/sec-certs",
        "filepath": "src/sec_certs/model/references_nlp/segment_extractor.py",
        "Creation Date": "2023-11-14T12:57:38Z",
        "PR Comment": "Just a quick comment on the current state of affairs:\n- Soon, hyperparameter tunning will be done. Scripts for hyperparam tuning will not be versioned, I'll back them up separately at GDrive\n- I don't think that the annotation engine is production-ready. For that reason, I kept the necessary files in `sec_certs.model.references_nlp` package that has some complex dependencies. Any import from that package requires `sec-certs` installation with `[nlp]` extra. A check is done on any import from that package.\n- This requires that all `nlp` deps are also installed on dev machines -- otherwise, linters will likely complain\n- In summary, this PR adds:\n    - Backend for Reference annotations\n    - Notebooks with reference annotation analysis\n    - Versioned manual annotations, scripts to measure inter-annotator agreement",
        "PR/Issue Number": "322"
    },
    {
        "repo_url": "github.com/crocs-muni/sec-certs",
        "filepath": "src/sec_certs/model/references_nlp/segment_extractor.py",
        "Creation Date": "2023-03-23T11:00:23Z",
        "PR Comment": "## [Codecov](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) Report\nAttention: `675 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`f0f7fa7`)](https://app.codecov.io/gh/crocs-muni/sec-certs/commit/f0f7fa7e6784afefb945effbc9834209a673db47?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) 74.61% compared to head [(`68b1c2d`)](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) 67.80%.\n\n> :exclamation: Current head 68b1c2d differs from pull request most recent head b648241. Consider uploading reports for the commit b648241 to get more accurate results\n\n| [Files](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) | Patch % | Lines |\n|---|---|---|\n| [...c\\_certs/model/references\\_nlp/feature\\_extraction.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9mZWF0dXJlX2V4dHJhY3Rpb24ucHk=) | 0.00% | [266 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [...ec\\_certs/model/references\\_nlp/segment\\_extractor.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9zZWdtZW50X2V4dHJhY3Rvci5weQ==) | 0.00% | [154 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [...ec\\_certs/model/references\\_nlp/annotator\\_trainer.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9hbm5vdGF0b3JfdHJhaW5lci5weQ==) | 0.00% | [80 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/annotator.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9hbm5vdGF0b3IucHk=) | 0.00% | [56 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/evaluation.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9ldmFsdWF0aW9uLnB5) | 0.00% | [50 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/training.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC90cmFpbmluZy5weQ==) | 0.00% | [37 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/utils/nlp.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy91dGlscy9ubHAucHk=) | 0.00% | [20 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9fX2luaXRfXy5weQ==) | 0.00% | [10 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/dataset/cc.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9kYXRhc2V0L2NjLnB5) | 75.00% | [1 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/sample/cc\\_certificate\\_id.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9zYW1wbGUvY2NfY2VydGlmaWNhdGVfaWQucHk=) | 85.72% | [1 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##             main     #322      +/-   ##\n==========================================\n- Coverage   74.61%   67.80%   -6.80%     \n==========================================\n  Files          54       62       +8     \n  Lines        6709     7394     +685     \n==========================================\n+ Hits         5005     5013       +8     \n- Misses       1704     2381     +677     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni).\n",
        "PR/Issue Number": "322"
    },
    {
        "repo_url": "github.com/crocs-muni/sec-certs",
        "filepath": "src/sec_certs/model/references_nlp/segment_extractor.py",
        "Creation Date": "2023-11-14T12:57:38Z",
        "PR Comment": "Just a quick comment on the current state of affairs:\n- Soon, hyperparameter tunning will be done. Scripts for hyperparam tuning will not be versioned, I'll back them up separately at GDrive\n- I don't think that the annotation engine is production-ready. For that reason, I kept the necessary files in `sec_certs.model.references_nlp` package that has some complex dependencies. Any import from that package requires `sec-certs` installation with `[nlp]` extra. A check is done on any import from that package.\n- This requires that all `nlp` deps are also installed on dev machines -- otherwise, linters will likely complain\n- In summary, this PR adds:\n    - Backend for Reference annotations\n    - Notebooks with reference annotation analysis\n    - Versioned manual annotations, scripts to measure inter-annotator agreement",
        "PR/Issue Number": "322"
    },
    {
        "repo_url": "github.com/crocs-muni/sec-certs",
        "filepath": "src/sec_certs/model/references_nlp/segment_extractor.py",
        "Creation Date": "2023-03-23T11:00:23Z",
        "PR Comment": "## [Codecov](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) Report\nAttention: `675 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`f0f7fa7`)](https://app.codecov.io/gh/crocs-muni/sec-certs/commit/f0f7fa7e6784afefb945effbc9834209a673db47?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) 74.61% compared to head [(`68b1c2d`)](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) 67.80%.\n\n> :exclamation: Current head 68b1c2d differs from pull request most recent head b648241. Consider uploading reports for the commit b648241 to get more accurate results\n\n| [Files](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) | Patch % | Lines |\n|---|---|---|\n| [...c\\_certs/model/references\\_nlp/feature\\_extraction.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9mZWF0dXJlX2V4dHJhY3Rpb24ucHk=) | 0.00% | [266 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [...ec\\_certs/model/references\\_nlp/segment\\_extractor.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9zZWdtZW50X2V4dHJhY3Rvci5weQ==) | 0.00% | [154 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [...ec\\_certs/model/references\\_nlp/annotator\\_trainer.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9hbm5vdGF0b3JfdHJhaW5lci5weQ==) | 0.00% | [80 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/annotator.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9hbm5vdGF0b3IucHk=) | 0.00% | [56 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/evaluation.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9ldmFsdWF0aW9uLnB5) | 0.00% | [50 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/training.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC90cmFpbmluZy5weQ==) | 0.00% | [37 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/utils/nlp.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy91dGlscy9ubHAucHk=) | 0.00% | [20 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9fX2luaXRfXy5weQ==) | 0.00% | [10 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/dataset/cc.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9kYXRhc2V0L2NjLnB5) | 75.00% | [1 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/sample/cc\\_certificate\\_id.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9zYW1wbGUvY2NfY2VydGlmaWNhdGVfaWQucHk=) | 85.72% | [1 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##             main     #322      +/-   ##\n==========================================\n- Coverage   74.61%   67.80%   -6.80%     \n==========================================\n  Files          54       62       +8     \n  Lines        6709     7394     +685     \n==========================================\n+ Hits         5005     5013       +8     \n- Misses       1704     2381     +677     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni).\n",
        "PR/Issue Number": "322"
    },
    {
        "repo_url": "github.com/crocs-muni/sec-certs",
        "filepath": "src/sec_certs/model/references_nlp/segment_extractor.py",
        "Creation Date": "2023-11-14T12:57:38Z",
        "PR Comment": "Just a quick comment on the current state of affairs:\n- Soon, hyperparameter tunning will be done. Scripts for hyperparam tuning will not be versioned, I'll back them up separately at GDrive\n- I don't think that the annotation engine is production-ready. For that reason, I kept the necessary files in `sec_certs.model.references_nlp` package that has some complex dependencies. Any import from that package requires `sec-certs` installation with `[nlp]` extra. A check is done on any import from that package.\n- This requires that all `nlp` deps are also installed on dev machines -- otherwise, linters will likely complain\n- In summary, this PR adds:\n    - Backend for Reference annotations\n    - Notebooks with reference annotation analysis\n    - Versioned manual annotations, scripts to measure inter-annotator agreement",
        "PR/Issue Number": "322"
    },
    {
        "repo_url": "github.com/crocs-muni/sec-certs",
        "filepath": "src/sec_certs/model/references_nlp/segment_extractor.py",
        "Creation Date": "2023-03-23T11:00:23Z",
        "PR Comment": "## [Codecov](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) Report\nAttention: `675 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`f0f7fa7`)](https://app.codecov.io/gh/crocs-muni/sec-certs/commit/f0f7fa7e6784afefb945effbc9834209a673db47?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) 74.61% compared to head [(`68b1c2d`)](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) 67.80%.\n\n> :exclamation: Current head 68b1c2d differs from pull request most recent head b648241. Consider uploading reports for the commit b648241 to get more accurate results\n\n| [Files](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) | Patch % | Lines |\n|---|---|---|\n| [...c\\_certs/model/references\\_nlp/feature\\_extraction.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9mZWF0dXJlX2V4dHJhY3Rpb24ucHk=) | 0.00% | [266 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [...ec\\_certs/model/references\\_nlp/segment\\_extractor.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9zZWdtZW50X2V4dHJhY3Rvci5weQ==) | 0.00% | [154 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [...ec\\_certs/model/references\\_nlp/annotator\\_trainer.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9hbm5vdGF0b3JfdHJhaW5lci5weQ==) | 0.00% | [80 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/annotator.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9hbm5vdGF0b3IucHk=) | 0.00% | [56 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/evaluation.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9ldmFsdWF0aW9uLnB5) | 0.00% | [50 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/training.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC90cmFpbmluZy5weQ==) | 0.00% | [37 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/utils/nlp.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy91dGlscy9ubHAucHk=) | 0.00% | [20 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9fX2luaXRfXy5weQ==) | 0.00% | [10 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/dataset/cc.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9kYXRhc2V0L2NjLnB5) | 75.00% | [1 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/sample/cc\\_certificate\\_id.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9zYW1wbGUvY2NfY2VydGlmaWNhdGVfaWQucHk=) | 85.72% | [1 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##             main     #322      +/-   ##\n==========================================\n- Coverage   74.61%   67.80%   -6.80%     \n==========================================\n  Files          54       62       +8     \n  Lines        6709     7394     +685     \n==========================================\n+ Hits         5005     5013       +8     \n- Misses       1704     2381     +677     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni).\n",
        "PR/Issue Number": "322"
    },
    {
        "repo_url": "github.com/crocs-muni/sec-certs",
        "filepath": "src/sec_certs/model/references_nlp/segment_extractor.py",
        "Creation Date": "2023-11-14T12:57:38Z",
        "PR Comment": "Just a quick comment on the current state of affairs:\n- Soon, hyperparameter tunning will be done. Scripts for hyperparam tuning will not be versioned, I'll back them up separately at GDrive\n- I don't think that the annotation engine is production-ready. For that reason, I kept the necessary files in `sec_certs.model.references_nlp` package that has some complex dependencies. Any import from that package requires `sec-certs` installation with `[nlp]` extra. A check is done on any import from that package.\n- This requires that all `nlp` deps are also installed on dev machines -- otherwise, linters will likely complain\n- In summary, this PR adds:\n    - Backend for Reference annotations\n    - Notebooks with reference annotation analysis\n    - Versioned manual annotations, scripts to measure inter-annotator agreement",
        "PR/Issue Number": "322"
    },
    {
        "repo_url": "github.com/crocs-muni/sec-certs",
        "filepath": "src/sec_certs/model/references_nlp/feature_extraction.py",
        "Creation Date": "2023-03-23T11:00:23Z",
        "PR Comment": "## [Codecov](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) Report\nAttention: `675 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`f0f7fa7`)](https://app.codecov.io/gh/crocs-muni/sec-certs/commit/f0f7fa7e6784afefb945effbc9834209a673db47?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) 74.61% compared to head [(`68b1c2d`)](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) 67.80%.\n\n> :exclamation: Current head 68b1c2d differs from pull request most recent head b648241. Consider uploading reports for the commit b648241 to get more accurate results\n\n| [Files](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) | Patch % | Lines |\n|---|---|---|\n| [...c\\_certs/model/references\\_nlp/feature\\_extraction.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9mZWF0dXJlX2V4dHJhY3Rpb24ucHk=) | 0.00% | [266 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [...ec\\_certs/model/references\\_nlp/segment\\_extractor.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9zZWdtZW50X2V4dHJhY3Rvci5weQ==) | 0.00% | [154 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [...ec\\_certs/model/references\\_nlp/annotator\\_trainer.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9hbm5vdGF0b3JfdHJhaW5lci5weQ==) | 0.00% | [80 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/annotator.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9hbm5vdGF0b3IucHk=) | 0.00% | [56 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/evaluation.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9ldmFsdWF0aW9uLnB5) | 0.00% | [50 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/training.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC90cmFpbmluZy5weQ==) | 0.00% | [37 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/utils/nlp.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy91dGlscy9ubHAucHk=) | 0.00% | [20 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9fX2luaXRfXy5weQ==) | 0.00% | [10 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/dataset/cc.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9kYXRhc2V0L2NjLnB5) | 75.00% | [1 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/sample/cc\\_certificate\\_id.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9zYW1wbGUvY2NfY2VydGlmaWNhdGVfaWQucHk=) | 85.72% | [1 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##             main     #322      +/-   ##\n==========================================\n- Coverage   74.61%   67.80%   -6.80%     \n==========================================\n  Files          54       62       +8     \n  Lines        6709     7394     +685     \n==========================================\n+ Hits         5005     5013       +8     \n- Misses       1704     2381     +677     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni).\n",
        "PR/Issue Number": "322"
    },
    {
        "repo_url": "github.com/crocs-muni/sec-certs",
        "filepath": "src/sec_certs/model/references_nlp/feature_extraction.py",
        "Creation Date": "2023-11-14T12:57:38Z",
        "PR Comment": "Just a quick comment on the current state of affairs:\n- Soon, hyperparameter tunning will be done. Scripts for hyperparam tuning will not be versioned, I'll back them up separately at GDrive\n- I don't think that the annotation engine is production-ready. For that reason, I kept the necessary files in `sec_certs.model.references_nlp` package that has some complex dependencies. Any import from that package requires `sec-certs` installation with `[nlp]` extra. A check is done on any import from that package.\n- This requires that all `nlp` deps are also installed on dev machines -- otherwise, linters will likely complain\n- In summary, this PR adds:\n    - Backend for Reference annotations\n    - Notebooks with reference annotation analysis\n    - Versioned manual annotations, scripts to measure inter-annotator agreement",
        "PR/Issue Number": "322"
    },
    {
        "repo_url": "github.com/crocs-muni/sec-certs",
        "filepath": "src/sec_certs/model/references_nlp/feature_extraction.py",
        "Creation Date": "2023-03-23T11:00:23Z",
        "PR Comment": "## [Codecov](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) Report\nAttention: `675 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`f0f7fa7`)](https://app.codecov.io/gh/crocs-muni/sec-certs/commit/f0f7fa7e6784afefb945effbc9834209a673db47?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) 74.61% compared to head [(`68b1c2d`)](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) 67.80%.\n\n> :exclamation: Current head 68b1c2d differs from pull request most recent head b648241. Consider uploading reports for the commit b648241 to get more accurate results\n\n| [Files](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) | Patch % | Lines |\n|---|---|---|\n| [...c\\_certs/model/references\\_nlp/feature\\_extraction.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9mZWF0dXJlX2V4dHJhY3Rpb24ucHk=) | 0.00% | [266 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [...ec\\_certs/model/references\\_nlp/segment\\_extractor.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9zZWdtZW50X2V4dHJhY3Rvci5weQ==) | 0.00% | [154 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [...ec\\_certs/model/references\\_nlp/annotator\\_trainer.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9hbm5vdGF0b3JfdHJhaW5lci5weQ==) | 0.00% | [80 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/annotator.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9hbm5vdGF0b3IucHk=) | 0.00% | [56 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/evaluation.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9ldmFsdWF0aW9uLnB5) | 0.00% | [50 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/training.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC90cmFpbmluZy5weQ==) | 0.00% | [37 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/utils/nlp.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy91dGlscy9ubHAucHk=) | 0.00% | [20 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9fX2luaXRfXy5weQ==) | 0.00% | [10 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/dataset/cc.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9kYXRhc2V0L2NjLnB5) | 75.00% | [1 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/sample/cc\\_certificate\\_id.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9zYW1wbGUvY2NfY2VydGlmaWNhdGVfaWQucHk=) | 85.72% | [1 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##             main     #322      +/-   ##\n==========================================\n- Coverage   74.61%   67.80%   -6.80%     \n==========================================\n  Files          54       62       +8     \n  Lines        6709     7394     +685     \n==========================================\n+ Hits         5005     5013       +8     \n- Misses       1704     2381     +677     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni).\n",
        "PR/Issue Number": "322"
    },
    {
        "repo_url": "github.com/crocs-muni/sec-certs",
        "filepath": "src/sec_certs/model/references_nlp/feature_extraction.py",
        "Creation Date": "2023-11-14T12:57:38Z",
        "PR Comment": "Just a quick comment on the current state of affairs:\n- Soon, hyperparameter tunning will be done. Scripts for hyperparam tuning will not be versioned, I'll back them up separately at GDrive\n- I don't think that the annotation engine is production-ready. For that reason, I kept the necessary files in `sec_certs.model.references_nlp` package that has some complex dependencies. Any import from that package requires `sec-certs` installation with `[nlp]` extra. A check is done on any import from that package.\n- This requires that all `nlp` deps are also installed on dev machines -- otherwise, linters will likely complain\n- In summary, this PR adds:\n    - Backend for Reference annotations\n    - Notebooks with reference annotation analysis\n    - Versioned manual annotations, scripts to measure inter-annotator agreement",
        "PR/Issue Number": "322"
    },
    {
        "repo_url": "github.com/crocs-muni/sec-certs",
        "filepath": "src/sec_certs/model/references_nlp/feature_extraction.py",
        "Creation Date": "2023-03-23T11:00:23Z",
        "PR Comment": "## [Codecov](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) Report\nAttention: `675 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`f0f7fa7`)](https://app.codecov.io/gh/crocs-muni/sec-certs/commit/f0f7fa7e6784afefb945effbc9834209a673db47?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) 74.61% compared to head [(`68b1c2d`)](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) 67.80%.\n\n> :exclamation: Current head 68b1c2d differs from pull request most recent head b648241. Consider uploading reports for the commit b648241 to get more accurate results\n\n| [Files](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) | Patch % | Lines |\n|---|---|---|\n| [...c\\_certs/model/references\\_nlp/feature\\_extraction.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9mZWF0dXJlX2V4dHJhY3Rpb24ucHk=) | 0.00% | [266 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [...ec\\_certs/model/references\\_nlp/segment\\_extractor.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9zZWdtZW50X2V4dHJhY3Rvci5weQ==) | 0.00% | [154 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [...ec\\_certs/model/references\\_nlp/annotator\\_trainer.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9hbm5vdGF0b3JfdHJhaW5lci5weQ==) | 0.00% | [80 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/annotator.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9hbm5vdGF0b3IucHk=) | 0.00% | [56 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/evaluation.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9ldmFsdWF0aW9uLnB5) | 0.00% | [50 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/training.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC90cmFpbmluZy5weQ==) | 0.00% | [37 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/utils/nlp.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy91dGlscy9ubHAucHk=) | 0.00% | [20 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9fX2luaXRfXy5weQ==) | 0.00% | [10 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/dataset/cc.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9kYXRhc2V0L2NjLnB5) | 75.00% | [1 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/sample/cc\\_certificate\\_id.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9zYW1wbGUvY2NfY2VydGlmaWNhdGVfaWQucHk=) | 85.72% | [1 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##             main     #322      +/-   ##\n==========================================\n- Coverage   74.61%   67.80%   -6.80%     \n==========================================\n  Files          54       62       +8     \n  Lines        6709     7394     +685     \n==========================================\n+ Hits         5005     5013       +8     \n- Misses       1704     2381     +677     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni).\n",
        "PR/Issue Number": "322"
    },
    {
        "repo_url": "github.com/crocs-muni/sec-certs",
        "filepath": "src/sec_certs/model/references_nlp/feature_extraction.py",
        "Creation Date": "2023-11-14T12:57:38Z",
        "PR Comment": "Just a quick comment on the current state of affairs:\n- Soon, hyperparameter tunning will be done. Scripts for hyperparam tuning will not be versioned, I'll back them up separately at GDrive\n- I don't think that the annotation engine is production-ready. For that reason, I kept the necessary files in `sec_certs.model.references_nlp` package that has some complex dependencies. Any import from that package requires `sec-certs` installation with `[nlp]` extra. A check is done on any import from that package.\n- This requires that all `nlp` deps are also installed on dev machines -- otherwise, linters will likely complain\n- In summary, this PR adds:\n    - Backend for Reference annotations\n    - Notebooks with reference annotation analysis\n    - Versioned manual annotations, scripts to measure inter-annotator agreement",
        "PR/Issue Number": "322"
    },
    {
        "repo_url": "github.com/crocs-muni/sec-certs",
        "filepath": "src/sec_certs/model/references_nlp/feature_extraction.py",
        "Creation Date": "2023-03-23T11:00:23Z",
        "PR Comment": "## [Codecov](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) Report\nAttention: `675 lines` in your changes are missing coverage. Please review.\n> Comparison is base [(`f0f7fa7`)](https://app.codecov.io/gh/crocs-muni/sec-certs/commit/f0f7fa7e6784afefb945effbc9834209a673db47?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) 74.61% compared to head [(`68b1c2d`)](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) 67.80%.\n\n> :exclamation: Current head 68b1c2d differs from pull request most recent head b648241. Consider uploading reports for the commit b648241 to get more accurate results\n\n| [Files](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) | Patch % | Lines |\n|---|---|---|\n| [...c\\_certs/model/references\\_nlp/feature\\_extraction.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9mZWF0dXJlX2V4dHJhY3Rpb24ucHk=) | 0.00% | [266 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [...ec\\_certs/model/references\\_nlp/segment\\_extractor.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9zZWdtZW50X2V4dHJhY3Rvci5weQ==) | 0.00% | [154 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [...ec\\_certs/model/references\\_nlp/annotator\\_trainer.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9hbm5vdGF0b3JfdHJhaW5lci5weQ==) | 0.00% | [80 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/annotator.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9hbm5vdGF0b3IucHk=) | 0.00% | [56 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/evaluation.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9ldmFsdWF0aW9uLnB5) | 0.00% | [50 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/training.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC90cmFpbmluZy5weQ==) | 0.00% | [37 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/utils/nlp.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy91dGlscy9ubHAucHk=) | 0.00% | [20 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/model/references\\_nlp/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9tb2RlbC9yZWZlcmVuY2VzX25scC9fX2luaXRfXy5weQ==) | 0.00% | [10 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/dataset/cc.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9kYXRhc2V0L2NjLnB5) | 75.00% | [1 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n| [src/sec\\_certs/sample/cc\\_certificate\\_id.py](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni#diff-c3JjL3NlY19jZXJ0cy9zYW1wbGUvY2NfY2VydGlmaWNhdGVfaWQucHk=) | 85.72% | [1 Missing :warning: ](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##             main     #322      +/-   ##\n==========================================\n- Coverage   74.61%   67.80%   -6.80%     \n==========================================\n  Files          54       62       +8     \n  Lines        6709     7394     +685     \n==========================================\n+ Hits         5005     5013       +8     \n- Misses       1704     2381     +677     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/crocs-muni/sec-certs/pull/322?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=crocs-muni).\n",
        "PR/Issue Number": "322"
    },
    {
        "repo_url": "github.com/crocs-muni/sec-certs",
        "filepath": "src/sec_certs/model/references_nlp/feature_extraction.py",
        "Creation Date": "2023-11-14T12:57:38Z",
        "PR Comment": "Just a quick comment on the current state of affairs:\n- Soon, hyperparameter tunning will be done. Scripts for hyperparam tuning will not be versioned, I'll back them up separately at GDrive\n- I don't think that the annotation engine is production-ready. For that reason, I kept the necessary files in `sec_certs.model.references_nlp` package that has some complex dependencies. Any import from that package requires `sec-certs` installation with `[nlp]` extra. A check is done on any import from that package.\n- This requires that all `nlp` deps are also installed on dev machines -- otherwise, linters will likely complain\n- In summary, this PR adds:\n    - Backend for Reference annotations\n    - Notebooks with reference annotation analysis\n    - Versioned manual annotations, scripts to measure inter-annotator agreement",
        "PR/Issue Number": "322"
    },
    {
        "repo_url": "github.com/navervision/lincir",
        "filepath": "loader.py",
        "Creation Date": "2023-12-09T13:20:59Z",
        "PR Comment": "Missing `:` for the uri (ref: https://github.com/navervision/lincir/issues/1#issuecomment-1848407580)",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/navervision/lincir",
        "filepath": "loader.py",
        "Creation Date": "2023-12-10T07:22:19Z",
        "PR Comment": "Oh. Thanks.",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/CompTech-IntentClassifier/IntentClassifier",
        "filepath": "intent_classifier/LogisticRegressionIntentClassifier.py",
        "Creation Date": "2019-02-01T14:34:00Z",
        "PR Comment": "thks",
        "PR/Issue Number": "5"
    },
    {
        "repo_url": "github.com/CompTech-IntentClassifier/IntentClassifier",
        "filepath": "intent_classifier/LogisticRegressionIntentClassifier.py",
        "Creation Date": "2019-02-01T14:34:00Z",
        "PR Comment": "thks",
        "PR/Issue Number": "5"
    },
    {
        "repo_url": "github.com/CompTech-IntentClassifier/IntentClassifier",
        "filepath": "intent_classifier/LogisticRegressionIntentClassifier.py",
        "Creation Date": "2019-01-31T15:57:18Z",
        "PR Comment": "\u0422\u043e\u043b\u044c\u043a\u043e \u0442\u0443\u0442 \u043d\u0435 NaiveBayes, \u0430 LogisticRegression \u0434\u0430\u0432\u043d\u043e. \u041f\u043e\u043f\u0440\u0430\u0432\u044c \u0438\u043c\u0435\u043d\u0430",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/CompTech-IntentClassifier/IntentClassifier",
        "filepath": "intent_classifier/LogisticRegressionIntentClassifier.py",
        "Creation Date": "2019-01-31T15:58:02Z",
        "PR Comment": "\u0427\u0442\u043e \u0445\u043e\u0447\u0435\u0448\u044c \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0432 TODO:? \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u0431\u044b \u043e\u0441\u0442\u0430\u0432\u0438\u043b",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/CompTech-IntentClassifier/IntentClassifier",
        "filepath": "intent_classifier/LogisticRegressionIntentClassifier.py",
        "Creation Date": "2019-01-31T16:00:20Z",
        "PR Comment": "\u041d\u0435 \u043f\u043e\u043d\u044f\u043b \u0432\u043e\u043e\u0431\u0449\u0435. \u0422\u044b \u0444\u0438\u0448\u043a\u0443 \u0441 semhash \u0432\u043e\u043e\u0431\u0449\u0435 \u043d\u0435 \u0437\u0430\u044e\u0437\u0430\u043b, \u043e\u043d\u0430 \u0436\u0435 \u0431\u044b\u043b\u0430 \u0432 \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0435. \u041d\u0430\u0434\u043e \u043d\u0430 \u0432\u0445\u043e\u0434 semhash_corpus(X) \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c, \u0430 \u043d\u0435 \u043f\u0440\u043e\u0441\u0442\u043e X",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/CompTech-IntentClassifier/IntentClassifier",
        "filepath": "intent_classifier/LogisticRegressionIntentClassifier.py",
        "Creation Date": "2019-01-31T16:09:25Z",
        "PR Comment": "\u0427\u0435\u0442\u043e \u0442\u0430\u043a\u043e\u0435 \u043d\u0430\u0434\u043e \u0432 fit() \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0431\u044b\u043b\u043e\nself.text_clf.fit(semhash_corpus(X), Y)\n",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/CompTech-IntentClassifier/IntentClassifier",
        "filepath": "intent_classifier/LogisticRegressionIntentClassifier.py",
        "Creation Date": "2019-01-31T16:11:25Z",
        "PR Comment": "\u0410\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e fit(). \u041d\u0430\u0434\u043e \u0445\u0435\u0448\u0438 \u0437\u0430\u043a\u0438\u043d\u0443\u0442\u044c, \u0430 \u043d\u0435 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0435 \u0442\u0435\u043a\u0441\u0442, \u0442.\u0435.:\n\ntext_clf.predict(semhash_corpus(X))",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/CompTech-IntentClassifier/IntentClassifier",
        "filepath": "intent_classifier/LogisticRegressionIntentClassifier.py",
        "Creation Date": "2019-01-31T16:11:54Z",
        "PR Comment": "\u041d\u0435 \u0437\u043d\u0430\u044e \u0447\u0442\u043e \u043c\u0443\u0442\u0438\u0442 \u044d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0434\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0438\u0434\u0435\u044e \u0441 (semhash_corpus) \u0438 \u0442\u0443\u0442",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/CompTech-IntentClassifier/IntentClassifier",
        "filepath": "intent_classifier/LogisticRegressionIntentClassifier.py",
        "Creation Date": "2019-01-31T15:56:04Z",
        "PR Comment": "\u0427\u0442\u043e \u0442\u0430\u043a\u043e\u0435 label: enhancement?",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/raeidsaqur/clevr-parser",
        "filepath": "clevr_parser/utils.py",
        "Creation Date": "2020-05-20T10:41:05Z",
        "PR Comment": "Presumes a data folder on the root directory.",
        "PR/Issue Number": "32"
    },
    {
        "repo_url": "github.com/raeidsaqur/clevr-parser",
        "filepath": "clevr_parser/utils.py",
        "Creation Date": "2020-04-12T00:44:31Z",
        "PR Comment": "@ameet-1997 Please rebase your changes on top of this PR to avoid merge conflicts.",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/raeidsaqur/clevr-parser",
        "filepath": "clevr_parser/backends/spacy_parser.py",
        "Creation Date": "2020-05-20T02:39:47Z",
        "PR Comment": "@ameet-1997  This should unblock you from testing the embedding visualizers, See `test_Gs_embeddings.py` for implementation and calls.",
        "PR/Issue Number": "31"
    },
    {
        "repo_url": "github.com/raeidsaqur/clevr-parser",
        "filepath": "clevr_parser/backends/spacy_parser.py",
        "Creation Date": "2020-04-12T00:44:31Z",
        "PR Comment": "@ameet-1997 Please rebase your changes on top of this PR to avoid merge conflicts.",
        "PR/Issue Number": "11"
    },
    {
        "repo_url": "github.com/raeidsaqur/clevr-parser",
        "filepath": "clevr_parser/backends/spacy_parser.py",
        "Creation Date": "2020-04-11T23:19:06Z",
        "PR Comment": "I'll merge in couple of hours if you haven't reviewed by then.",
        "PR/Issue Number": "10"
    },
    {
        "repo_url": "github.com/raeidsaqur/clevr-parser",
        "filepath": "clevr_parser/backends/spacy_parser.py",
        "Creation Date": "2020-04-11T23:19:06Z",
        "PR Comment": "I'll merge in couple of hours if you haven't reviewed by then.",
        "PR/Issue Number": "10"
    },
    {
        "repo_url": "github.com/raeidsaqur/clevr-parser",
        "filepath": "clevr_parser/backends/spacy_parser.py",
        "Creation Date": "2020-04-11T20:42:59Z",
        "PR Comment": "@ameet-1997 question: so we are assuming the relations are in order of occurrence in sentence correct? For e.g.:\n\n`\"There is a <obj> that is <left> of <obj2>.\" \nThe corresponding edge attribute <obj>-left-<obj2> ?\n`\nWhat happens in logical case? like:\n\n`\"There is a <obj> that is <left> of <obj2> and <right> of <obj3>\"` ?",
        "PR/Issue Number": "8"
    },
    {
        "repo_url": "github.com/raeidsaqur/clevr-parser",
        "filepath": "clevr_parser/backends/spacy_parser.py",
        "Creation Date": "2020-04-11T20:52:11Z",
        "PR Comment": "Yes, realized these edge cases. In fact there are mode edge cases that need to be considered. We should write an auxiliary function to handle that.",
        "PR/Issue Number": "8"
    },
    {
        "repo_url": "github.com/raeidsaqur/clevr-parser",
        "filepath": "clevr_parser/backends/spacy_parser.py",
        "Creation Date": "2020-03-30T20:01:52Z",
        "PR Comment": "@ameet-1997 : maintaining work flow - can you please 'Merge pull request' above?",
        "PR/Issue Number": "2"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/skills_extraction/metaflow/flow.py",
        "Creation Date": "2022-01-14T17:46:36Z",
        "PR Comment": "@georgerichardson it's this bit that seems to be most cumbersome",
        "PR/Issue Number": "79"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/skills_extraction/metaflow/flow.py",
        "Creation Date": "2022-01-11T10:31:20Z",
        "PR Comment": "```\n(skills-taxonomy-v2) elizabethgallagher@NESTA-FVFFC1DFQ05P skills-taxonomy-v2 % python skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class_extras/flow.py --environment=conda --datastore=s3 run --max-num-splits 300\nMetaflow 2.4.7 executing PredictSkillSentsExtra for user:elizabethgallagher\nProject: predict_sentence_class_extras, Branch: user.elizabethgallagher\nValidating your flow...\n    The graph looks good!\nRunning pylint...\n    Pylint is happy!\nBootstrapping conda environment...(this could take a few minutes)\n2022-01-11 09:49:55,438 - root - INFO - pip installing pip for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:50:03,073 - root - INFO - pip installing pip for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:50:03,979 - root - INFO - pip installing /Users/elizabethgallagher/Code/skills-taxonomy-v2 for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:51:37,846 - root - INFO - pip installing pip for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:51:40,869 - root - INFO - pip installing pip for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:51:43,023 - root - INFO - pip installing /Users/elizabethgallagher/Code/skills-taxonomy-v2 for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:51:50,396 - root - INFO - pip installing pip for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:51:53,607 - root - INFO - pip installing pip for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:51:55,480 - root - INFO - pip installing /Users/elizabethgallagher/Code/skills-taxonomy-v2 for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:52:31,661 - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials\n2022-01-11 09:52:32.774 Workflow starting (run-id 2538):\n2022-01-11 09:52:34,629 - root - INFO - pip installing pip for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:52:37,643 - root - INFO - pip installing pip for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:52:39,635 - root - INFO - pip installing /Users/elizabethgallagher/Code/skills-taxonomy-v2 for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:52:46.742 [2538/start/15753 (pid 57048)] Task is starting.\n2022-01-11 09:53:10.803 [2538/start/15753 (pid 57048)] Running predictions on 1 data files ...\n2022-01-11 09:53:14.052 [2538/start/15753 (pid 57048)] Foreach yields 1 child steps.\n2022-01-11 09:53:14.052 [2538/start/15753 (pid 57048)] Task finished successfully.\n2022-01-11 10:01:16.526 [2538/process_sentences/15756 (pid 58461)] Task is starting.\n2022-01-11 10:01:18.137 [2538/process_sentences/15756 (pid 58461)] 2022-01-11 10:01:18,136 - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials\n2022-01-11 10:01:20.612 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status SUBMITTED)...\n2022-01-11 10:01:23.951 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status RUNNABLE)...\n2022-01-11 10:01:54.085 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status RUNNABLE)...\n2022-01-11 10:02:24.280 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status RUNNABLE)...\n2022-01-11 10:02:54.457 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status RUNNABLE)...\n2022-01-11 10:03:24.557 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status RUNNABLE)...\n2022-01-11 10:03:29.887 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status STARTING)...\n2022-01-11 10:03:59.952 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status STARTING)...\n2022-01-11 10:04:29.997 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status STARTING)...\n2022-01-11 10:05:00.118 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status STARTING)...\n2022-01-11 10:05:30.304 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status STARTING)...\n2022-01-11 10:05:50.893 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status RUNNING)...\n2022-01-11 10:05:49.293 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Setting up task environment.\n2022-01-11 10:05:59.865 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Downloading code package...\n2022-01-11 10:06:03.360 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Code package downloaded.\n2022-01-11 10:06:14.891 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting.\n2022-01-11 10:06:15.371 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Bootstrapping environment...\n2022-01-11 10:06:51.018 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Environment bootstrapped.\n2022-01-11 10:06:52.206 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\n2022-01-11 10:07:25.507 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   ERROR: Command errored out with exit status 1:\n2022-01-11 10:07:25.507 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]    command: /workspace/metaflow/metaflow_PredictSkillSentsExtra_linux-64_60c976b6fbbc9cc0b7a9e0578efbd1415bba563c/bin/python -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-rkekrlpd/mysqlclient_cc2f0d807a31489598a70c305ac68953/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-rkekrlpd/mysqlclient_cc2f0d807a31489598a70c305ac68953/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-f6_k6o3l\n2022-01-11 10:07:25.507 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]        cwd: /tmp/pip-install-rkekrlpd/mysqlclient_cc2f0d807a31489598a70c305ac68953/\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   Complete output (15 lines):\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   mysql_config --version\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   /bin/sh: 1: mysql_config: not found\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   mariadb_config --version\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   /bin/sh: 1: mariadb_config: not found\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   mysql_config --libs\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   /bin/sh: 1: mysql_config: not found\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   Traceback (most recent call last):\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]     File \"<string>\", line 1, in <module>\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]     File \"/tmp/pip-install-rkekrlpd/mysqlclient_cc2f0d807a31489598a70c305ac68953/setup.py\", line 15, in <module>\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]       metadata, options = get_config()\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]     File \"/tmp/pip-install-rkekrlpd/mysqlclient_cc2f0d807a31489598a70c305ac68953/setup_posix.py\", line 70, in get_config\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]       libs = mysql_config(\"libs\")\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]     File \"/tmp/pip-install-rkekrlpd/mysqlclient_cc2f0d807a31489598a70c305ac68953/setup_posix.py\", line 31, in mysql_config\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]       raise OSError(\"{} not found\".format(_mysql_config_path))\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   OSError: mysql_config not found\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   ----------------------------------------\n```\n`OSError: mysql_config not found` error log repeated about 30 times, then:\n```\n2022-01-11 10:07:31.603 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] WARNING: Discarding https://files.pythonhosted.org/packages/6a/91/bdfe808fb5dc99a5f65833b370818161b77ef6d1e19b488e4c146ab615aa/mysqlclient-1.3.0.tar.gz#sha256=06eb5664e3738b283ea2262ee60ed83192e898f019cc7ff251f4d05a564ab3b7 (from https://pypi.org/simple/mysqlclient/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   ERROR: Command errored out with exit status 1:\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]    command: /workspace/metaflow/metaflow_PredictSkillSentsExtra_linux-64_60c976b6fbbc9cc0b7a9e0578efbd1415bba563c/bin/python -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-rkekrlpd/pattern_ccbc9ea7c4394596bb6c89f551f3c194/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-rkekrlpd/pattern_ccbc9ea7c4394596bb6c89f551f3c194/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-26vdqs6u\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]        cwd: /tmp/pip-install-rkekrlpd/pattern_ccbc9ea7c4394596bb6c89f551f3c194/\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   Complete output (6 lines):\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   Traceback (most recent call last):\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]     File \"<string>\", line 1, in <module>\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]     File \"/tmp/pip-install-rkekrlpd/pattern_ccbc9ea7c4394596bb6c89f551f3c194/setup.py\", line 40\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]       print n\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]             ^\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   SyntaxError: Missing parentheses in call to 'print'. Did you mean print(n)?\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   ----------------------------------------\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] WARNING: Discarding https://files.pythonhosted.org/packages/bf/50/d09941d53416f2a86676bd0dc341d5968b599a763b73f5d13f51c57b5641/pattern-2.6.zip#sha256=003aa285adc23b72255ca8b9f052c6a2644b245b3a9666af007e086428a950be (from https://pypi.org/simple/pattern/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n2022-01-11 10:07:41.343 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] ERROR: Could not find a version that satisfies the requirement mysqlclient (from pattern) (from versions: 1.3.0, 1.3.1, 1.3.2, 1.3.3, 1.3.4, 1.3.5, 1.3.6, 1.3.7, 1.3.8, 1.3.9, 1.3.10, 1.3.11rc1, 1.3.11, 1.3.12, 1.3.13, 1.3.14, 1.4.0rc1, 1.4.0rc2, 1.4.0rc3, 1.4.0, 1.4.1, 1.4.2, 1.4.2.post1, 1.4.3, 1.4.4, 1.4.5, 1.4.6, 2.0.0, 2.0.1, 2.0.2, 2.0.3, 2.1.0rc1, 2.1.0)\n2022-01-11 10:07:41.343 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] ERROR: No matching distribution found for mysqlclient\n2022-01-11 10:07:42.737 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Traceback (most recent call last):\n2022-01-11 10:07:42.737 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   File \"flow.py\", line 16, in <module>\n2022-01-11 10:07:42.738 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]     from skills_taxonomy_v2 import BUCKET_NAME\n2022-01-11 10:07:42.738 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   File \"/workspace/metaflow/pkg_self/skills_taxonomy_v2/__init__.py\", line 7, in <module>\n2022-01-11 10:07:42.738 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]     import yaml\n2022-01-11 10:07:42.738 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] ModuleNotFoundError: No module named 'yaml'\n2022-01-11 10:07:45.033 [2538/process_sentences/15756 (pid 58461)] Task failed.\n2022-01-11 10:07:45.217 Workflow failed.\n2022-01-11 10:07:45.217 Terminating 0 active tasks...\n2022-01-11 10:07:45.217 Flushing logs...\n    Step failure:\n    Step process_sentences (task-id 15756) failed.\n```",
        "PR/Issue Number": "79"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/skills_extraction/metaflow/flow.py",
        "Creation Date": "2022-01-14T20:00:52Z",
        "PR Comment": "note: https://github.com/explosion/spaCy/issues/6498",
        "PR/Issue Number": "79"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-10-27T11:13:14Z",
        "PR Comment": "this takes 5 minutes",
        "PR/Issue Number": "73"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-10-27T11:20:58Z",
        "PR Comment": "this takes about 10 minutes",
        "PR/Issue Number": "73"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-10-27T15:50:04Z",
        "PR Comment": "now down to <5 seconds thanks to comments by @jaklinger ",
        "PR/Issue Number": "73"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-10-27T13:48:48Z",
        "PR Comment": "First note (another coming I think, but have a meeting now!): `nltk`'s `sent_tokenize` is 10-100x faster than `nlp(...)`. This should bring us from 7-9 days to 4-6 days \ud83d\ude04 ",
        "PR/Issue Number": "73"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-10-27T14:39:29Z",
        "PR Comment": "Second note, also applying to the sentence processing is that quite often there is an overhead in creating threads, and so rather than doing 10000 operations over 4 cores in 2500 threads, you can do 4 x 2500 operations over 4 cores in 4 threads. In general, a more practical way to do this is by splitting into chunks and then flattening the output. Potentially here you will make a saving of another factor of 10 on the sentence splitting\n\n```python\ndef split_sentence_over_chunk(chunk, nlp, min_length):\n    partial_split_sentence = partial(split_sentence, nlp=nlp, min_length=min_length)\n    return list(map(partial_split_sentence, chunk))\n\ndef make_chunks(lst, n):\n    for i in range(0, len(lst), n):\n        yield lst[i:i + n]\n\n...\n\nwith Pool(4) as pool:  # 4 cpus\n    chunks = make_chunks(data, 1000)  # chunks of 1000s sentences\n    partial_split_sentence = partial(split_sentence_over_chunk, nlp=nlp, min_length=30)\n    # NB the output will be a list of lists, so make sure to flatten after this!\n    split_sentence_pool_output = pool.map(partial_split_sentence, chunks)\n\n```",
        "PR/Issue Number": "73"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-10-27T15:12:33Z",
        "PR Comment": "General comment: you could get a speed up of around 100 by switching the pipeline to metaflow + batch with `max-workers=100` whilst splitting the embeddings up into chunks. Something like (note, just pseudo-code) which would fan-out over files and then fan-out again over sentence chunks, and then in the end save some data either locally, to S3 or as an S3 artefact, over which you then do your analytic step.\n\nI suspect that this would take just a couple of hours to run for your whole dataset, so even if it would take 5 days to write it would still be worth it, not taking into account additional development cycles of batches of 5 days \ud83d\ude04 \n\n```python\n\nclass SentenceFlow(FlowSpec):\n\t@step\n\tdef start(self):\n\t\tself.file_names = job_ad_file_names\n\t\tself.next(self.process_sentences, foreach=\"file_names\")\n\n\t@batch()\n\t@step\n\tdef process_sentences(self):\n\t\tself.file_name = self.input\n        sentence_data = get_sentences(self.file_name)  # a list of dict\n        self.chunks = make_chunks(sentence_data)\n        self.next(self.embedding_chunks, foreach=\"chunks\")\n\n\t@batch()\n\t@step\n\tdef embedding_chunks(self):\n        # save on memory with while/pop\n        texts, ids = [], []\n        while self.input:\n\t\t\trow = self.input.pop(0)\n            texts.append(row['text'])\n            ids.append(row['ids'])\n        bert_model = SentenceTransformer(bert_model_name)\n        bert_model.max_seq_length = 512\n        vecs = bert_model.encode(texts)\n        self.data = list(*zip(ids, vecs))\n        self.next(self.join_embedding_chunks)\n\n\t@step\n\tdef join_embedding_chunks(self, inputs):\n        self.data = []\n\t\tfor input in inputs:\n             self.data += input.data\n        self.next(self.process_sentences)\n\n... etc ...\n```",
        "PR/Issue Number": "73"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-10-27T15:21:12Z",
        "PR Comment": "> First note (another coming I think, but have a meeting now!): `nltk`'s `sent_tokenize` is 10-100x faster than `nlp(...)`. This should bring us from 7-9 days to 4-6 days \ud83d\ude04\n\nwhoa! ok this was much better. Went from 25 secs to 3 secs (on 100 job adverts)",
        "PR/Issue Number": "73"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-11-04T09:37:33Z",
        "PR Comment": "After making some changes, the code actually just took 4.5 days to run",
        "PR/Issue Number": "73"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-11-05T16:56:39Z",
        "PR Comment": "There are some files included in the sample which don't contain the full text metadata. This leaves us with 4,312,285 job adverts job adverts from the following distribution over time (in comparison to all the data files minus the ones without the full text metadata)\n![tk_sample_dates_no_expired](https://user-images.githubusercontent.com/15956065/140548976-3cfd814f-ffbc-4c01-a844-2ad34650596c.jpg)\n\n\n",
        "PR/Issue Number": "73"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-06T08:59:42Z",
        "PR Comment": "it seems like you just add all the non-skills data here rather than taking a sample (as the name `balanced_augment_training` suggests)? was this what you meant?",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-06T09:03:02Z",
        "PR Comment": "same in experiment no. 7",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-06T09:04:04Z",
        "PR Comment": "I'm not sure that this will be causing a bug, but note that you're input variable name is `skills_data` not `skills`",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-06T09:04:38Z",
        "PR Comment": "this is a cool idea!",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-06T09:06:10Z",
        "PR Comment": "oh I see you sort it out in experiment 8!",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-06T09:07:09Z",
        "PR Comment": "yeah, the variable name is bad though!! I tried oversampling and balancing ",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T13:51:30Z",
        "PR Comment": "You should probably say that this isn't just a local run, but also a run on a small sample of the data. I suppose it can be seen as a way to test things run.",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T13:51:53Z",
        "PR Comment": "this should be the default command and config file",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T13:53:59Z",
        "PR Comment": "How come you changed this to 30, did you see that it gave better results?",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T14:02:17Z",
        "PR Comment": "At this point I think it's ok to write this more instruction-y, e.g. \"There are three main scripts: ...\". I suppose the story of the experimentation and journey can go in the analysis/experiments document. If that makes sense!",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T14:04:34Z",
        "PR Comment": "Do you have these numbers for the 2021.08.16.yaml yet?",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T14:12:17Z",
        "PR Comment": "I don't think this will know what `params` is. I'd suggest having every single parameter needed as an input to the class like you do with `split_random_seed` and `test_size` etc.",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T14:13:44Z",
        "PR Comment": "i think you will need many more inputs to this from your params file.",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T14:15:17Z",
        "PR Comment": "thinking about it i'm not sure why I didnt just do `split_random_seed=params[\"split_random_seed\"]`  here rather than creating a new `split_random_seed` variable on like 233 :shrug:",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T14:25:34Z",
        "PR Comment": "I may be wrong but I think this may need a clause for when sentence=None due to `remove_short_sents` i.e. if the length is outside 30-100 then `clean_text(sent.text, training=False)` will be None (I think!), so when you do `if len(sentence) in range(min_length, max_length):` it will break with `TypeError: object of type 'NoneType' has no len()`.\nSo might be fixed with:\n```\nif sentence and len(sentence) in range(min_length, max_length):\n        ...\n\n```",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T14:34:28Z",
        "PR Comment": "`os.path.join(training_data_path, training_data_file_name + \".pickle\")` would be slightly better to use just in case anyone with a windows computer uses the code!",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T14:47:21Z",
        "PR Comment": "just wondering where you got this from as your stochasticity experiments suggested 22 was best",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T14:52:38Z",
        "PR Comment": "sklearn is already in the requirements",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T15:02:12Z",
        "PR Comment": "I got an error `Resource averaged_perceptron_tagger not found.\n  Please use the NLTK Downloader to obtain the resource:` so I needed to add:\n\n`nltk.download('averaged_perceptron_tagger')` here",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T15:10:25Z",
        "PR Comment": "when I ran this I got\n```\n              precision    recall  f1-score   support\n\n           0       0.99      1.00      1.00      2299\n           1       1.00      0.98      0.99       931\n\n    accuracy                           0.99      3230\n   macro avg       1.00      0.99      0.99      3230\nweighted avg       0.99      0.99      0.99      3230\n```\nand\n```\n              precision    recall  f1-score   support\n\n           0       0.90      0.97      0.93       406\n           1       0.91      0.73      0.81       164\n\n    accuracy                           0.90       570\n   macro avg       0.90      0.85      0.87       570\nweighted avg       0.90      0.90      0.90       570\n```\nSo seems like maybe the data I have (`/inputs/new_training_data/final_training_data.pickle`) is smaller than the version you have?",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T15:11:56Z",
        "PR Comment": "I think this might work better as a parameter in the config with the extension included rather than hardcoded here",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T15:26:06Z",
        "PR Comment": "yeah, it did for me ",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T15:28:24Z",
        "PR Comment": "tbh this is a rather janky solution - as i set training=False, the cleaning pipeline doesn't get rid of sentences of a certain length and instead relies on your min_length, max_length range ",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T15:29:04Z",
        "PR Comment": "yikes - good catch!!",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T15:29:56Z",
        "PR Comment": "hmmmm - lemme check as the final training set should be larger ",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T15:33:27Z",
        "PR Comment": "ah yeh - this issue comes up when I run `predict_sentence_class.py`, I get:\n```\nFile \"/Users/elizabethgallagher/Code/skills-taxonomy-v2/skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py\", line 220, in <listcomp>\n    int(np.where(prob[1] >= params[\"probability_threshold\"], 1, 0))\nNameError: name 'params' is not defined\n```",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T15:37:53Z",
        "PR Comment": "I'll modify this so it will run! ",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-25T08:41:26Z",
        "PR Comment": "modified parameters so they are inputs! ",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-25T08:45:36Z",
        "PR Comment": "oooh!! good idea ",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-25T08:47:10Z",
        "PR Comment": "os it is",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-25T08:48:04Z",
        "PR Comment": "whoops - deleted!!",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-25T08:49:17Z",
        "PR Comment": "average_perceptron_tagger added! ",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-25T08:49:41Z",
        "PR Comment": "good idea! no longer hardcoded",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T12:05:12Z",
        "PR Comment": "@lizgzil \n\nI've updated your scaled up sentence classifier to reflect the new pipeline!\n\nThe current pipeline results in a precision score of 0.92 for the positive class and 0.90 for the negative class. It results in a recall score of 0.73 for the positive class and 0.97 for the negative class. This is for the new, updated training data where I modified some incorrect labels. \n\nI would take this with a slight pinch of salt as the training labels aren't perfect -qualitatively, i took a look at mislabelled sents where the true label was 1 and the model predicted 0 - it appeared that while there were some sentences that were certainly skills, many of them also contained 'characteristics' - I give some examples in `sentence_classifier.md` I also took a look at sents that the model labelled as skills that were manually labelled 0 and it also seems rather edge case-y!\n\n1. `pipeline/sentence_classifier/sentence_classifier.py` - modified to accommodate the new pipeline + utils\n2. `pipeline/sentence_classifier/utils.py` - for cleaning, splitting and generating 'verb' features \n3. `pipeline/sentence_classifier/predict_sentence_class.py` - barely modified   \n\nCan you let me know if:\n1. There are problems running the code\n2. Code could be better written\n3. any style issues w/ docstrings etc. \n\nThanks so much Liz! ",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T14:56:59Z",
        "PR Comment": "@india-kerle looks good but see some of my comments as I think there may be some bugs. I also think we should store the models and data in S3 not in github, so if you agree perhaps we could remove them from this pull request? \n\nJust about to try and run the scripts (I pressed to submit my comments accidently before I'd finished reviewing!)",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py",
        "Creation Date": "2021-08-20T15:15:35Z",
        "PR Comment": "@india-kerle don't forget to upload the code to create the training data (or any processing you did)?\n\nedit: this would be fine in another PR - e.g. the code to create the training data and a document about how to create it/how it was created",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/skills_extraction/get_sentence_embeddings.py",
        "Creation Date": "2021-08-10T11:19:49Z",
        "PR Comment": "could be helpful to have a description of this file as well! ",
        "PR/Issue Number": "31"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/skills_extraction/get_sentence_embeddings.py",
        "Creation Date": "2021-08-10T11:20:51Z",
        "PR Comment": "maybe make this a txt file and save it in `inputs` so you can add to the list as well and it won't be unruly in the code?  ",
        "PR/Issue Number": "31"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/skills_extraction/get_sentence_embeddings.py",
        "Creation Date": "2021-08-10T11:23:48Z",
        "PR Comment": "same as here - a small description could be helpful",
        "PR/Issue Number": "31"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/skills_extraction/get_sentence_embeddings.py",
        "Creation Date": "2021-08-10T11:30:10Z",
        "PR Comment": "this code runs! although might be good to add `python-Levenshtein` to the `requirements.txt` because i keep getting warning messages to pip install it in order to suppress the message. ",
        "PR/Issue Number": "31"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/skills_extraction/get_sentence_embeddings.py",
        "Creation Date": "2021-08-10T11:30:53Z",
        "PR Comment": "really helpful description!!",
        "PR/Issue Number": "31"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/skills_extraction/get_sentence_embeddings.py",
        "Creation Date": "2021-08-10T11:36:56Z",
        "PR Comment": "this is annoying!! maybe worth talking to someone in data engineering i.e. Joel, Jack to see if they've dealt with this before and have a more elegant solution? ",
        "PR/Issue Number": "31"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/skills_extraction/get_sentence_embeddings.py",
        "Creation Date": "2021-08-20T10:15:58Z",
        "PR Comment": "good idea!",
        "PR/Issue Number": "31"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/skills_extraction/get_sentence_embeddings.py",
        "Creation Date": "2021-08-20T10:21:09Z",
        "PR Comment": "oh good to know!",
        "PR/Issue Number": "31"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/skills_extraction/get_sentence_embeddings.py",
        "Creation Date": "2021-08-20T10:26:00Z",
        "PR Comment": "thanks for the review @india-kerle ! I've made your changes in the latest commit. Good call on the custom stop words going in their own txt file.",
        "PR/Issue Number": "31"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2022-01-14T17:46:36Z",
        "PR Comment": "@georgerichardson it's this bit that seems to be most cumbersome",
        "PR/Issue Number": "79"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2022-01-11T10:31:20Z",
        "PR Comment": "```\n(skills-taxonomy-v2) elizabethgallagher@NESTA-FVFFC1DFQ05P skills-taxonomy-v2 % python skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class_extras/flow.py --environment=conda --datastore=s3 run --max-num-splits 300\nMetaflow 2.4.7 executing PredictSkillSentsExtra for user:elizabethgallagher\nProject: predict_sentence_class_extras, Branch: user.elizabethgallagher\nValidating your flow...\n    The graph looks good!\nRunning pylint...\n    Pylint is happy!\nBootstrapping conda environment...(this could take a few minutes)\n2022-01-11 09:49:55,438 - root - INFO - pip installing pip for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:50:03,073 - root - INFO - pip installing pip for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:50:03,979 - root - INFO - pip installing /Users/elizabethgallagher/Code/skills-taxonomy-v2 for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:51:37,846 - root - INFO - pip installing pip for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:51:40,869 - root - INFO - pip installing pip for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:51:43,023 - root - INFO - pip installing /Users/elizabethgallagher/Code/skills-taxonomy-v2 for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:51:50,396 - root - INFO - pip installing pip for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:51:53,607 - root - INFO - pip installing pip for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:51:55,480 - root - INFO - pip installing /Users/elizabethgallagher/Code/skills-taxonomy-v2 for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:52:31,661 - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials\n2022-01-11 09:52:32.774 Workflow starting (run-id 2538):\n2022-01-11 09:52:34,629 - root - INFO - pip installing pip for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:52:37,643 - root - INFO - pip installing pip for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:52:39,635 - root - INFO - pip installing /Users/elizabethgallagher/Code/skills-taxonomy-v2 for /Users/elizabethgallagher/miniconda3/envs/metaflow_PredictSkillSentsExtra_osx-64_da8477850865277c22d5e645896ab050103cb6be/bin/python.\n2022-01-11 09:52:46.742 [2538/start/15753 (pid 57048)] Task is starting.\n2022-01-11 09:53:10.803 [2538/start/15753 (pid 57048)] Running predictions on 1 data files ...\n2022-01-11 09:53:14.052 [2538/start/15753 (pid 57048)] Foreach yields 1 child steps.\n2022-01-11 09:53:14.052 [2538/start/15753 (pid 57048)] Task finished successfully.\n2022-01-11 10:01:16.526 [2538/process_sentences/15756 (pid 58461)] Task is starting.\n2022-01-11 10:01:18.137 [2538/process_sentences/15756 (pid 58461)] 2022-01-11 10:01:18,136 - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials\n2022-01-11 10:01:20.612 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status SUBMITTED)...\n2022-01-11 10:01:23.951 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status RUNNABLE)...\n2022-01-11 10:01:54.085 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status RUNNABLE)...\n2022-01-11 10:02:24.280 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status RUNNABLE)...\n2022-01-11 10:02:54.457 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status RUNNABLE)...\n2022-01-11 10:03:24.557 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status RUNNABLE)...\n2022-01-11 10:03:29.887 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status STARTING)...\n2022-01-11 10:03:59.952 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status STARTING)...\n2022-01-11 10:04:29.997 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status STARTING)...\n2022-01-11 10:05:00.118 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status STARTING)...\n2022-01-11 10:05:30.304 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status STARTING)...\n2022-01-11 10:05:50.893 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting (status RUNNING)...\n2022-01-11 10:05:49.293 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Setting up task environment.\n2022-01-11 10:05:59.865 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Downloading code package...\n2022-01-11 10:06:03.360 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Code package downloaded.\n2022-01-11 10:06:14.891 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Task is starting.\n2022-01-11 10:06:15.371 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Bootstrapping environment...\n2022-01-11 10:06:51.018 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Environment bootstrapped.\n2022-01-11 10:06:52.206 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\n2022-01-11 10:07:25.507 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   ERROR: Command errored out with exit status 1:\n2022-01-11 10:07:25.507 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]    command: /workspace/metaflow/metaflow_PredictSkillSentsExtra_linux-64_60c976b6fbbc9cc0b7a9e0578efbd1415bba563c/bin/python -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-rkekrlpd/mysqlclient_cc2f0d807a31489598a70c305ac68953/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-rkekrlpd/mysqlclient_cc2f0d807a31489598a70c305ac68953/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-f6_k6o3l\n2022-01-11 10:07:25.507 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]        cwd: /tmp/pip-install-rkekrlpd/mysqlclient_cc2f0d807a31489598a70c305ac68953/\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   Complete output (15 lines):\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   mysql_config --version\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   /bin/sh: 1: mysql_config: not found\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   mariadb_config --version\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   /bin/sh: 1: mariadb_config: not found\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   mysql_config --libs\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   /bin/sh: 1: mysql_config: not found\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   Traceback (most recent call last):\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]     File \"<string>\", line 1, in <module>\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]     File \"/tmp/pip-install-rkekrlpd/mysqlclient_cc2f0d807a31489598a70c305ac68953/setup.py\", line 15, in <module>\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]       metadata, options = get_config()\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]     File \"/tmp/pip-install-rkekrlpd/mysqlclient_cc2f0d807a31489598a70c305ac68953/setup_posix.py\", line 70, in get_config\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]       libs = mysql_config(\"libs\")\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]     File \"/tmp/pip-install-rkekrlpd/mysqlclient_cc2f0d807a31489598a70c305ac68953/setup_posix.py\", line 31, in mysql_config\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]       raise OSError(\"{} not found\".format(_mysql_config_path))\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   OSError: mysql_config not found\n2022-01-11 10:07:25.508 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   ----------------------------------------\n```\n`OSError: mysql_config not found` error log repeated about 30 times, then:\n```\n2022-01-11 10:07:31.603 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] WARNING: Discarding https://files.pythonhosted.org/packages/6a/91/bdfe808fb5dc99a5f65833b370818161b77ef6d1e19b488e4c146ab615aa/mysqlclient-1.3.0.tar.gz#sha256=06eb5664e3738b283ea2262ee60ed83192e898f019cc7ff251f4d05a564ab3b7 (from https://pypi.org/simple/mysqlclient/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   ERROR: Command errored out with exit status 1:\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]    command: /workspace/metaflow/metaflow_PredictSkillSentsExtra_linux-64_60c976b6fbbc9cc0b7a9e0578efbd1415bba563c/bin/python -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-rkekrlpd/pattern_ccbc9ea7c4394596bb6c89f551f3c194/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-rkekrlpd/pattern_ccbc9ea7c4394596bb6c89f551f3c194/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-26vdqs6u\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]        cwd: /tmp/pip-install-rkekrlpd/pattern_ccbc9ea7c4394596bb6c89f551f3c194/\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   Complete output (6 lines):\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   Traceback (most recent call last):\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]     File \"<string>\", line 1, in <module>\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]     File \"/tmp/pip-install-rkekrlpd/pattern_ccbc9ea7c4394596bb6c89f551f3c194/setup.py\", line 40\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]       print n\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]             ^\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   SyntaxError: Missing parentheses in call to 'print'. Did you mean print(n)?\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   ----------------------------------------\n2022-01-11 10:07:32.705 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] WARNING: Discarding https://files.pythonhosted.org/packages/bf/50/d09941d53416f2a86676bd0dc341d5968b599a763b73f5d13f51c57b5641/pattern-2.6.zip#sha256=003aa285adc23b72255ca8b9f052c6a2644b245b3a9666af007e086428a950be (from https://pypi.org/simple/pattern/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n2022-01-11 10:07:41.343 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] ERROR: Could not find a version that satisfies the requirement mysqlclient (from pattern) (from versions: 1.3.0, 1.3.1, 1.3.2, 1.3.3, 1.3.4, 1.3.5, 1.3.6, 1.3.7, 1.3.8, 1.3.9, 1.3.10, 1.3.11rc1, 1.3.11, 1.3.12, 1.3.13, 1.3.14, 1.4.0rc1, 1.4.0rc2, 1.4.0rc3, 1.4.0, 1.4.1, 1.4.2, 1.4.2.post1, 1.4.3, 1.4.4, 1.4.5, 1.4.6, 2.0.0, 2.0.1, 2.0.2, 2.0.3, 2.1.0rc1, 2.1.0)\n2022-01-11 10:07:41.343 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] ERROR: No matching distribution found for mysqlclient\n2022-01-11 10:07:42.737 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] Traceback (most recent call last):\n2022-01-11 10:07:42.737 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   File \"flow.py\", line 16, in <module>\n2022-01-11 10:07:42.738 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]     from skills_taxonomy_v2 import BUCKET_NAME\n2022-01-11 10:07:42.738 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]   File \"/workspace/metaflow/pkg_self/skills_taxonomy_v2/__init__.py\", line 7, in <module>\n2022-01-11 10:07:42.738 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778]     import yaml\n2022-01-11 10:07:42.738 [2538/process_sentences/15756 (pid 58461)] [84a8fab2-bdbd-4aee-94d0-d05072fa3778] ModuleNotFoundError: No module named 'yaml'\n2022-01-11 10:07:45.033 [2538/process_sentences/15756 (pid 58461)] Task failed.\n2022-01-11 10:07:45.217 Workflow failed.\n2022-01-11 10:07:45.217 Terminating 0 active tasks...\n2022-01-11 10:07:45.217 Flushing logs...\n    Step failure:\n    Step process_sentences (task-id 15756) failed.\n```",
        "PR/Issue Number": "79"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2022-01-14T20:00:52Z",
        "PR Comment": "note: https://github.com/explosion/spaCy/issues/6498",
        "PR/Issue Number": "79"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-10-27T11:13:14Z",
        "PR Comment": "this takes 5 minutes",
        "PR/Issue Number": "73"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-10-27T11:20:58Z",
        "PR Comment": "this takes about 10 minutes",
        "PR/Issue Number": "73"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-10-27T15:50:04Z",
        "PR Comment": "now down to <5 seconds thanks to comments by @jaklinger ",
        "PR/Issue Number": "73"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-10-27T13:48:48Z",
        "PR Comment": "First note (another coming I think, but have a meeting now!): `nltk`'s `sent_tokenize` is 10-100x faster than `nlp(...)`. This should bring us from 7-9 days to 4-6 days \ud83d\ude04 ",
        "PR/Issue Number": "73"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-10-27T14:39:29Z",
        "PR Comment": "Second note, also applying to the sentence processing is that quite often there is an overhead in creating threads, and so rather than doing 10000 operations over 4 cores in 2500 threads, you can do 4 x 2500 operations over 4 cores in 4 threads. In general, a more practical way to do this is by splitting into chunks and then flattening the output. Potentially here you will make a saving of another factor of 10 on the sentence splitting\n\n```python\ndef split_sentence_over_chunk(chunk, nlp, min_length):\n    partial_split_sentence = partial(split_sentence, nlp=nlp, min_length=min_length)\n    return list(map(partial_split_sentence, chunk))\n\ndef make_chunks(lst, n):\n    for i in range(0, len(lst), n):\n        yield lst[i:i + n]\n\n...\n\nwith Pool(4) as pool:  # 4 cpus\n    chunks = make_chunks(data, 1000)  # chunks of 1000s sentences\n    partial_split_sentence = partial(split_sentence_over_chunk, nlp=nlp, min_length=30)\n    # NB the output will be a list of lists, so make sure to flatten after this!\n    split_sentence_pool_output = pool.map(partial_split_sentence, chunks)\n\n```",
        "PR/Issue Number": "73"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-10-27T15:12:33Z",
        "PR Comment": "General comment: you could get a speed up of around 100 by switching the pipeline to metaflow + batch with `max-workers=100` whilst splitting the embeddings up into chunks. Something like (note, just pseudo-code) which would fan-out over files and then fan-out again over sentence chunks, and then in the end save some data either locally, to S3 or as an S3 artefact, over which you then do your analytic step.\n\nI suspect that this would take just a couple of hours to run for your whole dataset, so even if it would take 5 days to write it would still be worth it, not taking into account additional development cycles of batches of 5 days \ud83d\ude04 \n\n```python\n\nclass SentenceFlow(FlowSpec):\n\t@step\n\tdef start(self):\n\t\tself.file_names = job_ad_file_names\n\t\tself.next(self.process_sentences, foreach=\"file_names\")\n\n\t@batch()\n\t@step\n\tdef process_sentences(self):\n\t\tself.file_name = self.input\n        sentence_data = get_sentences(self.file_name)  # a list of dict\n        self.chunks = make_chunks(sentence_data)\n        self.next(self.embedding_chunks, foreach=\"chunks\")\n\n\t@batch()\n\t@step\n\tdef embedding_chunks(self):\n        # save on memory with while/pop\n        texts, ids = [], []\n        while self.input:\n\t\t\trow = self.input.pop(0)\n            texts.append(row['text'])\n            ids.append(row['ids'])\n        bert_model = SentenceTransformer(bert_model_name)\n        bert_model.max_seq_length = 512\n        vecs = bert_model.encode(texts)\n        self.data = list(*zip(ids, vecs))\n        self.next(self.join_embedding_chunks)\n\n\t@step\n\tdef join_embedding_chunks(self, inputs):\n        self.data = []\n\t\tfor input in inputs:\n             self.data += input.data\n        self.next(self.process_sentences)\n\n... etc ...\n```",
        "PR/Issue Number": "73"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-10-27T15:21:12Z",
        "PR Comment": "> First note (another coming I think, but have a meeting now!): `nltk`'s `sent_tokenize` is 10-100x faster than `nlp(...)`. This should bring us from 7-9 days to 4-6 days \ud83d\ude04\n\nwhoa! ok this was much better. Went from 25 secs to 3 secs (on 100 job adverts)",
        "PR/Issue Number": "73"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-11-04T09:37:33Z",
        "PR Comment": "After making some changes, the code actually just took 4.5 days to run",
        "PR/Issue Number": "73"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-11-05T16:56:39Z",
        "PR Comment": "There are some files included in the sample which don't contain the full text metadata. This leaves us with 4,312,285 job adverts job adverts from the following distribution over time (in comparison to all the data files minus the ones without the full text metadata)\n![tk_sample_dates_no_expired](https://user-images.githubusercontent.com/15956065/140548976-3cfd814f-ffbc-4c01-a844-2ad34650596c.jpg)\n\n\n",
        "PR/Issue Number": "73"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-06T08:59:42Z",
        "PR Comment": "it seems like you just add all the non-skills data here rather than taking a sample (as the name `balanced_augment_training` suggests)? was this what you meant?",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-06T09:03:02Z",
        "PR Comment": "same in experiment no. 7",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-06T09:04:04Z",
        "PR Comment": "I'm not sure that this will be causing a bug, but note that you're input variable name is `skills_data` not `skills`",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-06T09:04:38Z",
        "PR Comment": "this is a cool idea!",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-06T09:06:10Z",
        "PR Comment": "oh I see you sort it out in experiment 8!",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-06T09:07:09Z",
        "PR Comment": "yeah, the variable name is bad though!! I tried oversampling and balancing ",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T13:51:30Z",
        "PR Comment": "You should probably say that this isn't just a local run, but also a run on a small sample of the data. I suppose it can be seen as a way to test things run.",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T13:51:53Z",
        "PR Comment": "this should be the default command and config file",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T13:53:59Z",
        "PR Comment": "How come you changed this to 30, did you see that it gave better results?",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T14:02:17Z",
        "PR Comment": "At this point I think it's ok to write this more instruction-y, e.g. \"There are three main scripts: ...\". I suppose the story of the experimentation and journey can go in the analysis/experiments document. If that makes sense!",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T14:04:34Z",
        "PR Comment": "Do you have these numbers for the 2021.08.16.yaml yet?",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T14:12:17Z",
        "PR Comment": "I don't think this will know what `params` is. I'd suggest having every single parameter needed as an input to the class like you do with `split_random_seed` and `test_size` etc.",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T14:13:44Z",
        "PR Comment": "i think you will need many more inputs to this from your params file.",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T14:15:17Z",
        "PR Comment": "thinking about it i'm not sure why I didnt just do `split_random_seed=params[\"split_random_seed\"]`  here rather than creating a new `split_random_seed` variable on like 233 :shrug:",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T14:25:34Z",
        "PR Comment": "I may be wrong but I think this may need a clause for when sentence=None due to `remove_short_sents` i.e. if the length is outside 30-100 then `clean_text(sent.text, training=False)` will be None (I think!), so when you do `if len(sentence) in range(min_length, max_length):` it will break with `TypeError: object of type 'NoneType' has no len()`.\nSo might be fixed with:\n```\nif sentence and len(sentence) in range(min_length, max_length):\n        ...\n\n```",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T14:34:28Z",
        "PR Comment": "`os.path.join(training_data_path, training_data_file_name + \".pickle\")` would be slightly better to use just in case anyone with a windows computer uses the code!",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T14:47:21Z",
        "PR Comment": "just wondering where you got this from as your stochasticity experiments suggested 22 was best",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T14:52:38Z",
        "PR Comment": "sklearn is already in the requirements",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T15:02:12Z",
        "PR Comment": "I got an error `Resource averaged_perceptron_tagger not found.\n  Please use the NLTK Downloader to obtain the resource:` so I needed to add:\n\n`nltk.download('averaged_perceptron_tagger')` here",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T15:10:25Z",
        "PR Comment": "when I ran this I got\n```\n              precision    recall  f1-score   support\n\n           0       0.99      1.00      1.00      2299\n           1       1.00      0.98      0.99       931\n\n    accuracy                           0.99      3230\n   macro avg       1.00      0.99      0.99      3230\nweighted avg       0.99      0.99      0.99      3230\n```\nand\n```\n              precision    recall  f1-score   support\n\n           0       0.90      0.97      0.93       406\n           1       0.91      0.73      0.81       164\n\n    accuracy                           0.90       570\n   macro avg       0.90      0.85      0.87       570\nweighted avg       0.90      0.90      0.90       570\n```\nSo seems like maybe the data I have (`/inputs/new_training_data/final_training_data.pickle`) is smaller than the version you have?",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T15:11:56Z",
        "PR Comment": "I think this might work better as a parameter in the config with the extension included rather than hardcoded here",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T15:26:06Z",
        "PR Comment": "yeah, it did for me ",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T15:28:24Z",
        "PR Comment": "tbh this is a rather janky solution - as i set training=False, the cleaning pipeline doesn't get rid of sentences of a certain length and instead relies on your min_length, max_length range ",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T15:29:04Z",
        "PR Comment": "yikes - good catch!!",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T15:29:56Z",
        "PR Comment": "hmmmm - lemme check as the final training set should be larger ",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T15:33:27Z",
        "PR Comment": "ah yeh - this issue comes up when I run `predict_sentence_class.py`, I get:\n```\nFile \"/Users/elizabethgallagher/Code/skills-taxonomy-v2/skills_taxonomy_v2/pipeline/sentence_classifier/sentence_classifier.py\", line 220, in <listcomp>\n    int(np.where(prob[1] >= params[\"probability_threshold\"], 1, 0))\nNameError: name 'params' is not defined\n```",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T15:37:53Z",
        "PR Comment": "I'll modify this so it will run! ",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-25T08:41:26Z",
        "PR Comment": "modified parameters so they are inputs! ",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-25T08:45:36Z",
        "PR Comment": "oooh!! good idea ",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-25T08:47:10Z",
        "PR Comment": "os it is",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-25T08:48:04Z",
        "PR Comment": "whoops - deleted!!",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-25T08:49:17Z",
        "PR Comment": "average_perceptron_tagger added! ",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-25T08:49:41Z",
        "PR Comment": "good idea! no longer hardcoded",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T12:05:12Z",
        "PR Comment": "@lizgzil \n\nI've updated your scaled up sentence classifier to reflect the new pipeline!\n\nThe current pipeline results in a precision score of 0.92 for the positive class and 0.90 for the negative class. It results in a recall score of 0.73 for the positive class and 0.97 for the negative class. This is for the new, updated training data where I modified some incorrect labels. \n\nI would take this with a slight pinch of salt as the training labels aren't perfect -qualitatively, i took a look at mislabelled sents where the true label was 1 and the model predicted 0 - it appeared that while there were some sentences that were certainly skills, many of them also contained 'characteristics' - I give some examples in `sentence_classifier.md` I also took a look at sents that the model labelled as skills that were manually labelled 0 and it also seems rather edge case-y!\n\n1. `pipeline/sentence_classifier/sentence_classifier.py` - modified to accommodate the new pipeline + utils\n2. `pipeline/sentence_classifier/utils.py` - for cleaning, splitting and generating 'verb' features \n3. `pipeline/sentence_classifier/predict_sentence_class.py` - barely modified   \n\nCan you let me know if:\n1. There are problems running the code\n2. Code could be better written\n3. any style issues w/ docstrings etc. \n\nThanks so much Liz! ",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T14:56:59Z",
        "PR Comment": "@india-kerle looks good but see some of my comments as I think there may be some bugs. I also think we should store the models and data in S3 not in github, so if you agree perhaps we could remove them from this pull request? \n\nJust about to try and run the scripts (I pressed to submit my comments accidently before I'd finished reviewing!)",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-08-20T15:15:35Z",
        "PR Comment": "@india-kerle don't forget to upload the code to create the training data (or any processing you did)?\n\nedit: this would be fine in another PR - e.g. the code to create the training data and a document about how to create it/how it was created",
        "PR/Issue Number": "30"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-07-28T13:02:25Z",
        "PR Comment": "Thanks so much @india-kerle ! Really good points which I hadn't thought about. I've added an outputs folder gitkeep in https://github.com/nestauk/skills-taxonomy-v2/pull/26/commits/9238e5837ea483a97b4086e5eb6c8908d573d356 and the PROJECT_DIR was in the folder init file, so I've pulled this from here instead of the base config file in https://github.com/nestauk/skills-taxonomy-v2/pull/26/commits/4c64fb98bb4e002b43bd477e2d5807b7a158fff6. Hope those look ok to you?\n\nIn terms of docstrings - you are right they are needed, but I've got a feeling that these functions may still be in flux (e.g. I've got a plan to move all the s3 data getters to a separate location, and when you edit the sentence classifier there may be more changes to this script), so if you don't mind I'd prefer to add them in a later PR? \n",
        "PR/Issue Number": "26"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/pipeline/sentence_classifier/predict_sentence_class.py",
        "Creation Date": "2021-07-28T13:08:50Z",
        "PR Comment": "@lizgzil looks good to me! doc strings etc. makes sense to include in a later PR :) I think it should be good to merge!",
        "PR/Issue Number": "26"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/analysis/skills_extraction/notebooks/better_skills_naming.py",
        "Creation Date": "2021-12-08T11:21:35Z",
        "PR Comment": "above you say that you aren't merging skills - is this step different somehow?",
        "PR/Issue Number": "76"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/analysis/skills_extraction/notebooks/better_skills_naming.py",
        "Creation Date": "2021-12-08T11:27:49Z",
        "PR Comment": "I don't think these need to be prefixed with the `new_` bit, unless I'm missing something?",
        "PR/Issue Number": "76"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/analysis/skills_extraction/notebooks/better_skills_naming.py",
        "Creation Date": "2021-12-08T11:58:41Z",
        "PR Comment": "For this, I've been doing `on= ['job id', 'sentence id']` since this combo is unique for each sentence in a particular job advert. Although it's true that the sentence embedding should be the same if the sentence is the same (regardless of which job advert it is from), I think there is potentially a problem with duplicated rows in the merge if you don't use `on= ['job id', 'sentence id']` . Perhaps it makes no difference, but just to be on the safe side. Haven't investigated this, so I may be talking crap!",
        "PR/Issue Number": "76"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/analysis/skills_extraction/notebooks/better_skills_naming.py",
        "Creation Date": "2021-12-08T12:02:25Z",
        "PR Comment": "I guess this is reliant on the order of `skill_df` being the same skill number order as `sent_cluster_embeds`. Not sure if this is always going to be the case, so I'd just do something like:\n```\nskills_df[\"Mean embedding\"] = skills_df[\"Skill number\"].apply(lambda x: sent_cluster_embeds[x])\n```\n(You may need to create `skills_df[\"Skill number\"]` with the index?)",
        "PR/Issue Number": "76"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/analysis/skills_extraction/notebooks/better_skills_naming.py",
        "Creation Date": "2021-12-08T12:16:28Z",
        "PR Comment": "You may be able to use a default dict? Something like:\n```\nfrom collections import defaultdict\nsentence_embeds = defaultdict(list)\nfor i in tqdm(range(0, 8)):  # 8 files\n    new_sentences_dict = load_s3_data(\n            s3, bucket_name, new_skills_embeds_path + f\"sentences_data_{i}.json\"\n        )\n    for k, v in new_sentences_dict.items():\n        sentence_embeds[k].append(v)\n\n```\nAlso to note instead of hardcoding the `range(0,8)` bit, I have done it this way:\n```\nreduced_embeddings_paths = get_s3_data_paths(\n            s3,\n            bucket_name,\n            new_skills_embeds_path,\n            file_types=[\"*sentences_data_*.json\"]\n            )\n\nsentences_data = pd.DataFrame()\nfor reduced_embeddings_path in tqdm(reduced_embeddings_paths):\n    sentences_data_i = load_s3_data(\n                s3, bucket_name,\n                new_skills_embeds_path\n            )\n    ...\n    \n\n```\n",
        "PR/Issue Number": "76"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/analysis/skills_extraction/notebooks/better_skills_naming.py",
        "Creation Date": "2021-12-08T16:07:11Z",
        "PR Comment": "I think this is overwriting every iteration of the for loop? as `cluster_number` is just one number",
        "PR/Issue Number": "76"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/analysis/skills_extraction/notebooks/better_skills_naming.py",
        "Creation Date": "2021-12-08T16:13:44Z",
        "PR Comment": "I don't think the `clean_cluster_description` or `get_clean_ngrams` functions need `cluster_number` as an input at all since they only process one skill as a time anyway.",
        "PR/Issue Number": "76"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/analysis/skills_extraction/notebooks/better_skills_naming.py",
        "Creation Date": "2021-12-08T16:19:03Z",
        "PR Comment": "I think if you remove `skills_num` as an input to `get_clean_ngrams` then the output `cluster_descriptions` can just be a list rather than a one key dictionary (so later you can do `\"Texts\": cluster_descriptions` rather than `\"Texts\": cluster_descriptions[skills_num]`)",
        "PR/Issue Number": "76"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/analysis/skills_extraction/notebooks/better_skills_naming.py",
        "Creation Date": "2021-12-08T12:32:24Z",
        "PR Comment": "thanks @lizgzil! yeah, i experimented with merging with data from the first batch but didn't do any merging with the new skill clusters based on our previous conversations. The merging comments are now just in the experiments.md bit! I'll make the changes you suggested in the meantime. ",
        "PR/Issue Number": "76"
    },
    {
        "repo_url": "github.com/nestauk/skills-taxonomy-v2",
        "filepath": "skills_taxonomy_v2/analysis/skills_extraction/notebooks/better_skills_naming.py",
        "Creation Date": "2021-12-08T15:49:17Z",
        "PR Comment": "@india-kerle I was thinking it'd be nice if the output name of `skills_naming.py` was a bit more clearly linked to the input skills file version.\n\nAt the moment `skills_naming.py` inputs `extracted_skills/2021.11.05_skills_data.json` and outputs `extracted_skills/2021.12.07_skills_data.json`, so it's not clear that the second one is just the first one with the names added.\n\nSo I'd suggest `skills_data_output_path = params[\"new_skills_path\"].split('.json')[0] + '_named.json'`\n",
        "PR/Issue Number": "76"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2018-11-19T21:11:45Z",
        "PR Comment": "This version is basically runnable without SHACL validation.",
        "PR/Issue Number": "376"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2019-01-04T18:56:08Z",
        "PR Comment": "this has an open security alert, recommend upgrading if possible.\n\nhttps://github.com/usc-isi-i2/etk/network/alert/requirements.txt/urllib3/open",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2019-01-04T18:56:23Z",
        "PR Comment": "Is jupyter still needed?",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2019-01-04T19:00:15Z",
        "PR Comment": "Usually instead of flags I would recommend using an enum pattern, eg prefer passing tokenizer='spacy' over use_spacy_tokenizer=True",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2019-01-04T19:07:04Z",
        "PR Comment": "Instead of miss_day/month/week/year variables, maybe a dictionary \n```\nis_missing = {'D':True, 'M':True, 'Y': True, 'W':True}\n```\n\nand then you can loop:\n\n```\nfor u in is_missing.keys() :\n    if p in units[u]:\n        is_missing[u] = False\n        break\n```\n\n",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2019-01-04T19:10:46Z",
        "PR Comment": "\ud83d\udc4d ",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2019-01-04T19:12:39Z",
        "PR Comment": "This could be a helper function.",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2019-01-04T19:17:21Z",
        "PR Comment": "See above.",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2019-01-04T18:56:08Z",
        "PR Comment": "this has an open security alert, recommend upgrading if possible.\n\nhttps://github.com/usc-isi-i2/etk/network/alert/requirements.txt/urllib3/open",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2019-01-04T18:56:23Z",
        "PR Comment": "Is jupyter still needed?",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2019-01-04T19:00:15Z",
        "PR Comment": "Usually instead of flags I would recommend using an enum pattern, eg prefer passing tokenizer='spacy' over use_spacy_tokenizer=True",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2019-01-04T19:07:04Z",
        "PR Comment": "Instead of miss_day/month/week/year variables, maybe a dictionary \n```\nis_missing = {'D':True, 'M':True, 'Y': True, 'W':True}\n```\n\nand then you can loop:\n\n```\nfor u in is_missing.keys() :\n    if p in units[u]:\n        is_missing[u] = False\n        break\n```\n\n",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2019-01-04T19:10:46Z",
        "PR Comment": "\ud83d\udc4d ",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2019-01-04T19:12:39Z",
        "PR Comment": "This could be a helper function.",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2019-01-04T19:17:21Z",
        "PR Comment": "See above.",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2018-05-10T22:54:45Z",
        "PR Comment": "Why are there 2 file changes? Did you delete the second file by mistake? @iAmeeth ",
        "PR/Issue Number": "272"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2018-05-10T22:58:25Z",
        "PR Comment": "I get this when I switch to the branch.\n\n`$ git checkout etk2\nerror: unable to create file examples/ranking_pipeline/resources/output/Will North Korea's Supreme Leader Kim Jong-un experience a significant leadership disruption before 1 July 2018?  _result.jl: Invalid argument`\n\nThat's why the file is getting deleted.",
        "PR/Issue Number": "272"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2018-05-10T23:23:30Z",
        "PR Comment": "renamed that file, pull again",
        "PR/Issue Number": "272"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2018-05-10T23:43:54Z",
        "PR Comment": "path is`./tmp/etk.log`? why?",
        "PR/Issue Number": "272"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2018-05-10T23:46:29Z",
        "PR Comment": "It's not the correct way to fix. the problem is windows doesn't have `/tmp`, if you change it to `./tmp`, yes problem can be fixed but it's confusing (why do I need to create a `tmp` in my current directory).\n\nthe fix should be, make etk can get temp path on different os correctly, check this: https://docs.python.org/3.6/library/tempfile.html\n\n```\nlogger_path = os.path.join(func_to_get_temp_dir(), 'etk.log')\n```",
        "PR/Issue Number": "272"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2018-05-11T20:00:47Z",
        "PR Comment": "commit https://github.com/usc-isi-i2/etk/commit/b15e69fd4a2432625bbf26ae8773b930fbbe4cad fixed this issue",
        "PR/Issue Number": "272"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/etk.py",
        "Creation Date": "2018-05-10T22:21:57Z",
        "PR Comment": "to fix the unit tests at my end, have to merge this",
        "PR/Issue Number": "271"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/tokenizer.py",
        "Creation Date": "2019-01-04T18:56:08Z",
        "PR Comment": "this has an open security alert, recommend upgrading if possible.\n\nhttps://github.com/usc-isi-i2/etk/network/alert/requirements.txt/urllib3/open",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/tokenizer.py",
        "Creation Date": "2019-01-04T18:56:23Z",
        "PR Comment": "Is jupyter still needed?",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/tokenizer.py",
        "Creation Date": "2019-01-04T19:00:15Z",
        "PR Comment": "Usually instead of flags I would recommend using an enum pattern, eg prefer passing tokenizer='spacy' over use_spacy_tokenizer=True",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/tokenizer.py",
        "Creation Date": "2019-01-04T19:07:04Z",
        "PR Comment": "Instead of miss_day/month/week/year variables, maybe a dictionary \n```\nis_missing = {'D':True, 'M':True, 'Y': True, 'W':True}\n```\n\nand then you can loop:\n\n```\nfor u in is_missing.keys() :\n    if p in units[u]:\n        is_missing[u] = False\n        break\n```\n\n",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/tokenizer.py",
        "Creation Date": "2019-01-04T19:10:46Z",
        "PR Comment": "\ud83d\udc4d ",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/tokenizer.py",
        "Creation Date": "2019-01-04T19:12:39Z",
        "PR Comment": "This could be a helper function.",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/tokenizer.py",
        "Creation Date": "2019-01-04T19:17:21Z",
        "PR Comment": "See above.",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/tokenizer.py",
        "Creation Date": "2019-01-04T18:56:08Z",
        "PR Comment": "this has an open security alert, recommend upgrading if possible.\n\nhttps://github.com/usc-isi-i2/etk/network/alert/requirements.txt/urllib3/open",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/tokenizer.py",
        "Creation Date": "2019-01-04T18:56:23Z",
        "PR Comment": "Is jupyter still needed?",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/tokenizer.py",
        "Creation Date": "2019-01-04T19:00:15Z",
        "PR Comment": "Usually instead of flags I would recommend using an enum pattern, eg prefer passing tokenizer='spacy' over use_spacy_tokenizer=True",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/tokenizer.py",
        "Creation Date": "2019-01-04T19:07:04Z",
        "PR Comment": "Instead of miss_day/month/week/year variables, maybe a dictionary \n```\nis_missing = {'D':True, 'M':True, 'Y': True, 'W':True}\n```\n\nand then you can loop:\n\n```\nfor u in is_missing.keys() :\n    if p in units[u]:\n        is_missing[u] = False\n        break\n```\n\n",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/tokenizer.py",
        "Creation Date": "2019-01-04T19:10:46Z",
        "PR Comment": "\ud83d\udc4d ",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/tokenizer.py",
        "Creation Date": "2019-01-04T19:12:39Z",
        "PR Comment": "This could be a helper function.",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/tokenizer.py",
        "Creation Date": "2019-01-04T19:17:21Z",
        "PR Comment": "See above.",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/doc_retrieve_processor.py",
        "Creation Date": "2018-05-24T23:30:16Z",
        "PR Comment": "^This is more of a quick and dirty patch than a real bug fix. May require attention in the future... ",
        "PR/Issue Number": "286"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/doc_retrieve_processor.py",
        "Creation Date": "2018-05-25T01:06:43Z",
        "PR Comment": "please remove all `print` statements (`print` should only be used in examples)",
        "PR/Issue Number": "286"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/doc_retrieve_processor.py",
        "Creation Date": "2018-05-25T01:52:49Z",
        "PR Comment": "Rodger that. \n\n- Lukas\n\nSent from my iPhone\n\n> On May 24, 2018, at 6:06 PM, GreatYYX <notifications@github.com> wrote:\n> \n> please remove all print statements (print should only be used in examples)\n> \n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n",
        "PR/Issue Number": "286"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/doc_retrieve_processor.py",
        "Creation Date": "2018-05-27T23:15:48Z",
        "PR Comment": "@GreatYYX please review and merge if ready, thx.",
        "PR/Issue Number": "286"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/doc_retrieve_processor.py",
        "Creation Date": "2018-05-24T23:30:16Z",
        "PR Comment": "^This is more of a quick and dirty patch than a real bug fix. May require attention in the future... ",
        "PR/Issue Number": "286"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/doc_retrieve_processor.py",
        "Creation Date": "2018-05-25T01:06:43Z",
        "PR Comment": "please remove all `print` statements (`print` should only be used in examples)",
        "PR/Issue Number": "286"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/doc_retrieve_processor.py",
        "Creation Date": "2018-05-25T01:52:49Z",
        "PR Comment": "Rodger that. \n\n- Lukas\n\nSent from my iPhone\n\n> On May 24, 2018, at 6:06 PM, GreatYYX <notifications@github.com> wrote:\n> \n> please remove all print statements (print should only be used in examples)\n> \n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n",
        "PR/Issue Number": "286"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/doc_retrieve_processor.py",
        "Creation Date": "2018-05-27T23:15:48Z",
        "PR Comment": "@GreatYYX please review and merge if ready, thx.",
        "PR/Issue Number": "286"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/doc_retrieve_processor.py",
        "Creation Date": "2018-05-24T23:30:16Z",
        "PR Comment": "^This is more of a quick and dirty patch than a real bug fix. May require attention in the future... ",
        "PR/Issue Number": "286"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/doc_retrieve_processor.py",
        "Creation Date": "2018-05-25T01:06:43Z",
        "PR Comment": "please remove all `print` statements (`print` should only be used in examples)",
        "PR/Issue Number": "286"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/doc_retrieve_processor.py",
        "Creation Date": "2018-05-25T01:52:49Z",
        "PR Comment": "Rodger that. \n\n- Lukas\n\nSent from my iPhone\n\n> On May 24, 2018, at 6:06 PM, GreatYYX <notifications@github.com> wrote:\n> \n> please remove all print statements (print should only be used in examples)\n> \n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n",
        "PR/Issue Number": "286"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/doc_retrieve_processor.py",
        "Creation Date": "2018-05-27T23:15:48Z",
        "PR Comment": "@GreatYYX please review and merge if ready, thx.",
        "PR/Issue Number": "286"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/sentence_extractor.py",
        "Creation Date": "2018-08-29T23:14:29Z",
        "PR Comment": "Hey, please merge this pull request although there are three test cases fail. The test case failures are caused by unreasonable test case design. Please refer this issue #335 ",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/sentence_extractor.py",
        "Creation Date": "2018-08-31T22:56:41Z",
        "PR Comment": "FYI, if the variable or method needs to be private, it should starts with SINGLE underscore (PEP8). double underscore is used by interpreter for name mangling. also, double heading and trailing underscore is a name convention of builtin methods in python class.",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/sentence_extractor.py",
        "Creation Date": "2018-09-05T05:22:20Z",
        "PR Comment": "suggestion accepted. Has refactored.",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/sentence_extractor.py",
        "Creation Date": "2018-09-10T20:29:54Z",
        "PR Comment": "@linqyd the latest commit is failing in travis, pls check",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/sentence_extractor.py",
        "Creation Date": "2018-09-10T20:33:48Z",
        "PR Comment": "This is not because of my modification.\n\nJust created an issue. Please refer to #339 \n",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/sentence_extractor.py",
        "Creation Date": "2018-08-29T23:14:29Z",
        "PR Comment": "Hey, please merge this pull request although there are three test cases fail. The test case failures are caused by unreasonable test case design. Please refer this issue #335 ",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/sentence_extractor.py",
        "Creation Date": "2018-08-31T22:56:41Z",
        "PR Comment": "FYI, if the variable or method needs to be private, it should starts with SINGLE underscore (PEP8). double underscore is used by interpreter for name mangling. also, double heading and trailing underscore is a name convention of builtin methods in python class.",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/sentence_extractor.py",
        "Creation Date": "2018-09-05T05:22:20Z",
        "PR Comment": "suggestion accepted. Has refactored.",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/sentence_extractor.py",
        "Creation Date": "2018-09-10T20:29:54Z",
        "PR Comment": "@linqyd the latest commit is failing in travis, pls check",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/sentence_extractor.py",
        "Creation Date": "2018-09-10T20:33:48Z",
        "PR Comment": "This is not because of my modification.\n\nJust created an issue. Please refer to #339 \n",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/sentence_extractor.py",
        "Creation Date": "2018-08-29T23:14:29Z",
        "PR Comment": "Hey, please merge this pull request although there are three test cases fail. The test case failures are caused by unreasonable test case design. Please refer this issue #335 ",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/sentence_extractor.py",
        "Creation Date": "2018-08-31T22:56:41Z",
        "PR Comment": "FYI, if the variable or method needs to be private, it should starts with SINGLE underscore (PEP8). double underscore is used by interpreter for name mangling. also, double heading and trailing underscore is a name convention of builtin methods in python class.",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/sentence_extractor.py",
        "Creation Date": "2018-09-05T05:22:20Z",
        "PR Comment": "suggestion accepted. Has refactored.",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/sentence_extractor.py",
        "Creation Date": "2018-09-10T20:29:54Z",
        "PR Comment": "@linqyd the latest commit is failing in travis, pls check",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/sentence_extractor.py",
        "Creation Date": "2018-09-10T20:33:48Z",
        "PR Comment": "This is not because of my modification.\n\nJust created an issue. Please refer to #339 \n",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/spacy_ner_extractor.py",
        "Creation Date": "2019-01-04T18:56:08Z",
        "PR Comment": "this has an open security alert, recommend upgrading if possible.\n\nhttps://github.com/usc-isi-i2/etk/network/alert/requirements.txt/urllib3/open",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/spacy_ner_extractor.py",
        "Creation Date": "2019-01-04T18:56:23Z",
        "PR Comment": "Is jupyter still needed?",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/spacy_ner_extractor.py",
        "Creation Date": "2019-01-04T19:00:15Z",
        "PR Comment": "Usually instead of flags I would recommend using an enum pattern, eg prefer passing tokenizer='spacy' over use_spacy_tokenizer=True",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/spacy_ner_extractor.py",
        "Creation Date": "2019-01-04T19:07:04Z",
        "PR Comment": "Instead of miss_day/month/week/year variables, maybe a dictionary \n```\nis_missing = {'D':True, 'M':True, 'Y': True, 'W':True}\n```\n\nand then you can loop:\n\n```\nfor u in is_missing.keys() :\n    if p in units[u]:\n        is_missing[u] = False\n        break\n```\n\n",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/spacy_ner_extractor.py",
        "Creation Date": "2019-01-04T19:10:46Z",
        "PR Comment": "\ud83d\udc4d ",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/spacy_ner_extractor.py",
        "Creation Date": "2019-01-04T19:12:39Z",
        "PR Comment": "This could be a helper function.",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/spacy_ner_extractor.py",
        "Creation Date": "2019-01-04T19:17:21Z",
        "PR Comment": "See above.",
        "PR/Issue Number": "389"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/spacy_ner_extractor.py",
        "Creation Date": "2018-08-29T23:14:29Z",
        "PR Comment": "Hey, please merge this pull request although there are three test cases fail. The test case failures are caused by unreasonable test case design. Please refer this issue #335 ",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/spacy_ner_extractor.py",
        "Creation Date": "2018-08-31T22:56:41Z",
        "PR Comment": "FYI, if the variable or method needs to be private, it should starts with SINGLE underscore (PEP8). double underscore is used by interpreter for name mangling. also, double heading and trailing underscore is a name convention of builtin methods in python class.",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/spacy_ner_extractor.py",
        "Creation Date": "2018-09-05T05:22:20Z",
        "PR Comment": "suggestion accepted. Has refactored.",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/spacy_ner_extractor.py",
        "Creation Date": "2018-09-10T20:29:54Z",
        "PR Comment": "@linqyd the latest commit is failing in travis, pls check",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/spacy_ner_extractor.py",
        "Creation Date": "2018-09-10T20:33:48Z",
        "PR Comment": "This is not because of my modification.\n\nJust created an issue. Please refer to #339 \n",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/spacy_ner_extractor.py",
        "Creation Date": "2018-08-29T23:14:29Z",
        "PR Comment": "Hey, please merge this pull request although there are three test cases fail. The test case failures are caused by unreasonable test case design. Please refer this issue #335 ",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/spacy_ner_extractor.py",
        "Creation Date": "2018-08-31T22:56:41Z",
        "PR Comment": "FYI, if the variable or method needs to be private, it should starts with SINGLE underscore (PEP8). double underscore is used by interpreter for name mangling. also, double heading and trailing underscore is a name convention of builtin methods in python class.",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/spacy_ner_extractor.py",
        "Creation Date": "2018-09-05T05:22:20Z",
        "PR Comment": "suggestion accepted. Has refactored.",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/spacy_ner_extractor.py",
        "Creation Date": "2018-09-10T20:29:54Z",
        "PR Comment": "@linqyd the latest commit is failing in travis, pls check",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/extractors/spacy_ner_extractor.py",
        "Creation Date": "2018-09-10T20:33:48Z",
        "PR Comment": "This is not because of my modification.\n\nJust created an issue. Please refer to #339 \n",
        "PR/Issue Number": "334"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/unit_tests/test_sentence_extractor.py",
        "Creation Date": "2019-04-18T16:54:06Z",
        "PR Comment": "Thanks. CI failed due to some dependencies. Please fix them.",
        "PR/Issue Number": "397"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/unit_tests/test_sentence_extractor.py",
        "Creation Date": "2019-04-18T17:35:35Z",
        "PR Comment": "CI failed due to non-kg issues. Might be addressed in other branch.",
        "PR/Issue Number": "397"
    },
    {
        "repo_url": "github.com/usc-isi-i2/etk",
        "filepath": "etk/unit_tests/test_sentence_extractor.py",
        "Creation Date": "2019-04-18T19:19:48Z",
        "PR Comment": "Probably you need to synchronize kg_graph with development branch first for somebody fixed unit tests.",
        "PR/Issue Number": "397"
    }
]